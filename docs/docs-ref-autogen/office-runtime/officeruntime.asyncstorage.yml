### YamlMime:UniversalReference
items:
  - uid: office-runtime.OfficeRuntime.AsyncStorage
    summary: '<span data-ttu-id="38d79-101">Stockage de valeurs clés asynchrone, global et permanent.</span><span class="sxs-lookup"><span data-stu-id="38d79-101">Asynchronous, global, and persistent key-value storage.</span></span> <span data-ttu-id="38d79-102">La limite de stockage est de 10 Mo par domaine, qui peut être partagé par plusieurs compléments.</span><span class="sxs-lookup"><span data-stu-id="38d79-102">Storage limit is 10 MB per domain, which may be shared by multiple add-ins.</span></span>'
    remarks: '<span data-ttu-id="38d79-103">Sera obsolète à l’avenir, utilisez Office. Storage à la place.</span><span class="sxs-lookup"><span data-stu-id="38d79-103">Will be deprecated in the future, please use Office.Storage instead.</span></span>'
    name: OfficeRuntime.AsyncStorage
    fullName: OfficeRuntime.AsyncStorage
    langs:
      - typeScript
    type: interface
    package: office-runtime
    children:
      - office-runtime.OfficeRuntime.AsyncStorage.getAllKeys
      - office-runtime.OfficeRuntime.AsyncStorage.getItem
      - office-runtime.OfficeRuntime.AsyncStorage.multiGet
      - office-runtime.OfficeRuntime.AsyncStorage.multiRemove
      - office-runtime.OfficeRuntime.AsyncStorage.multiSet
      - office-runtime.OfficeRuntime.AsyncStorage.removeItem
      - office-runtime.OfficeRuntime.AsyncStorage.setItem
  - uid: office-runtime.OfficeRuntime.AsyncStorage.getAllKeys
    summary: <span data-ttu-id="38d79-104">Récupère toutes les clés et appelle un rappel lorsque vous avez terminé.</span><span class="sxs-lookup"><span data-stu-id="38d79-104">Retrieves all keys and invokes a callback when finished.</span></span> <span data-ttu-id="38d79-105">Renvoie une promesse.</span><span class="sxs-lookup"><span data-stu-id="38d79-105">Returns a Promise.</span></span>
    name: getAllKeys(callback)
    fullName: getAllKeys(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAllKeys(callback?: (error?: Error, keys?: string[]) => void): Promise<string[]>;'
      return:
        type:
          - 'Promise<string[]>'
        description: ''
      parameters:
        - id: callback
          description: ''
          type:
            - '(error?: Error, keys?: string[]) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.getItem
    summary: '<span data-ttu-id="38d79-106">Extrait un élément par clé, puis émet un rappel.</span><span class="sxs-lookup"><span data-stu-id="38d79-106">Retrieves an item by key, then issues a callback.</span></span> <span data-ttu-id="38d79-107">Renvoie une promesse.</span><span class="sxs-lookup"><span data-stu-id="38d79-107">Returns a Promise.</span></span>'
    name: 'getItem(key, callback)'
    fullName: 'getItem(key, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string, callback?: (error?: Error, result?: string) => void): Promise<string>;'
      return:
        type:
          - Promise<string>
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="38d79-108">Nom de la clé à récupérer.</span><span class="sxs-lookup"><span data-stu-id="38d79-108">The name of the key to retrieve.</span></span> <span data-ttu-id="38d79-109">Doit être une chaîne.</span><span class="sxs-lookup"><span data-stu-id="38d79-109">Must be a string.</span></span>
          type:
            - string
        - id: callback
          description: <span data-ttu-id="38d79-110">Le résultat renvoyé est une chaîne.</span><span class="sxs-lookup"><span data-stu-id="38d79-110">Returned result is a string.</span></span>
          type:
            - '(error?: Error, result?: string) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.multiGet
    summary: <span data-ttu-id="38d79-111">Extrait plusieurs éléments du stockage et appelle un rappel lorsque vous avez terminé.</span><span class="sxs-lookup"><span data-stu-id="38d79-111">Retrieves multiple items from storage and invokes a callback when finished.</span></span> <span data-ttu-id="38d79-112">Renvoie une promesse.</span><span class="sxs-lookup"><span data-stu-id="38d79-112">Returns a Promise.</span></span>
    name: 'multiGet(keys, callback)'
    fullName: 'multiGet(keys, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'multiGet(keys: string[], callback?: (errors?: Error[], result?: string[][]) => void): Promise<string[][]>;'
      return:
        type:
          - 'Promise<string[][]>'
        description: ''
      parameters:
        - id: keys
          description: <span data-ttu-id="38d79-113">Clés des éléments à récupérer.</span><span class="sxs-lookup"><span data-stu-id="38d79-113">Keys of the items to be retrieved.</span></span> <span data-ttu-id="38d79-114">Doit être un tableau de chaînes.</span><span class="sxs-lookup"><span data-stu-id="38d79-114">Must be an array of strings.</span></span>
          type:
            - 'string[]'
        - id: callback
          description: ''
          type:
            - '(errors?: Error[], result?: string[][]) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.multiRemove
    summary: <span data-ttu-id="38d79-115">Supprime plusieurs éléments du stockage et appelle un rappel lorsque vous avez terminé.</span><span class="sxs-lookup"><span data-stu-id="38d79-115">Removes multiple items from storage and invokes a callback when finished.</span></span> <span data-ttu-id="38d79-116">Renvoie une promesse.</span><span class="sxs-lookup"><span data-stu-id="38d79-116">Returns a Promise.</span></span>
    name: 'multiRemove(keys, callback)'
    fullName: 'multiRemove(keys, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'multiRemove(keys: string[], callback?: (errors?: Error[]) => void): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: keys
          description: <span data-ttu-id="38d79-117">Clés des éléments à supprimer.</span><span class="sxs-lookup"><span data-stu-id="38d79-117">Keys of the items to be removed.</span></span> <span data-ttu-id="38d79-118">Doit être un tableau de chaînes.</span><span class="sxs-lookup"><span data-stu-id="38d79-118">Must be an array of strings.</span></span>
          type:
            - 'string[]'
        - id: callback
          description: ''
          type:
            - '(errors?: Error[]) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.multiSet
    summary: <span data-ttu-id="38d79-119">Définit plusieurs paires clé-valeur et appelle un rappel lorsque vous avez terminé.</span><span class="sxs-lookup"><span data-stu-id="38d79-119">Sets multiple key-value pairs and invokes a callback when finished.</span></span> <span data-ttu-id="38d79-120">Renvoie une promesse.</span><span class="sxs-lookup"><span data-stu-id="38d79-120">Returns a Promise.</span></span>
    name: 'multiSet(keyValuePairs, callback)'
    fullName: 'multiSet(keyValuePairs, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'multiSet(keyValuePairs: string[][], callback?: (errors?: Error[]) => void): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: keyValuePairs
          description: <span data-ttu-id="38d79-121">Doit être un tableau de chaînes.</span><span class="sxs-lookup"><span data-stu-id="38d79-121">Must be arrays of strings.</span></span>
          type:
            - 'string[][]'
        - id: callback
          description: ''
          type:
            - '(errors?: Error[]) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.removeItem
    summary: <span data-ttu-id="38d79-122">Supprime les éléments par clé et appelle un rappel lorsque vous avez terminé.</span><span class="sxs-lookup"><span data-stu-id="38d79-122">Removes items by key and invokes a callback when finished.</span></span> <span data-ttu-id="38d79-123">Elle renvoie une promesse qui est résolue en un objet contenant les clés et valeurs demandées.</span><span class="sxs-lookup"><span data-stu-id="38d79-123">It returns a Promise that resolves to an object containing the keys and values requested.</span></span>
    name: 'removeItem(key, callback)'
    fullName: 'removeItem(key, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeItem(key: string, callback?: (error?: Error) => void): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="38d79-124">Clé de l’élément à supprimer.</span><span class="sxs-lookup"><span data-stu-id="38d79-124">The key of the item to be removed.</span></span> <span data-ttu-id="38d79-125">Doit être une chaîne.</span><span class="sxs-lookup"><span data-stu-id="38d79-125">Must be a string.</span></span>
          type:
            - string
        - id: callback
          description: ''
          type:
            - '(error?: Error) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.setItem
    summary: <span data-ttu-id="38d79-126">Crée une paire clé-valeur dans le stockage ou met à jour une clé existante avec une nouvelle valeur.</span><span class="sxs-lookup"><span data-stu-id="38d79-126">Creates a new key-value pair in storage or updates an existing key with a new value.</span></span> <span data-ttu-id="38d79-127">Renvoie une promesse.</span><span class="sxs-lookup"><span data-stu-id="38d79-127">Returns a Promise.</span></span>
    name: 'setItem(key, value, callback)'
    fullName: 'setItem(key, value, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setItem(key: string, value: string, callback?: (error?: Error) => void): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="38d79-128">Nom de la clé de la paire clé-valeur.</span><span class="sxs-lookup"><span data-stu-id="38d79-128">The name of the key for the key-value pair.</span></span> <span data-ttu-id="38d79-129">Doit être une chaîne.</span><span class="sxs-lookup"><span data-stu-id="38d79-129">Must be a string.</span></span>
          type:
            - string
        - id: value
          description: <span data-ttu-id="38d79-130">Nom de la valeur.</span><span class="sxs-lookup"><span data-stu-id="38d79-130">The name of the value.</span></span> <span data-ttu-id="38d79-131">Doit être une chaîne.</span><span class="sxs-lookup"><span data-stu-id="38d79-131">Must be a string.</span></span>
          type:
            - string
        - id: callback
          description: ''
          type:
            - '(error?: Error) => void'