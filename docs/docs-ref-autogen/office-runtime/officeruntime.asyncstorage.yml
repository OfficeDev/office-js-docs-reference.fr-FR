### YamlMime:UniversalReference
ms.openlocfilehash: 38cca7c5b3392313fdba2b69e9339111400f77ea
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 02/13/2019
ms.locfileid: "29978713"
items:
- uid: office-runtime.OfficeRuntime.AsyncStorage
  summary: Asynchrone, global et persistent stockage clé-valeur qui peut être utilisé par les fonctions Excel personnalisé.
  remarks: >-
    Chaque instance du complément possède sa propre partition de stockage unique pour un utilisateur et leur appareil.


    Stockage total autorisé par le complément de la durée par défaut est de 5 Mo.


    Chaque méthode ci-dessous retourne un objet promesse.
  isPreview: true
  name: OfficeRuntime.AsyncStorage
  fullName: OfficeRuntime.AsyncStorage
  langs:
  - typeScript
  type: interface
  package: office-runtime
  children:
  - office-runtime.OfficeRuntime.AsyncStorage.getAllKeys
  - office-runtime.OfficeRuntime.AsyncStorage.getItem
  - office-runtime.OfficeRuntime.AsyncStorage.multiGet
  - office-runtime.OfficeRuntime.AsyncStorage.multiRemove
  - office-runtime.OfficeRuntime.AsyncStorage.multiSet
  - office-runtime.OfficeRuntime.AsyncStorage.removeItem
  - office-runtime.OfficeRuntime.AsyncStorage.setItem
- uid: office-runtime.OfficeRuntime.AsyncStorage.getAllKeys
  summary: Renvoie une promesse avec toutes les clés.
  isPreview: true
  name: getAllKeys(callback)
  fullName: getAllKeys(callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getAllKeys(callback?: (error?: Error, keys?: string[]) => void): Promise<string[]>;'
    return:
      type:
      - Promise<string[]>
      description: ''
    parameters:
    - id: callback
      description: ''
      type:
      - '(error?: Error, keys?: string[]) => void'
- uid: office-runtime.OfficeRuntime.AsyncStorage.getItem
  summary: Récupère un objet basé sur une clé et appelle un rappel lorsque vous avez terminé. Renvoie une promesse.
  isPreview: true
  name: getItem(key, callback)
  fullName: getItem(key, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(key: string, callback?: (error?: Error, result?: string) => void): Promise<string>;'
    return:
      type:
      - Promise<string>
      description: ''
    parameters:
    - id: key
      description: ''
      type:
      - string
    - id: callback
      description: ''
      type:
      - '(error?: Error, result?: string) => void'
- uid: office-runtime.OfficeRuntime.AsyncStorage.multiGet
  summary: Extrait un lot de clés, spécifié dans le `keys` tableau. Lorsqu’une clé n’existe pas, renvoie null.
  isPreview: true
  name: multiGet(keys, callback)
  fullName: multiGet(keys, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'multiGet(keys: string[], callback?: (errors?: Error[], result?: string[][]) => void): Promise<string[][]>;'
    return:
      type:
      - Promise<string[][]>
      description: ''
    parameters:
    - id: keys
      description: ''
      type:
      - string[]
    - id: callback
      description: ''
      type:
      - '(errors?: Error[], result?: string[][]) => void'
- uid: office-runtime.OfficeRuntime.AsyncStorage.multiRemove
  summary: Supprime un lot de clés, spécifié dans le `keys` tableau.
  isPreview: true
  name: multiRemove(keys, callback)
  fullName: multiRemove(keys, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'multiRemove(keys: string[], callback?: (errors?: Error[]) => void): Promise<void>;'
    return:
      type:
      - Promise<void>
      description: ''
    parameters:
    - id: keys
      description: ''
      type:
      - string[]
    - id: callback
      description: ''
      type:
      - '(errors?: Error[]) => void'
- uid: office-runtime.OfficeRuntime.AsyncStorage.multiSet
  summary: Stocke plusieurs paires clé-valeur dans un seul lot. Renvoie une promesse. Lorsqu’une clé n’existe pas, renvoie null.
  isPreview: true
  name: multiSet(keyValuePairs, callback)
  fullName: multiSet(keyValuePairs, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'multiSet(keyValuePairs: string[][], callback?: (errors?: Error[]) => void): Promise<void>;'
    return:
      type:
      - Promise<void>
      description: ''
    parameters:
    - id: keyValuePairs
      description: ''
      type:
      - string[][]
    - id: callback
      description: ''
      type:
      - '(errors?: Error[]) => void'
- uid: office-runtime.OfficeRuntime.AsyncStorage.removeItem
  summary: Supprime un élément de clé spécifiée et appelle un rappel lorsque vous avez terminé. Renvoie une promesse.
  isPreview: true
  name: removeItem(key, callback)
  fullName: removeItem(key, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeItem(key: string, callback?: (error?: Error) => void): Promise<void>;'
    return:
      type:
      - Promise<void>
      description: ''
    parameters:
    - id: key
      description: ''
      type:
      - string
    - id: callback
      description: ''
      type:
      - '(error?: Error) => void'
- uid: office-runtime.OfficeRuntime.AsyncStorage.setItem
  summary: Affecte la valeur d’une paire clé-valeur et appelle un rappel lorsque vous avez terminé. Renvoie une promesse.
  isPreview: true
  name: setItem(key, value, callback)
  fullName: setItem(key, value, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setItem(key: string, value: string, callback?: (error?: Error) => void): Promise<void>;'
    return:
      type:
      - Promise<void>
      description: ''
    parameters:
    - id: key
      description: ''
      type:
      - string
    - id: value
      description: ''
      type:
      - string
    - id: callback
      description: ''
      type:
      - '(error?: Error) => void'
