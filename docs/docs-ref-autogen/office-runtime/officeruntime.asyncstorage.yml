### YamlMime:UniversalReference
items:
  - uid: office-runtime.OfficeRuntime.AsyncStorage
    summary: '<span data-ttu-id="228f8-101">Stockage de valeurs de clés asynchrone, global et persistant qui peut être utilisé par les fonctions personnalisées d''Excel.</span><span class="sxs-lookup"><span data-stu-id="228f8-101">Asynchronous, global, and persistent key-value storage that can be used by Excel Custom Functions.</span></span>'
    remarks: |-
      <span data-ttu-id="228f8-102">Chaque instance de complément possède sa propre partition de stockage, propre à un utilisateur et à son appareil.</span><span class="sxs-lookup"><span data-stu-id="228f8-102">Each add-in instance has its own storage partition, unique to a user and their device.</span></span>

      <span data-ttu-id="228f8-103">La quantité par défaut de stockage total autorisée par complément est de 5 Mo.</span><span class="sxs-lookup"><span data-stu-id="228f8-103">The default amount of total storage allowed per add-in is 5MB.</span></span>

      <span data-ttu-id="228f8-104">Chaque méthode ci-dessous renvoie un objet promises.</span><span class="sxs-lookup"><span data-stu-id="228f8-104">Each method listed below returns a Promise object.</span></span>
    isPreview: true
    name: OfficeRuntime.AsyncStorage
    fullName: OfficeRuntime.AsyncStorage
    langs:
      - typeScript
    type: interface
    package: office-runtime
    children:
      - office-runtime.OfficeRuntime.AsyncStorage.getAllKeys
      - office-runtime.OfficeRuntime.AsyncStorage.getItem
      - office-runtime.OfficeRuntime.AsyncStorage.multiGet
      - office-runtime.OfficeRuntime.AsyncStorage.multiRemove
      - office-runtime.OfficeRuntime.AsyncStorage.multiSet
      - office-runtime.OfficeRuntime.AsyncStorage.removeItem
      - office-runtime.OfficeRuntime.AsyncStorage.setItem
  - uid: office-runtime.OfficeRuntime.AsyncStorage.getAllKeys
    summary: <span data-ttu-id="228f8-105">Renvoie une promesse avec toutes les clés.</span><span class="sxs-lookup"><span data-stu-id="228f8-105">Returns a Promise with all keys.</span></span>
    isPreview: true
    name: getAllKeys(callback)
    fullName: getAllKeys(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAllKeys(callback?: (error?: Error, keys?: string[]) => void): Promise<string[]>;'
      return:
        type:
          - 'Promise<string[]>'
        description: ''
      parameters:
        - id: callback
          description: ''
          type:
            - '(error?: Error, keys?: string[]) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.getItem
    summary: <span data-ttu-id="228f8-106">Récupère un objet basé sur une clé et appelle un rappel lorsque vous avez terminé.</span><span class="sxs-lookup"><span data-stu-id="228f8-106">Retrieves an object based on a key and invokes a callback when finished.</span></span> <span data-ttu-id="228f8-107">Renvoie une promesse.</span><span class="sxs-lookup"><span data-stu-id="228f8-107">Returns a Promise.</span></span>
    isPreview: true
    name: 'getItem(key, callback)'
    fullName: 'getItem(key, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string, callback?: (error?: Error, result?: string) => void): Promise<string>;'
      return:
        type:
          - Promise<string>
        description: ''
      parameters:
        - id: key
          description: ''
          type:
            - string
        - id: callback
          description: ''
          type:
            - '(error?: Error, result?: string) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.multiGet
    summary: '<span data-ttu-id="228f8-108">Extrait un lot de clés, spécifié dans le `keys` tableau.</span><span class="sxs-lookup"><span data-stu-id="228f8-108">Fetches a batch of keys, specified in the `keys` array.</span></span> <span data-ttu-id="228f8-109">Lorsqu''une clé n''existe pas, renvoie la valeur null.</span><span class="sxs-lookup"><span data-stu-id="228f8-109">When a key doesn''t exist, returns null.</span></span>'
    isPreview: true
    name: 'multiGet(keys, callback)'
    fullName: 'multiGet(keys, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'multiGet(keys: string[], callback?: (errors?: Error[], result?: string[][]) => void): Promise<string[][]>;'
      return:
        type:
          - 'Promise<string[][]>'
        description: ''
      parameters:
        - id: keys
          description: ''
          type:
            - 'string[]'
        - id: callback
          description: ''
          type:
            - '(errors?: Error[], result?: string[][]) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.multiRemove
    summary: '<span data-ttu-id="228f8-110">Supprime un lot de clés, spécifié dans le `keys` tableau.</span><span class="sxs-lookup"><span data-stu-id="228f8-110">Deletes a batch of keys, specified in the `keys` array.</span></span>'
    isPreview: true
    name: 'multiRemove(keys, callback)'
    fullName: 'multiRemove(keys, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'multiRemove(keys: string[], callback?: (errors?: Error[]) => void): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: keys
          description: ''
          type:
            - 'string[]'
        - id: callback
          description: ''
          type:
            - '(errors?: Error[]) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.multiSet
    summary: '<span data-ttu-id="228f8-111">Stocke plusieurs paires clé-valeur dans un seul lot.</span><span class="sxs-lookup"><span data-stu-id="228f8-111">Stores multiple key-value pairs in one batch.</span></span> <span data-ttu-id="228f8-112">Renvoie une promesse.</span><span class="sxs-lookup"><span data-stu-id="228f8-112">Returns a Promise.</span></span> <span data-ttu-id="228f8-113">Lorsqu''une clé n''existe pas, renvoie la valeur null.</span><span class="sxs-lookup"><span data-stu-id="228f8-113">When a key doesn''t exist, returns null.</span></span>'
    isPreview: true
    name: 'multiSet(keyValuePairs, callback)'
    fullName: 'multiSet(keyValuePairs, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'multiSet(keyValuePairs: string[][], callback?: (errors?: Error[]) => void): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: keyValuePairs
          description: ''
          type:
            - 'string[][]'
        - id: callback
          description: ''
          type:
            - '(errors?: Error[]) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.removeItem
    summary: <span data-ttu-id="228f8-114">Supprime un élément pour la clé spécifiée et appelle un rappel lorsque vous avez terminé.</span><span class="sxs-lookup"><span data-stu-id="228f8-114">Removes an item for specified key and invokes a callback when finished.</span></span> <span data-ttu-id="228f8-115">Renvoie une promesse.</span><span class="sxs-lookup"><span data-stu-id="228f8-115">Returns a Promise.</span></span>
    isPreview: true
    name: 'removeItem(key, callback)'
    fullName: 'removeItem(key, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeItem(key: string, callback?: (error?: Error) => void): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: key
          description: ''
          type:
            - string
        - id: callback
          description: ''
          type:
            - '(error?: Error) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.setItem
    summary: <span data-ttu-id="228f8-116">Affecte la valeur pour une paire clé-valeur et appelle un rappel lorsque vous avez terminé.</span><span class="sxs-lookup"><span data-stu-id="228f8-116">Assigns the value for a key-value pair and invokes a callback when finished.</span></span> <span data-ttu-id="228f8-117">Renvoie une promesse.</span><span class="sxs-lookup"><span data-stu-id="228f8-117">Returns a Promise.</span></span>
    isPreview: true
    name: 'setItem(key, value, callback)'
    fullName: 'setItem(key, value, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setItem(key: string, value: string, callback?: (error?: Error) => void): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: key
          description: ''
          type:
            - string
        - id: value
          description: ''
          type:
            - string
        - id: callback
          description: ''
          type:
            - '(error?: Error) => void'