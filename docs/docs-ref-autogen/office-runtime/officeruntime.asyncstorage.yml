### YamlMime:UniversalReference
ms.openlocfilehash: 695ea27fa1b45e5ae262c7812cb1681a2107c635
ms.sourcegitcommit: 016e17422cf62dc9f1de1809666e9244e41cc1a9
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 11/09/2018
ms.locfileid: "26229752"
items:
- uid: office-runtime.OfficeRuntime.AsyncStorage
  summary: <span data-ttu-id="a8c46-101">Asynchrone, global et persistent stockage clé-valeur qui peut être utilisé par les fonctions Excel personnalisé.</span><span class="sxs-lookup"><span data-stu-id="a8c46-101">Asynchronous, global, and persistent key-value storage that can be used by Excel Custom Functions.</span></span>
  remarks: >-
    <span data-ttu-id="a8c46-102">Chaque instance du complément possède sa propre partition de stockage unique pour un utilisateur et leur appareil.</span><span class="sxs-lookup"><span data-stu-id="a8c46-102">Each add-in instance has its own storage partition, unique to a user and their device.</span></span>


    <span data-ttu-id="a8c46-103">Stockage total autorisé par le complément de la durée par défaut est de 5 Mo.</span><span class="sxs-lookup"><span data-stu-id="a8c46-103">The default amount of total storage allowed per add-in is 5MB.</span></span>


    <span data-ttu-id="a8c46-104">Chaque méthode ci-dessous retourne un objet promesse.</span><span class="sxs-lookup"><span data-stu-id="a8c46-104">Each method listed below returns a Promise object.</span></span>
  isPreview: true
  name: OfficeRuntime.AsyncStorage
  fullName: OfficeRuntime.AsyncStorage
  langs:
  - typeScript
  type: interface
  package: office-runtime
  children:
  - office-runtime.OfficeRuntime.AsyncStorage.getAllKeys
  - office-runtime.OfficeRuntime.AsyncStorage.getItem
  - office-runtime.OfficeRuntime.AsyncStorage.multiGet
  - office-runtime.OfficeRuntime.AsyncStorage.multiRemove
  - office-runtime.OfficeRuntime.AsyncStorage.multiSet
  - office-runtime.OfficeRuntime.AsyncStorage.removeItem
  - office-runtime.OfficeRuntime.AsyncStorage.setItem
- uid: office-runtime.OfficeRuntime.AsyncStorage.getAllKeys
  summary: <span data-ttu-id="a8c46-105">Renvoie une promesse avec toutes les clés.</span><span class="sxs-lookup"><span data-stu-id="a8c46-105">Returns a Promise with all keys.</span></span>
  isPreview: true
  name: getAllKeys(callback)
  fullName: getAllKeys
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getAllKeys(callback?: (error?: Error, keys?: string[]) => void): Promise<string[]>;'
    return:
      type:
      - Promise<string[]>
      description: ''
    parameters:
    - id: callback
      description: ''
      type:
      - '(error?: Error, keys?: string[]) => void'
- uid: office-runtime.OfficeRuntime.AsyncStorage.getItem
  summary: <span data-ttu-id="a8c46-106">Récupère un objet basé sur une clé et appelle un rappel lorsque vous avez terminé.</span><span class="sxs-lookup"><span data-stu-id="a8c46-106">Retrieves an object based on a key and invokes a callback when finished.</span></span> <span data-ttu-id="a8c46-107">Renvoie une promesse.</span><span class="sxs-lookup"><span data-stu-id="a8c46-107">Returns a Promise.</span></span>
  isPreview: true
  name: getItem(key, callback)
  fullName: getItem
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(key: string, callback?: (error?: Error, result?: string) => void): Promise<string>;'
    return:
      type:
      - Promise<string>
      description: ''
    parameters:
    - id: key
      description: ''
      type:
      - string
    - id: callback
      description: ''
      type:
      - '(error?: Error, result?: string) => void'
- uid: office-runtime.OfficeRuntime.AsyncStorage.multiGet
  summary: <span data-ttu-id="a8c46-108">Extrait un lot de clés, spécifié dans le `keys` tableau.</span><span class="sxs-lookup"><span data-stu-id="a8c46-108">Fetches a batch of keys, specified in the `keys` array.</span></span> <span data-ttu-id="a8c46-109">Lorsqu’une clé n’existe pas, renvoie null.</span><span class="sxs-lookup"><span data-stu-id="a8c46-109">When a key doesn't exist, returns null.</span></span>
  isPreview: true
  name: multiGet(keys, callback)
  fullName: multiGet
  langs:
  - typeScript
  type: method
  syntax:
    content: 'multiGet(keys: string[], callback?: (errors?: Error[], result?: string[][]) => void): Promise<string[][]>;'
    return:
      type:
      - Promise<string[][]>
      description: ''
    parameters:
    - id: keys
      description: ''
      type:
      - string[]
    - id: callback
      description: ''
      type:
      - '(errors?: Error[], result?: string[][]) => void'
- uid: office-runtime.OfficeRuntime.AsyncStorage.multiRemove
  summary: <span data-ttu-id="a8c46-110">Supprime un lot de clés, spécifié dans le `keys` tableau.</span><span class="sxs-lookup"><span data-stu-id="a8c46-110">Deletes a batch of keys, specified in the `keys` array.</span></span>
  isPreview: true
  name: multiRemove(keys, callback)
  fullName: multiRemove
  langs:
  - typeScript
  type: method
  syntax:
    content: 'multiRemove(keys: string[], callback?: (errors?: Error[]) => void): Promise<void>;'
    return:
      type:
      - Promise<void>
      description: ''
    parameters:
    - id: keys
      description: ''
      type:
      - string[]
    - id: callback
      description: ''
      type:
      - '(errors?: Error[]) => void'
- uid: office-runtime.OfficeRuntime.AsyncStorage.multiSet
  summary: <span data-ttu-id="a8c46-111">Stocke plusieurs paires clé-valeur dans un seul lot.</span><span class="sxs-lookup"><span data-stu-id="a8c46-111">Stores multiple key-value pairs in one batch.</span></span> <span data-ttu-id="a8c46-112">Renvoie une promesse.</span><span class="sxs-lookup"><span data-stu-id="a8c46-112">Returns a Promise.</span></span> <span data-ttu-id="a8c46-113">Lorsqu’une clé n’existe pas, renvoie null.</span><span class="sxs-lookup"><span data-stu-id="a8c46-113">When a key doesn't exist, returns null.</span></span>
  isPreview: true
  name: multiSet(keyValuePairs, callback)
  fullName: multiSet
  langs:
  - typeScript
  type: method
  syntax:
    content: 'multiSet(keyValuePairs: string[][], callback?: (errors?: Error[]) => void): Promise<void>;'
    return:
      type:
      - Promise<void>
      description: ''
    parameters:
    - id: keyValuePairs
      description: ''
      type:
      - string[][]
    - id: callback
      description: ''
      type:
      - '(errors?: Error[]) => void'
- uid: office-runtime.OfficeRuntime.AsyncStorage.removeItem
  summary: <span data-ttu-id="a8c46-114">Supprime un élément de clé spécifiée et appelle un rappel lorsque vous avez terminé.</span><span class="sxs-lookup"><span data-stu-id="a8c46-114">Removes an item for specified key and invokes a callback when finished.</span></span> <span data-ttu-id="a8c46-115">Renvoie une promesse.</span><span class="sxs-lookup"><span data-stu-id="a8c46-115">Returns a Promise.</span></span>
  isPreview: true
  name: removeItem(key, callback)
  fullName: removeItem
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeItem(key: string, callback?: (error?: Error) => void): Promise<void>;'
    return:
      type:
      - Promise<void>
      description: ''
    parameters:
    - id: key
      description: ''
      type:
      - string
    - id: callback
      description: ''
      type:
      - '(error?: Error) => void'
- uid: office-runtime.OfficeRuntime.AsyncStorage.setItem
  summary: <span data-ttu-id="a8c46-116">Affecte la valeur d’une paire clé-valeur et appelle un rappel lorsque vous avez terminé.</span><span class="sxs-lookup"><span data-stu-id="a8c46-116">Assigns the value for a key-value pair and invokes a callback when finished.</span></span> <span data-ttu-id="a8c46-117">Renvoie une promesse.</span><span class="sxs-lookup"><span data-stu-id="a8c46-117">Returns a Promise.</span></span>
  isPreview: true
  name: setItem(key, value, callback)
  fullName: setItem
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setItem(key: string, value: string, callback?: (error?: Error) => void): Promise<void>;'
    return:
      type:
      - Promise<void>
      description: ''
    parameters:
    - id: key
      description: ''
      type:
      - string
    - id: value
      description: ''
      type:
      - string
    - id: callback
      description: ''
      type:
      - '(error?: Error) => void'
