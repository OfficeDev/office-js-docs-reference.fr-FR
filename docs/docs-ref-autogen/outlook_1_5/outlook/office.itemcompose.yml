### YamlMime:UniversalReference
items:
  - uid: 'outlook!Office.ItemCompose:interface'
    summary: |-
      Mode de composition d' [Office. Context. Mailbox. Item](xref:outlook!Office.Item:interface)<!-- -->.

      **Important**: il s’agit d’un objet Outlook interne, qui n’est pas directement exposé via les interfaces existantes. Vous devez traiter ceci comme un mode d’Office. Context. Mailbox. Item. Pour plus d’informations, reportez-vous à la page [modèle objet](https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/requirement-set-1.5/office.context.mailbox.item) .
    name: Office.ItemCompose
    fullName: Office.ItemCompose
    langs:
      - typeScript
    type: interface
    extends:
      - 'outlook!Office.Item:interface'
    package: outlook!
    children:
      - 'outlook!Office.ItemCompose#addFileAttachmentAsync:member(1)'
      - 'outlook!Office.ItemCompose#addFileAttachmentAsync:member(2)'
      - 'outlook!Office.ItemCompose#addItemAttachmentAsync:member(1)'
      - 'outlook!Office.ItemCompose#addItemAttachmentAsync:member(2)'
      - 'outlook!Office.ItemCompose#close:member(1)'
      - 'outlook!Office.ItemCompose#getSelectedDataAsync:member(1)'
      - 'outlook!Office.ItemCompose#getSelectedDataAsync:member(2)'
      - 'outlook!Office.ItemCompose#removeAttachmentAsync:member(1)'
      - 'outlook!Office.ItemCompose#removeAttachmentAsync:member(2)'
      - 'outlook!Office.ItemCompose#saveAsync:member(1)'
      - 'outlook!Office.ItemCompose#saveAsync:member(2)'
      - 'outlook!Office.ItemCompose#setSelectedDataAsync:member(1)'
      - 'outlook!Office.ItemCompose#setSelectedDataAsync:member(2)'
      - 'outlook!Office.ItemCompose#subject:member'
  - uid: 'outlook!Office.ItemCompose#addFileAttachmentAsync:member(1)'
    summary: "Ajoute un fichier à un message ou un rendez-vous en pièce jointe.\n\nLa méthode addFileAttachmentAsync télécharge le fichier à l’URI spécifié et le joint à l’élément dans le formulaire de composition.\n\nL’identificateur peut être utilisé avec la méthode removeAttachmentAsync pour supprimer la pièce jointe dans la même session.\n\n\\[[Ensemble d’API\_: boîte aux lettres 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\\]"
    remarks: "**<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadWriteItem\n\n**<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition\n\n**Erreurs**:\n\n- AttachmentSizeExceeded\_: la pièce jointe est plus grande que autorisée.\n\n- FileTypeNotSupported\_: la pièce jointe a une extension qui n’est pas autorisée.\n\n- NumberOfAttachmentsExceeded\_: le message ou le rendez-vous contient trop de pièces jointes."
    name: 'addFileAttachmentAsync(uri, attachmentName, options, callback)'
    fullName: 'addFileAttachmentAsync(uri, attachmentName, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFileAttachmentAsync(uri: string, attachmentName: string, options?: Office.AsyncContextOptions & { isInline: boolean }, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: uri
          description: "URI indiquant l’emplacement du fichier à joindre au message ou au rendez-vous. La longueur maximale est de 2\_048\_caractères."
          type:
            - string
        - id: attachmentName
          description: "Nom de la pièce jointe affiché lors de son chargement. La longueur maximale est de 255\_caractères."
          type:
            - string
        - id: options
          description: "Facultatif. Littéral d’objet contenant une ou plusieurs des propriétés suivantes. asyncContext\_: les développeurs peuvent fournir n’importe quel objet auquel ils souhaitent accéder dans la méthode de rappel. isInline\_: si la valeur est définie sur true, indique que la pièce jointe s’affichera en ligne dans le corps du message et ne doit pas être affichée dans la liste des pièces jointes."
          type:
            - 'outlook!Office.ItemCompose#addFileAttachmentAsync~0:complex'
        - id: callback
          description: 'Facultatif. Une fois la méthode exécutée, la fonction transmise au paramètre callback est appelée avec un seul paramètre de type Office. AsyncResult. En cas de réussite, l’identificateur de pièce jointe est fourni dans la propriété asyncResult. Value. En cas d’échec de téléchargement de la pièce jointe, l’objet asyncResult contient un objet Error qui fournit une description de l’erreur.'
          type:
            - 'outlook!Office.ItemCompose#addFileAttachmentAsync~1:complex'
  - uid: 'outlook!Office.ItemCompose#addFileAttachmentAsync:member(2)'
    summary: "Ajoute un fichier à un message ou un rendez-vous en pièce jointe.\n\nLa méthode addFileAttachmentAsync télécharge le fichier à l’URI spécifié et le joint à l’élément dans le formulaire de composition.\n\nL’identificateur peut être utilisé avec la méthode removeAttachmentAsync pour supprimer la pièce jointe dans la même session.\n\n\\[[Ensemble d’API\_: boîte aux lettres 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\\]"
    remarks: "**<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadWriteItem\n\n**<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition\n\n**Erreurs**:\n\n- AttachmentSizeExceeded\_: la pièce jointe est plus grande que autorisée.\n\n- FileTypeNotSupported\_: la pièce jointe a une extension qui n’est pas autorisée.\n\n- NumberOfAttachmentsExceeded\_: le message ou le rendez-vous contient trop de pièces jointes."
    name: 'addFileAttachmentAsync(uri, attachmentName, callback)'
    fullName: 'addFileAttachmentAsync(uri, attachmentName, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFileAttachmentAsync(uri: string, attachmentName: string, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: uri
          description: "URI indiquant l’emplacement du fichier à joindre au message ou au rendez-vous. La longueur maximale est de 2\_048\_caractères."
          type:
            - string
        - id: attachmentName
          description: "Nom de la pièce jointe affiché lors de son chargement. La longueur maximale est de 255\_caractères."
          type:
            - string
        - id: callback
          description: 'Facultatif. Une fois la méthode exécutée, la fonction transmise au paramètre callback est appelée avec un seul paramètre de type Office. AsyncResult. En cas de réussite, l’identificateur de pièce jointe est fourni dans la propriété asyncResult. Value. En cas d’échec de téléchargement de la pièce jointe, l’objet asyncResult contient un objet Error qui fournit une description de l’erreur.'
          type:
            - 'outlook!Office.ItemCompose#addFileAttachmentAsync~2:complex'
  - uid: 'outlook!Office.ItemCompose#addItemAttachmentAsync:member(1)'
    summary: "Ajoute un élément Exchange, comme un message, en pièce jointe au message ou au rendez-vous.\n\nLa méthode addItemAttachmentAsync attache l’élément avec l’identificateur Exchange spécifié à l’élément dans le formulaire de composition. Si vous spécifiez une méthode de rappel, la méthode est appelée avec un paramètre, asyncResult, qui contient l’identificateur de pièce jointe ou un code indiquant toute erreur survenue lors de l’ajout de l’élément en tant que pièce jointe. Vous pouvez utiliser le paramètre options pour transmettre des informations d’État à la méthode de rappel, si nécessaire.\n\nL’identificateur peut être utilisé avec la méthode removeAttachmentAsync pour supprimer la pièce jointe dans la même session.\n\nSi votre complément Office est en cours d’exécution dans Outlook sur le Web, la méthode addItemAttachmentAsync peut joindre des éléments à des éléments autres que l’élément que vous modifiez\_; Toutefois, cette option n’est pas prise en charge et n’est pas recommandée.\n\n\\[[Ensemble d’API\_: boîte aux lettres 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\\]"
    remarks: "**<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadWriteItem\n\n**<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition\n\n**Erreurs**:\n\n- NumberOfAttachmentsExceeded\_: le message ou le rendez-vous contient trop de pièces jointes."
    name: 'addItemAttachmentAsync(itemId, attachmentName, options, callback)'
    fullName: 'addItemAttachmentAsync(itemId, attachmentName, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addItemAttachmentAsync(itemId: any, attachmentName: string, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: itemId
          description: "Identificateur Exchange de l’élément à joindre. La taille maximale est de 100\_caractères."
          type:
            - any
        - id: attachmentName
          description: "Nom de la pièce jointe affiché lors de son chargement. La longueur maximale est de 255\_caractères."
          type:
            - string
        - id: options
          description: "Facultatif. Littéral d’objet contenant une ou plusieurs des propriétés suivantes. asyncContext\_: les développeurs peuvent fournir n’importe quel objet auquel ils souhaitent accéder dans la méthode de rappel."
          type:
            - 'outlook!Office.AsyncContextOptions:interface'
        - id: callback
          description: 'Facultatif. Une fois la méthode exécutée, la fonction transmise au paramètre callback est appelée avec un seul paramètre de type Office. AsyncResult. En cas de réussite, l’identificateur de pièce jointe est fourni dans la propriété asyncResult. Value. En cas d’échec de l’ajout de la pièce jointe, l’objet asyncResult contient un objet Error qui fournit une description de l’erreur.'
          type:
            - 'outlook!Office.ItemCompose#addItemAttachmentAsync~0:complex'
  - uid: 'outlook!Office.ItemCompose#addItemAttachmentAsync:member(2)'
    summary: "Ajoute un élément Exchange, comme un message, en pièce jointe au message ou au rendez-vous.\n\nLa méthode addItemAttachmentAsync attache l’élément avec l’identificateur Exchange spécifié à l’élément dans le formulaire de composition. Si vous spécifiez une méthode de rappel, la méthode est appelée avec un paramètre, asyncResult, qui contient l’identificateur de pièce jointe ou un code indiquant toute erreur survenue lors de l’ajout de l’élément en tant que pièce jointe. Vous pouvez utiliser le paramètre options pour transmettre des informations d’État à la méthode de rappel, si nécessaire.\n\nL’identificateur peut être utilisé avec la méthode removeAttachmentAsync pour supprimer la pièce jointe dans la même session.\n\nSi votre complément Office est en cours d’exécution dans Outlook sur le Web, la méthode addItemAttachmentAsync peut joindre des éléments à des éléments autres que l’élément que vous modifiez\_; Toutefois, cette option n’est pas prise en charge et n’est pas recommandée.\n\n\\[[Ensemble d’API\_: boîte aux lettres 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\\]"
    remarks: "**<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadWriteItem\n\n**<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition\n\n**Erreurs**:\n\n- NumberOfAttachmentsExceeded\_: le message ou le rendez-vous contient trop de pièces jointes."
    name: 'addItemAttachmentAsync(itemId, attachmentName, callback)'
    fullName: 'addItemAttachmentAsync(itemId, attachmentName, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addItemAttachmentAsync(itemId: any, attachmentName: string, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: itemId
          description: "Identificateur Exchange de l’élément à joindre. La taille maximale est de 100\_caractères."
          type:
            - any
        - id: attachmentName
          description: "Nom de la pièce jointe affiché lors de son chargement. La longueur maximale est de 255\_caractères."
          type:
            - string
        - id: callback
          description: 'Facultatif. Une fois la méthode exécutée, la fonction transmise au paramètre callback est appelée avec un seul paramètre de type Office. AsyncResult. En cas de réussite, l’identificateur de pièce jointe est fourni dans la propriété asyncResult. Value. En cas d’échec de l’ajout de la pièce jointe, l’objet asyncResult contient un objet Error qui fournit une description de l’erreur.'
          type:
            - 'outlook!Office.ItemCompose#addItemAttachmentAsync~1:complex'
  - uid: 'outlook!Office.ItemCompose#close:member(1)'
    summary: "Ferme l’élément en cours composé.\n\nLes comportements de la méthode Close dépendent de l’état actuel de l’élément composé. Si l’élément comporte des modifications non enregistrées, le client invite l’utilisateur à enregistrer, ignorer ou fermer l’action.\n\nDans le client de bureau Outlook, si le message est une réponse incorporée, la méthode Close n’a aucun effet.\n\n**Remarque**: dans Outlook sur le Web, si l’élément est un rendez-vous et qu’il a été précédemment enregistré à l’aide de saveAsync, l’utilisateur est invité à enregistrer, ignorer ou annuler même si aucune modification n’a eu lieu depuis le dernier enregistrement de l’élément.\n\n\\[[Ensemble d’API\_: boîte aux lettres 1,3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\\]"
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: restreint

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition
    name: close()
    fullName: close()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'close(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'outlook!Office.ItemCompose#getSelectedDataAsync:member(1)'
    summary: "Renvoie de manière asynchrone les données sélectionnées à partir de l’objet ou du corps d’un message.\n\nS’il n’y a aucune sélection, mais que le curseur se trouve dans le corps ou l’objet, la méthode renvoie une chaîne vide pour les données sélectionnées. Si un champ autre que le corps ou l’objet est sélectionné, la méthode renvoie l’erreur InvalidSelection.\n\nPour accéder aux données sélectionnées via la méthode de rappel, appelez la méthode asyncResult.value.data. Pour accéder à la propriété source d’origine de la sélection, appelez asyncResult. Value. sourceProperty, qui sera le corps ou l’objet.\n\n**Remarque**: dans Outlook sur le Web, la méthode renvoie la chaîne «\_NULL\_» si aucun texte n’est sélectionné, mais que le curseur se trouve dans le corps du message.\n\n\\[[Ensemble d’API\_: boîte aux lettres 1,2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\\]"
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadItem

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition
    name: 'getSelectedDataAsync(coercionType, options, callback)'
    fullName: 'getSelectedDataAsync(coercionType, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedDataAsync(coercionType: Office.CoercionType | string, options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<any>) => void): void;'
      return:
        type:
          - void
        description: Données sélectionnées en tant que chaîne dont le format est déterminé par coercionType.
      parameters:
        - id: coercionType
          description: 'Demande un format à attribuer aux données. Si le texte est, la méthode renvoie le texte brut sous la forme d’une chaîne, supprimant toutes les balises HTML présentes. S’il s’agit de langage HTML, la méthode renvoie le texte sélectionné, qu’il s’agisse de texte brut ou de langage HTML.'
          type:
            - 'outlook!Office.ItemCompose#getSelectedDataAsync~0:complex'
        - id: options
          description: "Littéral d’objet contenant une ou plusieurs des propriétés suivantes. asyncContext\_: les développeurs peuvent fournir n’importe quel objet auquel ils souhaitent accéder dans la méthode de rappel."
          type:
            - 'outlook!Office.AsyncContextOptions:interface'
        - id: callback
          description: 'Une fois la méthode exécutée, la fonction transmise au paramètre callback est appelée avec un seul paramètre de type Office. AsyncResult.'
          type:
            - 'outlook!Office.ItemCompose#getSelectedDataAsync~1:complex'
  - uid: 'outlook!Office.ItemCompose#getSelectedDataAsync:member(2)'
    summary: "Renvoie de manière asynchrone les données sélectionnées à partir de l’objet ou du corps d’un message.\n\nS’il n’y a aucune sélection, mais que le curseur se trouve dans le corps ou l’objet, la méthode renvoie une chaîne vide pour les données sélectionnées. Si un champ autre que le corps ou l’objet est sélectionné, la méthode renvoie l’erreur InvalidSelection.\n\nPour accéder aux données sélectionnées via la méthode de rappel, appelez la méthode asyncResult.value.data. Pour accéder à la propriété source d’origine de la sélection, appelez asyncResult. Value. sourceProperty, qui sera le corps ou l’objet.\n\n**Remarque**: dans Outlook sur le Web, la méthode renvoie la chaîne «\_NULL\_» si aucun texte n’est sélectionné, mais que le curseur se trouve dans le corps du message.\n\n\\[[Ensemble d’API\_: boîte aux lettres 1,2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\\]"
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadItem

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition
    name: 'getSelectedDataAsync(coercionType, callback)'
    fullName: 'getSelectedDataAsync(coercionType, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedDataAsync(coercionType: Office.CoercionType | string, callback: (asyncResult: Office.AsyncResult<any>) => void): void;'
      return:
        type:
          - void
        description: Données sélectionnées en tant que chaîne dont le format est déterminé par coercionType.
      parameters:
        - id: coercionType
          description: 'Demande un format à attribuer aux données. S’il s’agit de texte, la méthode renvoie le texte brut en tant que chaîne, en retirant toutes les balises HTML présentes. S’il s’agit de langage HTML, la méthode renvoie le texte sélectionné, qu’il s’agisse de texte brut ou de langage HTML.'
          type:
            - 'outlook!Office.ItemCompose#getSelectedDataAsync~2:complex'
        - id: callback
          description: 'Une fois la méthode exécutée, la fonction transmise au paramètre callback est appelée avec un seul paramètre de type Office. AsyncResult.'
          type:
            - 'outlook!Office.ItemCompose#getSelectedDataAsync~3:complex'
  - uid: 'outlook!Office.ItemCompose#removeAttachmentAsync:member(1)'
    summary: "Supprime une pièce jointe d’un message ou d’un rendez-vous.\n\nLa méthode removeAttachmentAsync supprime la pièce jointe avec l’identificateur spécifié de l’élément. Nous vous recommandons vivement de supprimer une pièce jointe à l’aide de son identificateur uniquement si la même application de messagerie a ajouté cette pièce jointe au cours de la même session. Dans Outlook sur le web et sur les appareils mobiles, l’identificateur de pièce jointe n’est valable que dans la même session. Une session est terminée lorsque l’utilisateur ferme l’application, ou si l’utilisateur commence à composer un formulaire inséré, puis détoure ensuite le formulaire pour continuer dans une fenêtre distincte.\n\n\\[[Ensemble d’API\_: boîte aux lettres 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\\]"
    remarks: "**<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadWriteItem\n\n**<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition\n\n**Erreurs**:\n\n- InvalidAttachmentId\_: l’identificateur de pièce jointe n’existe pas."
    name: 'removeAttachmentAsync(attachmentId, options, callback)'
    fullName: 'removeAttachmentAsync(attachmentId, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeAttachmentAsync(attachmentId: string, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: attachmentId
          description: Identificateur de la pièce jointe à supprimer.
          type:
            - string
        - id: options
          description: "Facultatif. Littéral d’objet contenant une ou plusieurs des propriétés suivantes. asyncContext\_: les développeurs peuvent fournir n’importe quel objet auquel ils souhaitent accéder dans la méthode de rappel."
          type:
            - 'outlook!Office.AsyncContextOptions:interface'
        - id: callback
          description: 'Facultatif. Une fois la méthode exécutée, la fonction transmise au paramètre callback est appelée avec un seul paramètre de type Office. AsyncResult. En cas d’échec de la suppression de la pièce jointe, la propriété asyncResult. Error contient un code d’erreur correspondant à la raison de l’échec.'
          type:
            - 'outlook!Office.ItemCompose#removeAttachmentAsync~0:complex'
  - uid: 'outlook!Office.ItemCompose#removeAttachmentAsync:member(2)'
    summary: "Supprime une pièce jointe d’un message ou d’un rendez-vous.\n\nLa méthode removeAttachmentAsync supprime la pièce jointe avec l’identificateur spécifié de l’élément. Nous vous recommandons vivement de supprimer une pièce jointe à l’aide de son identificateur uniquement si la même application de messagerie a ajouté cette pièce jointe au cours de la même session. Dans Outlook sur le web et sur les appareils mobiles, l’identificateur de pièce jointe n’est valable que dans la même session. Une session est terminée lorsque l’utilisateur ferme l’application, ou si l’utilisateur commence à composer un formulaire inséré, puis détoure ensuite le formulaire pour continuer dans une fenêtre distincte.\n\n\\[[Ensemble d’API\_: boîte aux lettres 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\\]"
    remarks: "**<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadWriteItem\n\n**<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition\n\n**Erreurs**:\n\n- InvalidAttachmentId\_: l’identificateur de pièce jointe n’existe pas."
    name: 'removeAttachmentAsync(attachmentId, callback)'
    fullName: 'removeAttachmentAsync(attachmentId, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeAttachmentAsync(attachmentId: string, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: attachmentId
          description: Identificateur de la pièce jointe à supprimer.
          type:
            - string
        - id: callback
          description: 'Facultatif. Une fois la méthode exécutée, la fonction transmise au paramètre callback est appelée avec un seul paramètre de type Office. AsyncResult. En cas d’échec de la suppression de la pièce jointe, la propriété asyncResult. Error contient un code d’erreur correspondant à la raison de l’échec.'
          type:
            - 'outlook!Office.ItemCompose#removeAttachmentAsync~1:complex'
  - uid: 'outlook!Office.ItemCompose#saveAsync:member(1)'
    summary: "Enregistre un élément de manière asynchrone.\n\nLorsqu’elle est appelée, cette méthode enregistre le message en cours en tant que brouillon et renvoie l’ID de l’élément via la méthode de rappel. Dans Outlook sur le web ou Outlook en mode en ligne, l’élément est enregistré sur le serveur. Dans Outlook en mode mis en cache, l’élément est enregistré dans le cache local.\n\nÉtant donné que les rendez-vous n’ont pas d’état Brouillon, si saveAsync est appelé sur un rendez-vous en mode composition, l’élément sera enregistré en tant que rendez-vous normal sur le calendrier de l’utilisateur. Pour les nouveaux rendez-vous qui n’ont pas encore été enregistrés, aucune invitation n’est envoyée. L’enregistrement d’un rendez-vous existant enverra une mise à jour pour ajouter ou supprimer des participants.\n\n**Remarque**: Si votre complément appelle saveAsync sur un élément en mode composition pour qu’un ItemId puisse être utilisé avec EWS ou l’API REST, sachez que lorsque Outlook est en mode mis en cache, il peut prendre un peu de temps avant la synchronisation effective de l’élément avec le serveur. Tant que l’élément n’est pas synchronisé, l’ID itemId renverra une erreur.\n\n**Remarque**: les clients suivants ont un comportement différent pour saveAsync sur les rendez-vous en mode composition\_:\n\n- Outlook pour Mac ne prend pas en charge l’enregistrement d’une réunion. La méthode saveAsync échoue lorsqu’elle est appelée à partir d’une réunion en mode composition. Pour contourner ce problème, voir [Impossible d’enregistrer une réunion en tant que brouillon dans Outlook pour Mac à l’aide des API de JS Office](https://support.microsoft.com/help/4505745).\n\n- Outlook sur le Web envoie toujours une invitation ou une mise à jour lorsque saveAsync est appelé sur un rendez-vous en mode composition.\n\n\\[[Ensemble d’API\_: boîte aux lettres 1,3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\\]"
    remarks: "**<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadWriteItem\n\n**<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition\n\n**Erreurs**:\n\n- InvalidAttachmentId\_: l’identificateur de pièce jointe n’existe pas."
    name: 'saveAsync(options, callback)'
    fullName: 'saveAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'saveAsync(options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: "Littéral d’objet contenant une ou plusieurs des propriétés suivantes. asyncContext\_: les développeurs peuvent fournir n’importe quel objet auquel ils souhaitent accéder dans la méthode de rappel."
          type:
            - 'outlook!Office.AsyncContextOptions:interface'
        - id: callback
          description: 'Une fois la méthode exécutée, la fonction transmise au paramètre callback est appelée avec un seul paramètre de type Office. AsyncResult. En cas d’échec de la suppression de la pièce jointe, la propriété asyncResult. Error contient un code d’erreur correspondant à la raison de l’échec.'
          type:
            - 'outlook!Office.ItemCompose#saveAsync~0:complex'
  - uid: 'outlook!Office.ItemCompose#saveAsync:member(2)'
    summary: "Enregistre un élément de manière asynchrone.\n\nLorsqu’elle est appelée, cette méthode enregistre le message en cours en tant que brouillon et renvoie l’ID de l’élément via la méthode de rappel. Dans Outlook sur le web ou Outlook en mode en ligne, l’élément est enregistré sur le serveur. Dans Outlook en mode mis en cache, l’élément est enregistré dans le cache local.\n\nÉtant donné que les rendez-vous n’ont pas d’état Brouillon, si saveAsync est appelé sur un rendez-vous en mode composition, l’élément sera enregistré en tant que rendez-vous normal sur le calendrier de l’utilisateur. Pour les nouveaux rendez-vous qui n’ont pas encore été enregistrés, aucune invitation n’est envoyée. L’enregistrement d’un rendez-vous existant enverra une mise à jour pour ajouter ou supprimer des participants.\n\n**Remarque**: Si votre complément appelle saveAsync sur un élément en mode composition pour qu’un ItemId puisse être utilisé avec EWS ou l’API REST, sachez que lorsque Outlook est en mode mis en cache, il peut prendre un peu de temps avant la synchronisation effective de l’élément avec le serveur. Tant que l’élément n’est pas synchronisé, l’ID itemId renverra une erreur.\n\n**Remarque**: les clients suivants ont un comportement différent pour saveAsync sur les rendez-vous en mode composition\_:\n\n- Outlook pour Mac ne prend pas en charge l’enregistrement d’une réunion. La méthode saveAsync échoue lorsqu’elle est appelée à partir d’une réunion en mode composition. Pour contourner ce problème, voir [Impossible d’enregistrer une réunion en tant que brouillon dans Outlook pour Mac à l’aide des API de JS Office](https://support.microsoft.com/help/4505745).\n\n- Outlook sur le Web envoie toujours une invitation ou une mise à jour lorsque saveAsync est appelé sur un rendez-vous en mode composition.\n\n\\[[Ensemble d’API\_: boîte aux lettres 1,3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\\]"
    remarks: "**<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadWriteItem\n\n**<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition\n\n**Erreurs**:\n\n- InvalidAttachmentId\_: l’identificateur de pièce jointe n’existe pas."
    name: saveAsync(callback)
    fullName: saveAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'saveAsync(callback: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: 'Une fois la méthode exécutée, la fonction transmise au paramètre callback est appelée avec un seul paramètre de type Office. AsyncResult. En cas d’échec de la suppression de la pièce jointe, la propriété asyncResult. Error contient un code d’erreur correspondant à la raison de l’échec.'
          type:
            - 'outlook!Office.ItemCompose#saveAsync~1:complex'
  - uid: 'outlook!Office.ItemCompose#setSelectedDataAsync:member(1)'
    summary: "Insère les données dans le corps ou l’objet d’un message de manière asynchrone.\n\nLa méthode setSelectedDataAsync insère la chaîne spécifiée à l’emplacement du curseur dans l’objet ou le corps de l’élément, ou si du texte est sélectionné dans l’éditeur, il remplace le texte sélectionné. Si le curseur ne se trouve pas dans le champ Body ou Subject, une erreur est renvoyée. Après l’insertion, le curseur est placé à la fin du contenu inséré.\n\n\\[[Ensemble d’API\_: boîte aux lettres 1,2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\\]"
    remarks: "**<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadWriteItem\n\n**<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition\n\n**Erreurs**:\n\n- InvalidAttachmentId\_: l’identificateur de pièce jointe n’existe pas."
    name: 'setSelectedDataAsync(data, options, callback)'
    fullName: 'setSelectedDataAsync(data, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setSelectedDataAsync(data: string, options?: Office.AsyncContextOptions & CoercionTypeOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: data
          description: "Données à insérer. Les données ne doivent pas dépasser 1\_000\_000\_caractères. Si elles contiennent plus de 1\_000\_000\_caractères, une exception ArgumentOutOfRange est générée."
          type:
            - string
        - id: options
          description: "Facultatif. Littéral d’objet contenant une ou plusieurs des propriétés suivantes. asyncContext\_: les développeurs peuvent fournir n’importe quel objet auquel ils souhaitent accéder dans la méthode de rappel. coercionType\_: si le texte est présent, le style actuel est appliqué dans Outlook sur le Web et les clients de bureau. Si le champ est un éditeur HTML, seules les données de texte sont insérées, même si les données sont au format HTML. Si le code HTML et le champ prennent en charge le format HTML (l’objet ne l’est pas), le style actuel est appliqué dans Outlook sur le Web et le style par défaut est appliqué dans Outlook sur les clients de bureau. Si le champ est un champ de texte, une erreur InvalidDataFormat est renvoyée. Si coercionType n’est pas défini, le résultat dépend du champ\_: si le champ est HTML, du langage HTML est utilisé\_; si le champ est un champ de texte, du texte brut est utilisé."
          type:
            - 'outlook!Office.ItemCompose#setSelectedDataAsync~0:complex'
        - id: callback
          description: 'Facultatif. Une fois la méthode exécutée, la fonction transmise au paramètre callback est appelée avec un seul paramètre de type Office. AsyncResult.'
          type:
            - 'outlook!Office.ItemCompose#setSelectedDataAsync~1:complex'
  - uid: 'outlook!Office.ItemCompose#setSelectedDataAsync:member(2)'
    summary: "Insère les données dans le corps ou l’objet d’un message de manière asynchrone.\n\nLa méthode setSelectedDataAsync insère la chaîne spécifiée à l’emplacement du curseur dans l’objet ou le corps de l’élément, ou si du texte est sélectionné dans l’éditeur, il remplace le texte sélectionné. Si le curseur ne se trouve pas dans le champ Body ou Subject, une erreur est renvoyée. Après l’insertion, le curseur est placé à la fin du contenu inséré.\n\n\\[[Ensemble d’API\_: boîte aux lettres 1,2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\\]"
    remarks: "**<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadWriteItem\n\n**<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition\n\n**Erreurs**:\n\n- InvalidAttachmentId\_: l’identificateur de pièce jointe n’existe pas."
    name: 'setSelectedDataAsync(data, callback)'
    fullName: 'setSelectedDataAsync(data, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setSelectedDataAsync(data: string, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: data
          description: "Données à insérer. Les données ne doivent pas dépasser 1\_000\_000\_caractères. Si elles contiennent plus de 1\_000\_000\_caractères, une exception ArgumentOutOfRange est générée."
          type:
            - string
        - id: callback
          description: 'Facultatif. Une fois la méthode exécutée, la fonction transmise au paramètre callback est appelée avec un seul paramètre de type Office. AsyncResult.'
          type:
            - 'outlook!Office.ItemCompose#setSelectedDataAsync~2:complex'
  - uid: 'outlook!Office.ItemCompose#subject:member'
    summary: "Obtient ou définit la description qui apparaît dans le champ d’objet d’un élément.\n\nLa propriété Subject obtient ou définit l’intégralité de l’objet de l’élément, tel qu’il est envoyé par le serveur de messagerie.\n\nLa propriété Subject renvoie un objet subject qui fournit des méthodes permettant d’obtenir et de définir l’objet.\n\n\\[[Ensemble d’API\_: boîte aux lettres 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\\]"
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadItem

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition
    name: subject
    fullName: subject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'subject: Subject;'
      return:
        type:
          - 'outlook!Office.Subject:interface'
references:
  - uid: 'outlook!Office.Item:interface'
    name: Item
  - uid: 'outlook!Office.ItemCompose#addFileAttachmentAsync~0:complex'
    name: 'Office.AsyncContextOptions & { isInline: boolean }'
    fullName: 'Office.AsyncContextOptions & { isInline: boolean }'
    spec.typeScript:
      - uid: 'outlook!Office.AsyncContextOptions:interface'
        name: Office.AsyncContextOptions
        fullName: Office.AsyncContextOptions
      - name: ' & { isInline: boolean }'
        fullName: ' & { isInline: boolean }'
  - uid: 'outlook!Office.ItemCompose#addFileAttachmentAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<string>) => void'
    fullName: '(asyncResult: Office.AsyncResult<string>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <string>) => void
        fullName: <string>) => void
  - uid: 'outlook!Office.ItemCompose#addFileAttachmentAsync~2:complex'
    name: '(asyncResult: Office.AsyncResult<string>) => void'
    fullName: '(asyncResult: Office.AsyncResult<string>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <string>) => void
        fullName: <string>) => void
  - uid: 'outlook!Office.AsyncContextOptions:interface'
    name: Office.AsyncContextOptions
  - uid: 'outlook!Office.ItemCompose#addItemAttachmentAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<string>) => void'
    fullName: '(asyncResult: Office.AsyncResult<string>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <string>) => void
        fullName: <string>) => void
  - uid: 'outlook!Office.ItemCompose#addItemAttachmentAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<string>) => void'
    fullName: '(asyncResult: Office.AsyncResult<string>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <string>) => void
        fullName: <string>) => void
  - uid: 'outlook!Office.ItemCompose#getSelectedDataAsync~0:complex'
    name: Office.CoercionType | string
    fullName: Office.CoercionType | string
    spec.typeScript:
      - uid: 'outlook!Office.CoercionType:enum'
        name: Office.CoercionType
        fullName: Office.CoercionType
      - name: ' | string'
        fullName: ' | string'
  - uid: 'outlook!Office.ItemCompose#getSelectedDataAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<any>) => void'
    fullName: '(asyncResult: Office.AsyncResult<any>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <any>) => void
        fullName: <any>) => void
  - uid: 'outlook!Office.ItemCompose#getSelectedDataAsync~2:complex'
    name: Office.CoercionType | string
    fullName: Office.CoercionType | string
    spec.typeScript:
      - uid: 'outlook!Office.CoercionType:enum'
        name: Office.CoercionType
        fullName: Office.CoercionType
      - name: ' | string'
        fullName: ' | string'
  - uid: 'outlook!Office.ItemCompose#getSelectedDataAsync~3:complex'
    name: '(asyncResult: Office.AsyncResult<any>) => void'
    fullName: '(asyncResult: Office.AsyncResult<any>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <any>) => void
        fullName: <any>) => void
  - uid: 'outlook!Office.ItemCompose#removeAttachmentAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.ItemCompose#removeAttachmentAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.ItemCompose#saveAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<string>) => void'
    fullName: '(asyncResult: Office.AsyncResult<string>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <string>) => void
        fullName: <string>) => void
  - uid: 'outlook!Office.ItemCompose#saveAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<string>) => void'
    fullName: '(asyncResult: Office.AsyncResult<string>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <string>) => void
        fullName: <string>) => void
  - uid: 'outlook!Office.ItemCompose#setSelectedDataAsync~0:complex'
    name: Office.AsyncContextOptions & CoercionTypeOptions
    fullName: Office.AsyncContextOptions & Office.CoercionTypeOptions
    spec.typeScript:
      - uid: 'outlook!Office.AsyncContextOptions:interface'
        name: Office.AsyncContextOptions
        fullName: Office.AsyncContextOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'outlook!Office.CoercionTypeOptions:interface'
        name: CoercionTypeOptions
        fullName: Office.CoercionTypeOptions
  - uid: 'outlook!Office.ItemCompose#setSelectedDataAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.ItemCompose#setSelectedDataAsync~2:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.Subject:interface'
    name: Subject