### YamlMime:TSType
name: Office.RoamingSettings
uid: outlook!Office.RoamingSettings:interface
package: outlook!
fullName: Office.RoamingSettings
summary: >-
  Les paramètres créés à l’aide des méthodes de l’objet `RoamingSettings` sont enregistrés par complément et par utilisateur. Autrement dit, ils sont disponibles uniquement pour le complément qui les a créés et uniquement à partir de la boîte aux lettres de l’utilisateur dans laquelle ils sont enregistrés.


  Tandis que l’API de complément Outlook limite l’accès à ces paramètres au complément qui les a créés, ces paramètres ne doivent pas être considérés comme du stockage sécurisé. Ils sont accessibles via les services web Exchange ou l’interface MAPI étendue. Nous vous recommandons de ne pas les utiliser pour stocker des informations sensibles telles que des informations d’identification ou des jetons de sécurité.


  Le nom d’un paramètre est une donnée String, alors que sa valeur peut être une donnée String, Number, Boolean, Null, Object ou Array.


  L’objet `RoamingSettings` est accessible via la propriété `roamingSettings` dans l’espace de noms `Office.context`.


  **Important**:


  - L' `RoamingSettings` objet est initialisé à partir du stockage persistant uniquement lorsque le complément est chargé pour la première fois. Pour les volets Office, cela signifie qu’il n’est initialisé que lors de la première ouverture du volet des tâches. Si le volet Office navigue vers une autre page ou recharge la page active, l’objet en mémoire est réinitialisé à ses valeurs initiales, même si votre complément a conservé des modifications. Les modifications persistantes ne sont pas disponibles tant que le volet Office (ou l’élément dans le cas des compléments sans interface utilisateur) n’est pas fermé et rouvert.


  - Lorsqu’ils sont définis et enregistrés via Outlook sur Windows ou Mac, ces paramètres sont reflétés dans Outlook sur le Web uniquement après l’actualisation d’un navigateur.
remarks: >-
  **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)**:`Restricted`


  **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)**: composition ou lecture
isPreview: false
isDeprecated: false
type: interface
methods:
- name: get(name)
  uid: outlook!Office.RoamingSettings#get:member(1)
  package: outlook!
  fullName: get(name)
  summary: Récupère le paramètre spécifié.
  remarks: >-
    **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)**:`Restricted`


    **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)**: composition ou lecture


    #### <a name="examples"></a>範例


    ```javascript

    // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/outlook/10-roaming-settings/roaming-settings.yaml

    var settingName = $("#settingName").val();

    var settingValue = Office.context.roamingSettings.get(settingName);

    $("#settingValue").val(settingValue);

    console.log(`The value of setting "${settingName}" is "${settingValue}".`);

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'get(name: string): any;'
    parameters:
    - id: name
      description: Nom respectant l’emploi des majuscules et minuscules pour le paramètre à récupérer.
      type: string
    return:
      type: any
      description: 'Type : numéro de chaîne \| \| \| tableau d’objets booléen \|'
- name: remove(name)
  uid: outlook!Office.RoamingSettings#remove:member(1)
  package: outlook!
  fullName: remove(name)
  summary: Supprime le paramètre spécifié
  remarks: >-
    **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)**:`Restricted`


    **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)**: composition ou lecture
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'remove(name: string): void;'
    parameters:
    - id: name
      description: Nom respectant l’emploi des majuscules et minuscules pour le paramètre à supprimer.
      type: string
    return:
      type: void
      description: ''
- name: saveAsync(callback)
  uid: outlook!Office.RoamingSettings#saveAsync:member(1)
  package: outlook!
  fullName: saveAsync(callback)
  summary: >-
    Enregistre les paramètres.


    Tout paramètre précédemment enregistré par un complément est chargé lors de son initialisation ; ainsi, pendant la durée de vie de la session, vous pouvez simplement utiliser les méthodes Set et Get pour utiliser la copie en mémoire du conteneur de propriétés des paramètres. Lorsque vous souhaitez conserver les paramètres afin qu’ils soient disponibles la prochaine fois que le complément est utilisé, utilisez la méthode saveAsync.
  remarks: >-
    **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)**:`Restricted`


    **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)**: composition ou lecture


    #### <a name="examples"></a>範例


    ```javascript

    // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/outlook/10-roaming-settings/roaming-settings.yaml

    // Save settings in the mailbox to make it available in future sessions.

    Office.context.roamingSettings.saveAsync(function(result) {
      if (result.status !== Office.AsyncResultStatus.Succeeded) {
        console.error(`Action failed with message ${result.error.message}`);
      } else {
        console.log(`Settings saved with status: ${result.status}`);
      }
    });

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'saveAsync(callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    parameters:
    - id: callback
      description: Facultatif. Une fois la méthode exécutée, la fonction transmise au `callback` paramètre est appelée avec un seul paramètre de type `Office.AsyncResult`<!-- -->.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: set(name, value)
  uid: outlook!Office.RoamingSettings#set:member(1)
  package: outlook!
  fullName: set(name, value)
  summary: >-
    Définit ou crée le paramètre spécifié.


    La `set` méthode crée un nouveau paramètre pour le nom spécifié s’il n’existe pas déjà, ou définit un paramètre existant pour le nom spécifié. La valeur est stockée dans le document sous forme de représentation JSON sérialisée de son type de données.


    Un maximum de 32KO est disponible pour les paramètres de chaque complément.


    Les modifications apportées aux paramètres à l’aide de la fonction Set ne sont pas enregistrées sur le serveur tant que la `saveAsync` fonction n’est pas appelée.
  remarks: >-
    **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)**:`Restricted`


    **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)**: composition ou lecture


    #### <a name="examples"></a>範例


    ```javascript

    // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/outlook/10-roaming-settings/roaming-settings.yaml

    var settingName = $("#settingName").val();

    var settingValue = $("#settingValue").val();

    Office.context.roamingSettings.set(settingName, settingValue);

    console.log(`Setting "${settingName}" set to value "${settingValue}".`);

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(name: string, value: any): void;'
    parameters:
    - id: name
      description: Nom qui respecte la casse du paramètre à définir ou créer.
      type: string
    - id: value
      description: Spécifie la valeur à stocker.
      type: any
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: f6136a4f9143de97fa15166ec887e0ab878564c0
  ms.sourcegitcommit: a6ecbc9abca2ab5c82af4c869e3e2d72c999a4c1
  ms.translationtype: MT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 12/02/2020
  ms.locfileid: "49545849"
