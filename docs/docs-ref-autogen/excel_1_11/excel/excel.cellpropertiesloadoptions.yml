### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.CellPropertiesLoadOptions:interface'
    summary: "Représente les propriétés de cellule à charger, lorsqu’elle est utilisée dans le cadre d’une méthode «\_Range. getCellProperties\_».\n\n\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: Excel.CellPropertiesLoadOptions
    fullName: Excel.CellPropertiesLoadOptions
    langs:
      - typeScript
    type: interface
    package: excel!
    children:
      - 'excel!Excel.CellPropertiesLoadOptions#address:member'
      - 'excel!Excel.CellPropertiesLoadOptions#addressLocal:member'
      - 'excel!Excel.CellPropertiesLoadOptions#format:member'
      - 'excel!Excel.CellPropertiesLoadOptions#hidden:member'
      - 'excel!Excel.CellPropertiesLoadOptions#hyperlink:member'
      - 'excel!Excel.CellPropertiesLoadOptions#style:member'
  - uid: 'excel!Excel.CellPropertiesLoadOptions#address:member'
    summary: "Spécifie s’il faut charger `address` sur la propriété.\n\n\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: address
    fullName: address
    langs:
      - typeScript
    type: property
    syntax:
      content: 'address?: boolean;'
      return:
        type:
          - boolean
        description: |-


          #### <a name="examples"></a>Exemples

          ```typescript
          // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/42-range/cell-properties.yaml
          await Excel.run(async (context) => {
              const cell = context.workbook.getActiveCell();

              // Define the cell properties to get by setting the matching LoadOptions to true.
              const propertiesToGet = cell.getCellProperties({
                  address: true,
                  format: {
                      fill: {
                          color: true
                      },
                      font: {
                          color: true
                      }
                  },
                  style: true
              });

              // Sync to get the data from the workbook.
              await context.sync();
              const cellProperties = propertiesToGet.value[0][0];
              console.log(
                  `Address: ${cellProperties.address}\nStyle: ${cellProperties.style}\nFill Color: ${cellProperties.format.fill.color}\nFont Color: ${cellProperties.format.font.color}`);
          });
          ```
  - uid: 'excel!Excel.CellPropertiesLoadOptions#addressLocal:member'
    summary: "Spécifie s’il faut charger `addressLocal` sur la propriété.\n\n\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: addressLocal
    fullName: addressLocal
    langs:
      - typeScript
    type: property
    syntax:
      content: 'addressLocal?: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.CellPropertiesLoadOptions#format:member'
    summary: "Spécifie s’il faut charger `format` sur la propriété.\n\n\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'format?: Excel.CellPropertiesFormatLoadOptions;'
      return:
        type:
          - 'excel!Excel.CellPropertiesFormatLoadOptions:interface'
  - uid: 'excel!Excel.CellPropertiesLoadOptions#hidden:member'
    summary: "Spécifie s’il faut charger `hidden` sur la propriété.\n\n\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: hidden
    fullName: hidden
    langs:
      - typeScript
    type: property
    syntax:
      content: 'hidden?: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.CellPropertiesLoadOptions#hyperlink:member'
    summary: "Spécifie s’il faut charger `hyperlink` sur la propriété.\n\n\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: hyperlink
    fullName: hyperlink
    langs:
      - typeScript
    type: property
    syntax:
      content: 'hyperlink?: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.CellPropertiesLoadOptions#style:member'
    summary: "Spécifie s’il faut charger `style` sur la propriété.\n\n\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style?: boolean;'
      return:
        type:
          - boolean
references:
  - uid: 'excel!Excel.CellPropertiesFormatLoadOptions:interface'
    name: Excel.CellPropertiesFormatLoadOptions