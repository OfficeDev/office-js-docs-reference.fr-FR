### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.SettingCollection:class'
    summary: "<span data-ttu-id=\"84788-101\">Représente une collection d’objets de paramètre de paire clé-valeur qui font partie du classeur.</span><span class=\"sxs-lookup\"><span data-stu-id=\"84788-101\">Represents a collection of key-value pair setting objects that are part of the workbook.</span></span> <span data-ttu-id=\"84788-102\">L’étendue est limitée à un fichier et une combinaison de compléments (de volet de tâches ou de contenu).</span><span class=\"sxs-lookup\"><span data-stu-id=\"84788-102\">The scope is limited to per file and add-in (task-pane or content) combination.</span></span>\n\n<span data-ttu-id=\"84788-103\">\\[[Ensemble d’API\_: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"84788-103\">\\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: Excel.SettingCollection
    fullName: Excel.SettingCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.SettingCollection#add:member(1)'
      - 'excel!Excel.SettingCollection#context:member'
      - 'excel!Excel.SettingCollection#getCount:member(1)'
      - 'excel!Excel.SettingCollection#getItem:member(1)'
      - 'excel!Excel.SettingCollection#getItemOrNullObject:member(1)'
      - 'excel!Excel.SettingCollection#items:member'
      - 'excel!Excel.SettingCollection#load:member(1)'
      - 'excel!Excel.SettingCollection#load:member(2)'
      - 'excel!Excel.SettingCollection#load:member(3)'
      - 'excel!Excel.SettingCollection#onSettingsChanged:member'
      - 'excel!Excel.SettingCollection#toJSON:member(1)'
  - uid: 'excel!Excel.SettingCollection#add:member(1)'
    summary: "<span data-ttu-id=\"84788-104\">Définit ou ajoute le paramètre spécifié dans le classeur.</span><span class=\"sxs-lookup\"><span data-stu-id=\"84788-104\">Sets or adds the specified setting to the workbook.</span></span>\n\n<span data-ttu-id=\"84788-105\">\\[[Ensemble d’API\_: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"84788-105\">\\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: 'add(key, value)'
    fullName: 'add(key, value)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(key: string, value: string | number | boolean | Date | Array<any> | any): Excel.Setting;'
      return:
        type:
          - 'excel!Excel.Setting:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="84788-106">Exemples</span><span class="sxs-lookup"><span data-stu-id="84788-106">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const settings = context.workbook.settings; 
              settings.onSettingsChanged.add(onChangedSetting);

              await context.sync();
              console.log("Settings changed handler registered.");
          });
          ```
      parameters:
        - id: key
          description: <span data-ttu-id="84788-107">Clé du nouveau paramètre.</span><span class="sxs-lookup"><span data-stu-id="84788-107">The Key of the new setting.</span></span>
          type:
            - string
        - id: value
          description: <span data-ttu-id="84788-108">Valeur du nouveau paramètre.</span><span class="sxs-lookup"><span data-stu-id="84788-108">The Value for the new setting.</span></span>
          type:
            - 'excel!Excel.SettingCollection#add~0:complex'
  - uid: 'excel!Excel.SettingCollection#context:member'
    summary: <span data-ttu-id="84788-109">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="84788-109">The request context associated with the object.</span></span> <span data-ttu-id="84788-110">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="84788-110">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.SettingCollection#getCount:member(1)'
    summary: "<span data-ttu-id=\"84788-111\">Obtient le nombre de paramètres dans la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"84788-111\">Gets the number of Settings in the collection.</span></span>\n\n<span data-ttu-id=\"84788-112\">\\[[Ensemble d’API\_: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"84788-112\">\\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.SettingCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.SettingCollection#getItem:member(1)'
    summary: "<span data-ttu-id=\"84788-113\">Obtient une Entrée de paramètre via la clé.</span><span class=\"sxs-lookup\"><span data-stu-id=\"84788-113\">Gets a Setting entry via the key.</span></span>\n\n<span data-ttu-id=\"84788-114\">\\[[Ensemble d’API\_: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"84788-114\">\\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Excel.Setting;'
      return:
        type:
          - 'excel!Excel.Setting:class'
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="84788-115">Clé du paramètre.</span><span class="sxs-lookup"><span data-stu-id="84788-115">Key of the setting.</span></span>
          type:
            - string
  - uid: 'excel!Excel.SettingCollection#getItemOrNullObject:member(1)'
    summary: "<span data-ttu-id=\"84788-116\">Obtient une entrée de paramètre via la clé.</span><span class=\"sxs-lookup\"><span data-stu-id=\"84788-116\">Gets a Setting entry via the key.</span></span> <span data-ttu-id=\"84788-117\">Si le paramètre n’existe pas, renvoie un objet null.</span><span class=\"sxs-lookup\"><span data-stu-id=\"84788-117\">If the Setting does not exist, will return a null object.</span></span>\n\n<span data-ttu-id=\"84788-118\">\\[[Ensemble d’API\_: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"84788-118\">\\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: getItemOrNullObject(key)
    fullName: getItemOrNullObject(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(key: string): Excel.Setting;'
      return:
        type:
          - 'excel!Excel.Setting:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="84788-119">Exemples</span><span class="sxs-lookup"><span data-stu-id="84788-119">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const settings = context.workbook.settings;
              let needsReview = settings.getItem("NeedsReview");
              needsReview.delete();
              needsReview = settings.getItemOrNullObject("NeedsReview");

              await context.sync();

              if (needsReview.isNullObject) {
                  console.log("The setting has been deleted");
              } else {
                  console.log("The setting was not deleted");
              }

              await context.sync();
          });
          ```
      parameters:
        - id: key
          description: <span data-ttu-id="84788-120">Clé du paramètre.</span><span class="sxs-lookup"><span data-stu-id="84788-120">The key of the setting.</span></span>
          type:
            - string
  - uid: 'excel!Excel.SettingCollection#items:member'
    summary: <span data-ttu-id="84788-121">Obtient l’élément enfant chargé dans cette collection de sites.</span><span class="sxs-lookup"><span data-stu-id="84788-121">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Setting[];'
      return:
        type:
          - 'excel!Excel.SettingCollection#items~0:complex'
  - uid: 'excel!Excel.SettingCollection#load:member(1)'
    summary: "<span data-ttu-id=\"84788-122\">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"84788-122\">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id=\"84788-123\">Vous devez appeler «\_context.sync()\_» avant de lire les propriétés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"84788-123\">You must call \"context.sync()\" before reading the properties.</span></span>"
    remarks: "<span data-ttu-id=\"84788-124\">En plus de cette signature, cette méthode possède les signatures suivantes\_:</span><span class=\"sxs-lookup\"><span data-stu-id=\"84788-124\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"84788-125\">`load(option?: string | string[]): Excel.SettingCollection`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class=\"sxs-lookup\"><span data-stu-id=\"84788-125\">`load(option?: string | string[]): Excel.SettingCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>\n\n<span data-ttu-id=\"84788-126\">`load(option?: { select?: string; expand?: string; }): Excel.SettingCollection`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class=\"sxs-lookup\"><span data-stu-id=\"84788-126\">`load(option?: { select?: string; expand?: string; }): Excel.SettingCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"84788-127\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SettingCollection`-Uniquement disponible sur les types de collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"84788-127\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SettingCollection` - Only available on collection types.</span></span> <span data-ttu-id=\"84788-128\">Elle est similaire à la signature précédente.</span><span class=\"sxs-lookup\"><span data-stu-id=\"84788-128\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"84788-129\">Option. Top indique le nombre maximal d’éléments de collection qui peuvent être inclus dans le résultat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"84788-129\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"84788-130\">Option. Skip indique le nombre d’éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"84788-130\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"84788-131\">Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d’éléments.</span><span class=\"sxs-lookup\"><span data-stu-id=\"84788-131\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>"
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.SettingCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.SettingCollection;'
      return:
        type:
          - 'excel!Excel.SettingCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.SettingCollection#load~0:complex'
  - uid: 'excel!Excel.SettingCollection#load:member(2)'
    summary: <span data-ttu-id="84788-132">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="84788-132">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="84788-133">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="84788-133">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.SettingCollection;'
      return:
        type:
          - 'excel!Excel.SettingCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="84788-134">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="84788-134">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.SettingCollection#load:member(3)'
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.SettingCollection;'
      return:
        type:
          - 'excel!Excel.SettingCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.SettingCollection#onSettingsChanged:member'
    summary: "<span data-ttu-id=\"84788-135\">Se produit lorsque les paramètres dans le document sont modifiés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"84788-135\">Occurs when the Settings in the document are changed.</span></span>\n\n<span data-ttu-id=\"84788-136\">\\[[Ensemble d’API\_: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"84788-136\">\\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: onSettingsChanged
    fullName: onSettingsChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onSettingsChanged: OfficeExtension.EventHandlers<Excel.SettingsChangedEventArgs>;'
      return:
        type:
          - 'excel!Excel.SettingCollection#onSettingsChanged~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="84788-137">Exemples</span><span class="sxs-lookup"><span data-stu-id="84788-137">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const settings = context.workbook.settings; 
              settings.onSettingsChanged.add(onChangedSetting);

              await context.sync();
              console.log("Settings changed handler registered.");
          });
          ```
  - uid: 'excel!Excel.SettingCollection#toJSON:member(1)'
    summary: "<span data-ttu-id=\"84788-138\">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class=\"sxs-lookup\"><span data-stu-id=\"84788-138\">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id=\"84788-139\">.</span><span class=\"sxs-lookup\"><span data-stu-id=\"84788-139\"></span></span> <span data-ttu-id=\"84788-140\">(`JSON.stringify`</span><span class=\"sxs-lookup\"><span data-stu-id=\"84788-140\"></span></span><!-- --><span data-ttu-id=\"84788-141\">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que `Excel.SettingCollection` l’objet d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.SettingCollectionData`</span><span class=\"sxs-lookup\"><span data-stu-id=\"84788-141\">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.SettingCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.SettingCollectionData`</span></span><!-- --><span data-ttu-id=\"84788-142\">) qui contient un tableau «\_éléments\_» avec des copies superficielles de toutes les propriétés chargées des éléments de la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"84788-142\">) that contains an \"items\" array with shallow copies of any loaded properties from the collection's items.</span></span>"
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.SettingCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.SettingCollectionData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.Setting:class'
    name: Excel.Setting
  - uid: 'excel!Excel.SettingCollection#add~0:complex'
    name: string | number | boolean | Date | Array<any> | any
    fullName: string | number | boolean | Date | Array<any> | any
    spec.typeScript:
      - name: 'string | number | boolean | '
        fullName: 'string | number | boolean | '
      - uid: '!Date:interface'
        name: Date
        fullName: Date
      - name: ' | '
        fullName: ' | '
      - uid: '!Array:interface'
        name: Array
        fullName: Array
      - name: <any> | any
        fullName: <any> | any
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.SettingCollection#getCount~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel!Excel.SettingCollection#items~0:complex'
    name: 'Excel.Setting[]'
    fullName: 'Excel.Setting[]'
    spec.typeScript:
      - uid: 'excel!Excel.Setting:class'
        name: Excel.Setting
        fullName: Excel.Setting
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.SettingCollection:class'
    name: Excel.SettingCollection
  - uid: 'excel!Excel.SettingCollection#load~0:complex'
    name: Excel.Interfaces.SettingCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.SettingCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.SettingCollectionLoadOptions:interface'
        name: Excel.Interfaces.SettingCollectionLoadOptions
        fullName: Excel.Interfaces.SettingCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'excel!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.SettingCollection#onSettingsChanged~0:complex'
    name: OfficeExtension.EventHandlers<Excel.SettingsChangedEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.SettingsChangedEventArgs>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.SettingsChangedEventArgs:interface'
        name: Excel.SettingsChangedEventArgs
        fullName: Excel.SettingsChangedEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.Interfaces.SettingCollectionData:interface'
    name: Excel.Interfaces.SettingCollectionData