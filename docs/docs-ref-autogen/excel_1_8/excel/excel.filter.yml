### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.Filter:class'
    summary: "<span data-ttu-id=\"98a9d-101\">Gère le filtrage de la colonne d’un tableau.</span><span class=\"sxs-lookup\"><span data-stu-id=\"98a9d-101\">Manages the filtering of a table's column.</span></span>\n\n<span data-ttu-id=\"98a9d-102\">\\[[Ensemble d’API\_: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"98a9d-102\">\\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: Excel.Filter
    fullName: Excel.Filter
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.Filter#apply:member(1)'
      - 'excel!Excel.Filter#applyBottomItemsFilter:member(1)'
      - 'excel!Excel.Filter#applyBottomPercentFilter:member(1)'
      - 'excel!Excel.Filter#applyCellColorFilter:member(1)'
      - 'excel!Excel.Filter#applyCustomFilter:member(1)'
      - 'excel!Excel.Filter#applyCustomFilter:member(2)'
      - 'excel!Excel.Filter#applyDynamicFilter:member(1)'
      - 'excel!Excel.Filter#applyDynamicFilter:member(2)'
      - 'excel!Excel.Filter#applyFontColorFilter:member(1)'
      - 'excel!Excel.Filter#applyIconFilter:member(1)'
      - 'excel!Excel.Filter#applyTopItemsFilter:member(1)'
      - 'excel!Excel.Filter#applyTopPercentFilter:member(1)'
      - 'excel!Excel.Filter#applyValuesFilter:member(1)'
      - 'excel!Excel.Filter#clear:member(1)'
      - 'excel!Excel.Filter#context:member'
      - 'excel!Excel.Filter#criteria:member'
      - 'excel!Excel.Filter#load:member(1)'
      - 'excel!Excel.Filter#load:member(2)'
      - 'excel!Excel.Filter#load:member(3)'
      - 'excel!Excel.Filter#toJSON:member(1)'
  - uid: 'excel!Excel.Filter#apply:member(1)'
    summary: "<span data-ttu-id=\"98a9d-103\">Appliquer les critères de filtre donnés à la colonne indiquée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"98a9d-103\">Apply the given filter criteria on the given column.</span></span>\n\n<span data-ttu-id=\"98a9d-104\">\\[[Ensemble d’API\_: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"98a9d-104\">\\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: apply(criteria)
    fullName: apply(criteria)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'apply(criteria: Excel.FilterCriteria): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: criteria
          description: <span data-ttu-id="98a9d-105">Critères à appliquer.</span><span class="sxs-lookup"><span data-stu-id="98a9d-105">The criteria to apply.</span></span>
          type:
            - 'excel!Excel.FilterCriteria:interface'
  - uid: 'excel!Excel.Filter#applyBottomItemsFilter:member(1)'
    summary: "<span data-ttu-id=\"98a9d-106\">Appliquer un filtre «\_Élément inférieur\_» à la colonne pour le nombre d’éléments donné.</span><span class=\"sxs-lookup\"><span data-stu-id=\"98a9d-106\">Apply a \"Bottom Item\" filter to the column for the given number of elements.</span></span>\n\n<span data-ttu-id=\"98a9d-107\">\\[[Ensemble d’API\_: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"98a9d-107\">\\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: applyBottomItemsFilter(count)
    fullName: applyBottomItemsFilter(count)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyBottomItemsFilter(count: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: count
          description: <span data-ttu-id="98a9d-108">Nombre d’éléments à partir du bas à afficher.</span><span class="sxs-lookup"><span data-stu-id="98a9d-108">The number of elements from the bottom to show.</span></span>
          type:
            - number
  - uid: 'excel!Excel.Filter#applyBottomPercentFilter:member(1)'
    summary: "<span data-ttu-id=\"98a9d-109\">Appliquer un filtre «\_Pourcentage inférieur\_» à la colonne pour le pourcentage d’éléments donné.</span><span class=\"sxs-lookup\"><span data-stu-id=\"98a9d-109\">Apply a \"Bottom Percent\" filter to the column for the given percentage of elements.</span></span>\n\n<span data-ttu-id=\"98a9d-110\">\\[[Ensemble d’API\_: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"98a9d-110\">\\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: applyBottomPercentFilter(percent)
    fullName: applyBottomPercentFilter(percent)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyBottomPercentFilter(percent: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: percent
          description: <span data-ttu-id="98a9d-111">Pourcentage d’éléments à partir du bas à afficher.</span><span class="sxs-lookup"><span data-stu-id="98a9d-111">The percentage of elements from the bottom to show.</span></span>
          type:
            - number
  - uid: 'excel!Excel.Filter#applyCellColorFilter:member(1)'
    summary: "<span data-ttu-id=\"98a9d-112\">Appliquer un filtre «\_Couleur de cellule\_» à la colonne pour la couleur donnée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"98a9d-112\">Apply a \"Cell Color\" filter to the column for the given color.</span></span>\n\n<span data-ttu-id=\"98a9d-113\">\\[[Ensemble d’API\_: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"98a9d-113\">\\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: applyCellColorFilter(color)
    fullName: applyCellColorFilter(color)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyCellColorFilter(color: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: color
          description: <span data-ttu-id="98a9d-114">Couleur d’arrière-plan des cellules à afficher.</span><span class="sxs-lookup"><span data-stu-id="98a9d-114">The background color of the cells to show.</span></span>
          type:
            - string
  - uid: 'excel!Excel.Filter#applyCustomFilter:member(1)'
    summary: "<span data-ttu-id=\"98a9d-115\">Appliquer un filtre «\_icône\_» à la colonne pour les chaînes de critères données.</span><span class=\"sxs-lookup\"><span data-stu-id=\"98a9d-115\">Apply an \"Icon\" filter to the column for the given criteria strings.</span></span>\n\n<span data-ttu-id=\"98a9d-116\">\\[[Ensemble d’API\_: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"98a9d-116\">\\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: 'applyCustomFilter(criteria1, criteria2, oper)'
    fullName: 'applyCustomFilter(criteria1, criteria2, oper)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyCustomFilter(criteria1: string, criteria2?: string, oper?: Excel.FilterOperator): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: criteria1
          description: <span data-ttu-id="98a9d-117">Première chaîne de critères.</span><span class="sxs-lookup"><span data-stu-id="98a9d-117">The first criteria string.</span></span>
          type:
            - string
        - id: criteria2
          description: <span data-ttu-id="98a9d-118">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="98a9d-118">Optional.</span></span> <span data-ttu-id="98a9d-119">Deuxième chaîne de critères.</span><span class="sxs-lookup"><span data-stu-id="98a9d-119">The second criteria string.</span></span>
          type:
            - string
        - id: oper
          description: <span data-ttu-id="98a9d-120">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="98a9d-120">Optional.</span></span> <span data-ttu-id="98a9d-121">Opérateur qui décrit comment les deux critères sont joints.</span><span class="sxs-lookup"><span data-stu-id="98a9d-121">The operator that describes how the two criteria are joined.</span></span>
          type:
            - 'excel!Excel.FilterOperator:enum'
  - uid: 'excel!Excel.Filter#applyCustomFilter:member(2)'
    summary: "<span data-ttu-id=\"98a9d-122\">Appliquer un filtre «\_icône\_» à la colonne pour les chaînes de critères données.</span><span class=\"sxs-lookup\"><span data-stu-id=\"98a9d-122\">Apply an \"Icon\" filter to the column for the given criteria strings.</span></span>\n\n<span data-ttu-id=\"98a9d-123\">\\[[Ensemble d’API\_: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"98a9d-123\">\\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: 'applyCustomFilter(criteria1, criteria2, operString)'
    fullName: 'applyCustomFilter(criteria1, criteria2, operString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyCustomFilter(criteria1: string, criteria2?: string, operString?: "And" | "Or"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: criteria1
          description: <span data-ttu-id="98a9d-124">Première chaîne de critères.</span><span class="sxs-lookup"><span data-stu-id="98a9d-124">The first criteria string.</span></span>
          type:
            - string
        - id: criteria2
          description: <span data-ttu-id="98a9d-125">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="98a9d-125">Optional.</span></span> <span data-ttu-id="98a9d-126">Deuxième chaîne de critères.</span><span class="sxs-lookup"><span data-stu-id="98a9d-126">The second criteria string.</span></span>
          type:
            - string
        - id: operString
          description: <span data-ttu-id="98a9d-127">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="98a9d-127">Optional.</span></span> <span data-ttu-id="98a9d-128">Opérateur qui décrit comment les deux critères sont joints.</span><span class="sxs-lookup"><span data-stu-id="98a9d-128">The operator that describes how the two criteria are joined.</span></span>
          type:
            - '"And" | "Or"'
  - uid: 'excel!Excel.Filter#applyDynamicFilter:member(1)'
    summary: "<span data-ttu-id=\"98a9d-129\">Appliquer un filtre «\_Dynamique\_» à la colonne.</span><span class=\"sxs-lookup\"><span data-stu-id=\"98a9d-129\">Apply a \"Dynamic\" filter to the column.</span></span>\n\n<span data-ttu-id=\"98a9d-130\">\\[[Ensemble d’API\_: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"98a9d-130\">\\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: applyDynamicFilter(criteria)
    fullName: applyDynamicFilter(criteria)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyDynamicFilter(criteria: Excel.DynamicFilterCriteria): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: criteria
          description: <span data-ttu-id="98a9d-131">Critères dynamiques à appliquer.</span><span class="sxs-lookup"><span data-stu-id="98a9d-131">The dynamic criteria to apply.</span></span>
          type:
            - 'excel!Excel.DynamicFilterCriteria:enum'
  - uid: 'excel!Excel.Filter#applyDynamicFilter:member(2)'
    summary: "<span data-ttu-id=\"98a9d-132\">Appliquer un filtre «\_Dynamique\_» à la colonne.</span><span class=\"sxs-lookup\"><span data-stu-id=\"98a9d-132\">Apply a \"Dynamic\" filter to the column.</span></span>\n\n<span data-ttu-id=\"98a9d-133\">\\[[Ensemble d’API\_: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"98a9d-133\">\\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: applyDynamicFilter(criteriaString)
    fullName: applyDynamicFilter(criteriaString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyDynamicFilter(criteriaString: "Unknown" | "AboveAverage" | "AllDatesInPeriodApril" | "AllDatesInPeriodAugust" | "AllDatesInPeriodDecember" | "AllDatesInPeriodFebruray" | "AllDatesInPeriodJanuary" | "AllDatesInPeriodJuly" | "AllDatesInPeriodJune" | "AllDatesInPeriodMarch" | "AllDatesInPeriodMay" | "AllDatesInPeriodNovember" | "AllDatesInPeriodOctober" | "AllDatesInPeriodQuarter1" | "AllDatesInPeriodQuarter2" | "AllDatesInPeriodQuarter3" | "AllDatesInPeriodQuarter4" | "AllDatesInPeriodSeptember" | "BelowAverage" | "LastMonth" | "LastQuarter" | "LastWeek" | "LastYear" | "NextMonth" | "NextQuarter" | "NextWeek" | "NextYear" | "ThisMonth" | "ThisQuarter" | "ThisWeek" | "ThisYear" | "Today" | "Tomorrow" | "YearToDate" | "Yesterday"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: criteriaString
          description: <span data-ttu-id="98a9d-134">Critères dynamiques à appliquer.</span><span class="sxs-lookup"><span data-stu-id="98a9d-134">The dynamic criteria to apply.</span></span>
          type:
            - '"Unknown" | "AboveAverage" | "AllDatesInPeriodApril" | "AllDatesInPeriodAugust" | "AllDatesInPeriodDecember" | "AllDatesInPeriodFebruray" | "AllDatesInPeriodJanuary" | "AllDatesInPeriodJuly" | "AllDatesInPeriodJune" | "AllDatesInPeriodMarch" | "AllDatesInPeriodMay" | "AllDatesInPeriodNovember" | "AllDatesInPeriodOctober" | "AllDatesInPeriodQuarter1" | "AllDatesInPeriodQuarter2" | "AllDatesInPeriodQuarter3" | "AllDatesInPeriodQuarter4" | "AllDatesInPeriodSeptember" | "BelowAverage" | "LastMonth" | "LastQuarter" | "LastWeek" | "LastYear" | "NextMonth" | "NextQuarter" | "NextWeek" | "NextYear" | "ThisMonth" | "ThisQuarter" | "ThisWeek" | "ThisYear" | "Today" | "Tomorrow" | "YearToDate" | "Yesterday"'
  - uid: 'excel!Excel.Filter#applyFontColorFilter:member(1)'
    summary: "<span data-ttu-id=\"98a9d-135\">Appliquer un filtre «\_Couleur de police\_» à la colonne pour la couleur donnée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"98a9d-135\">Apply a \"Font Color\" filter to the column for the given color.</span></span>\n\n<span data-ttu-id=\"98a9d-136\">\\[[Ensemble d’API\_: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"98a9d-136\">\\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: applyFontColorFilter(color)
    fullName: applyFontColorFilter(color)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyFontColorFilter(color: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: color
          description: <span data-ttu-id="98a9d-137">Couleur de police des cellules à afficher.</span><span class="sxs-lookup"><span data-stu-id="98a9d-137">The font color of the cells to show.</span></span>
          type:
            - string
  - uid: 'excel!Excel.Filter#applyIconFilter:member(1)'
    summary: "<span data-ttu-id=\"98a9d-138\">Appliquer un filtre «\_icône\_» à la colonne pour l’icône donnée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"98a9d-138\">Apply an \"Icon\" filter to the column for the given icon.</span></span>\n\n<span data-ttu-id=\"98a9d-139\">\\[[Ensemble d’API\_: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"98a9d-139\">\\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: applyIconFilter(icon)
    fullName: applyIconFilter(icon)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyIconFilter(icon: Excel.Icon): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: icon
          description: <span data-ttu-id="98a9d-140">Icônes des cellules à afficher.</span><span class="sxs-lookup"><span data-stu-id="98a9d-140">The icons of the cells to show.</span></span>
          type:
            - 'excel!Excel.Icon:interface'
  - uid: 'excel!Excel.Filter#applyTopItemsFilter:member(1)'
    summary: "<span data-ttu-id=\"98a9d-141\">Appliquer un filtre «\_Élément supérieur\_» à la colonne pour le nombre d’éléments donné.</span><span class=\"sxs-lookup\"><span data-stu-id=\"98a9d-141\">Apply a \"Top Item\" filter to the column for the given number of elements.</span></span>\n\n<span data-ttu-id=\"98a9d-142\">\\[[Ensemble d’API\_: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"98a9d-142\">\\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: applyTopItemsFilter(count)
    fullName: applyTopItemsFilter(count)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyTopItemsFilter(count: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: count
          description: <span data-ttu-id="98a9d-143">Nombre d’éléments à partir du haut à afficher.</span><span class="sxs-lookup"><span data-stu-id="98a9d-143">The number of elements from the top to show.</span></span>
          type:
            - number
  - uid: 'excel!Excel.Filter#applyTopPercentFilter:member(1)'
    summary: "<span data-ttu-id=\"98a9d-144\">Appliquer un filtre «\_Pourcentage supérieur\_» à la colonne pour le pourcentage d’éléments donné.</span><span class=\"sxs-lookup\"><span data-stu-id=\"98a9d-144\">Apply a \"Top Percent\" filter to the column for the given percentage of elements.</span></span>\n\n<span data-ttu-id=\"98a9d-145\">\\[[Ensemble d’API\_: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"98a9d-145\">\\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: applyTopPercentFilter(percent)
    fullName: applyTopPercentFilter(percent)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyTopPercentFilter(percent: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: percent
          description: <span data-ttu-id="98a9d-146">Pourcentage d’éléments à partir du haut à afficher.</span><span class="sxs-lookup"><span data-stu-id="98a9d-146">The percentage of elements from the top to show.</span></span>
          type:
            - number
  - uid: 'excel!Excel.Filter#applyValuesFilter:member(1)'
    summary: "<span data-ttu-id=\"98a9d-147\">Appliquer un filtre «\_Valeurs\_» à la colonne pour les valeurs données.</span><span class=\"sxs-lookup\"><span data-stu-id=\"98a9d-147\">Apply a \"Values\" filter to the column for the given values.</span></span>\n\n<span data-ttu-id=\"98a9d-148\">\\[[Ensemble d’API\_: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"98a9d-148\">\\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: applyValuesFilter(values)
    fullName: applyValuesFilter(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyValuesFilter(values: Array<string | FilterDatetime>): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: values
          description: <span data-ttu-id="98a9d-149">Liste des valeurs à afficher.</span><span class="sxs-lookup"><span data-stu-id="98a9d-149">The list of values to show.</span></span> <span data-ttu-id="98a9d-150">Il doit s’agir d’un tableau de chaînes ou d’un tableau d’objets Excel. FilterDateTime.</span><span class="sxs-lookup"><span data-stu-id="98a9d-150">This must be an array of strings or an array of Excel.FilterDateTime objects.</span></span>
          type:
            - 'excel!Excel.Filter#applyValuesFilter~0:complex'
  - uid: 'excel!Excel.Filter#clear:member(1)'
    summary: "<span data-ttu-id=\"98a9d-151\">Effacer le filtre sur la colonne donnée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"98a9d-151\">Clear the filter on the given column.</span></span>\n\n<span data-ttu-id=\"98a9d-152\">\\[[Ensemble d’API\_: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"98a9d-152\">\\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel!Excel.Filter#context:member'
    summary: <span data-ttu-id="98a9d-153">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="98a9d-153">The request context associated with the object.</span></span> <span data-ttu-id="98a9d-154">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="98a9d-154">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.Filter#criteria:member'
    summary: "<span data-ttu-id=\"98a9d-155\">Le filtre actuellement appliqué à la colonne donnée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"98a9d-155\">The currently applied filter on the given column.</span></span> <span data-ttu-id=\"98a9d-156\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"98a9d-156\">Read-only.</span></span>\n\n<span data-ttu-id=\"98a9d-157\">\\[[Ensemble d’API\_: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"98a9d-157\">\\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: criteria
    fullName: criteria
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly criteria: Excel.FilterCriteria;'
      return:
        type:
          - 'excel!Excel.FilterCriteria:interface'
  - uid: 'excel!Excel.Filter#load:member(1)'
    summary: <span data-ttu-id="98a9d-158">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="98a9d-158">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="98a9d-159">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="98a9d-159">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.FilterLoadOptions): Excel.Filter;'
      return:
        type:
          - 'excel!Excel.Filter:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="98a9d-160">Fournit des options pour les propriétés de l’objet à charger.</span><span class="sxs-lookup"><span data-stu-id="98a9d-160">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.Interfaces.FilterLoadOptions:interface'
  - uid: 'excel!Excel.Filter#load:member(2)'
    summary: <span data-ttu-id="98a9d-161">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="98a9d-161">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="98a9d-162">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="98a9d-162">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Filter;'
      return:
        type:
          - 'excel!Excel.Filter:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="98a9d-163">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="98a9d-163">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.Filter#load:member(3)'
    summary: <span data-ttu-id="98a9d-164">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="98a9d-164">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="98a9d-165">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="98a9d-165">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.Filter;
      return:
        type:
          - 'excel!Excel.Filter:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="98a9d-166">`propertyNamesAndPaths.select`est une chaîne délimitée par des virgules qui spécifie les propriétés à `propertyNamesAndPaths.expand` charger et une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="98a9d-166">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.Filter#toJSON:member(1)'
    summary: '<span data-ttu-id="98a9d-167">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="98a9d-167">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="98a9d-168">.</span><span class="sxs-lookup"><span data-stu-id="98a9d-168"></span></span> <span data-ttu-id="98a9d-169">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="98a9d-169"></span></span><!-- --><span data-ttu-id="98a9d-170">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que l’objet Excel. Filter d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.FilterData`</span><span class="sxs-lookup"><span data-stu-id="98a9d-170">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Filter object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.FilterData`</span></span><!-- --><span data-ttu-id="98a9d-171">) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l’objet d’origine.</span><span class="sxs-lookup"><span data-stu-id="98a9d-171">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.FilterData;'
      return:
        type:
          - 'excel!Excel.Interfaces.FilterData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.FilterCriteria:interface'
    name: Excel.FilterCriteria
  - uid: 'excel!Excel.FilterOperator:enum'
    name: Excel.FilterOperator
  - uid: 'excel!Excel.DynamicFilterCriteria:enum'
    name: Excel.DynamicFilterCriteria
  - uid: 'excel!Excel.Icon:interface'
    name: Excel.Icon
  - uid: 'excel!Excel.Filter#applyValuesFilter~0:complex'
    name: Array<string | FilterDatetime>
    fullName: Array<string | Excel.FilterDatetime>
    spec.typeScript:
      - uid: '!Array:interface'
        name: Array
        fullName: Array
      - name: '<string | '
        fullName: '<string | '
      - uid: 'excel!Excel.FilterDatetime:interface'
        name: FilterDatetime
        fullName: Excel.FilterDatetime
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.Filter:class'
    name: Excel.Filter
  - uid: 'excel!Excel.Interfaces.FilterLoadOptions:interface'
    name: Excel.Interfaces.FilterLoadOptions
  - uid: 'excel!Excel.Interfaces.FilterData:interface'
    name: Excel.Interfaces.FilterData