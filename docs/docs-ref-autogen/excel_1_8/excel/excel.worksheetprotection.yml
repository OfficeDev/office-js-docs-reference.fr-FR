### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.WorksheetProtection:class'
    summary: "<span data-ttu-id=\"e209a-101\">Représente la protection d’un objet de la feuille.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e209a-101\">Represents the protection of a sheet object.</span></span>\n\n<span data-ttu-id=\"e209a-102\">\\[[Ensemble d’API\_: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"e209a-102\">\\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: Excel.WorksheetProtection
    fullName: Excel.WorksheetProtection
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.WorksheetProtection#context:member'
      - 'excel!Excel.WorksheetProtection#load:member(1)'
      - 'excel!Excel.WorksheetProtection#load:member(2)'
      - 'excel!Excel.WorksheetProtection#load:member(3)'
      - 'excel!Excel.WorksheetProtection#options:member'
      - 'excel!Excel.WorksheetProtection#protect:member(1)'
      - 'excel!Excel.WorksheetProtection#protected:member'
      - 'excel!Excel.WorksheetProtection#toJSON:member(1)'
      - 'excel!Excel.WorksheetProtection#unprotect:member(1)'
  - uid: 'excel!Excel.WorksheetProtection#context:member'
    summary: <span data-ttu-id="e209a-103">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="e209a-103">The request context associated with the object.</span></span> <span data-ttu-id="e209a-104">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="e209a-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.WorksheetProtection#load:member(1)'
    summary: <span data-ttu-id="e209a-105">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="e209a-105">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e209a-106">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="e209a-106">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.WorksheetProtectionLoadOptions): Excel.WorksheetProtection;'
      return:
        type:
          - 'excel!Excel.WorksheetProtection:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="e209a-107">Fournit des options pour les propriétés de l’objet à charger.</span><span class="sxs-lookup"><span data-stu-id="e209a-107">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.Interfaces.WorksheetProtectionLoadOptions:interface'
  - uid: 'excel!Excel.WorksheetProtection#load:member(2)'
    summary: <span data-ttu-id="e209a-108">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="e209a-108">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e209a-109">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="e209a-109">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.WorksheetProtection;'
      return:
        type:
          - 'excel!Excel.WorksheetProtection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="e209a-110">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="e209a-110">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.WorksheetProtection#load:member(3)'
    summary: <span data-ttu-id="e209a-111">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="e209a-111">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e209a-112">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="e209a-112">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.WorksheetProtection;
      return:
        type:
          - 'excel!Excel.WorksheetProtection:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="e209a-113">`propertyNamesAndPaths.select`est une chaîne délimitée par des virgules qui spécifie les propriétés à `propertyNamesAndPaths.expand` charger et une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="e209a-113">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.WorksheetProtection#options:member'
    summary: "<span data-ttu-id=\"e209a-114\">Options de protection de feuille.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e209a-114\">Sheet protection options.</span></span> <span data-ttu-id=\"e209a-115\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e209a-115\">Read-only.</span></span>\n\n<span data-ttu-id=\"e209a-116\">\\[[Ensemble d’API\_: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"e209a-116\">\\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: options
    fullName: options
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly options: Excel.WorksheetProtectionOptions;'
      return:
        type:
          - 'excel!Excel.WorksheetProtectionOptions:interface'
  - uid: 'excel!Excel.WorksheetProtection#protect:member(1)'
    summary: "<span data-ttu-id=\"e209a-117\">Protège une feuille de calcul.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e209a-117\">Protects a worksheet.</span></span> <span data-ttu-id=\"e209a-118\">Échoue si la feuille de calcul a déjà été protégée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e209a-118\">Fails if the worksheet has already been protected.</span></span>\n\n<span data-ttu-id=\"e209a-119\">\\[[Ensemble d’API\_: ExcelApi 1,2 pour les options\_; 1,7 pour le mot de passe](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"e209a-119\">\\[ [API set: ExcelApi 1.2 for options; 1.7 for password](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: 'protect(options, password)'
    fullName: 'protect(options, password)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'protect(options?: Excel.WorksheetProtectionOptions, password?: string): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e209a-120">Exemples</span><span class="sxs-lookup"><span data-stu-id="e209a-120">Examples</span></span>

          ```javascript
          Excel.run(function(ctx) {
            // get a reference to Sheet1
            var sheet = ctx.workbook.worksheets.getItem("Sheet1");

            // Protect inserting or deleting rows in Sheet1
            sheet.protection.protect({
              allowInsertRows: false,
              allowDeleteRows: false
            });

            return ctx.sync();
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```typescript
          await Excel.run(async (context) => {
              let activeSheet = context.workbook.worksheets.getActiveWorksheet();
              activeSheet.load("protection/protected");

              await context.sync();

              if (!activeSheet.protection.protected) {
                  activeSheet.protection.protect();
              }
          });
          ```
          ```typescript
          let password = await passwordHandler();
          passwordHelper(password);
          await Excel.run(async (context) => {
              let activeSheet = context.workbook.worksheets.getActiveWorksheet();
              activeSheet.load("protection/protected");

              await context.sync();

              if (!activeSheet.protection.protected) {
                  activeSheet.protection.protect(null, password);
              }
          });
          ```
      parameters:
        - id: options
          description: <span data-ttu-id="e209a-121">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="e209a-121">Optional.</span></span> <span data-ttu-id="e209a-122">Options de protection de feuille.</span><span class="sxs-lookup"><span data-stu-id="e209a-122">Sheet protection options.</span></span>
          type:
            - 'excel!Excel.WorksheetProtectionOptions:interface'
        - id: password
          description: <span data-ttu-id="e209a-123">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="e209a-123">Optional.</span></span> <span data-ttu-id="e209a-124">Mot de passe de protection de la feuille.</span><span class="sxs-lookup"><span data-stu-id="e209a-124">Sheet protection password.</span></span>
          type:
            - string
  - uid: 'excel!Excel.WorksheetProtection#protected:member'
    summary: "<span data-ttu-id=\"e209a-125\">Indique si la feuille de calcul est protégée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e209a-125\">Indicates if the worksheet is protected.</span></span> <span data-ttu-id=\"e209a-126\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e209a-126\">Read-only.</span></span>\n\n<span data-ttu-id=\"e209a-127\">\\[[Ensemble d’API\_: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"e209a-127\">\\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: protected
    fullName: protected
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly protected: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.WorksheetProtection#toJSON:member(1)'
    summary: '<span data-ttu-id="e209a-128">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="e209a-128">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="e209a-129">.</span><span class="sxs-lookup"><span data-stu-id="e209a-129"></span></span> <span data-ttu-id="e209a-130">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="e209a-130"></span></span><!-- --><span data-ttu-id="e209a-131">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que l’objet Excel. WorksheetProtection d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.WorksheetProtectionData`</span><span class="sxs-lookup"><span data-stu-id="e209a-131">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.WorksheetProtection object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.WorksheetProtectionData`</span></span><!-- --><span data-ttu-id="e209a-132">) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l’objet d’origine.</span><span class="sxs-lookup"><span data-stu-id="e209a-132">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.WorksheetProtectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.WorksheetProtectionData:interface'
        description: ''
  - uid: 'excel!Excel.WorksheetProtection#unprotect:member(1)'
    summary: "<span data-ttu-id=\"e209a-133\">Annule la protection d’une feuille de calcul.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e209a-133\">Unprotects a worksheet.</span></span>\n\n<span data-ttu-id=\"e209a-134\">\\[[Ensemble d’API\_: ExcelApi 1,7 pour le mot de passe](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"e209a-134\">\\[ [API set: ExcelApi 1.7 for password](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: unprotect(password)
    fullName: unprotect(password)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'unprotect(password?: string): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e209a-135">Exemples</span><span class="sxs-lookup"><span data-stu-id="e209a-135">Examples</span></span>

          ```javascript
          Excel.run(function(ctx) {
            // get a reference to Sheet1
            var sheet = ctx.workbook.worksheets.getItem("Sheet1");

            // Remove all protects applied to Sheet1
            sheet.protection.unprotect();

            return ctx.sync();
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Unprotecting a worksheet with unprotect() will remove all 
          // WorksheetProtectionOptions options applied to a worksheet.
          // To remove only a subset of WorksheetProtectionOptions use the 
          // protect() method and set the options you wish to remove to true.
          Excel.run(function(ctx) {
            var sheet = ctx.workbook.worksheets.getItem("Sheet1");
            sheet.protection.protect({
              allowInsertRows: false, // Protect row insertion
              allowDeleteRows: true // Unprotect row deletion
            });
          });
          ```
          ```typescript
          await Excel.run(async (context) => {
              let activeSheet = context.workbook.worksheets.getActiveWorksheet();
              activeSheet.protection.unprotect();
          });
          ```
          ```typescript
          let password = await passwordHandler();
          passwordHelper(password);
          await Excel.run(async (context) => {
              let activeSheet = context.workbook.worksheets.getActiveWorksheet();
              activeSheet.protection.unprotect(password);
          });
          ```
      parameters:
        - id: password
          description: <span data-ttu-id="e209a-136">Mot de passe de protection de feuille.</span><span class="sxs-lookup"><span data-stu-id="e209a-136">sheet protection password.</span></span>
          type:
            - string
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.WorksheetProtection:class'
    name: Excel.WorksheetProtection
  - uid: 'excel!Excel.Interfaces.WorksheetProtectionLoadOptions:interface'
    name: Excel.Interfaces.WorksheetProtectionLoadOptions
  - uid: 'excel!Excel.WorksheetProtectionOptions:interface'
    name: Excel.WorksheetProtectionOptions
  - uid: 'excel!Excel.Interfaces.WorksheetProtectionData:interface'
    name: Excel.Interfaces.WorksheetProtectionData