### YamlMime:UniversalReference
items:
  - uid: excel.Excel.TableColumn
    summary: |-
      <span data-ttu-id="4767d-101">Cet objet représente une colonne dans un tableau.</span><span class="sxs-lookup"><span data-stu-id="4767d-101">Represents a column in a table.</span></span>

      <span data-ttu-id="4767d-102">\[[Ensemble d’API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4767d-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.TableColumn
    fullName: Excel.TableColumn
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.TableColumn.context
      - excel.Excel.TableColumn.delete
      - excel.Excel.TableColumn.filter
      - excel.Excel.TableColumn.getDataBodyRange
      - excel.Excel.TableColumn.getHeaderRowRange
      - excel.Excel.TableColumn.getRange
      - excel.Excel.TableColumn.getTotalRowRange
      - excel.Excel.TableColumn.id
      - excel.Excel.TableColumn.index
      - excel.Excel.TableColumn.load
      - excel.Excel.TableColumn.load_1
      - excel.Excel.TableColumn.load_2
      - excel.Excel.TableColumn.name
      - excel.Excel.TableColumn.set
      - excel.Excel.TableColumn.set_1
      - excel.Excel.TableColumn.toJSON
      - excel.Excel.TableColumn.values
  - uid: excel.Excel.TableColumn.context
    summary: <span data-ttu-id="4767d-103">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="4767d-103">The request context associated with the object.</span></span> <span data-ttu-id="4767d-104">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="4767d-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.TableColumn.delete
    summary: |-
      <span data-ttu-id="4767d-105">Supprime la colonne du tableau.</span><span class="sxs-lookup"><span data-stu-id="4767d-105">Deletes the column from the table.</span></span>

      <span data-ttu-id="4767d-106">\[[Ensemble d’API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4767d-106">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="4767d-107">Exemples</span><span class="sxs-lookup"><span data-stu-id="4767d-107">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var column = ctx.workbook.tables.getItem(tableName).columns.getItemAt(2);
              column.delete();
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.TableColumn.filter
    summary: |-
      <span data-ttu-id="4767d-108">Extrait le filtre appliqué à la colonne.</span><span class="sxs-lookup"><span data-stu-id="4767d-108">Retrieve the filter applied to the column.</span></span> <span data-ttu-id="4767d-109">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="4767d-109">Read-only.</span></span>

      <span data-ttu-id="4767d-110">\[[Ensemble d’API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4767d-110">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: filter
    fullName: filter
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly filter: Excel.Filter;'
      return:
        type:
          - excel.Excel.Filter
  - uid: excel.Excel.TableColumn.getDataBodyRange
    summary: |-
      <span data-ttu-id="4767d-111">Obtient l’objet de plage associé au corps de données de la colonne.</span><span class="sxs-lookup"><span data-stu-id="4767d-111">Gets the range object associated with the data body of the column.</span></span>

      <span data-ttu-id="4767d-112">\[[Ensemble d’API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4767d-112">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getDataBodyRange()
    fullName: getDataBodyRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDataBodyRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="4767d-113">Exemples</span><span class="sxs-lookup"><span data-stu-id="4767d-113">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var column = ctx.workbook.tables.getItem(tableName).columns.getItemAt(0);
              var dataBodyRange = column.getDataBodyRange();
              dataBodyRange.load('address');
              return ctx.sync().then(function() {
                  console.log(dataBodyRange.address);
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.TableColumn.getHeaderRowRange
    summary: |-
      <span data-ttu-id="4767d-114">Obtient l’objet de plage associé à la ligne d’en-tête de la colonne.</span><span class="sxs-lookup"><span data-stu-id="4767d-114">Gets the range object associated with the header row of the column.</span></span>

      <span data-ttu-id="4767d-115">\[[Ensemble d’API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4767d-115">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getHeaderRowRange()
    fullName: getHeaderRowRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getHeaderRowRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="4767d-116">Exemples</span><span class="sxs-lookup"><span data-stu-id="4767d-116">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var columns = ctx.workbook.tables.getItem(tableName).columns.getItemAt(0);
              var headerRowRange = columns.getHeaderRowRange();
              headerRowRange.load('address');
              return ctx.sync().then(function() {
                  console.log(headerRowRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.TableColumn.getRange
    summary: |-
      <span data-ttu-id="4767d-117">Renvoie l’objet de plage associé à l’intégralité de la colonne.</span><span class="sxs-lookup"><span data-stu-id="4767d-117">Gets the range object associated with the entire column.</span></span>

      <span data-ttu-id="4767d-118">\[[Ensemble d’API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4767d-118">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="4767d-119">Exemples</span><span class="sxs-lookup"><span data-stu-id="4767d-119">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var columns = ctx.workbook.tables.getItem(tableName).columns.getItemAt(0);
              var columnRange = columns.getRange();
              columnRange.load('address');
              return ctx.sync().then(function() {
                  console.log(columnRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.TableColumn.getTotalRowRange
    summary: |-
      <span data-ttu-id="4767d-120">Obtient l’objet de plage associé à la ligne de total de la colonne.</span><span class="sxs-lookup"><span data-stu-id="4767d-120">Gets the range object associated with the totals row of the column.</span></span>

      <span data-ttu-id="4767d-121">\[[Ensemble d’API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4767d-121">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getTotalRowRange()
    fullName: getTotalRowRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTotalRowRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="4767d-122">Exemples</span><span class="sxs-lookup"><span data-stu-id="4767d-122">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var columns = ctx.workbook.tables.getItem(tableName).columns.getItemAt(0);
              var totalRowRange = columns.getTotalRowRange();
              totalRowRange.load('address');
              return ctx.sync().then(function() {
                  console.log(totalRowRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.TableColumn.id
    summary: |-
      <span data-ttu-id="4767d-123">Renvoie une clé unique qui identifie la colonne du tableau.</span><span class="sxs-lookup"><span data-stu-id="4767d-123">Returns a unique key that identifies the column within the table.</span></span> <span data-ttu-id="4767d-124">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="4767d-124">Read-only.</span></span>

      <span data-ttu-id="4767d-125">\[[Ensemble d’API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4767d-125">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: number;'
      return:
        type:
          - number
  - uid: excel.Excel.TableColumn.index
    summary: |-
      <span data-ttu-id="4767d-126">Renvoie le numéro d’indice de la colonne dans la collection de colonnes du tableau.</span><span class="sxs-lookup"><span data-stu-id="4767d-126">Returns the index number of the column within the columns collection of the table.</span></span> <span data-ttu-id="4767d-127">Avec indice zéro.</span><span class="sxs-lookup"><span data-stu-id="4767d-127">Zero-indexed.</span></span> <span data-ttu-id="4767d-128">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="4767d-128">Read-only.</span></span>

      <span data-ttu-id="4767d-129">\[[Ensemble d’API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4767d-129">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: index
    fullName: index
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly index: number;'
      return:
        type:
          - number
  - uid: excel.Excel.TableColumn.load
    summary: "<span data-ttu-id=\"4767d-130\">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"4767d-130\">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id=\"4767d-131\">Vous devez appeler «\_context.sync()\_» avant de lire les propriétés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"4767d-131\">You must call \"context.sync()\" before reading the properties.</span></span>"
    remarks: |-
      <span data-ttu-id="4767d-132">En plus de cette signature, cette méthode possède les signatures suivantes:</span><span class="sxs-lookup"><span data-stu-id="4767d-132">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="4767d-133">`load(option?: string | string[]): Excel.TableColumn`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="4767d-133">`load(option?: string | string[]): Excel.TableColumn` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="4767d-134">`load(option?: { select?: string; expand?: string; }): Excel.TableColumn`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="4767d-134">`load(option?: { select?: string; expand?: string; }): Excel.TableColumn` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="4767d-135">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableColumn`-Uniquement disponible sur les types de collection.</span><span class="sxs-lookup"><span data-stu-id="4767d-135">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableColumn` - Only available on collection types.</span></span> <span data-ttu-id="4767d-136">Elle est similaire à la signature précédente.</span><span class="sxs-lookup"><span data-stu-id="4767d-136">It is similar to the preceding signature.</span></span> <span data-ttu-id="4767d-137">Option. Top indique le nombre maximal d’éléments de collection qui peuvent être inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="4767d-137">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="4767d-138">Option. Skip indique le nombre d’éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="4767d-138">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="4767d-139">Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d’éléments.</span><span class="sxs-lookup"><span data-stu-id="4767d-139">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.TableColumnLoadOptions): Excel.TableColumn;'
      return:
        type:
          - excel.Excel.TableColumn
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.TableColumnLoadOptions
  - uid: excel.Excel.TableColumn.load_1
    summary: <span data-ttu-id="4767d-140">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="4767d-140">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="4767d-141">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="4767d-141">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.TableColumn;'
      return:
        type:
          - excel.Excel.TableColumn
        description: |-


          #### <a name="examples"></a><span data-ttu-id="4767d-142">Exemples</span><span class="sxs-lookup"><span data-stu-id="4767d-142">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var column = ctx.workbook.tables.getItem(tableName).columns.getItem(0);
              column.load('index');
              return ctx.sync().then(function() {
                  console.log(column.index);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var tables = ctx.workbook.tables;
              var newValues = [["New"], ["Values"], ["For"], ["New"], ["Column"]];
              var column = ctx.workbook.tables.getItem(tableName).columns.getItemAt(2);
              column.values = newValues;
              column.load('values');
              return ctx.sync().then(function() {
                  console.log(column.values);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="4767d-143">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="4767d-143">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.TableColumn.load_2
    summary: <span data-ttu-id="4767d-144">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="4767d-144">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="4767d-145">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="4767d-145">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.TableColumn;'
      return:
        type:
          - excel.Excel.TableColumn
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="4767d-146">Où propertyNamesAndPaths. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et propertyNamesAndPaths. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="4767d-146">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.TableColumn.name
    summary: |-
      <span data-ttu-id="4767d-147">Représente le nom de la colonne du tableau.</span><span class="sxs-lookup"><span data-stu-id="4767d-147">Represents the name of the table column.</span></span>

      <span data-ttu-id="4767d-148">\[[Ensemble d’API: ExcelApi 1,1 pour obtenir le nom; 1,4 pour le définir.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span><span class="sxs-lookup"><span data-stu-id="4767d-148">\[ [API set: ExcelApi 1.1 for getting the name; 1.4 for setting it.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span></span> <span data-ttu-id="4767d-149">\]</span><span class="sxs-lookup"><span data-stu-id="4767d-149"></span></span>
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: excel.Excel.TableColumn.set
    summary: '<span data-ttu-id="4767d-150">Définit plusieurs propriétés d’un objet en même temps.</span><span class="sxs-lookup"><span data-stu-id="4767d-150">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="4767d-151">Vous pouvez transmettre un objet plain avec les propriétés appropriées, ou un autre objet API du même type.</span><span class="sxs-lookup"><span data-stu-id="4767d-151">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="4767d-152">Cette méthode est dotée de la signature supplémentaire suivante:</span><span class="sxs-lookup"><span data-stu-id="4767d-152">This method has the following additional signature:</span></span>

      `set(properties: Excel.TableColumn): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.TableColumnUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="4767d-153">Objet JavaScript avec des propriétés qui sont structurées isomorphically vers les propriétés de l’objet sur lequel la méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="4767d-153">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.TableColumnUpdateData
        - id: options
          description: <span data-ttu-id="4767d-154">Fournit une option permettant de supprimer les erreurs si l’objet Properties tente de définir des propriétés en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="4767d-154">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.TableColumn.set_1
    summary: '<span data-ttu-id="4767d-155">Définit plusieurs propriétés de l’objet en même temps, en fonction d’un objet chargé existant.</span><span class="sxs-lookup"><span data-stu-id="4767d-155">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.TableColumn): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.TableColumn
  - uid: excel.Excel.TableColumn.toJSON
    summary: '<span data-ttu-id="4767d-156">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="4767d-156">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="4767d-157">.</span><span class="sxs-lookup"><span data-stu-id="4767d-157"></span></span> <span data-ttu-id="4767d-158">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="4767d-158"></span></span><!-- --><span data-ttu-id="4767d-159">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que l’objet Excel. TableColumn d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.TableColumnData`</span><span class="sxs-lookup"><span data-stu-id="4767d-159">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.TableColumn object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableColumnData`</span></span><!-- --><span data-ttu-id="4767d-160">) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l’objet d’origine.</span><span class="sxs-lookup"><span data-stu-id="4767d-160">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.TableColumnData;'
      return:
        type:
          - excel.Excel.Interfaces.TableColumnData
        description: ''
  - uid: excel.Excel.TableColumn.values
    summary: |-
      <span data-ttu-id="4767d-161">Représente les valeurs brutes de la plage spécifiée.</span><span class="sxs-lookup"><span data-stu-id="4767d-161">Represents the raw values of the specified range.</span></span> <span data-ttu-id="4767d-162">Les données renvoyées peuvent être des chaînes, des valeurs numériques ou des valeurs booléennes.</span><span class="sxs-lookup"><span data-stu-id="4767d-162">The data returned could be of type string, number, or a boolean.</span></span> <span data-ttu-id="4767d-163">Les cellules contenant une erreur renvoie la chaîne d’erreur.</span><span class="sxs-lookup"><span data-stu-id="4767d-163">Cells that contain an error will return the error string.</span></span>

      <span data-ttu-id="4767d-164">\[[Ensemble d’API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4767d-164">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: values
    fullName: values
    langs:
      - typeScript
    type: property
    syntax:
      content: 'values: any[][];'
      return:
        type:
          - 'any[][]'