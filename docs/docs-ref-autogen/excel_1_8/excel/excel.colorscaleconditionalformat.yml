### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ColorScaleConditionalFormat:class'
    summary: "<span data-ttu-id=\"50359-101\">Représente un critère IconSet pour la mise en forme conditionnelle.</span><span class=\"sxs-lookup\"><span data-stu-id=\"50359-101\">Represents an IconSet criteria for conditional formatting.</span></span>\n\n<span data-ttu-id=\"50359-102\">\\[[Ensemble d’API\_: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"50359-102\">\\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: Excel.ColorScaleConditionalFormat
    fullName: Excel.ColorScaleConditionalFormat
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.ColorScaleConditionalFormat#context:member'
      - 'excel!Excel.ColorScaleConditionalFormat#criteria:member'
      - 'excel!Excel.ColorScaleConditionalFormat#load:member(1)'
      - 'excel!Excel.ColorScaleConditionalFormat#load:member(2)'
      - 'excel!Excel.ColorScaleConditionalFormat#load:member(3)'
      - 'excel!Excel.ColorScaleConditionalFormat#set:member(1)'
      - 'excel!Excel.ColorScaleConditionalFormat#set:member(2)'
      - 'excel!Excel.ColorScaleConditionalFormat#threeColorScale:member'
      - 'excel!Excel.ColorScaleConditionalFormat#toJSON:member(1)'
  - uid: 'excel!Excel.ColorScaleConditionalFormat#context:member'
    summary: <span data-ttu-id="50359-103">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="50359-103">The request context associated with the object.</span></span> <span data-ttu-id="50359-104">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="50359-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.ColorScaleConditionalFormat#criteria:member'
    summary: "<span data-ttu-id=\"50359-105\">Les critères de l’étendue de couleur.</span><span class=\"sxs-lookup\"><span data-stu-id=\"50359-105\">The criteria of the color scale.</span></span> <span data-ttu-id=\"50359-106\">Le milieu est facultatif lors de l’utilisation d’une graduation de couleurs à deux points.</span><span class=\"sxs-lookup\"><span data-stu-id=\"50359-106\">Midpoint is optional when using a two point color scale.</span></span>\n\n<span data-ttu-id=\"50359-107\">\\[[Ensemble d’API\_: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"50359-107\">\\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: criteria
    fullName: criteria
    langs:
      - typeScript
    type: property
    syntax:
      content: 'criteria: Excel.ConditionalColorScaleCriteria;'
      return:
        type:
          - 'excel!Excel.ConditionalColorScaleCriteria:interface'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="50359-108">Exemples</span><span class="sxs-lookup"><span data-stu-id="50359-108">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B2:M5");
              const conditionalFormat = range.conditionalFormats
                  .add(Excel.ConditionalFormatType.colorScale);
              const criteria = {
                  minimum: { formula: null, type: Excel.ConditionalFormatColorCriterionType.lowestValue, color: "blue" },
                  midpoint: { formula: "50", type: Excel.ConditionalFormatColorCriterionType.percent, color: "yellow" },
                  maximum: { formula: null, type: Excel.ConditionalFormatColorCriterionType.highestValue, color: "red" }
              };
              conditionalFormat.colorScale.criteria = criteria;

              await context.sync();
          });
          ```
  - uid: 'excel!Excel.ColorScaleConditionalFormat#load:member(1)'
    summary: <span data-ttu-id="50359-109">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="50359-109">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="50359-110">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="50359-110">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.ColorScaleConditionalFormatLoadOptions): Excel.ColorScaleConditionalFormat;'
      return:
        type:
          - 'excel!Excel.ColorScaleConditionalFormat:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="50359-111">Fournit des options pour les propriétés de l’objet à charger.</span><span class="sxs-lookup"><span data-stu-id="50359-111">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.Interfaces.ColorScaleConditionalFormatLoadOptions:interface'
  - uid: 'excel!Excel.ColorScaleConditionalFormat#load:member(2)'
    summary: <span data-ttu-id="50359-112">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="50359-112">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="50359-113">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="50359-113">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ColorScaleConditionalFormat;'
      return:
        type:
          - 'excel!Excel.ColorScaleConditionalFormat:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="50359-114">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="50359-114">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.ColorScaleConditionalFormat#load:member(3)'
    summary: <span data-ttu-id="50359-115">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="50359-115">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="50359-116">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="50359-116">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.ColorScaleConditionalFormat;
      return:
        type:
          - 'excel!Excel.ColorScaleConditionalFormat:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="50359-117">`propertyNamesAndPaths.select`est une chaîne délimitée par des virgules qui spécifie les propriétés à `propertyNamesAndPaths.expand` charger et une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="50359-117">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.ColorScaleConditionalFormat#set:member(1)'
    summary: '<span data-ttu-id="50359-118">Définit plusieurs propriétés d’un objet en même temps.</span><span class="sxs-lookup"><span data-stu-id="50359-118">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="50359-119">Vous pouvez transmettre un objet plain avec les propriétés appropriées, ou un autre objet API du même type.</span><span class="sxs-lookup"><span data-stu-id="50359-119">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: "<span data-ttu-id=\"50359-120\">Cette méthode est dotée de la signature supplémentaire suivante\_:</span><span class=\"sxs-lookup\"><span data-stu-id=\"50359-120\">This method has the following additional signature:</span></span>\n\n`set(properties: Excel.ColorScaleConditionalFormat): void`"
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ColorScaleConditionalFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="50359-121">Objet JavaScript avec des propriétés qui sont structurées isomorphically vers les propriétés de l’objet sur lequel la méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="50359-121">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'excel!Excel.Interfaces.ColorScaleConditionalFormatUpdateData:interface'
        - id: options
          description: <span data-ttu-id="50359-122">Fournit une option permettant de supprimer les erreurs si l’objet Properties tente de définir des propriétés en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="50359-122">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.ColorScaleConditionalFormat#set:member(2)'
    summary: '<span data-ttu-id="50359-123">Définit plusieurs propriétés de l’objet en même temps, en fonction d’un objet chargé existant.</span><span class="sxs-lookup"><span data-stu-id="50359-123">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.ColorScaleConditionalFormat): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.ColorScaleConditionalFormat:class'
  - uid: 'excel!Excel.ColorScaleConditionalFormat#threeColorScale:member'
    summary: "<span data-ttu-id=\"50359-124\">Si la valeur est true, l’échelle de couleurs aura trois points (minimum, milieu, maximum), sinon elle aura deux (minimum, maximum).</span><span class=\"sxs-lookup\"><span data-stu-id=\"50359-124\">If true the color scale will have three points (minimum, midpoint, maximum), otherwise it will have two (minimum, maximum).</span></span>\n\n<span data-ttu-id=\"50359-125\">\\[[Ensemble d’API\_: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"50359-125\">\\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: threeColorScale
    fullName: threeColorScale
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly threeColorScale: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.ColorScaleConditionalFormat#toJSON:member(1)'
    summary: '<span data-ttu-id="50359-126">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="50359-126">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="50359-127">.</span><span class="sxs-lookup"><span data-stu-id="50359-127"></span></span> <span data-ttu-id="50359-128">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="50359-128"></span></span><!-- --><span data-ttu-id="50359-129">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que l’objet Excel. ColorScaleConditionalFormat d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.ColorScaleConditionalFormatData`</span><span class="sxs-lookup"><span data-stu-id="50359-129">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ColorScaleConditionalFormat object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ColorScaleConditionalFormatData`</span></span><!-- --><span data-ttu-id="50359-130">) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l’objet d’origine.</span><span class="sxs-lookup"><span data-stu-id="50359-130">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ColorScaleConditionalFormatData;'
      return:
        type:
          - 'excel!Excel.Interfaces.ColorScaleConditionalFormatData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.ConditionalColorScaleCriteria:interface'
    name: Excel.ConditionalColorScaleCriteria
  - uid: 'excel!Excel.ColorScaleConditionalFormat:class'
    name: Excel.ColorScaleConditionalFormat
  - uid: 'excel!Excel.Interfaces.ColorScaleConditionalFormatLoadOptions:interface'
    name: Excel.Interfaces.ColorScaleConditionalFormatLoadOptions
  - uid: 'excel!Excel.Interfaces.ColorScaleConditionalFormatUpdateData:interface'
    name: Interfaces.ColorScaleConditionalFormatUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Interfaces.ColorScaleConditionalFormatData:interface'
    name: Excel.Interfaces.ColorScaleConditionalFormatData