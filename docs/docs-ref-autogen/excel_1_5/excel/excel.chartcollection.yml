### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ChartCollection:class'
    summary: "<span data-ttu-id=\"2b846-101\">Collection de tous les objets de graphique d’une feuille de calcul.</span><span class=\"sxs-lookup\"><span data-stu-id=\"2b846-101\">A collection of all the chart objects on a worksheet.</span></span>\n\n<span data-ttu-id=\"2b846-102\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"2b846-102\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: Excel.ChartCollection
    fullName: Excel.ChartCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.ChartCollection#add:member(1)'
      - 'excel!Excel.ChartCollection#add:member(2)'
      - 'excel!Excel.ChartCollection#context:member'
      - 'excel!Excel.ChartCollection#count:member'
      - 'excel!Excel.ChartCollection#getCount:member(1)'
      - 'excel!Excel.ChartCollection#getItem:member(1)'
      - 'excel!Excel.ChartCollection#getItemAt:member(1)'
      - 'excel!Excel.ChartCollection#getItemOrNullObject:member(1)'
      - 'excel!Excel.ChartCollection#items:member'
      - 'excel!Excel.ChartCollection#load:member(1)'
      - 'excel!Excel.ChartCollection#load:member(2)'
      - 'excel!Excel.ChartCollection#load:member(3)'
      - 'excel!Excel.ChartCollection#toJSON:member(1)'
  - uid: 'excel!Excel.ChartCollection#add:member(1)'
    summary: "<span data-ttu-id=\"2b846-103\">Crée un graphique.</span><span class=\"sxs-lookup\"><span data-stu-id=\"2b846-103\">Creates a new chart.</span></span>\n\n<span data-ttu-id=\"2b846-104\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"2b846-104\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: 'add(type, sourceData, seriesBy)'
    fullName: 'add(type, sourceData, seriesBy)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(type: Excel.ChartType, sourceData: Range, seriesBy?: Excel.ChartSeriesBy): Excel.Chart;'
      return:
        type:
          - 'excel!Excel.Chart:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2b846-105">Exemples</span><span class="sxs-lookup"><span data-stu-id="2b846-105">Examples</span></span>

          ```javascript
          // Add a chart of chartType "ColumnClustered" on worksheet "Charts" 
          // with sourceData from Range "A1:B4" and seriresBy is set to be "auto".
          Excel.run(function (ctx) { 
              var rangeSelection = "A1:B4";
              var range = ctx.workbook.worksheets.getItem(sheetName)
                  .getRange(rangeSelection);
              var chart = ctx.workbook.worksheets.getItem(sheetName)
                  .charts.add("ColumnClustered", range, "auto");    return ctx.sync().then(function() {
                      console.log("New Chart Added");
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: type
          description: '<span data-ttu-id="2b846-106">Représente le type d’un graphique.</span><span class="sxs-lookup"><span data-stu-id="2b846-106">Represents the type of a chart.</span></span> <span data-ttu-id="2b846-107">Pour plus d’informations, voir Excel. ChartType.</span><span class="sxs-lookup"><span data-stu-id="2b846-107">See Excel.ChartType for details.</span></span>'
          type:
            - 'excel!Excel.ChartType:enum'
        - id: sourceData
          description: <span data-ttu-id="2b846-108">Objet Range correspondant aux données source.</span><span class="sxs-lookup"><span data-stu-id="2b846-108">The Range object corresponding to the source data.</span></span>
          type:
            - 'excel!Excel.Range:class'
        - id: seriesBy
          description: '<span data-ttu-id="2b846-109">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="2b846-109">Optional.</span></span> <span data-ttu-id="2b846-110">Spécifie la façon dont les colonnes ou les lignes sont utilisées comme séries de données sur le graphique.</span><span class="sxs-lookup"><span data-stu-id="2b846-110">Specifies the way columns or rows are used as data series on the chart.</span></span> <span data-ttu-id="2b846-111">Pour plus d’informations, voir Excel. ChartSeriesBy.</span><span class="sxs-lookup"><span data-stu-id="2b846-111">See Excel.ChartSeriesBy for details.</span></span>'
          type:
            - 'excel!Excel.ChartSeriesBy:enum'
  - uid: 'excel!Excel.ChartCollection#add:member(2)'
    summary: "<span data-ttu-id=\"2b846-112\">Crée un graphique.</span><span class=\"sxs-lookup\"><span data-stu-id=\"2b846-112\">Creates a new chart.</span></span>\n\n<span data-ttu-id=\"2b846-113\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"2b846-113\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: 'add(typeString, sourceData, seriesBy)'
    fullName: 'add(typeString, sourceData, seriesBy)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(typeString: "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel", sourceData: Range, seriesBy?: "Auto" | "Columns" | "Rows"): Excel.Chart;'
      return:
        type:
          - 'excel!Excel.Chart:class'
        description: ''
      parameters:
        - id: typeString
          description: '<span data-ttu-id="2b846-114">Représente le type d’un graphique.</span><span class="sxs-lookup"><span data-stu-id="2b846-114">Represents the type of a chart.</span></span> <span data-ttu-id="2b846-115">Pour plus d’informations, voir Excel. ChartType.</span><span class="sxs-lookup"><span data-stu-id="2b846-115">See Excel.ChartType for details.</span></span>'
          type:
            - '"Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel"'
        - id: sourceData
          description: <span data-ttu-id="2b846-116">Objet Range correspondant aux données source.</span><span class="sxs-lookup"><span data-stu-id="2b846-116">The Range object corresponding to the source data.</span></span>
          type:
            - 'excel!Excel.Range:class'
        - id: seriesBy
          description: '<span data-ttu-id="2b846-117">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="2b846-117">Optional.</span></span> <span data-ttu-id="2b846-118">Spécifie la façon dont les colonnes ou les lignes sont utilisées comme séries de données sur le graphique.</span><span class="sxs-lookup"><span data-stu-id="2b846-118">Specifies the way columns or rows are used as data series on the chart.</span></span> <span data-ttu-id="2b846-119">Pour plus d’informations, voir Excel. ChartSeriesBy.</span><span class="sxs-lookup"><span data-stu-id="2b846-119">See Excel.ChartSeriesBy for details.</span></span>'
          type:
            - '"Auto" | "Columns" | "Rows"'
  - uid: 'excel!Excel.ChartCollection#context:member'
    summary: <span data-ttu-id="2b846-120">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="2b846-120">The request context associated with the object.</span></span> <span data-ttu-id="2b846-121">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="2b846-121">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.ChartCollection#count:member'
    summary: "<span data-ttu-id=\"2b846-122\">Renvoie le nombre de graphiques dans la feuille de calcul.</span><span class=\"sxs-lookup\"><span data-stu-id=\"2b846-122\">Returns the number of charts in the worksheet.</span></span> <span data-ttu-id=\"2b846-123\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"2b846-123\">Read-only.</span></span>\n\n<span data-ttu-id=\"2b846-124\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"2b846-124\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.ChartCollection#getCount:member(1)'
    summary: "<span data-ttu-id=\"2b846-125\">Renvoie le nombre de graphiques dans la feuille de calcul.</span><span class=\"sxs-lookup\"><span data-stu-id=\"2b846-125\">Returns the number of charts in the worksheet.</span></span>\n\n<span data-ttu-id=\"2b846-126\">\\[[Ensemble d’API\_: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"2b846-126\">\\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.ChartCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.ChartCollection#getItem:member(1)'
    summary: "<span data-ttu-id=\"2b846-127\">Extrait un graphique à l’aide de son nom.</span><span class=\"sxs-lookup\"><span data-stu-id=\"2b846-127\">Gets a chart using its name.</span></span> <span data-ttu-id=\"2b846-128\">Si plusieurs graphiques portent le même nom, c’est le premier d’entre eux qui est renvoyé.</span><span class=\"sxs-lookup\"><span data-stu-id=\"2b846-128\">If there are multiple charts with the same name, the first one will be returned.</span></span>\n\n<span data-ttu-id=\"2b846-129\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"2b846-129\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: getItem(name)
    fullName: getItem(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(name: string): Excel.Chart;'
      return:
        type:
          - 'excel!Excel.Chart:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2b846-130">Exemples</span><span class="sxs-lookup"><span data-stu-id="2b846-130">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var chartname = 'Chart1';
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem(chartname);
              return ctx.sync().then(function() {
                      console.log(chart.height);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          Excel.run(function (ctx) { 
              var chartId = 'SampleChartId';
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem(chartId);
              return ctx.sync().then(function() {
                      console.log(chart.height);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          Excel.run(function (ctx) { 
              var lastPosition = ctx.workbook.worksheets.getItem("Sheet1").charts.count - 1;
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItemAt(lastPosition);
              return ctx.sync().then(function() {
                      console.log(chart.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: name
          description: <span data-ttu-id="2b846-131">Nom du graphique à extraire.</span><span class="sxs-lookup"><span data-stu-id="2b846-131">Name of the chart to be retrieved.</span></span>
          type:
            - string
  - uid: 'excel!Excel.ChartCollection#getItemAt:member(1)'
    summary: "<span data-ttu-id=\"2b846-132\">Extrait un graphique en fonction de sa position dans la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"2b846-132\">Gets a chart based on its position in the collection.</span></span>\n\n<span data-ttu-id=\"2b846-133\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"2b846-133\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.Chart;'
      return:
        type:
          - 'excel!Excel.Chart:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2b846-134">Exemples</span><span class="sxs-lookup"><span data-stu-id="2b846-134">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var lastPosition = ctx.workbook.worksheets.getItem("Sheet1").charts.count - 1;
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItemAt(lastPosition);
              return ctx.sync().then(function() {
                      console.log(chart.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: <span data-ttu-id="2b846-135">Valeur d’indice de l’objet à récupérer.</span><span class="sxs-lookup"><span data-stu-id="2b846-135">Index value of the object to be retrieved.</span></span> <span data-ttu-id="2b846-136">Avec indice zéro.</span><span class="sxs-lookup"><span data-stu-id="2b846-136">Zero-indexed.</span></span>
          type:
            - number
  - uid: 'excel!Excel.ChartCollection#getItemOrNullObject:member(1)'
    summary: "<span data-ttu-id=\"2b846-137\">Extrait un graphique à l’aide de son nom.</span><span class=\"sxs-lookup\"><span data-stu-id=\"2b846-137\">Gets a chart using its name.</span></span> <span data-ttu-id=\"2b846-138\">Si plusieurs graphiques portent le même nom, c’est le premier d’entre eux qui est renvoyé.</span><span class=\"sxs-lookup\"><span data-stu-id=\"2b846-138\">If there are multiple charts with the same name, the first one will be returned.</span></span> <span data-ttu-id=\"2b846-139\">Si le graphique n’existe pas, renvoie un objet null.</span><span class=\"sxs-lookup\"><span data-stu-id=\"2b846-139\">If the chart does not exist, will return a null object.</span></span>\n\n<span data-ttu-id=\"2b846-140\">\\[[Ensemble d’API\_: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"2b846-140\">\\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: getItemOrNullObject(name)
    fullName: getItemOrNullObject(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(name: string): Excel.Chart;'
      return:
        type:
          - 'excel!Excel.Chart:class'
        description: ''
      parameters:
        - id: name
          description: <span data-ttu-id="2b846-141">Nom du graphique à extraire.</span><span class="sxs-lookup"><span data-stu-id="2b846-141">Name of the chart to be retrieved.</span></span>
          type:
            - string
  - uid: 'excel!Excel.ChartCollection#items:member'
    summary: <span data-ttu-id="2b846-142">Obtient l’élément enfant chargé dans cette collection de sites.</span><span class="sxs-lookup"><span data-stu-id="2b846-142">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Chart[];'
      return:
        type:
          - 'excel!Excel.ChartCollection#items~0:complex'
  - uid: 'excel!Excel.ChartCollection#load:member(1)'
    summary: <span data-ttu-id="2b846-143">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="2b846-143">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="2b846-144">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="2b846-144">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.ChartCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.ChartCollection;'
      return:
        type:
          - 'excel!Excel.ChartCollection:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="2b846-145">Fournit des options pour les propriétés de l’objet à charger.</span><span class="sxs-lookup"><span data-stu-id="2b846-145">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.ChartCollection#load~0:complex'
  - uid: 'excel!Excel.ChartCollection#load:member(2)'
    summary: <span data-ttu-id="2b846-146">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="2b846-146">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="2b846-147">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="2b846-147">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ChartCollection;'
      return:
        type:
          - 'excel!Excel.ChartCollection:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2b846-148">Exemples</span><span class="sxs-lookup"><span data-stu-id="2b846-148">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var charts = ctx.workbook.worksheets.getItem("Sheet1").charts;
              charts.load('items');
              return ctx.sync().then(function() {
                  for (var i = 0; i < charts.items.length; i++)
                  {
                      console.log(charts.items[i].name);
                  }
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Get the number of charts
          Excel.run(function (ctx) { 
              var charts = ctx.workbook.worksheets.getItem("Sheet1").charts;
              charts.load('count');
              return ctx.sync().then(function() {
                  console.log("charts: Count= " + charts.count);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="2b846-149">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="2b846-149">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.ChartCollection#load:member(3)'
    summary: <span data-ttu-id="2b846-150">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="2b846-150">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="2b846-151">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="2b846-151">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Excel.ChartCollection;'
      return:
        type:
          - 'excel!Excel.ChartCollection:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="2b846-152">`propertyNamesAndPaths.select`est une chaîne délimitée par des virgules qui spécifie les propriétés à `propertyNamesAndPaths.expand` charger et une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="2b846-152">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - 'excel!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.ChartCollection#toJSON:member(1)'
    summary: "<span data-ttu-id=\"2b846-153\">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class=\"sxs-lookup\"><span data-stu-id=\"2b846-153\">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id=\"2b846-154\">.</span><span class=\"sxs-lookup\"><span data-stu-id=\"2b846-154\"></span></span> <span data-ttu-id=\"2b846-155\">(`JSON.stringify`</span><span class=\"sxs-lookup\"><span data-stu-id=\"2b846-155\"></span></span><!-- --><span data-ttu-id=\"2b846-156\">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que `Excel.ChartCollection` l’objet d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.ChartCollectionData`</span><span class=\"sxs-lookup\"><span data-stu-id=\"2b846-156\">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.ChartCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ChartCollectionData`</span></span><!-- --><span data-ttu-id=\"2b846-157\">) qui contient un tableau «\_éléments\_» avec des copies superficielles de toutes les propriétés chargées des éléments de la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"2b846-157\">) that contains an \"items\" array with shallow copies of any loaded properties from the collection's items.</span></span>"
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ChartCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.ChartCollectionData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.Chart:class'
    name: Excel.Chart
  - uid: 'excel!Excel.ChartType:enum'
    name: Excel.ChartType
  - uid: 'excel!Excel.Range:class'
    name: Range
  - uid: 'excel!Excel.ChartSeriesBy:enum'
    name: Excel.ChartSeriesBy
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.ChartCollection#getCount~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel!Excel.ChartCollection#items~0:complex'
    name: 'Excel.Chart[]'
    fullName: 'Excel.Chart[]'
    spec.typeScript:
      - uid: 'excel!Excel.Chart:class'
        name: Excel.Chart
        fullName: Excel.Chart
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.ChartCollection:class'
    name: Excel.ChartCollection
  - uid: 'excel!Excel.ChartCollection#load~0:complex'
    name: Excel.Interfaces.ChartCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.ChartCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.ChartCollectionLoadOptions:interface'
        name: Excel.Interfaces.ChartCollectionLoadOptions
        fullName: Excel.Interfaces.ChartCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'excel!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.Interfaces.ChartCollectionData:interface'
    name: Excel.Interfaces.ChartCollectionData