### YamlMime:UniversalReference
items:
  - uid: excel.Excel.NamedItem
    summary: |-
      <span data-ttu-id="650bd-101">Représente un nom défini pour une plage de cellules ou une valeur.</span><span class="sxs-lookup"><span data-stu-id="650bd-101">Represents a defined name for a range of cells or value.</span></span> <span data-ttu-id="650bd-102">Les noms peuvent être des objets nommés primitifs (comme indiqué dans le type ci-dessous), un objet Range ou une référence à une plage.</span><span class="sxs-lookup"><span data-stu-id="650bd-102">Names can be primitive named objects (as seen in the type below), range object, or a reference to a range.</span></span> <span data-ttu-id="650bd-103">Cet objet peut être utilisé pour obtenir l’objet de plage associé à des noms.</span><span class="sxs-lookup"><span data-stu-id="650bd-103">This object can be used to obtain range object associated with names.</span></span>

      <span data-ttu-id="650bd-104">\[[Ensemble d’API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="650bd-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.NamedItem
    fullName: Excel.NamedItem
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.NamedItem.comment
      - excel.Excel.NamedItem.context
      - excel.Excel.NamedItem.delete
      - excel.Excel.NamedItem.getRange
      - excel.Excel.NamedItem.getRangeOrNullObject
      - excel.Excel.NamedItem.load
      - excel.Excel.NamedItem.load_1
      - excel.Excel.NamedItem.load_2
      - excel.Excel.NamedItem.name
      - excel.Excel.NamedItem.scope
      - excel.Excel.NamedItem.set
      - excel.Excel.NamedItem.set_1
      - excel.Excel.NamedItem.toJSON
      - excel.Excel.NamedItem.type
      - excel.Excel.NamedItem.value
      - excel.Excel.NamedItem.visible
      - excel.Excel.NamedItem.worksheet
      - excel.Excel.NamedItem.worksheetOrNullObject
  - uid: excel.Excel.NamedItem.comment
    summary: |-
      <span data-ttu-id="650bd-105">Représente le commentaire associé à ce nom.</span><span class="sxs-lookup"><span data-stu-id="650bd-105">Represents the comment associated with this name.</span></span>

      <span data-ttu-id="650bd-106">\[[Ensemble d’API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="650bd-106">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: comment
    fullName: comment
    langs:
      - typeScript
    type: property
    syntax:
      content: 'comment: string;'
      return:
        type:
          - string
  - uid: excel.Excel.NamedItem.context
    summary: <span data-ttu-id="650bd-107">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="650bd-107">The request context associated with the object.</span></span> <span data-ttu-id="650bd-108">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="650bd-108">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.NamedItem.delete
    summary: |-
      <span data-ttu-id="650bd-109">Supprime le nom donné.</span><span class="sxs-lookup"><span data-stu-id="650bd-109">Deletes the given name.</span></span>

      <span data-ttu-id="650bd-110">\[[Ensemble d’API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="650bd-110">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="650bd-111">Exemples</span><span class="sxs-lookup"><span data-stu-id="650bd-111">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const totalName = sheet.names.getItemOrNullObject("TotalAmount");
              totalName.load();
              await context.sync();

              if (totalName.value) {
                  totalName.delete();

                  // Replace the named item (TotalAmount) with the actual formula for TotalAmount to avoid displaying #NAME in the cell.
                  sheet.getRange("D11").values = [["=SUM(ExpensesTable[AMOUNT])"]];
              } else {
                  console.log("No named item created for the formula.");
              }

              await context.sync();
          });
          ```
  - uid: excel.Excel.NamedItem.getRange
    summary: |-
      <span data-ttu-id="650bd-112">Renvoie l’objet de plage qui est associé au nom.</span><span class="sxs-lookup"><span data-stu-id="650bd-112">Returns the range object that is associated with the name.</span></span> <span data-ttu-id="650bd-113">Renvoie une erreur si le type de l’élément nommé n’est pas une plage.</span><span class="sxs-lookup"><span data-stu-id="650bd-113">Throws an error if the named item's type is not a range.</span></span>

      <span data-ttu-id="650bd-114">\[[Ensemble d’API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="650bd-114">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="650bd-115">Exemples</span><span class="sxs-lookup"><span data-stu-id="650bd-115">Examples</span></span>

          ```javascript
          // Returns the Range object that is associated with the name. 
          // null if the name is not of the type Range.
          // Note: This API currently supports only the Workbook scoped items.
          Excel.run(function (ctx) { 
              var names = ctx.workbook.names;
              var range = names.getItem('MyRange').getRange();
              range.load('address');
              return ctx.sync().then(function() {
                  console.log(range.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.NamedItem.getRangeOrNullObject
    summary: |-
      <span data-ttu-id="650bd-116">Renvoie l’objet de plage qui est associé au nom.</span><span class="sxs-lookup"><span data-stu-id="650bd-116">Returns the range object that is associated with the name.</span></span> <span data-ttu-id="650bd-117">Renvoie un objet null si le type de l’élément nommé n’est pas une plage.</span><span class="sxs-lookup"><span data-stu-id="650bd-117">Returns a null object if the named item's type is not a range.</span></span>

      <span data-ttu-id="650bd-118">\[[Ensemble d’API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="650bd-118">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRangeOrNullObject()
    fullName: getRangeOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRangeOrNullObject(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
  - uid: excel.Excel.NamedItem.load
    summary: "<span data-ttu-id=\"650bd-119\">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"650bd-119\">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id=\"650bd-120\">Vous devez appeler «\_context.sync()\_» avant de lire les propriétés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"650bd-120\">You must call \"context.sync()\" before reading the properties.</span></span>"
    remarks: |-
      <span data-ttu-id="650bd-121">En plus de cette signature, cette méthode possède les signatures suivantes:</span><span class="sxs-lookup"><span data-stu-id="650bd-121">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="650bd-122">`load(option?: string | string[]): Excel.NamedItem`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="650bd-122">`load(option?: string | string[]): Excel.NamedItem` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="650bd-123">`load(option?: { select?: string; expand?: string; }): Excel.NamedItem`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="650bd-123">`load(option?: { select?: string; expand?: string; }): Excel.NamedItem` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="650bd-124">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.NamedItem`-Uniquement disponible sur les types de collection.</span><span class="sxs-lookup"><span data-stu-id="650bd-124">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.NamedItem` - Only available on collection types.</span></span> <span data-ttu-id="650bd-125">Elle est similaire à la signature précédente.</span><span class="sxs-lookup"><span data-stu-id="650bd-125">It is similar to the preceding signature.</span></span> <span data-ttu-id="650bd-126">Option. Top indique le nombre maximal d’éléments de collection qui peuvent être inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="650bd-126">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="650bd-127">Option. Skip indique le nombre d’éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="650bd-127">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="650bd-128">Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d’éléments.</span><span class="sxs-lookup"><span data-stu-id="650bd-128">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.NamedItemLoadOptions): Excel.NamedItem;'
      return:
        type:
          - excel.Excel.NamedItem
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.NamedItemLoadOptions
  - uid: excel.Excel.NamedItem.load_1
    summary: <span data-ttu-id="650bd-129">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="650bd-129">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="650bd-130">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="650bd-130">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.NamedItem;'
      return:
        type:
          - excel.Excel.NamedItem
        description: |-


          #### <a name="examples"></a><span data-ttu-id="650bd-131">Exemples</span><span class="sxs-lookup"><span data-stu-id="650bd-131">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var names = ctx.workbook.names;
              var namedItem = names.getItem('MyRange');
              namedItem.load('type');
              return ctx.sync().then(function() {
                      console.log(namedItem.type);
              });
          }).catch(function(error) {
                  console.log("Error: " + error);
                  if (error instanceof OfficeExtension.Error) {
                      console.log("Debug info: " + JSON.stringify(error.debugInfo));
                  }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="650bd-132">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="650bd-132">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.NamedItem.load_2
    summary: <span data-ttu-id="650bd-133">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="650bd-133">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="650bd-134">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="650bd-134">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.NamedItem;'
      return:
        type:
          - excel.Excel.NamedItem
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="650bd-135">Où propertyNamesAndPaths. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et propertyNamesAndPaths. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="650bd-135">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.NamedItem.name
    summary: |-
      <span data-ttu-id="650bd-136">Nom de l’objet.</span><span class="sxs-lookup"><span data-stu-id="650bd-136">The name of the object.</span></span> <span data-ttu-id="650bd-137">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="650bd-137">Read-only.</span></span>

      <span data-ttu-id="650bd-138">\[[Ensemble d’API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="650bd-138">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly name: string;'
      return:
        type:
          - string
  - uid: excel.Excel.NamedItem.scope
    summary: |-
      <span data-ttu-id="650bd-139">Indique si le nom est étendu au classeur ou à une feuille de calcul spécifique.</span><span class="sxs-lookup"><span data-stu-id="650bd-139">Indicates whether the name is scoped to the workbook or to a specific worksheet.</span></span> <span data-ttu-id="650bd-140">Les valeurs possibles sont les suivantes: Worksheet, Workbook.</span><span class="sxs-lookup"><span data-stu-id="650bd-140">Possible values are: Worksheet, Workbook.</span></span> <span data-ttu-id="650bd-141">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="650bd-141">Read-only.</span></span>

      <span data-ttu-id="650bd-142">\[[Ensemble d’API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="650bd-142">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: scope
    fullName: scope
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly scope: Excel.NamedItemScope | "Worksheet" | "Workbook";'
      return:
        type:
          - Excel.NamedItemScope | "Worksheet" | "Workbook"
  - uid: excel.Excel.NamedItem.set
    summary: '<span data-ttu-id="650bd-143">Définit plusieurs propriétés d’un objet en même temps.</span><span class="sxs-lookup"><span data-stu-id="650bd-143">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="650bd-144">Vous pouvez transmettre un objet plain avec les propriétés appropriées, ou un autre objet API du même type.</span><span class="sxs-lookup"><span data-stu-id="650bd-144">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="650bd-145">Cette méthode est dotée de la signature supplémentaire suivante:</span><span class="sxs-lookup"><span data-stu-id="650bd-145">This method has the following additional signature:</span></span>

      `set(properties: Excel.NamedItem): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.NamedItemUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="650bd-146">Objet JavaScript avec des propriétés qui sont structurées isomorphically vers les propriétés de l’objet sur lequel la méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="650bd-146">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.NamedItemUpdateData
        - id: options
          description: <span data-ttu-id="650bd-147">Fournit une option permettant de supprimer les erreurs si l’objet Properties tente de définir des propriétés en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="650bd-147">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.NamedItem.set_1
    summary: '<span data-ttu-id="650bd-148">Définit plusieurs propriétés de l’objet en même temps, en fonction d’un objet chargé existant.</span><span class="sxs-lookup"><span data-stu-id="650bd-148">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.NamedItem): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.NamedItem
  - uid: excel.Excel.NamedItem.toJSON
    summary: '<span data-ttu-id="650bd-149">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="650bd-149">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="650bd-150">.</span><span class="sxs-lookup"><span data-stu-id="650bd-150"></span></span> <span data-ttu-id="650bd-151">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="650bd-151"></span></span><!-- --><span data-ttu-id="650bd-152">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que l’objet Excel. NamedItem d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.NamedItemData`</span><span class="sxs-lookup"><span data-stu-id="650bd-152">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.NamedItem object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.NamedItemData`</span></span><!-- --><span data-ttu-id="650bd-153">) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l’objet d’origine.</span><span class="sxs-lookup"><span data-stu-id="650bd-153">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.NamedItemData;'
      return:
        type:
          - excel.Excel.Interfaces.NamedItemData
        description: ''
  - uid: excel.Excel.NamedItem.type
    summary: |-
      <span data-ttu-id="650bd-154">Indique le type de la valeur renvoyée par la formule du nom.</span><span class="sxs-lookup"><span data-stu-id="650bd-154">Indicates the type of the value returned by the name's formula.</span></span> <span data-ttu-id="650bd-155">Pour plus d’informations, voir Excel. NamedItemType.</span><span class="sxs-lookup"><span data-stu-id="650bd-155">See Excel.NamedItemType for details.</span></span> <span data-ttu-id="650bd-156">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="650bd-156">Read-only.</span></span>

      <span data-ttu-id="650bd-157">\[[Ensemble d’API: ExcelApi 1,1 pour String, Integer, double, Boolean, Range, Error; 1,7 pour Array](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="650bd-157">\[ [API set: ExcelApi 1.1 for String,Integer,Double,Boolean,Range,Error; 1.7 for Array](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: type
    fullName: type
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly type: Excel.NamedItemType | "String" | "Integer" | "Double" | "Boolean" | "Range" | "Error" | "Array";'
      return:
        type:
          - Excel.NamedItemType | "String" | "Integer" | "Double" | "Boolean" | "Range" | "Error" | "Array"
  - uid: excel.Excel.NamedItem.value
    summary: |-
      <span data-ttu-id="650bd-158">Représente la valeur calculée par la formule du nom.</span><span class="sxs-lookup"><span data-stu-id="650bd-158">Represents the value computed by the name's formula.</span></span> <span data-ttu-id="650bd-159">Pour une plage nommée, renvoie l’adresse de la plage.</span><span class="sxs-lookup"><span data-stu-id="650bd-159">For a named range, will return the range address.</span></span> <span data-ttu-id="650bd-160">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="650bd-160">Read-only.</span></span>

      <span data-ttu-id="650bd-161">\[[Ensemble d’API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="650bd-161">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: value
    fullName: value
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly value: any;'
      return:
        type:
          - any
  - uid: excel.Excel.NamedItem.visible
    summary: |-
      <span data-ttu-id="650bd-162">Indique si l’objet est visible ou non.</span><span class="sxs-lookup"><span data-stu-id="650bd-162">Specifies whether the object is visible or not.</span></span>

      <span data-ttu-id="650bd-163">\[[Ensemble d’API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="650bd-163">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: visible
    fullName: visible
    langs:
      - typeScript
    type: property
    syntax:
      content: 'visible: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.NamedItem.worksheet
    summary: |-
      <span data-ttu-id="650bd-164">Renvoie la feuille de calcul dans laquelle est inclus l’élément nommé.</span><span class="sxs-lookup"><span data-stu-id="650bd-164">Returns the worksheet on which the named item is scoped to.</span></span> <span data-ttu-id="650bd-165">Renvoie une erreur si l’élément est inclus dans l’étendue du classeur.</span><span class="sxs-lookup"><span data-stu-id="650bd-165">Throws an error if the item is scoped to the workbook instead.</span></span>

      <span data-ttu-id="650bd-166">\[[Ensemble d’API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="650bd-166">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: worksheet
    fullName: worksheet
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheet: Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
  - uid: excel.Excel.NamedItem.worksheetOrNullObject
    summary: |-
      <span data-ttu-id="650bd-167">Renvoie la feuille de calcul dans laquelle est inclus l’élément nommé.</span><span class="sxs-lookup"><span data-stu-id="650bd-167">Returns the worksheet on which the named item is scoped to.</span></span> <span data-ttu-id="650bd-168">Renvoie un objet null si l’élément est inclus dans le classeur à la place.</span><span class="sxs-lookup"><span data-stu-id="650bd-168">Returns a null object if the item is scoped to the workbook instead.</span></span>

      <span data-ttu-id="650bd-169">\[[Ensemble d’API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="650bd-169">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: worksheetOrNullObject
    fullName: worksheetOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheetOrNullObject: Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet