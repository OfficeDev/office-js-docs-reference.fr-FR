### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ChartLineFormat:class'
    summary: "<span data-ttu-id=\"0de36-101\">Encapsule les options de mise en forme pour les éléments de ligne.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0de36-101\">Encapsulates the formatting options for line elements.</span></span>\n\n<span data-ttu-id=\"0de36-102\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"0de36-102\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: Excel.ChartLineFormat
    fullName: Excel.ChartLineFormat
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.ChartLineFormat#clear:member(1)'
      - 'excel!Excel.ChartLineFormat#color:member'
      - 'excel!Excel.ChartLineFormat#context:member'
      - 'excel!Excel.ChartLineFormat#load:member(1)'
      - 'excel!Excel.ChartLineFormat#load:member(2)'
      - 'excel!Excel.ChartLineFormat#load:member(3)'
      - 'excel!Excel.ChartLineFormat#set:member(1)'
      - 'excel!Excel.ChartLineFormat#set:member(2)'
      - 'excel!Excel.ChartLineFormat#toJSON:member(1)'
  - uid: 'excel!Excel.ChartLineFormat#clear:member(1)'
    summary: "<span data-ttu-id=\"0de36-103\">Désactiver le format de ligne d’un élément de graphique.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0de36-103\">Clear the line format of a chart element.</span></span>\n\n<span data-ttu-id=\"0de36-104\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"0de36-104\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0de36-105">Exemples</span><span class="sxs-lookup"><span data-stu-id="0de36-105">Examples</span></span>

          ```javascript
          // Set to show legend of Chart1 and make it on top of the chart.
          Excel.run(function (ctx) { 
              var gridlines = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1").axes.valueAxis.majorGridlines;
              gridlines.format.line.clear();
              return ctx.sync().then(function() {
                      console.log("Chart Major Gridlines Format Cleared");
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.ChartLineFormat#color:member'
    summary: "<span data-ttu-id=\"0de36-106\">Code couleur HTML qui représente la couleur des lignes dans le graphique.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0de36-106\">HTML color code representing the color of lines in the chart.</span></span>\n\n<span data-ttu-id=\"0de36-107\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"0de36-107\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: color
    fullName: color
    langs:
      - typeScript
    type: property
    syntax:
      content: 'color: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.ChartLineFormat#context:member'
    summary: <span data-ttu-id="0de36-108">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="0de36-108">The request context associated with the object.</span></span> <span data-ttu-id="0de36-109">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="0de36-109">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.ChartLineFormat#load:member(1)'
    summary: "<span data-ttu-id=\"0de36-110\">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0de36-110\">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id=\"0de36-111\">Vous devez appeler «\_context.sync()\_» avant de lire les propriétés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0de36-111\">You must call \"context.sync()\" before reading the properties.</span></span>"
    remarks: "<span data-ttu-id=\"0de36-112\">En plus de cette signature, cette méthode possède les signatures suivantes\_:</span><span class=\"sxs-lookup\"><span data-stu-id=\"0de36-112\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"0de36-113\">`load(option?: string | string[]): Excel.ChartLineFormat`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0de36-113\">`load(option?: string | string[]): Excel.ChartLineFormat` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>\n\n<span data-ttu-id=\"0de36-114\">`load(option?: { select?: string; expand?: string; }): Excel.ChartLineFormat`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0de36-114\">`load(option?: { select?: string; expand?: string; }): Excel.ChartLineFormat` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"0de36-115\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartLineFormat`-Uniquement disponible sur les types de collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0de36-115\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartLineFormat` - Only available on collection types.</span></span> <span data-ttu-id=\"0de36-116\">Elle est similaire à la signature précédente.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0de36-116\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"0de36-117\">Option. Top indique le nombre maximal d’éléments de collection qui peuvent être inclus dans le résultat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0de36-117\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"0de36-118\">Option. Skip indique le nombre d’éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0de36-118\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"0de36-119\">Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d’éléments.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0de36-119\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>"
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ChartLineFormatLoadOptions): Excel.ChartLineFormat;'
      return:
        type:
          - 'excel!Excel.ChartLineFormat:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.Interfaces.ChartLineFormatLoadOptions:interface'
  - uid: 'excel!Excel.ChartLineFormat#load:member(2)'
    summary: <span data-ttu-id="0de36-120">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="0de36-120">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0de36-121">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="0de36-121">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ChartLineFormat;'
      return:
        type:
          - 'excel!Excel.ChartLineFormat:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0de36-122">Exemples</span><span class="sxs-lookup"><span data-stu-id="0de36-122">Examples</span></span>

          ```javascript
          // Set chart major gridlines on value axis to be red.
          Excel.run(function (ctx) {
              var gridlines = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1").axes.valueAxis.majorGridlines;
              gridlines.format.line.color = "#FF0000";
              return ctx.sync().then(function () {
                  console.log("Chart Gridlines Color Updated");
              });
          }).catch(function (error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="0de36-123">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="0de36-123">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.ChartLineFormat#load:member(3)'
    summary: <span data-ttu-id="0de36-124">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="0de36-124">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0de36-125">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="0de36-125">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.ChartLineFormat;'
      return:
        type:
          - 'excel!Excel.ChartLineFormat:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="0de36-126">Où propertyNamesAndPaths. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et propertyNamesAndPaths. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="0de36-126">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'excel!Excel.ChartLineFormat#set:member(1)'
    summary: '<span data-ttu-id="0de36-127">Définit plusieurs propriétés d’un objet en même temps.</span><span class="sxs-lookup"><span data-stu-id="0de36-127">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="0de36-128">Vous pouvez transmettre un objet plain avec les propriétés appropriées, ou un autre objet API du même type.</span><span class="sxs-lookup"><span data-stu-id="0de36-128">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: "<span data-ttu-id=\"0de36-129\">Cette méthode est dotée de la signature supplémentaire suivante\_:</span><span class=\"sxs-lookup\"><span data-stu-id=\"0de36-129\">This method has the following additional signature:</span></span>\n\n`set(properties: Excel.ChartLineFormat): void`"
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ChartLineFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="0de36-130">Objet JavaScript avec des propriétés qui sont structurées isomorphically vers les propriétés de l’objet sur lequel la méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="0de36-130">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'excel!Excel.Interfaces.ChartLineFormatUpdateData:interface'
        - id: options
          description: <span data-ttu-id="0de36-131">Fournit une option permettant de supprimer les erreurs si l’objet Properties tente de définir des propriétés en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="0de36-131">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.ChartLineFormat#set:member(2)'
    summary: '<span data-ttu-id="0de36-132">Définit plusieurs propriétés de l’objet en même temps, en fonction d’un objet chargé existant.</span><span class="sxs-lookup"><span data-stu-id="0de36-132">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.ChartLineFormat): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.ChartLineFormat:class'
  - uid: 'excel!Excel.ChartLineFormat#toJSON:member(1)'
    summary: '<span data-ttu-id="0de36-133">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="0de36-133">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="0de36-134">.</span><span class="sxs-lookup"><span data-stu-id="0de36-134"></span></span> <span data-ttu-id="0de36-135">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="0de36-135"></span></span><!-- --><span data-ttu-id="0de36-136">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que l’objet Excel. ChartLineFormat d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.ChartLineFormatData`</span><span class="sxs-lookup"><span data-stu-id="0de36-136">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ChartLineFormat object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ChartLineFormatData`</span></span><!-- --><span data-ttu-id="0de36-137">) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l’objet d’origine.</span><span class="sxs-lookup"><span data-stu-id="0de36-137">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ChartLineFormatData;'
      return:
        type:
          - 'excel!Excel.Interfaces.ChartLineFormatData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.ChartLineFormat:class'
    name: Excel.ChartLineFormat
  - uid: 'excel!Excel.Interfaces.ChartLineFormatLoadOptions:interface'
    name: Excel.Interfaces.ChartLineFormatLoadOptions
  - uid: 'excel!Excel.Interfaces.ChartLineFormatUpdateData:interface'
    name: Interfaces.ChartLineFormatUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Interfaces.ChartLineFormatData:interface'
    name: Excel.Interfaces.ChartLineFormatData