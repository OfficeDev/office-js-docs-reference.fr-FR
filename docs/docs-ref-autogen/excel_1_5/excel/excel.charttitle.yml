### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ChartTitle:class'
    summary: "<span data-ttu-id=\"209cc-101\">Représente un objet de titre pour un graphique.</span><span class=\"sxs-lookup\"><span data-stu-id=\"209cc-101\">Represents a chart title object of a chart.</span></span>\n\n<span data-ttu-id=\"209cc-102\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"209cc-102\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: Excel.ChartTitle
    fullName: Excel.ChartTitle
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.ChartTitle#context:member'
      - 'excel!Excel.ChartTitle#format:member'
      - 'excel!Excel.ChartTitle#load:member(1)'
      - 'excel!Excel.ChartTitle#load:member(2)'
      - 'excel!Excel.ChartTitle#load:member(3)'
      - 'excel!Excel.ChartTitle#overlay:member'
      - 'excel!Excel.ChartTitle#set:member(1)'
      - 'excel!Excel.ChartTitle#set:member(2)'
      - 'excel!Excel.ChartTitle#text:member'
      - 'excel!Excel.ChartTitle#toJSON:member(1)'
      - 'excel!Excel.ChartTitle#visible:member'
  - uid: 'excel!Excel.ChartTitle#context:member'
    summary: <span data-ttu-id="209cc-103">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="209cc-103">The request context associated with the object.</span></span> <span data-ttu-id="209cc-104">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="209cc-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.ChartTitle#format:member'
    summary: "<span data-ttu-id=\"209cc-105\">Représente le format du titre d’un graphique, à savoir le format de remplissage et de la police.</span><span class=\"sxs-lookup\"><span data-stu-id=\"209cc-105\">Represents the formatting of a chart title, which includes fill and font formatting.</span></span> <span data-ttu-id=\"209cc-106\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"209cc-106\">Read-only.</span></span>\n\n<span data-ttu-id=\"209cc-107\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"209cc-107\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly format: Excel.ChartTitleFormat;'
      return:
        type:
          - 'excel!Excel.ChartTitleFormat:class'
  - uid: 'excel!Excel.ChartTitle#load:member(1)'
    summary: <span data-ttu-id="209cc-108">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="209cc-108">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="209cc-109">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="209cc-109">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.ChartTitleLoadOptions): Excel.ChartTitle;'
      return:
        type:
          - 'excel!Excel.ChartTitle:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="209cc-110">Fournit des options pour les propriétés de l’objet à charger.</span><span class="sxs-lookup"><span data-stu-id="209cc-110">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.Interfaces.ChartTitleLoadOptions:interface'
  - uid: 'excel!Excel.ChartTitle#load:member(2)'
    summary: <span data-ttu-id="209cc-111">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="209cc-111">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="209cc-112">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="209cc-112">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ChartTitle;'
      return:
        type:
          - 'excel!Excel.ChartTitle:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="209cc-113">Exemples</span><span class="sxs-lookup"><span data-stu-id="209cc-113">Examples</span></span>

          ```javascript
          // Get the text of Chart Title from Chart1.
          Excel.run(function (ctx) { 
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1");    
              
              var title = chart.title;
              title.load('text');
              return ctx.sync().then(function() {
                      console.log(title.text);
              }).catch(function(error) {
                  console.log("Error: " + error);
                  if (error instanceof OfficeExtension.Error) {
                      console.log("Debug info: " + JSON.stringify(error.debugInfo));
                  }
              });
          });
          ```
          ```javascript
          // Set the text of Chart Title to "My Chart" and Make it show on top of the chart without overlaying.
          Excel.run(function (ctx) { 
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1");    
              
              chart.title.text= "My Chart"; 
              chart.title.visible=true;
              chart.title.overlay=true;
              
              return ctx.sync().then(function() {
                  console.log("Char Title Changed");
              }).catch(function(error) {
                  console.log("Error: " + error);
                  if (error instanceof OfficeExtension.Error) {
                      console.log("Debug info: " + JSON.stringify(error.debugInfo));
                  }
              });
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="209cc-114">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="209cc-114">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.ChartTitle#load:member(3)'
    summary: <span data-ttu-id="209cc-115">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="209cc-115">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="209cc-116">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="209cc-116">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.ChartTitle;
      return:
        type:
          - 'excel!Excel.ChartTitle:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="209cc-117">`propertyNamesAndPaths.select`est une chaîne délimitée par des virgules qui spécifie les propriétés à `propertyNamesAndPaths.expand` charger et une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="209cc-117">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.ChartTitle#overlay:member'
    summary: "<span data-ttu-id=\"209cc-118\">Valeur booléenne indiquant si le titre du graphique recouvre le graphique ou non.</span><span class=\"sxs-lookup\"><span data-stu-id=\"209cc-118\">Boolean value representing if the chart title will overlay the chart or not.</span></span>\n\n<span data-ttu-id=\"209cc-119\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"209cc-119\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: overlay
    fullName: overlay
    langs:
      - typeScript
    type: property
    syntax:
      content: 'overlay: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.ChartTitle#set:member(1)'
    summary: '<span data-ttu-id="209cc-120">Définit plusieurs propriétés d’un objet en même temps.</span><span class="sxs-lookup"><span data-stu-id="209cc-120">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="209cc-121">Vous pouvez transmettre un objet plain avec les propriétés appropriées, ou un autre objet API du même type.</span><span class="sxs-lookup"><span data-stu-id="209cc-121">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: "<span data-ttu-id=\"209cc-122\">Cette méthode est dotée de la signature supplémentaire suivante\_:</span><span class=\"sxs-lookup\"><span data-stu-id=\"209cc-122\">This method has the following additional signature:</span></span>\n\n`set(properties: Excel.ChartTitle): void`"
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ChartTitleUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="209cc-123">Objet JavaScript avec des propriétés qui sont structurées isomorphically vers les propriétés de l’objet sur lequel la méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="209cc-123">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'excel!Excel.Interfaces.ChartTitleUpdateData:interface'
        - id: options
          description: <span data-ttu-id="209cc-124">Fournit une option permettant de supprimer les erreurs si l’objet Properties tente de définir des propriétés en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="209cc-124">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.ChartTitle#set:member(2)'
    summary: '<span data-ttu-id="209cc-125">Définit plusieurs propriétés de l’objet en même temps, en fonction d’un objet chargé existant.</span><span class="sxs-lookup"><span data-stu-id="209cc-125">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.ChartTitle): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.ChartTitle:class'
  - uid: 'excel!Excel.ChartTitle#text:member'
    summary: "<span data-ttu-id=\"209cc-126\">Représente le texte du titre d’un graphique.</span><span class=\"sxs-lookup\"><span data-stu-id=\"209cc-126\">Represents the title text of a chart.</span></span>\n\n<span data-ttu-id=\"209cc-127\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"209cc-127\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: text
    fullName: text
    langs:
      - typeScript
    type: property
    syntax:
      content: 'text: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.ChartTitle#toJSON:member(1)'
    summary: '<span data-ttu-id="209cc-128">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="209cc-128">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="209cc-129">.</span><span class="sxs-lookup"><span data-stu-id="209cc-129"></span></span> <span data-ttu-id="209cc-130">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="209cc-130"></span></span><!-- --><span data-ttu-id="209cc-131">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que l’objet Excel. ChartTitle d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.ChartTitleData`</span><span class="sxs-lookup"><span data-stu-id="209cc-131">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ChartTitle object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ChartTitleData`</span></span><!-- --><span data-ttu-id="209cc-132">) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l’objet d’origine.</span><span class="sxs-lookup"><span data-stu-id="209cc-132">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ChartTitleData;'
      return:
        type:
          - 'excel!Excel.Interfaces.ChartTitleData:interface'
        description: ''
  - uid: 'excel!Excel.ChartTitle#visible:member'
    summary: "<span data-ttu-id=\"209cc-133\">Valeur booléenne qui représente la visibilité d’un objet de titre de graphique.</span><span class=\"sxs-lookup\"><span data-stu-id=\"209cc-133\">A boolean value the represents the visibility of a chart title object.</span></span>\n\n<span data-ttu-id=\"209cc-134\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"209cc-134\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: visible
    fullName: visible
    langs:
      - typeScript
    type: property
    syntax:
      content: 'visible: boolean;'
      return:
        type:
          - boolean
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.ChartTitleFormat:class'
    name: Excel.ChartTitleFormat
  - uid: 'excel!Excel.ChartTitle:class'
    name: Excel.ChartTitle
  - uid: 'excel!Excel.Interfaces.ChartTitleLoadOptions:interface'
    name: Excel.Interfaces.ChartTitleLoadOptions
  - uid: 'excel!Excel.Interfaces.ChartTitleUpdateData:interface'
    name: Interfaces.ChartTitleUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Interfaces.ChartTitleData:interface'
    name: Excel.Interfaces.ChartTitleData