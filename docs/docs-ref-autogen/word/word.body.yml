### YamlMime:UniversalReference
ms.openlocfilehash: 7d3edb6c2192e457d58ac99e4845549f11ffbe6e
ms.sourcegitcommit: c1149d24b38f20daf9ce690cd0761ec1ceb7333d
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 10/17/2018
ms.locfileid: "25587024"
items:
- uid: word.Word.Body
  summary: >-
    <span data-ttu-id="1d048-101">Représente le corps d’un document ou d’une section.</span><span class="sxs-lookup"><span data-stu-id="1d048-101">Represents the body of a document or a section.</span></span>


    <span data-ttu-id="1d048-102">\[[Du jeu d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1d048-102">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: Word.Body
  fullName: word.Word.Body
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: word
  children:
  - word.Word.Body.clear
  - word.Word.Body.contentControls
  - word.Word.Body.font
  - word.Word.Body.getHtml
  - word.Word.Body.getOoxml
  - word.Word.Body.getRange
  - word.Word.Body.inlinePictures
  - word.Word.Body.insertBreak
  - word.Word.Body.insertContentControl
  - word.Word.Body.insertFileFromBase64
  - word.Word.Body.insertHtml
  - word.Word.Body.insertInlinePictureFromBase64
  - word.Word.Body.insertOoxml
  - word.Word.Body.insertParagraph
  - word.Word.Body.insertTable
  - word.Word.Body.insertText
  - word.Word.Body.lists
  - word.Word.Body.load
  - word.Word.Body.paragraphs
  - word.Word.Body.parentBody
  - word.Word.Body.parentBodyOrNullObject
  - word.Word.Body.parentContentControl
  - word.Word.Body.parentContentControlOrNullObject
  - word.Word.Body.parentSection
  - word.Word.Body.parentSectionOrNullObject
  - word.Word.Body.search
  - word.Word.Body.select
  - word.Word.Body.style
  - word.Word.Body.styleBuiltIn
  - word.Word.Body.tables
  - word.Word.Body.text
  - word.Word.Body.toJSON
  - word.Word.Body.track
  - word.Word.Body.type
  - word.Word.Body.untrack
- uid: word.Word.Body.clear
  summary: >-
    <span data-ttu-id="1d048-p101">Efface le contenu de l’objet de corps. L’utilisateur peut effectuer l’opération d’annulation sur le contenu effacé.</span><span class="sxs-lookup"><span data-stu-id="1d048-p101">Clears the contents of the body object. The user can perform the undo operation on the cleared content.</span></span>


    <span data-ttu-id="1d048-105">\[[Du jeu d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1d048-105">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: clear()
  fullName: word.Word.Body.clear
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clear(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1d048-106\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"1d048-106\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a commmand to clear the contents of the body.\n    body.clear();\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Cleared the body contents.');\n    });\n})\n.catch(function (error) {\n    console.log(\"Error: \" + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n\n// The Silly stories add-in sample shows how the \n// clear method can be used to clear the contents of a document.\n// https://aka.ms/sillystorywordaddin\n```"
- uid: word.Word.Body.contentControls
  summary: >-
    <span data-ttu-id="1d048-p102">Obtient la collection des objets de contrôle de contenu de texte enrichi dans le corps. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="1d048-p102">Gets the collection of rich text content control objects in the body. Read-only.</span></span>


    <span data-ttu-id="1d048-109">\[[Du jeu d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1d048-109">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: contentControls
  fullName: word.Word.Body.contentControls
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly contentControls: Word.ContentControlCollection;'
    return:
      type:
      - word.Word.ContentControlCollection
- uid: word.Word.Body.font
  summary: >-
    <span data-ttu-id="1d048-p103">Obtient le format de texte du corps. Utilisez cette propriété pour obtenir et définir le nom de la police, la taille, la couleur et d’autres propriétés. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="1d048-p103">Gets the text format of the body. Use this to get and set font name, size, color and other properties. Read-only.</span></span>


    <span data-ttu-id="1d048-113">\[[Du jeu d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1d048-113">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: font
  fullName: word.Word.Body.font
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly font: Word.Font;'
    return:
      type:
      - word.Word.Font
- uid: word.Word.Body.getHtml
  summary: >-
    <span data-ttu-id="1d048-114">Obtient la représentation HTML de l’objet de corps.</span><span class="sxs-lookup"><span data-stu-id="1d048-114">Gets the HTML representation of the body object.</span></span>


    <span data-ttu-id="1d048-115">\[[Du jeu d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1d048-115">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getHtml()
  fullName: word.Word.Body.getHtml
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getHtml(): OfficeExtension.ClientResult<string>;'
    return:
      type:
      - OfficeExtension.ClientResult<string>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1d048-116\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"1d048-116\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a commmand to get the HTML contents of the body.\n    var bodyHTML = body.getHtml();\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log(\"Body HTML contents: \" + bodyHTML.value);\n    });\n})\n.catch(function (error) {\n    console.log(\"Error: \" + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: word.Word.Body.getOoxml
  summary: >-
    <span data-ttu-id="1d048-117">Obtient la représentation OOXML (Office Open XML) de l’objet de corps.</span><span class="sxs-lookup"><span data-stu-id="1d048-117">Gets the OOXML (Office Open XML) representation of the body object.</span></span>


    <span data-ttu-id="1d048-118">\[[Du jeu d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1d048-118">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getOoxml()
  fullName: word.Word.Body.getOoxml
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getOoxml(): OfficeExtension.ClientResult<string>;'
    return:
      type:
      - OfficeExtension.ClientResult<string>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1d048-119\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"1d048-119\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a commmand to get the OOXML contents of the body.\n    var bodyOOXML = body.getOoxml();\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log(\"Body OOXML contents: \" + bodyOOXML.value);\n    });\n})\n.catch(function (error) {\n    console.log(\"Error: \" + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: word.Word.Body.getRange
  summary: >-
    <span data-ttu-id="1d048-120">Obtient la totalité du corps, ou le point de début ou de fin du corps, sous la forme d’une plage.</span><span class="sxs-lookup"><span data-stu-id="1d048-120">Gets the whole body, or the starting or ending point of the body, as a range.</span></span>


    <span data-ttu-id="1d048-121">\[[Du jeu d’API : WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1d048-121">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getRange(rangeLocation)
  fullName: word.Word.Body.getRange
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRange(rangeLocation?: Word.RangeLocation): Word.Range;'
    return:
      type:
      - Word.Range
      description: ''
    parameters:
    - id: rangeLocation
      description: <span data-ttu-id="1d048-122">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="1d048-122">Optional.</span></span> <span data-ttu-id="1d048-123">L’emplacement de la plage peut être « entier', 'Start', « Fin », « Après » ou « Content ».</span><span class="sxs-lookup"><span data-stu-id="1d048-123">The range location can be 'Whole', 'Start', 'End', 'After', or 'Content'.</span></span>
      type:
      - word.Word.RangeLocation
- uid: word.Word.Body.inlinePictures
  summary: >-
    <span data-ttu-id="1d048-124">Obtient la collection d’objets InlinePicture dans le corps.</span><span class="sxs-lookup"><span data-stu-id="1d048-124">Gets the collection of InlinePicture objects in the body.</span></span> <span data-ttu-id="1d048-125">La collection n’inclut pas les images flottantes.</span><span class="sxs-lookup"><span data-stu-id="1d048-125">The collection does not include floating images.</span></span> <span data-ttu-id="1d048-126">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="1d048-126">Read-only.</span></span>


    <span data-ttu-id="1d048-127">\[[Du jeu d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1d048-127">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: inlinePictures
  fullName: word.Word.Body.inlinePictures
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly inlinePictures: Word.InlinePictureCollection;'
    return:
      type:
      - word.Word.InlinePictureCollection
- uid: word.Word.Body.insertBreak
  summary: >-
    <span data-ttu-id="1d048-p106">Insère un saut à l’emplacement spécifié du document principal. La valeur insertLocation peut être « Start » (début) ou « End » (fin).</span><span class="sxs-lookup"><span data-stu-id="1d048-p106">Inserts a break at the specified location in the main document. The insertLocation value can be 'Start' or 'End'.</span></span>


    <span data-ttu-id="1d048-130">\[[Du jeu d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1d048-130">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertBreak(breakType, insertLocation)
  fullName: word.Word.Body.insertBreak
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertBreak(breakType: Word.BreakType, insertLocation: Word.InsertLocation): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1d048-131\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"1d048-131\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (ctx) {\n\n    // Create a proxy object for the document body.\n    var body = ctx.document.body;\n\n    // Queue a commmand to insert a page break at the start of the document body.\n    body.insertBreak(Word.BreakType.page, Word.InsertLocation.start);\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        console.log('Added a page break at the start of the document body.');\n    });\n})\n.catch(function (error) {\n    console.log(\"Error: \" + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: breakType
      description: <span data-ttu-id="1d048-p107">Obligatoire. Type de saut à ajouter au corps.</span><span class="sxs-lookup"><span data-stu-id="1d048-p107">Required. The break type to add to the body.</span></span>
      type:
      - word.Word.BreakType
    - id: insertLocation
      description: <span data-ttu-id="1d048-p108">Obligatoire. La valeur peut être « Start » (début) ou « End » (fin).</span><span class="sxs-lookup"><span data-stu-id="1d048-p108">Required. The value can be 'Start' or 'End'.</span></span>
      type:
      - Word.InsertLocation
- uid: word.Word.Body.insertContentControl
  summary: >-
    <span data-ttu-id="1d048-136">Encadre l’objet de corps avec un contrôle de contenu de texte enrichi.</span><span class="sxs-lookup"><span data-stu-id="1d048-136">Wraps the body object with a Rich Text content control.</span></span>


    <span data-ttu-id="1d048-137">\[[Du jeu d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1d048-137">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertContentControl()
  fullName: word.Word.Body.insertContentControl
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertContentControl(): Word.ContentControl;'
    return:
      type:
      - word.Word.ContentControl
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1d048-138\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"1d048-138\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a commmand to wrap the body in a content control.\n    body.insertContentControl();\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Wrapped the body in a content control.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: word.Word.Body.insertFileFromBase64
  summary: >-
    <span data-ttu-id="1d048-139">Insère un document dans le corps à l’emplacement spécifié.</span><span class="sxs-lookup"><span data-stu-id="1d048-139">Inserts a document into the body at the specified location.</span></span> <span data-ttu-id="1d048-140">La valeur insertLocation peut être « Remplacer », « Start » ou « Fin ».</span><span class="sxs-lookup"><span data-stu-id="1d048-140">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="1d048-141">\[[Du jeu d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1d048-141">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertFileFromBase64(base64File, insertLocation)
  fullName: word.Word.Body.insertFileFromBase64
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertFileFromBase64(base64File: string, insertLocation: Word.InsertLocation): Word.Range;'
    return:
      type:
      - Word.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1d048-142\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"1d048-142\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a commmand to insert base64 encoded .docx at the beginning of the content body.\n    // You will need to implement getBase64() to pass in a string of a base64 encoded docx file.\n    body.insertFileFromBase64(getBase64(), Word.InsertLocation.start);\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Added base64 encoded text to the beginning of the document body.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: base64File
      description: <span data-ttu-id="1d048-p110">Obligatoire. Contenu d’un fichier .docx encodé au format Base64.</span><span class="sxs-lookup"><span data-stu-id="1d048-p110">Required. The base64 encoded content of a .docx file.</span></span>
      type:
      - string
    - id: insertLocation
      description: <span data-ttu-id="1d048-p111">Obligatoire. La valeur peut être « Replace » (remplacer), « Start » (début) ou « End » (fin).</span><span class="sxs-lookup"><span data-stu-id="1d048-p111">Required. The value can be 'Replace', 'Start', or 'End'.</span></span>
      type:
      - Word.InsertLocation
- uid: word.Word.Body.insertHtml
  summary: >-
    <span data-ttu-id="1d048-147">Insère HTML à l’emplacement spécifié.</span><span class="sxs-lookup"><span data-stu-id="1d048-147">Inserts HTML at the specified location.</span></span> <span data-ttu-id="1d048-148">La valeur insertLocation peut être « Remplacer », « Start » ou « Fin ».</span><span class="sxs-lookup"><span data-stu-id="1d048-148">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="1d048-149">\[[Du jeu d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1d048-149">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertHtml(html, insertLocation)
  fullName: word.Word.Body.insertHtml
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertHtml(html: string, insertLocation: Word.InsertLocation): Word.Range;'
    return:
      type:
      - Word.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1d048-150\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"1d048-150\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a commmand to insert HTML in to the beginning of the body.\n    body.insertHtml(\n        '<strong>This is text inserted with body.insertHtml()</strong>', Word.InsertLocation.start);\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('HTML added to the beginning of the document body.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: html
      description: <span data-ttu-id="1d048-p113">Obligatoire. Code HTML à insérer dans le document.</span><span class="sxs-lookup"><span data-stu-id="1d048-p113">Required. The HTML to be inserted in the document.</span></span>
      type:
      - string
    - id: insertLocation
      description: <span data-ttu-id="1d048-p114">Obligatoire. La valeur peut être « Replace » (remplacer), « Start » (début) ou « End » (fin).</span><span class="sxs-lookup"><span data-stu-id="1d048-p114">Required. The value can be 'Replace', 'Start', or 'End'.</span></span>
      type:
      - Word.InsertLocation
- uid: word.Word.Body.insertInlinePictureFromBase64
  summary: >-
    <span data-ttu-id="1d048-p115">Insère une image dans le corps à l’emplacement spécifié. La valeur insertLocation peut être « Start » (début) ou « End » (fin).</span><span class="sxs-lookup"><span data-stu-id="1d048-p115">Inserts a picture into the body at the specified location. The insertLocation value can be 'Start' or 'End'.</span></span>


    <span data-ttu-id="1d048-157">\[[Du jeu d’API : WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1d048-157">\[ [API set: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertInlinePictureFromBase64(base64EncodedImage, insertLocation)
  fullName: word.Word.Body.insertInlinePictureFromBase64
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocation: Word.InsertLocation): Word.InlinePicture;'
    return:
      type:
      - word.Word.InlinePicture
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1d048-158\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"1d048-158\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a commmand to insert OOXML in to the beginning of the body.\n    body.insertOoxml(\"<pkg:package xmlns:pkg='http://schemas.microsoft.com/office/2006/xmlPackage'><pkg:part pkg:name='/_rels/.rels' pkg:contentType='application/vnd.openxmlformats-package.relationships+xml' pkg:padding='512'><pkg:xmlData><Relationships xmlns='http://schemas.openxmlformats.org/package/2006/relationships'><Relationship Id='rId1' Type='http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument' Target='word/document.xml'/></Relationships></pkg:xmlData></pkg:part><pkg:part pkg:name='/word/document.xml' pkg:contentType='application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml'><pkg:xmlData><w:document xmlns:w='http://schemas.openxmlformats.org/wordprocessingml/2006/main' ><w:body><w:p><w:pPr><w:spacing w:before='360' w:after='0' w:line='480' w:lineRule='auto'/><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr></w:pPr><w:r><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr><w:t>This text has formatting directly applied to achieve its font size, color, line spacing, and paragraph spacing.</w:t></w:r></w:p></w:body></w:document></pkg:xmlData></pkg:part></pkg:package>\", Word.InsertLocation.start);\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('OOXML added to the beginning of the document body.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n\n// Read \"Create better add-ins for Word with Office Open XML\" for guidance on working with OOXML.\n// https://docs.microsoft.com/office/dev/add-ins/word/create-better-add-ins-for-word-with-office-open-xml\n\n// The Word-Add-in-DocumentAssembly sample shows how you can use this API to assemble a document.\n// https://github.com/OfficeDev/Word-Add-in-DocumentAssembly\n```"
    parameters:
    - id: base64EncodedImage
      description: <span data-ttu-id="1d048-p116">Obligatoire. Image encodée au format Base64 à insérer dans le corps.</span><span class="sxs-lookup"><span data-stu-id="1d048-p116">Required. The base64 encoded image to be inserted in the body.</span></span>
      type:
      - string
    - id: insertLocation
      description: <span data-ttu-id="1d048-p117">Obligatoire. La valeur peut être « Start » (début) ou « End » (fin).</span><span class="sxs-lookup"><span data-stu-id="1d048-p117">Required. The value can be 'Start' or 'End'.</span></span>
      type:
      - Word.InsertLocation
- uid: word.Word.Body.insertOoxml
  summary: >-
    <span data-ttu-id="1d048-163">Insère du code OOXML à l’emplacement spécifié.</span><span class="sxs-lookup"><span data-stu-id="1d048-163">Inserts OOXML at the specified location.</span></span> <span data-ttu-id="1d048-164">La valeur insertLocation peut être « Remplacer », « Start » ou « Fin ».</span><span class="sxs-lookup"><span data-stu-id="1d048-164">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="1d048-165">\[[Du jeu d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1d048-165">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertOoxml(ooxml, insertLocation)
  fullName: word.Word.Body.insertOoxml
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertOoxml(ooxml: string, insertLocation: Word.InsertLocation): Word.Range;'
    return:
      type:
      - Word.Range
      description: ''
    parameters:
    - id: ooxml
      description: <span data-ttu-id="1d048-p119">Obligatoire. Code OOXML à insérer.</span><span class="sxs-lookup"><span data-stu-id="1d048-p119">Required. The OOXML to be inserted.</span></span>
      type:
      - string
    - id: insertLocation
      description: <span data-ttu-id="1d048-p120">Obligatoire. La valeur peut être « Replace » (remplacer), « Start » (début) ou « End » (fin).</span><span class="sxs-lookup"><span data-stu-id="1d048-p120">Required. The value can be 'Replace', 'Start', or 'End'.</span></span>
      type:
      - Word.InsertLocation
- uid: word.Word.Body.insertParagraph
  summary: >-
    <span data-ttu-id="1d048-p121">Insère un paragraphe à l’emplacement spécifié. La valeur insertLocation peut être « Start » (début) ou « End » (fin).</span><span class="sxs-lookup"><span data-stu-id="1d048-p121">Inserts a paragraph at the specified location. The insertLocation value can be 'Start' or 'End'.</span></span>


    <span data-ttu-id="1d048-172">\[[Du jeu d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1d048-172">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertParagraph(paragraphText, insertLocation)
  fullName: word.Word.Body.insertParagraph
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation): Word.Paragraph;'
    return:
      type:
      - Word.Paragraph
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1d048-173\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"1d048-173\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a commmand to insert the paragraph at the end of the document body.\n    body.insertParagraph('Content of a new paragraph', Word.InsertLocation.end);\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Paragraph added at the end of the document body.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n\n// The Word-Add-in-DocumentAssembly sample shows how you can use the insertParagraph method to assemble a document.\n// https://github.com/OfficeDev/Word-Add-in-DocumentAssembly\n```\n```typescript\nawait Word.run(async (context) => {\n    let paragraph = context.document.body.insertParagraph(\"Timeline\", \"End\");\n    paragraph.style = \"Heading 2\";\n    let paragraph2 = context.document.body.insertParagraph(\"The Services shall commence on July 31, 2015, and shall continue through July 29, 2015.\", \"End\");\n    paragraph2.style = \"Normal\";\n    let paragraph3 = context.document.body.insertParagraph(\"Project Costs by Phase\", \"End\");\n    paragraph3.style = \"Heading 2\";\n    // Note a content control with the title of \"ProjectCosts\" is added. Content will be replaced later.\n    let paragraph4 = context.document.body.insertParagraph(\"<Add Project Costs Here>\", \"End\");\n    paragraph4.style = \"Normal\";\n    paragraph4.font.highlightColor = \"#FFFF00\";\n    let contentControl = paragraph4.insertContentControl();\n    contentControl.title = \"ProjectCosts\";\n    let paragraph5 = context.document.body.insertParagraph(\"Project Team\", \"End\");\n    paragraph5.style = \"Heading 2\";\n    paragraph5.font.highlightColor = \"#FFFFFF\";\n    let paragraph6 = context.document.body.insertParagraph(\"Terms of Work\", \"End\");\n    paragraph6.style = \"Heading 1\";\n    let paragraph7 = context.document.body.insertParagraph(\"Contractor shall provide the Services and Deliverable(s) as follows:\", \"End\");\n    paragraph7.style = \"Normal\";\n    let paragraph8 = context.document.body.insertParagraph(\"Out-of-Pocket Expenses / Invoice Procedures\", \"End\");\n    paragraph8.style = \"Heading 2\";\n    let paragraph9 = context.document.body.insertParagraph(\"Client will be invoiced monthly for the consulting services and T&L expenses. Standard Contractor invoicing is assumed to be acceptable. Invoices are due upon receipt. client will be invoiced all costs associated with out-of-pocket expenses (including, without limitation, costs and expenses associated with meals, lodging, local transportation and any other applicable business expenses) listed on the invoice as a separate line item. Reimbursement for out-of-pocket expenses in connection with performance of this SOW, when authorized and up to the limits set forth in this SOW, shall be in accordance with Client's then-current published policies governing travel and associated business expenses, which information shall be provided by the Client Project Manager.\", \"End\");\n    paragraph9.style = \"Normal\";\n    // Insert a page break at the end of the document.\n    context.document.body.insertBreak(\"Page\", \"End\");\n\n    await context.sync();\n});\n```"
    parameters:
    - id: paragraphText
      description: <span data-ttu-id="1d048-p122">Obligatoire. Texte de paragraphe à insérer.</span><span class="sxs-lookup"><span data-stu-id="1d048-p122">Required. The paragraph text to be inserted.</span></span>
      type:
      - string
    - id: insertLocation
      description: <span data-ttu-id="1d048-p123">Obligatoire. La valeur peut être « Start » (début) ou « End » (fin).</span><span class="sxs-lookup"><span data-stu-id="1d048-p123">Required. The value can be 'Start' or 'End'.</span></span>
      type:
      - Word.InsertLocation
- uid: word.Word.Body.insertTable
  summary: >-
    <span data-ttu-id="1d048-p124">Insère un tableau avec le nombre spécifié de lignes et de colonnes. La valeur insertLocation peut être « Start » (début) ou « End » (fin).</span><span class="sxs-lookup"><span data-stu-id="1d048-p124">Inserts a table with the specified number of rows and columns. The insertLocation value can be 'Start' or 'End'.</span></span>


    <span data-ttu-id="1d048-180">\[[Du jeu d’API : WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1d048-180">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertTable(rowCount, columnCount, insertLocation, values)
  fullName: word.Word.Body.insertTable
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertTable(rowCount: number, columnCount: number, insertLocation: Word.InsertLocation, values?: string[][]): Word.Table;'
    return:
      type:
      - Word.Table
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1d048-181\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"1d048-181\">Examples</span></span>\n\n```typescript\nawait Word.run(async (context) => {\n    // We need a 2D array to hold the initial table values\n    let data = [[\"Apple\", \"Orange\", \"Pineapple\"], [\"Tokyo\", \"Beijing\", \"Seattle\"]];\n    let table = context.document.body.insertTable(3, 3, \"Start\", data);\n    table.styleBuiltIn = Word.Style.gridTable5Dark_Accent2;\n\n    await context.sync();\n});\n```"
    parameters:
    - id: rowCount
      description: <span data-ttu-id="1d048-p125">Obligatoire. Nombre de lignes dans le tableau.</span><span class="sxs-lookup"><span data-stu-id="1d048-p125">Required. The number of rows in the table.</span></span>
      type:
      - number
    - id: columnCount
      description: <span data-ttu-id="1d048-p126">Obligatoire. Nombre de colonnes dans le tableau.</span><span class="sxs-lookup"><span data-stu-id="1d048-p126">Required. The number of columns in the table.</span></span>
      type:
      - number
    - id: insertLocation
      description: <span data-ttu-id="1d048-p127">Obligatoire. La valeur peut être « Start » (début) ou « End » (fin).</span><span class="sxs-lookup"><span data-stu-id="1d048-p127">Required. The value can be 'Start' or 'End'.</span></span>
      type:
      - Word.InsertLocation
    - id: values
      description: <span data-ttu-id="1d048-188">Tableau 2D facultatif.</span><span class="sxs-lookup"><span data-stu-id="1d048-188">Optional 2D array.</span></span> <span data-ttu-id="1d048-189">Les cellules sont remplies si les chaînes correspondantes sont spécifiées dans le tableau.</span><span class="sxs-lookup"><span data-stu-id="1d048-189">Cells are filled if the corresponding strings are specified in the array.</span></span>
      type:
      - string[][]
- uid: word.Word.Body.insertText
  summary: >-
    <span data-ttu-id="1d048-190">Insère du texte dans le corps à l’emplacement spécifié.</span><span class="sxs-lookup"><span data-stu-id="1d048-190">Inserts text into the body at the specified location.</span></span> <span data-ttu-id="1d048-191">La valeur insertLocation peut être « Remplacer », « Start » ou « Fin ».</span><span class="sxs-lookup"><span data-stu-id="1d048-191">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="1d048-192">\[[Du jeu d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1d048-192">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertText(text, insertLocation)
  fullName: word.Word.Body.insertText
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertText(text: string, insertLocation: Word.InsertLocation): Word.Range;'
    return:
      type:
      - Word.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1d048-193\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"1d048-193\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a commmand to insert text in to the beginning of the body.\n    body.insertText('This is text inserted with body.insertText()', Word.InsertLocation.start);\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Text added to the beginning of the document body.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: text
      description: <span data-ttu-id="1d048-p130">Obligatoire. Texte à insérer.</span><span class="sxs-lookup"><span data-stu-id="1d048-p130">Required. Text to be inserted.</span></span>
      type:
      - string
    - id: insertLocation
      description: <span data-ttu-id="1d048-p131">Obligatoire. La valeur peut être « Replace » (remplacer), « Start » (début) ou « End » (fin).</span><span class="sxs-lookup"><span data-stu-id="1d048-p131">Required. The value can be 'Replace', 'Start', or 'End'.</span></span>
      type:
      - Word.InsertLocation
- uid: word.Word.Body.lists
  summary: >-
    <span data-ttu-id="1d048-p132">Obtient la collection d’objets list dans le corps. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="1d048-p132">Gets the collection of list objects in the body. Read-only.</span></span>


    <span data-ttu-id="1d048-200">\[[Du jeu d’API : WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1d048-200">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: lists
  fullName: word.Word.Body.lists
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly lists: Word.ListCollection;'
    return:
      type:
      - word.Word.ListCollection
- uid: word.Word.Body.load
  summary: <span data-ttu-id="1d048-201">Files d’attente d’une commande pour charger les propriétés de l’objet spécifiées.</span><span class="sxs-lookup"><span data-stu-id="1d048-201">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1d048-202">Vous devez appeler « context.sync() » avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="1d048-202">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="1d048-203">Outre cette signature, cette méthode présente les signatures suivantes :</span><span class="sxs-lookup"><span data-stu-id="1d048-203">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="1d048-204">`load(option?: { select?: string; expand?: string; }): Word.Body`-Où option.select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options.expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="1d048-204">`load(option?: { select?: string; expand?: string; }): Word.Body` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="1d048-205">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Body`-Uniquement disponible sur les types de la collection.</span><span class="sxs-lookup"><span data-stu-id="1d048-205">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Body` - Only available on collection types.</span></span> <span data-ttu-id="1d048-206">Il est similaire à la signature précédente.</span><span class="sxs-lookup"><span data-stu-id="1d048-206">It is similar to the preceding signature.</span></span> <span data-ttu-id="1d048-207">Option.Top Spécifie le nombre maximal d’éléments pouvant être inclus dans le résultat de la collection.</span><span class="sxs-lookup"><span data-stu-id="1d048-207">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="1d048-208">Option.Skip Spécifie le nombre d’éléments qui doivent être ignoré et non inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="1d048-208">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="1d048-209">Si option.top est spécifié, le jeu de résultats démarre après l’ignorer le nombre spécifié d’éléments.</span><span class="sxs-lookup"><span data-stu-id="1d048-209">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>

    #### <a name="examples"></a><span data-ttu-id="1d048-210">Exemples</span><span class="sxs-lookup"><span data-stu-id="1d048-210">Examples</span></span>


    ```javascript

    // Get the text property on the body object

    // Run a batch operation against the Word object model.

    Word.run(function (context) {

        // Create a proxy object for the document body.
        var body = context.document.body;

        // Queue a commmand to load the text in document body.
        context.load(body, 'text');

        // Synchronize the document state by executing the queued commands,
        // and return a promise to indicate task completion.
        return context.sync().then(function () {
            console.log("Body contents: " + body.text);
        });
    })

    .catch(function (error) {
        console.log("Error: " + JSON.stringify(error));
        if (error instanceof OfficeExtension.Error) {
            console.log("Debug info: " + JSON.stringify(error.debugInfo));
        }
    });

    ```

    ```javascript

    // Get the style and the font size, font name, and font color properties on the body object.

    // Run a batch operation against the Word object model.

    Word.run(function (context) {

        // Create a proxy object for the document body.
        var body = context.document.body;

        // Queue a commmand to load font and style information for the document body.
        context.load(body, 'font/size, font/name, font/color, style');

        // Synchronize the document state by executing the queued commands,
        // and return a promise to indicate task completion.
        return context.sync().then(function () {
            // Show the results of the load method. Here we show the
            // property values on the body object.
            var results = 'Font size: ' + body.font.size +
                          '; Font name: ' + body.font.name +
                          '; Font color: ' + body.font.color +
                          '; Body style: ' + body.style;

            console.log(results);
        });
    })

    .catch(function (error) {
        console.log('Error: ' + JSON.stringify(error));
        if (error instanceof OfficeExtension.Error) {
            console.log('Debug info: ' + JSON.stringify(error.debugInfo));
        }
    });

    ```
  name: load(option)
  fullName: word.Word.Body.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Word.Body;'
    return:
      type:
      - Word.Body
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="1d048-211">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="1d048-211">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: word.Word.Body.paragraphs
  summary: >-
    <span data-ttu-id="1d048-p135">Obtient la collection d’objets Paragraph dans le corps. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="1d048-p135">Gets the collection of paragraph objects in the body. Read-only.</span></span>


    <span data-ttu-id="1d048-214">\[[Du jeu d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1d048-214">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: paragraphs
  fullName: word.Word.Body.paragraphs
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly paragraphs: Word.ParagraphCollection;'
    return:
      type:
      - Word.ParagraphCollection
- uid: word.Word.Body.parentBody
  summary: >-
    <span data-ttu-id="1d048-p136">Obtient le corps parent du corps. Par exemple, le corps parent du corps d’une cellule de tableau peut être un en-tête. Renvoie s’il n’existe pas de corps parent. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="1d048-p136">Gets the parent body of the body. For example, a table cell body's parent body could be a header. Throws if there isn't a parent body. Read-only.</span></span>


    <span data-ttu-id="1d048-219">\[[Du jeu d’API : WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1d048-219">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: parentBody
  fullName: word.Word.Body.parentBody
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentBody: Word.Body;'
    return:
      type:
      - Word.Body
- uid: word.Word.Body.parentBodyOrNullObject
  summary: >-
    <span data-ttu-id="1d048-p137">Obtient le corps parent du corps. Par exemple, le corps parent du corps d’une cellule de tableau peut être un en-tête. Renvoie un objet null s’il n’existe pas de corps parent. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="1d048-p137">Gets the parent body of the body. For example, a table cell body's parent body could be a header. Returns a null object if there isn't a parent body. Read-only.</span></span>


    <span data-ttu-id="1d048-224">\[[Du jeu d’API : WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1d048-224">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: parentBodyOrNullObject
  fullName: word.Word.Body.parentBodyOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentBodyOrNullObject: Word.Body;'
    return:
      type:
      - Word.Body
- uid: word.Word.Body.parentContentControl
  summary: >-
    <span data-ttu-id="1d048-p138">Obtient le contrôle de contenu qui contient le corps. Renvoie s’il n’existe pas de contrôle de contenu parent. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="1d048-p138">Gets the content control that contains the body. Throws if there isn't a parent content control. Read-only.</span></span>


    <span data-ttu-id="1d048-228">\[[Du jeu d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1d048-228">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: parentContentControl
  fullName: word.Word.Body.parentContentControl
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentContentControl: Word.ContentControl;'
    return:
      type:
      - word.Word.ContentControl
- uid: word.Word.Body.parentContentControlOrNullObject
  summary: >-
    <span data-ttu-id="1d048-p139">Obtient le contrôle de contenu qui contient le corps. Renvoie un objet null s’il n’existe pas de contrôle de contenu parent. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="1d048-p139">Gets the content control that contains the body. Returns a null object if there isn't a parent content control. Read-only.</span></span>


    <span data-ttu-id="1d048-232">\[[Du jeu d’API : WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1d048-232">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: parentContentControlOrNullObject
  fullName: word.Word.Body.parentContentControlOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentContentControlOrNullObject: Word.ContentControl;'
    return:
      type:
      - word.Word.ContentControl
- uid: word.Word.Body.parentSection
  summary: >-
    <span data-ttu-id="1d048-p140">Obtient la section parent du corps. Renvoie s’il n’existe pas de section parent. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="1d048-p140">Gets the parent section of the body. Throws if there isn't a parent section. Read-only.</span></span>


    <span data-ttu-id="1d048-236">\[[Du jeu d’API : WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1d048-236">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: parentSection
  fullName: word.Word.Body.parentSection
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentSection: Word.Section;'
    return:
      type:
      - Word.Section
- uid: word.Word.Body.parentSectionOrNullObject
  summary: >-
    <span data-ttu-id="1d048-p141">Obtient la section parent du corps. Renvoie un objet null s’il n’existe pas de section parent. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="1d048-p141">Gets the parent section of the body. Returns a null object if there isn't a parent section. Read-only.</span></span>


    <span data-ttu-id="1d048-240">\[[Du jeu d’API : WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1d048-240">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: parentSectionOrNullObject
  fullName: word.Word.Body.parentSectionOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentSectionOrNullObject: Word.Section;'
    return:
      type:
      - Word.Section
- uid: word.Word.Body.search
  summary: >-
    <span data-ttu-id="1d048-241">Effectue une recherche avec les SearchOptions spécifiées de la portée de l’objet body.</span><span class="sxs-lookup"><span data-stu-id="1d048-241">Performs a search with the specified SearchOptions on the scope of the body object.</span></span> <span data-ttu-id="1d048-242">Les résultats de recherche sont une collection d’objets range.</span><span class="sxs-lookup"><span data-stu-id="1d048-242">The search results are a collection of range objects.</span></span>


    <span data-ttu-id="1d048-243">\[[Du jeu d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1d048-243">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: search(searchText, searchOptions)
  fullName: word.Word.Body.search
  langs:
  - typeScript
  type: method
  syntax:
    content: >-
      search(searchText: string, searchOptions?: Word.SearchOptions | {
                  ignorePunct?: boolean;
                  ignoreSpace?: boolean;
                  matchCase?: boolean;
                  matchPrefix?: boolean;
                  matchSuffix?: boolean;
                  matchWholeWord?: boolean;
                  matchWildcards?: boolean;
              }): Word.RangeCollection;
    return:
      type:
      - word.Word.RangeCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1d048-244\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"1d048-244\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a commmand to search the document.\n    var searchResults = context.document.body.search('video', {matchCase: false});\n\n    // Queue a commmand to load the results.\n    context.load(searchResults, 'text, font');\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        var results = 'Found count: ' + searchResults.items.length +\n                      '; we highlighted the results.';\n\n        // Queue a command to change the font for each found item.\n        for (var i = 0; i < searchResults.items.length; i++) {\n          searchResults.items[i].font.color = '#FF0000'    // Change color to Red\n          searchResults.items[i].font.highlightColor = '#FFFF00';\n          searchResults.items[i].font.bold = true;\n        }\n\n        // Synchronize the document state by executing the queued commands,\n        // and return a promise to indicate task completion.\n        return context.sync().then(function () {\n            console.log(results);\n        });\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n\n// The Word-Add-in-DocumentAssembly sample provides another example of how to search a document.\n// https://github.com/OfficeDev/Word-Add-in-DocumentAssembly\n```\n```typescript\nawait Word.run(async (context) => {\n    let results = context.document.body.search(\"Online\");\n    results.load(\"font/highlightColor\");\n\n    await context.sync();\n\n    // Let's traverse the search results... and highlight...\n    for (let i = 0; i < results.items.length; i++) {\n        results.items[i].font.highlightColor = \"yellow\";\n    }\n\n    await context.sync();\n});\n```\n```typescript\nawait Word.run(async (context) => {\n    // Check out how wildcard expression are built, also use the second parameter of the search method to include search modes (i.e. we are using wildcards).\n    let results = context.document.body.search(\"$*.[0-9][0-9]\", { matchWildcards: true });\n    results.load(\"font/highlightColor, font/color\");\n\n    await context.sync();\n\n    // Let's traverse the search results... and highlight...\n    for (let i = 0; i < results.items.length; i++) {\n        results.items[i].font.highlightColor = \"red\";\n        results.items[i].font.color = \"white\";\n    }\n\n    await context.sync();\n});\n```"
    parameters:
    - id: searchText
      description: <span data-ttu-id="1d048-245">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="1d048-245">Required.</span></span> <span data-ttu-id="1d048-246">Le texte de recherche.</span><span class="sxs-lookup"><span data-stu-id="1d048-246">The search text.</span></span> <span data-ttu-id="1d048-247">Peut être un maximum de 255 caractères.</span><span class="sxs-lookup"><span data-stu-id="1d048-247">Can be a maximum of 255 characters.</span></span>
      type:
      - string
    - id: searchOptions
      description: <span data-ttu-id="1d048-p144">Facultatif. Options de la recherche.</span><span class="sxs-lookup"><span data-stu-id="1d048-p144">Optional. Options for the search.</span></span>
      type:
      - >-
        Word.SearchOptions | {
                    ignorePunct?: boolean;
                    ignoreSpace?: boolean;
                    matchCase?: boolean;
                    matchPrefix?: boolean;
                    matchSuffix?: boolean;
                    matchWholeWord?: boolean;
                    matchWildcards?: boolean;
                }
- uid: word.Word.Body.select
  summary: >-
    <span data-ttu-id="1d048-250">Sélectionne le corps et y accède via l’interface utilisateur de Word.</span><span class="sxs-lookup"><span data-stu-id="1d048-250">Selects the body and navigates the Word UI to it.</span></span>


    <span data-ttu-id="1d048-251">\[[Du jeu d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1d048-251">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: select(selectionMode)
  fullName: word.Word.Body.select
  langs:
  - typeScript
  type: method
  syntax:
    content: 'select(selectionMode?: Word.SelectionMode): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1d048-252\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"1d048-252\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a commmand to select the document body. The Word UI will\n    // move to the selected document body.\n    body.select();\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Selected the document body.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: selectionMode
      description: <span data-ttu-id="1d048-p145">Facultatif. Le mode de sélection peut être « Select » (sélectionner), « Start » (début) ou « End » (fin). « Select » (sélectionner) est la valeur par défaut.</span><span class="sxs-lookup"><span data-stu-id="1d048-p145">Optional. The selection mode can be 'Select', 'Start', or 'End'. 'Select' is the default.</span></span>
      type:
      - Word.SelectionMode
- uid: word.Word.Body.style
  summary: >-
    <span data-ttu-id="1d048-p146">Obtient ou définit le nom de style du corps. Utilisez cette propriété pour les noms des styles personnalisés et localisés. Pour utiliser les styles prédéfinis qui sont portables entre différents paramètres régionaux, voir la propriété « styleBuiltIn ».</span><span class="sxs-lookup"><span data-stu-id="1d048-p146">Gets or sets the style name for the body. Use this property for custom styles and localized style names. To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.</span></span>


    <span data-ttu-id="1d048-259">\[[Du jeu d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1d048-259">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: style
  fullName: word.Word.Body.style
  langs:
  - typeScript
  type: property
  syntax:
    content: 'style: string;'
    return:
      type:
      - string
- uid: word.Word.Body.styleBuiltIn
  summary: >-
    <span data-ttu-id="1d048-p147">Obtient ou définit le nom de style intégré pour le corps. Utilisez cette propriété pour les styles intégrés qui sont portables entre les paramètres régionaux. Pour utiliser des styles personnalisés ou des noms de style localisés, consultez la propriété « style ».</span><span class="sxs-lookup"><span data-stu-id="1d048-p147">Gets or sets the built-in style name for the body. Use this property for built-in styles that are portable between locales. To use custom styles or localized style names, see the "style" property.</span></span>


    <span data-ttu-id="1d048-263">\[[Du jeu d’API : WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1d048-263">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: styleBuiltIn
  fullName: word.Word.Body.styleBuiltIn
  langs:
  - typeScript
  type: property
  syntax:
    content: 'styleBuiltIn: Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6";'
    return:
      type:
      - Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6"
- uid: word.Word.Body.tables
  summary: >-
    <span data-ttu-id="1d048-p148">Obtient la collection d’objets table dans le corps. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="1d048-p148">Gets the collection of table objects in the body. Read-only.</span></span>


    <span data-ttu-id="1d048-266">\[[Du jeu d’API : WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1d048-266">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: tables
  fullName: word.Word.Body.tables
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly tables: Word.TableCollection;'
    return:
      type:
      - Word.TableCollection
- uid: word.Word.Body.text
  summary: >-
    <span data-ttu-id="1d048-p149">Obtient le texte du corps. Utilisez la méthode insertText pour insérer du texte. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="1d048-p149">Gets the text of the body. Use the insertText method to insert text. Read-only.</span></span>


    <span data-ttu-id="1d048-270">\[[Du jeu d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1d048-270">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: text
  fullName: word.Word.Body.text
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly text: string;'
    return:
      type:
      - string
- uid: word.Word.Body.toJSON
  name: toJSON()
  fullName: word.Word.Body.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Word.Interfaces.BodyData;'
    return:
      type:
      - word.Word.Interfaces.BodyData
      description: ''
- uid: word.Word.Body.track
  summary: <span data-ttu-id="1d048-271">Suivre l’objet pour l’ajustement automatique selon entourant les modifications dans le document.</span><span class="sxs-lookup"><span data-stu-id="1d048-271">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="1d048-272">Cet appel est une abréviation de context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="1d048-272">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="1d048-273">Si vous utilisez cet objet dans les appels de « .sync » et en dehors de l’exécution séquentielle d’un lot de « .run » et obtenir une erreur « InvalidObjectPath » lors de la définition d’une propriété ou d’appeler une méthode sur l’objet, vous devez avoir ajouté l’objet à l’objet suivi collection lorsque l’objet a été créé tout d’abord.</span><span class="sxs-lookup"><span data-stu-id="1d048-273">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>
  name: track()
  fullName: word.Word.Body.track
  langs:
  - typeScript
  type: method
  syntax:
    content: 'track(): Word.Body;'
    return:
      type:
      - Word.Body
      description: ''
- uid: word.Word.Body.type
  summary: >-
    <span data-ttu-id="1d048-p151">Obtient le type du corps. Le type peut être « MainDoc », « Section », « Header », « Footer » ou « TableCell ». En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="1d048-p151">Gets the type of the body. The type can be 'MainDoc', 'Section', 'Header', 'Footer', or 'TableCell'. Read-only.</span></span>


    <span data-ttu-id="1d048-277">\[[Du jeu d’API : WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1d048-277">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: type
  fullName: word.Word.Body.type
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly type: Word.BodyType | "Unknown" | "MainDoc" | "Section" | "Header" | "Footer" | "TableCell";'
    return:
      type:
      - Word.BodyType | "Unknown" | "MainDoc" | "Section" | "Header" | "Footer" | "TableCell"
- uid: word.Word.Body.untrack
  summary: <span data-ttu-id="1d048-278">Version de la mémoire associée à cet objet, si elle a été précédemment suivi.</span><span class="sxs-lookup"><span data-stu-id="1d048-278">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="1d048-279">Cet appel est l’abréviation de context.trackedObjects.remove(thisObject).</span><span class="sxs-lookup"><span data-stu-id="1d048-279">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="1d048-280">Comportant de nombreux objets suivis ralentit l’application hôte, donc pensez à libérer les objets que vous ajoutez, une fois que vous avez terminé les utiliser.</span><span class="sxs-lookup"><span data-stu-id="1d048-280">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them.</span></span> <span data-ttu-id="1d048-281">Vous devrez appeler « context.sync() » avant que la version de mémoire prenne effet.</span><span class="sxs-lookup"><span data-stu-id="1d048-281">You will need to call "context.sync()" before the memory release takes effect.</span></span>
  name: untrack()
  fullName: word.Word.Body.untrack
  langs:
  - typeScript
  type: method
  syntax:
    content: 'untrack(): Word.Body;'
    return:
      type:
      - Word.Body
      description: ''
