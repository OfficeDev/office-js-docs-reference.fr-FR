### YamlMime:UniversalReference
ms.openlocfilehash: a00af68330cbcf8d0eeb2819529eb710e3d45d17
ms.sourcegitcommit: 016e17422cf62dc9f1de1809666e9244e41cc1a9
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 11/09/2018
ms.locfileid: "26235345"
items:
- uid: word.Word.List
  summary: >-
    Contient une collection d’objets [Word.Paragraph](xref:word.Word.Paragraph) .


    \[[Du jeu d’API : WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  name: Word.List
  fullName: Word.List
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: word
  children:
  - word.Word.List.getLevelParagraphs
  - word.Word.List.getLevelString
  - word.Word.List.id
  - word.Word.List.insertParagraph
  - word.Word.List.levelExistences
  - word.Word.List.levelTypes
  - word.Word.List.load
  - word.Word.List.paragraphs
  - word.Word.List.setLevelAlignment
  - word.Word.List.setLevelBullet
  - word.Word.List.setLevelIndents
  - word.Word.List.setLevelNumbering
  - word.Word.List.setLevelStartingNumber
  - word.Word.List.toJSON
  - word.Word.List.track
  - word.Word.List.untrack
- uid: word.Word.List.getLevelParagraphs
  summary: >-
    Obtient les paragraphes qui figurent au niveau spécifié de la liste.


    \[[Du jeu d’API : WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  name: getLevelParagraphs(level)
  fullName: getLevelParagraphs
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getLevelParagraphs(level: number): Word.ParagraphCollection;'
    return:
      type:
      - Word.ParagraphCollection
      description: ''
    parameters:
    - id: level
      description: Obligatoire. Niveau dans la liste.
      type:
      - number
- uid: word.Word.List.getLevelString
  summary: >-
    Obtient la puce, le nombre ou l’image au niveau spécifié, sous la forme d’une chaîne.


    \[[Du jeu d’API : WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  name: getLevelString(level)
  fullName: getLevelString
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getLevelString(level: number): OfficeExtension.ClientResult<string>;'
    return:
      type:
      - OfficeExtension.ClientResult<string>
      description: ''
    parameters:
    - id: level
      description: Obligatoire. Niveau dans la liste.
      type:
      - number
- uid: word.Word.List.id
  summary: >-
    Obtient l’id de la liste.


    \[[Du jeu d’API : WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: number;'
    return:
      type:
      - number
- uid: word.Word.List.insertParagraph
  summary: >-
    Insère un paragraphe à l’emplacement spécifié. La valeur d’insertLocation peut être « Démarrer », « Fin », « Avant » ou « After ».


    \[[Du jeu d’API : WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  name: insertParagraph(paragraphText, insertLocation)
  fullName: insertParagraph
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation): Word.Paragraph;'
    return:
      type:
      - Word.Paragraph
      description: ''
    parameters:
    - id: paragraphText
      description: Obligatoire. Texte de paragraphe à insérer.
      type:
      - string
    - id: insertLocation
      description: Obligatoire. La valeur peut être « Démarrer », « Fin », « Avant » ou « After ».
      type:
      - Word.InsertLocation
- uid: word.Word.List.levelExistences
  summary: >-
    Vérifie si chacun des 9 niveaux existe dans la liste. Une valeur True indique le niveau existe, ce qui signifie qu’il existe au moins un élément de liste à ce niveau. En lecture seule.


    \[[Du jeu d’API : WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  name: levelExistences
  fullName: levelExistences
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly levelExistences: boolean[];'
    return:
      type:
      - boolean[]
- uid: word.Word.List.levelTypes
  summary: >-
    Obtient tous les types de niveau 9 dans la liste. Chaque type peut être « Puce », « Numéro » ou « Images ». En lecture seule.


    \[[Du jeu d’API : WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  name: levelTypes
  fullName: levelTypes
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly levelTypes: Word.ListLevelType[];'
    return:
      type:
      - Word.ListLevelType[]
- uid: word.Word.List.load
  summary: Files d’attente d’une commande pour charger les propriétés de l’objet spécifiées. Vous devez appeler « context.sync() » avant de lire les propriétés.
  remarks: >-
    Outre cette signature, cette méthode présente les signatures suivantes :


    `load(option?: { select?: string; expand?: string; }): Word.List`-Où option.select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options.expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.List`-Uniquement disponible sur les types de la collection. Il est similaire à la signature précédente. Option.Top Spécifie le nombre maximal d’éléments pouvant être inclus dans le résultat de la collection. Option.Skip Spécifie le nombre d’éléments qui doivent être ignoré et non inclus dans le résultat. Si option.top est spécifié, le jeu de résultats démarre après l’ignorer le nombre spécifié d’éléments.
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Word.List;'
    return:
      type:
      - word.Word.List
      description: ''
    parameters:
    - id: option
      description: Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.
      type:
      - string | string[]
- uid: word.Word.List.paragraphs
  summary: >-
    Obtient les paragraphes de la liste. En lecture seule.


    \[[Du jeu d’API : WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  name: paragraphs
  fullName: paragraphs
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly paragraphs: Word.ParagraphCollection;'
    return:
      type:
      - Word.ParagraphCollection
- uid: word.Word.List.setLevelAlignment
  summary: >-
    Définit l’alignement de la puce, du numéro ou de l’image au niveau spécifié de la liste.


    \[[Du jeu d’API : WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  name: setLevelAlignment(level, alignment)
  fullName: setLevelAlignment
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setLevelAlignment(level: number, alignment: Word.Alignment): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: level
      description: Obligatoire. Niveau dans la liste.
      type:
      - number
    - id: alignment
      description: Obligatoire. Alignement au niveau qui peut être 'Gauche', « Centré » ou « Droite ».
      type:
      - word.Word.Alignment
- uid: word.Word.List.setLevelBullet
  summary: >-
    Définit le format de puce au niveau spécifié de la liste. Si la puce est « Custom », la valeur charCode est requise.


    \[[Du jeu d’API : WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  name: setLevelBullet(level, listBullet, charCode, fontName)
  fullName: setLevelBullet
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setLevelBullet(level: number, listBullet: Word.ListBullet, charCode?: number, fontName?: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: level
      description: Obligatoire. Niveau dans la liste.
      type:
      - number
    - id: listBullet
      description: Obligatoire. La puce.
      type:
      - word.Word.ListBullet
    - id: charCode
      description: Facultatif. Valeur de code de la puce. Utilisé uniquement si la puce est « Personnalisé ».
      type:
      - number
    - id: fontName
      description: Facultatif. Nom de la police de la puce. Utilisé uniquement si la puce est « Personnalisé ».
      type:
      - string
- uid: word.Word.List.setLevelIndents
  summary: >-
    Définit les deux retraits du niveau spécifié de la liste.


    \[[Du jeu d’API : WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  name: setLevelIndents(level, textIndent, bulletNumberPictureIndent)
  fullName: setLevelIndents
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setLevelIndents(level: number, textIndent: number, bulletNumberPictureIndent: number): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: level
      description: Obligatoire. Niveau dans la liste.
      type:
      - number
    - id: textIndent
      description: Obligatoire. Retrait du texte en points. Il est identique au retrait gauche du paragraphe.
      type:
      - number
    - id: bulletNumberPictureIndent
      description: Obligatoire. Retrait relatif, en points, de la puce, du nombre ou de l’image. Il est identique au retrait de la première ligne du paragraphe.
      type:
      - number
- uid: word.Word.List.setLevelNumbering
  summary: >-
    Définit le format de numérotation du niveau spécifié de la liste.


    \[[Du jeu d’API : WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  name: setLevelNumbering(level, listNumbering, formatString)
  fullName: setLevelNumbering
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setLevelNumbering(level: number, listNumbering: Word.ListNumbering, formatString?: any[]): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: level
      description: Obligatoire. Niveau dans la liste.
      type:
      - number
    - id: listNumbering
      description: Obligatoire. Le format ordinal.
      type:
      - word.Word.ListNumbering
    - id: formatString
      description: Facultatif. Format de chaîne de numérotation défini comme un tableau de chaînes ou d’utiliser des entiers. Chaque entier est un niveau de type numéro est supérieure ou égale à ce niveau. Par exemple, un tableau de \[» («, niveau - 1, «. », niveau, « ")" »\] pouvez définir le format de « (2.c) », où 2 est le numéro d’élément du parent et c est le numéro d’élément de ce niveau.
      type:
      - any[]
- uid: word.Word.List.setLevelStartingNumber
  summary: >-
    Définit le numéro de départ du niveau spécifié de la liste. La valeur par défaut est 1.


    \[[Du jeu d’API : WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  name: setLevelStartingNumber(level, startingNumber)
  fullName: setLevelStartingNumber
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setLevelStartingNumber(level: number, startingNumber: number): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: level
      description: Obligatoire. Niveau dans la liste.
      type:
      - number
    - id: startingNumber
      description: Obligatoire. Nombre par lequel commencer.
      type:
      - number
- uid: word.Word.List.toJSON
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Word.Interfaces.ListData;'
    return:
      type:
      - word.Word.Interfaces.ListData
      description: ''
- uid: word.Word.List.track
  summary: Suivre l’objet pour l’ajustement automatique selon entourant les modifications dans le document. Cet appel est une abréviation de context.trackedObjects.add(thisObject). Si vous utilisez cet objet dans les appels de « .sync » et en dehors de l’exécution séquentielle d’un lot de « .run » et obtenir une erreur « InvalidObjectPath » lors de la définition d’une propriété ou d’appeler une méthode sur l’objet, vous devez avoir ajouté l’objet à l’objet suivi collection lorsque l’objet a été créé tout d’abord.
  name: track()
  fullName: track
  langs:
  - typeScript
  type: method
  syntax:
    content: 'track(): Word.List;'
    return:
      type:
      - word.Word.List
      description: ''
- uid: word.Word.List.untrack
  summary: Version de la mémoire associée à cet objet, si elle a été précédemment suivi. Cet appel est l’abréviation de context.trackedObjects.remove(thisObject). Comportant de nombreux objets suivis ralentit l’application hôte, donc pensez à libérer les objets que vous ajoutez, une fois que vous avez terminé les utiliser. Vous devrez appeler « context.sync() » avant que la version de mémoire prenne effet.
  name: untrack()
  fullName: untrack
  langs:
  - typeScript
  type: method
  syntax:
    content: 'untrack(): Word.List;'
    return:
      type:
      - word.Word.List
      description: ''
