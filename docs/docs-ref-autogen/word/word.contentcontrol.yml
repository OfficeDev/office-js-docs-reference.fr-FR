### YamlMime:UniversalReference
items:
  - uid: word.Word.ContentControl
    summary: |-
      <span data-ttu-id="ce970-p101">Représente un contrôle de contenu. Les contrôles de contenu sont des zones d’un document délimitées par des bordures et pouvant porter une étiquette qui servent à contenir certains types de contenu. Les contrôles de contenu individuels peuvent contenir des images, des tableaux ou des paragraphes de texte mis en forme. Actuellement, seuls les contrôles de contenu à texte enrichi sont pris en charge.</span><span class="sxs-lookup"><span data-stu-id="ce970-p101">Represents a content control. Content controls are bounded and potentially labeled regions in a document that serve as containers for specific types of content. Individual content controls may contain contents such as images, tables, or paragraphs of formatted text. Currently, only rich text content controls are supported.</span></span>

      <span data-ttu-id="ce970-105">\[[Ensemble d'API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ce970-105">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: Word.ContentControl
    fullName: Word.ContentControl
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: word
    children:
      - word.Word.ContentControl.appearance
      - word.Word.ContentControl.cannotDelete
      - word.Word.ContentControl.cannotEdit
      - word.Word.ContentControl.clear
      - word.Word.ContentControl.color
      - word.Word.ContentControl.contentControls
      - word.Word.ContentControl.context
      - word.Word.ContentControl.delete
      - word.Word.ContentControl.font
      - word.Word.ContentControl.getHtml
      - word.Word.ContentControl.getOoxml
      - word.Word.ContentControl.getRange
      - word.Word.ContentControl.getRange_1
      - word.Word.ContentControl.getTextRanges
      - word.Word.ContentControl.id
      - word.Word.ContentControl.inlinePictures
      - word.Word.ContentControl.insertBreak
      - word.Word.ContentControl.insertBreak_1
      - word.Word.ContentControl.insertFileFromBase64
      - word.Word.ContentControl.insertFileFromBase64_1
      - word.Word.ContentControl.insertHtml
      - word.Word.ContentControl.insertHtml_1
      - word.Word.ContentControl.insertInlinePictureFromBase64
      - word.Word.ContentControl.insertInlinePictureFromBase64_1
      - word.Word.ContentControl.insertOoxml
      - word.Word.ContentControl.insertOoxml_1
      - word.Word.ContentControl.insertParagraph
      - word.Word.ContentControl.insertParagraph_1
      - word.Word.ContentControl.insertTable
      - word.Word.ContentControl.insertTable_1
      - word.Word.ContentControl.insertText
      - word.Word.ContentControl.insertText_1
      - word.Word.ContentControl.lists
      - word.Word.ContentControl.load
      - word.Word.ContentControl.load_1
      - word.Word.ContentControl.load_2
      - word.Word.ContentControl.paragraphs
      - word.Word.ContentControl.parentBody
      - word.Word.ContentControl.parentContentControl
      - word.Word.ContentControl.parentContentControlOrNullObject
      - word.Word.ContentControl.parentTable
      - word.Word.ContentControl.parentTableCell
      - word.Word.ContentControl.parentTableCellOrNullObject
      - word.Word.ContentControl.parentTableOrNullObject
      - word.Word.ContentControl.placeholderText
      - word.Word.ContentControl.removeWhenEdited
      - word.Word.ContentControl.search
      - word.Word.ContentControl.select
      - word.Word.ContentControl.select_1
      - word.Word.ContentControl.set
      - word.Word.ContentControl.set_1
      - word.Word.ContentControl.split
      - word.Word.ContentControl.style
      - word.Word.ContentControl.styleBuiltIn
      - word.Word.ContentControl.subtype
      - word.Word.ContentControl.tables
      - word.Word.ContentControl.tag
      - word.Word.ContentControl.text
      - word.Word.ContentControl.title
      - word.Word.ContentControl.toJSON
      - word.Word.ContentControl.track
      - word.Word.ContentControl.type
      - word.Word.ContentControl.untrack
  - uid: word.Word.ContentControl.appearance
    summary: |-
      <span data-ttu-id="ce970-106">Obtient ou définit l’apparence du contrôle de contenu.</span><span class="sxs-lookup"><span data-stu-id="ce970-106">Gets or sets the appearance of the content control.</span></span> <span data-ttu-id="ce970-107">La valeur peut être'BoundingBox', 'Tags'ou'Hidden'.</span><span class="sxs-lookup"><span data-stu-id="ce970-107">The value can be 'BoundingBox', 'Tags', or 'Hidden'.</span></span>

      <span data-ttu-id="ce970-108">\[[Ensemble d'API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ce970-108">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: appearance
    fullName: appearance
    langs:
      - typeScript
    type: property
    syntax:
      content: 'appearance: Word.ContentControlAppearance | "BoundingBox" | "Tags" | "Hidden";'
      return:
        type:
          - Word.ContentControlAppearance | "BoundingBox" | "Tags" | "Hidden"
  - uid: word.Word.ContentControl.cannotDelete
    summary: |-
      <span data-ttu-id="ce970-109">Obtient ou définit une valeur qui indique si l’utilisateur peut supprimer le contrôle de contenu.</span><span class="sxs-lookup"><span data-stu-id="ce970-109">Gets or sets a value that indicates whether the user can delete the content control.</span></span> <span data-ttu-id="ce970-110">Non compatible avec removeWhenEdited.</span><span class="sxs-lookup"><span data-stu-id="ce970-110">Mutually exclusive with removeWhenEdited.</span></span>

      <span data-ttu-id="ce970-111">\[[Ensemble d'API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ce970-111">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: cannotDelete
    fullName: cannotDelete
    langs:
      - typeScript
    type: property
    syntax:
      content: 'cannotDelete: boolean;'
      return:
        type:
          - boolean
  - uid: word.Word.ContentControl.cannotEdit
    summary: |-
      <span data-ttu-id="ce970-112">Obtient ou définit une valeur qui indique si l’utilisateur peut modifier le contenu du contrôle.</span><span class="sxs-lookup"><span data-stu-id="ce970-112">Gets or sets a value that indicates whether the user can edit the contents of the content control.</span></span>

      <span data-ttu-id="ce970-113">\[[Ensemble d'API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ce970-113">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: cannotEdit
    fullName: cannotEdit
    langs:
      - typeScript
    type: property
    syntax:
      content: 'cannotEdit: boolean;'
      return:
        type:
          - boolean
  - uid: word.Word.ContentControl.clear
    summary: |-
      <span data-ttu-id="ce970-114">Efface le contenu du contrôle de contenu.</span><span class="sxs-lookup"><span data-stu-id="ce970-114">Clears the contents of the content control.</span></span> <span data-ttu-id="ce970-115">L’utilisateur peut effectuer l’opération d’annulation sur le contenu effacé.</span><span class="sxs-lookup"><span data-stu-id="ce970-115">The user can perform the undo operation on the cleared content.</span></span>

      <span data-ttu-id="ce970-116">\[[Ensemble d'API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ce970-116">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="ce970-117">Exemples</span><span class="sxs-lookup"><span data-stu-id="ce970-117">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {
              
              // Create a proxy object for the content controls collection.
              var contentControls = context.document.contentControls;
              
              // Queue a command to load the content controls collection.
              contentControls.load('text');
               
              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  
                  if (contentControls.items.length === 0) {
                      console.log("There isn't a content control in this document.");
                  } else {
                      
                      // Queue a command to clear the contents of the first content control.
                      contentControls.items[0].clear();
                      // Synchronize the document state by executing the queued commands, 
                      // and return a promise to indicate task completion.
                      return context.sync().then(function () {
                          console.log('Content control cleared of contents.');
                      });      
                  }
                      
              });  
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word.Word.ContentControl.color
    summary: |-
      <span data-ttu-id="ce970-118">Obtient ou définit la couleur du contrôle de contenu.</span><span class="sxs-lookup"><span data-stu-id="ce970-118">Gets or sets the color of the content control.</span></span> <span data-ttu-id="ce970-119">La couleur est spécifiée au\#format «RRGGBB» ou en utilisant le nom de la couleur.</span><span class="sxs-lookup"><span data-stu-id="ce970-119">Color is specified in '\#RRGGBB' format or by using the color name.</span></span>

      <span data-ttu-id="ce970-120">\[[Ensemble d'API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ce970-120">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: color
    fullName: color
    langs:
      - typeScript
    type: property
    syntax:
      content: 'color: string;'
      return:
        type:
          - string
  - uid: word.Word.ContentControl.contentControls
    summary: |-
      <span data-ttu-id="ce970-121">Obtient la collection d’objets de contrôle de contenu compris dans le contrôle de contenu.</span><span class="sxs-lookup"><span data-stu-id="ce970-121">Gets the collection of content control objects in the content control.</span></span> <span data-ttu-id="ce970-122">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="ce970-122">Read-only.</span></span>

      <span data-ttu-id="ce970-123">\[[Ensemble d'API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ce970-123">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: contentControls
    fullName: contentControls
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly contentControls: Word.ContentControlCollection;'
      return:
        type:
          - word.Word.ContentControlCollection
  - uid: word.Word.ContentControl.context
    summary: <span data-ttu-id="ce970-124">Contexte de demande associé à l'objet.</span><span class="sxs-lookup"><span data-stu-id="ce970-124">The request context associated with the object.</span></span> <span data-ttu-id="ce970-125">Cette opération connecte le processus du complément au processus de l'application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="ce970-125">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: word.Word.ContentControl.delete
    summary: |-
      <span data-ttu-id="ce970-126">Supprime le contrôle de contenu et son contenu.</span><span class="sxs-lookup"><span data-stu-id="ce970-126">Deletes the content control and its content.</span></span> <span data-ttu-id="ce970-127">Si keepContent est défini sur true, le contenu n’est pas supprimé.</span><span class="sxs-lookup"><span data-stu-id="ce970-127">If keepContent is set to true, the content is not deleted.</span></span>

      <span data-ttu-id="ce970-128">\[[Ensemble d'API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ce970-128">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: delete(keepContent)
    fullName: delete(keepContent)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(keepContent: boolean): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="ce970-129">Exemples</span><span class="sxs-lookup"><span data-stu-id="ce970-129">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {
              
              // Create a proxy object for the content controls collection.
              var contentControls = context.document.contentControls;
              
              // Queue a command to load the content controls collection.
              contentControls.load('text');
               
              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  
                  if (contentControls.items.length === 0) {
                      console.log("There isn't a content control in this document.");
                  } else {
                      
                      // Queue a command to delete the first content control. The
                      // contents will remain in the document.
                      contentControls.items[0].delete(true);
                      // Synchronize the document state by executing the queued commands, 
                      // and return a promise to indicate task completion.
                      return context.sync().then(function () {
                          console.log('Content control cleared of contents.');
                      });      
                  }
                      
              });  
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: keepContent
          description: '<span data-ttu-id="ce970-130">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="ce970-130">Required.</span></span> <span data-ttu-id="ce970-131">Indique si le contenu doit être supprimé avec le contrôle de contenu.</span><span class="sxs-lookup"><span data-stu-id="ce970-131">Indicates whether the content should be deleted with the content control.</span></span> <span data-ttu-id="ce970-132">Si keepContent est défini sur true, le contenu n’est pas supprimé.</span><span class="sxs-lookup"><span data-stu-id="ce970-132">If keepContent is set to true, the content is not deleted.</span></span>'
          type:
            - boolean
  - uid: word.Word.ContentControl.font
    summary: |-
      <span data-ttu-id="ce970-133">Obtient le format de texte du contrôle de contenu.</span><span class="sxs-lookup"><span data-stu-id="ce970-133">Gets the text format of the content control.</span></span> <span data-ttu-id="ce970-134">Utilisez cette propriété pour obtenir et définir le nom de la police, la taille, la couleur et d’autres propriétés.</span><span class="sxs-lookup"><span data-stu-id="ce970-134">Use this to get and set font name, size, color, and other properties.</span></span> <span data-ttu-id="ce970-135">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="ce970-135">Read-only.</span></span>

      <span data-ttu-id="ce970-136">\[[Ensemble d'API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ce970-136">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: font
    fullName: font
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly font: Word.Font;'
      return:
        type:
          - word.Word.Font
  - uid: word.Word.ContentControl.getHtml
    summary: |-
      <span data-ttu-id="ce970-137">Obtient une représentation HTML de l'objet de contrôle de contenu.</span><span class="sxs-lookup"><span data-stu-id="ce970-137">Gets an HTML representation of the content control object.</span></span> <span data-ttu-id="ce970-138">Lorsqu'elle est affichée dans une page Web ou dans la visionneuse HTML, la mise en forme est une correspondance étroite, mais pas exacte, de la mise en forme du document.</span><span class="sxs-lookup"><span data-stu-id="ce970-138">When rendered in a web page or HTML viewer, the formatting will be a close, but not exact, match for of the formatting of the document.</span></span> <span data-ttu-id="ce970-139">Cette méthode ne renvoie pas exactement le même code HTML pour le même document sur différentes plateformes (Windows, Mac, Word Online, etc.).</span><span class="sxs-lookup"><span data-stu-id="ce970-139">This method does not return the exact same HTML for the same document on different platforms (Windows, Mac, Word Online, etc.).</span></span> <span data-ttu-id="ce970-140">Si vous avez besoin d'une fidélité exacte ou d'une cohérence `ContentControl.getOoxml()` entre les plateformes, utilisez et convertissez le code XML renvoyé en html.</span><span class="sxs-lookup"><span data-stu-id="ce970-140">If you need exact fidelity, or consistency across platforms, use `ContentControl.getOoxml()` and convert the returned XML to HTML.</span></span>

      <span data-ttu-id="ce970-141">\[[Ensemble d'API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ce970-141">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getHtml()
    fullName: getHtml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getHtml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - OfficeExtension.ClientResult<string>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="ce970-142">Exemples</span><span class="sxs-lookup"><span data-stu-id="ce970-142">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {
              
              // Create a proxy object for the content controls collection that contains a specific tag.
              var contentControlsWithTag = context.document.contentControls.getByTag('Customer-Address');
              
              // Queue a command to load the tag property for all of content controls. 
              context.load(contentControlsWithTag, 'tag');
               
              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  if (contentControlsWithTag.items.length === 0) {
                      console.log('No content control found.');
                  }
                  else {
                      // Queue a command to get the HTML contents of the first content control.
                      var html = contentControlsWithTag.items[0].getHtml();
                  
                      // Synchronize the document state by executing the queued commands, 
                      // and return a promise to indicate task completion.
                      return context.sync()
                          .then(function () {
                              console.log('Content control HTML: ' + html.value);
                      });
                  }
              });  
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word.Word.ContentControl.getOoxml
    summary: |-
      <span data-ttu-id="ce970-143">Obtient la représentation Office Open XML (OOXML) de l’objet de contrôle de contenu.</span><span class="sxs-lookup"><span data-stu-id="ce970-143">Gets the Office Open XML (OOXML) representation of the content control object.</span></span>

      <span data-ttu-id="ce970-144">\[[Ensemble d'API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ce970-144">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getOoxml()
    fullName: getOoxml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getOoxml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - OfficeExtension.ClientResult<string>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="ce970-145">Exemples</span><span class="sxs-lookup"><span data-stu-id="ce970-145">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {
              
              // Create a proxy object for the content controls collection.
              var contentControls = context.document.contentControls;
              
              // Queue a command to load the id property for all of the content controls. 
              context.load(contentControls, 'id');
               
              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  if (contentControls.items.length === 0) {
                      console.log('No content control found.');
                  }
                  else {
                      // Queue a command to get the OOXML contents of the first content control.
                      var ooxml = contentControls.items[0].getOoxml();
                  
                      // Synchronize the document state by executing the queued commands, 
                      // and return a promise to indicate task completion.
                      return context.sync()
                          .then(function () {
                              console.log('Content control OOXML: ' + ooxml.value);
                      });
                  }
              });  
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word.Word.ContentControl.getRange
    summary: |-
      <span data-ttu-id="ce970-146">Obtient le contrôle de contenu entier, ou le point de début ou de fin du contrôle de contenu, sous la forme d’une plage.</span><span class="sxs-lookup"><span data-stu-id="ce970-146">Gets the whole content control, or the starting or ending point of the content control, as a range.</span></span>

      <span data-ttu-id="ce970-147">\[[Ensemble d'API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ce970-147">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getRange(rangeLocation)
    fullName: getRange(rangeLocation)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(rangeLocation?: Word.RangeLocation): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: rangeLocation
          description: '<span data-ttu-id="ce970-148">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="ce970-148">Optional.</span></span> <span data-ttu-id="ce970-149">L''emplacement de la plage peut être «entier», «avant», «démarrer», «fin», «après» ou «contenu».</span><span class="sxs-lookup"><span data-stu-id="ce970-149">The range location can be ''Whole'', ''Before'', ''Start'', ''End'', ''After'', or ''Content''.</span></span>'
          type:
            - word.Word.RangeLocation
  - uid: word.Word.ContentControl.getRange_1
    summary: |-
      <span data-ttu-id="ce970-150">Obtient le contrôle de contenu entier, ou le point de début ou de fin du contrôle de contenu, sous la forme d’une plage.</span><span class="sxs-lookup"><span data-stu-id="ce970-150">Gets the whole content control, or the starting or ending point of the content control, as a range.</span></span>

      <span data-ttu-id="ce970-151">\[[Ensemble d'API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ce970-151">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getRange(rangeLocationString)
    fullName: getRange(rangeLocationString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(rangeLocationString?: "Whole" | "Start" | "End" | "Before" | "After" | "Content"): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: rangeLocationString
          description: '<span data-ttu-id="ce970-152">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="ce970-152">Optional.</span></span> <span data-ttu-id="ce970-153">L''emplacement de la plage peut être «entier», «avant», «démarrer», «fin», «après» ou «contenu».</span><span class="sxs-lookup"><span data-stu-id="ce970-153">The range location can be ''Whole'', ''Before'', ''Start'', ''End'', ''After'', or ''Content''.</span></span>'
          type:
            - '"Whole" | "Start" | "End" | "Before" | "After" | "Content"'
  - uid: word.Word.ContentControl.getTextRanges
    summary: |-
      <span data-ttu-id="ce970-154">Obtient les plages de texte dans le contrôle de contenu à l'aide de signes de ponctuation et/ou d'autres marques de fin.</span><span class="sxs-lookup"><span data-stu-id="ce970-154">Gets the text ranges in the content control by using punctuation marks and/or other ending marks.</span></span>

      <span data-ttu-id="ce970-155">\[[Ensemble d'API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ce970-155">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'getTextRanges(endingMarks, trimSpacing)'
    fullName: 'getTextRanges(endingMarks, trimSpacing)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTextRanges(endingMarks: string[], trimSpacing?: boolean): Word.RangeCollection;'
      return:
        type:
          - Word.RangeCollection
        description: ''
      parameters:
        - id: endingMarks
          description: <span data-ttu-id="ce970-156">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="ce970-156">Required.</span></span> <span data-ttu-id="ce970-157">Marques de ponctuation et/ou autres marques de fin en tant que tableau de chaînes.</span><span class="sxs-lookup"><span data-stu-id="ce970-157">The punctuation marks and/or other ending marks as an array of strings.</span></span>
          type:
            - 'string[]'
        - id: trimSpacing
          description: '<span data-ttu-id="ce970-158">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="ce970-158">Optional.</span></span> <span data-ttu-id="ce970-159">Indique s''il faut supprimer les caractères d''espacement (espaces, tabulations, sauts de colonne et marques de fin de paragraphe) à partir du début et de la fin des plages renvoyées dans la collection Range.</span><span class="sxs-lookup"><span data-stu-id="ce970-159">Indicates whether to trim spacing characters (spaces, tabs, column breaks, and paragraph end marks) from the start and end of the ranges returned in the range collection.</span></span> <span data-ttu-id="ce970-160">La valeur par défaut est false, ce qui indique que l''espacement au début et à la fin des plages est inclus dans la collection Range.</span><span class="sxs-lookup"><span data-stu-id="ce970-160">Default is false which indicates that spacing characters at the start and end of the ranges are included in the range collection.</span></span>'
          type:
            - boolean
  - uid: word.Word.ContentControl.id
    summary: |-
      <span data-ttu-id="ce970-161">Obtient un entier qui représente l’identificateur du contrôle de contenu.</span><span class="sxs-lookup"><span data-stu-id="ce970-161">Gets an integer that represents the content control identifier.</span></span> <span data-ttu-id="ce970-162">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="ce970-162">Read-only.</span></span>

      <span data-ttu-id="ce970-163">\[[Ensemble d'API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ce970-163">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: number;'
      return:
        type:
          - number
  - uid: word.Word.ContentControl.inlinePictures
    summary: |-
      <span data-ttu-id="ce970-164">Obtient la collection d’objets inlinePicture du contrôle de contenu.</span><span class="sxs-lookup"><span data-stu-id="ce970-164">Gets the collection of inlinePicture objects in the content control.</span></span> <span data-ttu-id="ce970-165">La collection n’inclut pas d’images flottantes.</span><span class="sxs-lookup"><span data-stu-id="ce970-165">The collection does not include floating images.</span></span> <span data-ttu-id="ce970-166">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="ce970-166">Read-only.</span></span>

      <span data-ttu-id="ce970-167">\[[Ensemble d'API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ce970-167">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: inlinePictures
    fullName: inlinePictures
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly inlinePictures: Word.InlinePictureCollection;'
      return:
        type:
          - word.Word.InlinePictureCollection
  - uid: word.Word.ContentControl.insertBreak
    summary: |-
      <span data-ttu-id="ce970-168">Insère un saut à l’emplacement spécifié du document principal.</span><span class="sxs-lookup"><span data-stu-id="ce970-168">Inserts a break at the specified location in the main document.</span></span> <span data-ttu-id="ce970-169">La valeur insertLocation peut être «Start», «end», «Before» ou «after».</span><span class="sxs-lookup"><span data-stu-id="ce970-169">The insertLocation value can be 'Start', 'End', 'Before', or 'After'.</span></span> <span data-ttu-id="ce970-170">Cette méthode ne peut pas être utilisée avec les contrôles de contenu «RichTextTable», «RichTextTableRow» et «RichTextTableCell».</span><span class="sxs-lookup"><span data-stu-id="ce970-170">This method cannot be used with 'RichTextTable', 'RichTextTableRow' and 'RichTextTableCell' content controls.</span></span>

      <span data-ttu-id="ce970-171">\[[Ensemble d'API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ce970-171">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertBreak(breakType, insertLocation)'
    fullName: 'insertBreak(breakType, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakType: Word.BreakType, insertLocation: Word.InsertLocation): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: breakType
          description: <span data-ttu-id="ce970-172">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="ce970-172">Required.</span></span> <span data-ttu-id="ce970-173">Type de saut.</span><span class="sxs-lookup"><span data-stu-id="ce970-173">Type of break.</span></span>
          type:
            - word.Word.BreakType
        - id: insertLocation
          description: '<span data-ttu-id="ce970-174">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="ce970-174">Required.</span></span> <span data-ttu-id="ce970-175">La valeur peut être «début», «fin», «avant» ou «après».</span><span class="sxs-lookup"><span data-stu-id="ce970-175">The value can be ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - Word.InsertLocation
  - uid: word.Word.ContentControl.insertBreak_1
    summary: |-
      <span data-ttu-id="ce970-176">Insère un saut à l’emplacement spécifié du document principal.</span><span class="sxs-lookup"><span data-stu-id="ce970-176">Inserts a break at the specified location in the main document.</span></span> <span data-ttu-id="ce970-177">La valeur insertLocation peut être «Start», «end», «Before» ou «after».</span><span class="sxs-lookup"><span data-stu-id="ce970-177">The insertLocation value can be 'Start', 'End', 'Before', or 'After'.</span></span> <span data-ttu-id="ce970-178">Cette méthode ne peut pas être utilisée avec les contrôles de contenu «RichTextTable», «RichTextTableRow» et «RichTextTableCell».</span><span class="sxs-lookup"><span data-stu-id="ce970-178">This method cannot be used with 'RichTextTable', 'RichTextTableRow' and 'RichTextTableCell' content controls.</span></span>

      <span data-ttu-id="ce970-179">\[[Ensemble d'API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ce970-179">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertBreak(breakTypeString, insertLocation)'
    fullName: 'insertBreak(breakTypeString, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakTypeString: "Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line", insertLocation: "Before" | "After" | "Start" | "End" | "Replace"): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="ce970-180">Exemples</span><span class="sxs-lookup"><span data-stu-id="ce970-180">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {
              
              // Create a proxy object for the content controls collection.
              var contentControls = context.document.contentControls;
              
              // Queue a commmand to load the id property for all of content controls. 
              context.load(contentControls, 'id');
              
              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion. We now will have 
              // access to the content control collection.
              return context.sync().then(function () {
                  if (contentControls.items.length === 0) {
                      console.log('No content control found.');
                  }
                  else {
                      // Queue a command to insert a page break after the first content control. 
                      contentControls.items[0].insertBreak('page', "After");
                      
                      // Synchronize the document state by executing the queued commands, 
                      // and return a promise to indicate task completion. 
                      return context.sync()
                          .then(function () {
                              console.log('Inserted a page break after the first content control.');    
                      });
                  }
              });  
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: breakTypeString
          description: <span data-ttu-id="ce970-181">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="ce970-181">Required.</span></span> <span data-ttu-id="ce970-182">Type de saut.</span><span class="sxs-lookup"><span data-stu-id="ce970-182">Type of break.</span></span>
          type:
            - '"Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line"'
        - id: insertLocation
          description: '<span data-ttu-id="ce970-183">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="ce970-183">Required.</span></span> <span data-ttu-id="ce970-184">La valeur peut être «début», «fin», «avant» ou «après».</span><span class="sxs-lookup"><span data-stu-id="ce970-184">The value can be ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word.Word.ContentControl.insertFileFromBase64
    summary: "<span data-ttu-id=\"ce970-185\">Insère un document dans le contrôle de contenu à l'emplacement spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-185\">Inserts a document into the content control at the specified location.</span></span> <span data-ttu-id=\"ce970-186\">La valeur insertLocation peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-186\">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>\n\n<span data-ttu-id=\"ce970-187\">\\[[Ensemble d'API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-187\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'insertFileFromBase64(base64File, insertLocation)'
    fullName: 'insertFileFromBase64(base64File, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: base64File
          description: <span data-ttu-id="ce970-188">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="ce970-188">Required.</span></span> <span data-ttu-id="ce970-189">Contenu encodé en base64 d'un fichier. docx.</span><span class="sxs-lookup"><span data-stu-id="ce970-189">The base64 encoded content of a .docx file.</span></span>
          type:
            - string
        - id: insertLocation
          description: "<span data-ttu-id=\"ce970-190\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-190\">Required.</span></span> <span data-ttu-id=\"ce970-191\">La valeur peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-191\">The value can be 'Replace', 'Start', or 'End'.</span></span> <span data-ttu-id=\"ce970-192\">«RePlace» ne peut pas être utilisé avec les contrôles de contenu «RichTextTable» et «RichTextTableRow».</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-192\">'Replace' cannot be used with 'RichTextTable' and 'RichTextTableRow' content controls.</span></span>"
          type:
            - Word.InsertLocation
  - uid: word.Word.ContentControl.insertFileFromBase64_1
    summary: "<span data-ttu-id=\"ce970-193\">Insère un document dans le contrôle de contenu à l'emplacement spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-193\">Inserts a document into the content control at the specified location.</span></span> <span data-ttu-id=\"ce970-194\">La valeur insertLocation peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-194\">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>\n\n<span data-ttu-id=\"ce970-195\">\\[[Ensemble d'API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-195\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'insertFileFromBase64(base64File, insertLocationString)'
    fullName: 'insertFileFromBase64(base64File, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: base64File
          description: <span data-ttu-id="ce970-196">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="ce970-196">Required.</span></span> <span data-ttu-id="ce970-197">Contenu encodé en base64 d'un fichier. docx.</span><span class="sxs-lookup"><span data-stu-id="ce970-197">The base64 encoded content of a .docx file.</span></span>
          type:
            - string
        - id: insertLocationString
          description: "<span data-ttu-id=\"ce970-198\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-198\">Required.</span></span> <span data-ttu-id=\"ce970-199\">La valeur peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-199\">The value can be 'Replace', 'Start', or 'End'.</span></span> <span data-ttu-id=\"ce970-200\">«RePlace» ne peut pas être utilisé avec les contrôles de contenu «RichTextTable» et «RichTextTableRow».</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-200\">'Replace' cannot be used with 'RichTextTable' and 'RichTextTableRow' content controls.</span></span>"
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word.Word.ContentControl.insertHtml
    summary: "<span data-ttu-id=\"ce970-201\">Insère du code HTML dans le contrôle de contenu, à l’emplacement spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-201\">Inserts HTML into the content control at the specified location.</span></span> <span data-ttu-id=\"ce970-202\">La valeur insertLocation peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-202\">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>\n\n<span data-ttu-id=\"ce970-203\">\\[[Ensemble d'API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-203\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'insertHtml(html, insertLocation)'
    fullName: 'insertHtml(html, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: html
          description: <span data-ttu-id="ce970-204">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="ce970-204">Required.</span></span> <span data-ttu-id="ce970-205">Code HTML à insérer dans le contrôle de contenu.</span><span class="sxs-lookup"><span data-stu-id="ce970-205">The HTML to be inserted in to the content control.</span></span>
          type:
            - string
        - id: insertLocation
          description: "<span data-ttu-id=\"ce970-206\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-206\">Required.</span></span> <span data-ttu-id=\"ce970-207\">La valeur peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-207\">The value can be 'Replace', 'Start', or 'End'.</span></span> <span data-ttu-id=\"ce970-208\">«RePlace» ne peut pas être utilisé avec les contrôles de contenu «RichTextTable» et «RichTextTableRow».</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-208\">'Replace' cannot be used with 'RichTextTable' and 'RichTextTableRow' content controls.</span></span>"
          type:
            - Word.InsertLocation
  - uid: word.Word.ContentControl.insertHtml_1
    summary: "<span data-ttu-id=\"ce970-209\">Insère du code HTML dans le contrôle de contenu, à l’emplacement spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-209\">Inserts HTML into the content control at the specified location.</span></span> <span data-ttu-id=\"ce970-210\">La valeur insertLocation peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-210\">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>\n\n<span data-ttu-id=\"ce970-211\">\\[[Ensemble d'API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-211\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'insertHtml(html, insertLocationString)'
    fullName: 'insertHtml(html, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - Word.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="ce970-212">Exemples</span><span class="sxs-lookup"><span data-stu-id="ce970-212">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {
              
              // Create a proxy object for the content controls collection.
              var contentControls = context.document.contentControls;
              
              // Queue a command to load the id property for all of the content controls. 
              context.load(contentControls, 'id');
               
              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  if (contentControls.items.length === 0) {
                      console.log('No content control found.');
                  }
                  else {
                      // Queue a command to put HTML into the contents of the first content control.
                      contentControls.items[0].insertHtml(
                          '<strong>HTML content inserted into the content control.</strong>',
                          'Start');
                  
                      // Synchronize the document state by executing the queued commands, 
                      // and return a promise to indicate task completion.
                      return context.sync()
                          .then(function () {
                              console.log('Inserted HTML in the first content control.');
                      });
                  }
              });  
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: html
          description: <span data-ttu-id="ce970-213">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="ce970-213">Required.</span></span> <span data-ttu-id="ce970-214">Code HTML à insérer dans le contrôle de contenu.</span><span class="sxs-lookup"><span data-stu-id="ce970-214">The HTML to be inserted in to the content control.</span></span>
          type:
            - string
        - id: insertLocationString
          description: "<span data-ttu-id=\"ce970-215\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-215\">Required.</span></span> <span data-ttu-id=\"ce970-216\">La valeur peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-216\">The value can be 'Replace', 'Start', or 'End'.</span></span> <span data-ttu-id=\"ce970-217\">«RePlace» ne peut pas être utilisé avec les contrôles de contenu «RichTextTable» et «RichTextTableRow».</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-217\">'Replace' cannot be used with 'RichTextTable' and 'RichTextTableRow' content controls.</span></span>"
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word.Word.ContentControl.insertInlinePictureFromBase64
    summary: "<span data-ttu-id=\"ce970-218\">Insère une image incluse dans le contrôle de contenu, à l’emplacement spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-218\">Inserts an inline picture into the content control at the specified location.</span></span> <span data-ttu-id=\"ce970-219\">La valeur insertLocation peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-219\">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>\n\n<span data-ttu-id=\"ce970-220\">\\[[Ensemble d'API: WordApi 1,2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-220\">\\[ [API set: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocation)'
    fullName: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocation: Word.InsertLocation): Word.InlinePicture;'
      return:
        type:
          - word.Word.InlinePicture
        description: ''
      parameters:
        - id: base64EncodedImage
          description: <span data-ttu-id="ce970-221">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="ce970-221">Required.</span></span> <span data-ttu-id="ce970-222">Image encodée au format Base64 à insérer dans le contrôle de contenu.</span><span class="sxs-lookup"><span data-stu-id="ce970-222">The base64 encoded image to be inserted in the content control.</span></span>
          type:
            - string
        - id: insertLocation
          description: "<span data-ttu-id=\"ce970-223\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-223\">Required.</span></span> <span data-ttu-id=\"ce970-224\">La valeur peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-224\">The value can be 'Replace', 'Start', or 'End'.</span></span> <span data-ttu-id=\"ce970-225\">«RePlace» ne peut pas être utilisé avec les contrôles de contenu «RichTextTable» et «RichTextTableRow».</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-225\">'Replace' cannot be used with 'RichTextTable' and 'RichTextTableRow' content controls.</span></span>"
          type:
            - Word.InsertLocation
  - uid: word.Word.ContentControl.insertInlinePictureFromBase64_1
    summary: "<span data-ttu-id=\"ce970-226\">Insère une image incluse dans le contrôle de contenu, à l’emplacement spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-226\">Inserts an inline picture into the content control at the specified location.</span></span> <span data-ttu-id=\"ce970-227\">La valeur insertLocation peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-227\">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>\n\n<span data-ttu-id=\"ce970-228\">\\[[Ensemble d'API: WordApi 1,2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-228\">\\[ [API set: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)'
    fullName: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.InlinePicture;'
      return:
        type:
          - word.Word.InlinePicture
        description: ''
      parameters:
        - id: base64EncodedImage
          description: <span data-ttu-id="ce970-229">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="ce970-229">Required.</span></span> <span data-ttu-id="ce970-230">Image encodée au format Base64 à insérer dans le contrôle de contenu.</span><span class="sxs-lookup"><span data-stu-id="ce970-230">The base64 encoded image to be inserted in the content control.</span></span>
          type:
            - string
        - id: insertLocationString
          description: "<span data-ttu-id=\"ce970-231\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-231\">Required.</span></span> <span data-ttu-id=\"ce970-232\">La valeur peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-232\">The value can be 'Replace', 'Start', or 'End'.</span></span> <span data-ttu-id=\"ce970-233\">«RePlace» ne peut pas être utilisé avec les contrôles de contenu «RichTextTable» et «RichTextTableRow».</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-233\">'Replace' cannot be used with 'RichTextTable' and 'RichTextTableRow' content controls.</span></span>"
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word.Word.ContentControl.insertOoxml
    summary: "<span data-ttu-id=\"ce970-234\">Insère OOXML dans le contrôle de contenu à l'emplacement spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-234\">Inserts OOXML into the content control at the specified location.</span></span> <span data-ttu-id=\"ce970-235\">La valeur insertLocation peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-235\">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>\n\n<span data-ttu-id=\"ce970-236\">\\[[Ensemble d'API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-236\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'insertOoxml(ooxml, insertLocation)'
    fullName: 'insertOoxml(ooxml, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: ooxml
          description: <span data-ttu-id="ce970-237">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="ce970-237">Required.</span></span> <span data-ttu-id="ce970-238">OOXML à insérer dans le contrôle de contenu.</span><span class="sxs-lookup"><span data-stu-id="ce970-238">The OOXML to be inserted in to the content control.</span></span>
          type:
            - string
        - id: insertLocation
          description: "<span data-ttu-id=\"ce970-239\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-239\">Required.</span></span> <span data-ttu-id=\"ce970-240\">La valeur peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-240\">The value can be 'Replace', 'Start', or 'End'.</span></span> <span data-ttu-id=\"ce970-241\">«RePlace» ne peut pas être utilisé avec les contrôles de contenu «RichTextTable» et «RichTextTableRow».</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-241\">'Replace' cannot be used with 'RichTextTable' and 'RichTextTableRow' content controls.</span></span>"
          type:
            - Word.InsertLocation
  - uid: word.Word.ContentControl.insertOoxml_1
    summary: "<span data-ttu-id=\"ce970-242\">Insère OOXML dans le contrôle de contenu à l'emplacement spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-242\">Inserts OOXML into the content control at the specified location.</span></span> <span data-ttu-id=\"ce970-243\">La valeur insertLocation peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-243\">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>\n\n<span data-ttu-id=\"ce970-244\">\\[[Ensemble d'API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-244\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'insertOoxml(ooxml, insertLocationString)'
    fullName: 'insertOoxml(ooxml, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - Word.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="ce970-245">Exemples</span><span class="sxs-lookup"><span data-stu-id="ce970-245">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {
              
              // Create a proxy object for the content controls collection.
              var contentControls = context.document.contentControls;
              
              // Queue a command to load the id property for all of the content controls. 
              context.load(contentControls, 'id');
               
              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  if (contentControls.items.length === 0) {
                      console.log('No content control found.');
                  }
                  else {
                      // Queue a command to put OOXML into the contents of the first content control.
                      contentControls.items[0].insertOoxml("<pkg:package xmlns:pkg='http://schemas.microsoft.com/office/2006/xmlPackage'><pkg:part pkg:name='/_rels/.rels' pkg:contentType='application/vnd.openxmlformats-package.relationships+xml' pkg:padding='512'><pkg:xmlData><Relationships xmlns='http://schemas.openxmlformats.org/package/2006/relationships'><Relationship Id='rId1' Type='http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument' Target='word/document.xml'/></Relationships></pkg:xmlData></pkg:part><pkg:part pkg:name='/word/document.xml' pkg:contentType='application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml'><pkg:xmlData><w:document xmlns:w='http://schemas.openxmlformats.org/wordprocessingml/2006/main' ><w:body><w:p><w:pPr><w:spacing w:before='360' w:after='0' w:line='480' w:lineRule='auto'/><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr></w:pPr><w:r><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr><w:t>This text has formatting directly applied to achieve its font size, color, line spacing, and paragraph spacing.</w:t></w:r></w:p></w:body></w:document></pkg:xmlData></pkg:part></pkg:package>", "End");
                  
                      // Synchronize the document state by executing the queued commands, 
                      // and return a promise to indicate task completion.
                      return context.sync()
                          .then(function () {
                              console.log('Inserted OOXML in the first content control.');
                      });
                  }
              });  
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });

          // Read "Create better add-ins for Word with Office Open XML" for guidance on working with OOXML.
          // https://docs.microsoft.com/office/dev/add-ins/word/create-better-add-ins-for-word-with-office-open-xml
          ```
      parameters:
        - id: ooxml
          description: <span data-ttu-id="ce970-246">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="ce970-246">Required.</span></span> <span data-ttu-id="ce970-247">OOXML à insérer dans le contrôle de contenu.</span><span class="sxs-lookup"><span data-stu-id="ce970-247">The OOXML to be inserted in to the content control.</span></span>
          type:
            - string
        - id: insertLocationString
          description: "<span data-ttu-id=\"ce970-248\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-248\">Required.</span></span> <span data-ttu-id=\"ce970-249\">La valeur peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-249\">The value can be 'Replace', 'Start', or 'End'.</span></span> <span data-ttu-id=\"ce970-250\">«RePlace» ne peut pas être utilisé avec les contrôles de contenu «RichTextTable» et «RichTextTableRow».</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-250\">'Replace' cannot be used with 'RichTextTable' and 'RichTextTableRow' content controls.</span></span>"
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word.Word.ContentControl.insertParagraph
    summary: |-
      <span data-ttu-id="ce970-251">Insère un paragraphe à l’emplacement spécifié.</span><span class="sxs-lookup"><span data-stu-id="ce970-251">Inserts a paragraph at the specified location.</span></span> <span data-ttu-id="ce970-252">La valeur insertLocation peut être «Start», «end», «Before» ou «after».</span><span class="sxs-lookup"><span data-stu-id="ce970-252">The insertLocation value can be 'Start', 'End', 'Before', or 'After'.</span></span>

      <span data-ttu-id="ce970-253">\[[Ensemble d'API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ce970-253">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertParagraph(paragraphText, insertLocation)'
    fullName: 'insertParagraph(paragraphText, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation): Word.Paragraph;'
      return:
        type:
          - Word.Paragraph
        description: ''
      parameters:
        - id: paragraphText
          description: <span data-ttu-id="ce970-254">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="ce970-254">Required.</span></span> <span data-ttu-id="ce970-255">Texte de paragraphe à insérer.</span><span class="sxs-lookup"><span data-stu-id="ce970-255">The paragraph text to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="ce970-256">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="ce970-256">Required.</span></span> <span data-ttu-id="ce970-257">La valeur peut être «début», «fin», «avant» ou «après».</span><span class="sxs-lookup"><span data-stu-id="ce970-257">The value can be ''Start'', ''End'', ''Before'', or ''After''.</span></span> <span data-ttu-id="ce970-258">«Before» et «after» ne peuvent pas être utilisés avec les contrôles de contenu «RichTextTable», «RichTextTableRow» et «RichTextTableCell».</span><span class="sxs-lookup"><span data-stu-id="ce970-258">''Before'' and ''After'' cannot be used with ''RichTextTable'', ''RichTextTableRow'' and ''RichTextTableCell'' content controls.</span></span>'
          type:
            - Word.InsertLocation
  - uid: word.Word.ContentControl.insertParagraph_1
    summary: |-
      <span data-ttu-id="ce970-259">Insère un paragraphe à l’emplacement spécifié.</span><span class="sxs-lookup"><span data-stu-id="ce970-259">Inserts a paragraph at the specified location.</span></span> <span data-ttu-id="ce970-260">La valeur insertLocation peut être «Start», «end», «Before» ou «after».</span><span class="sxs-lookup"><span data-stu-id="ce970-260">The insertLocation value can be 'Start', 'End', 'Before', or 'After'.</span></span>

      <span data-ttu-id="ce970-261">\[[Ensemble d'API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ce970-261">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertParagraph(paragraphText, insertLocationString)'
    fullName: 'insertParagraph(paragraphText, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Paragraph;'
      return:
        type:
          - Word.Paragraph
        description: |-


          #### <a name="examples"></a><span data-ttu-id="ce970-262">Exemples</span><span class="sxs-lookup"><span data-stu-id="ce970-262">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {
              
              // Create a proxy object for the content controls collection.
              var contentControls = context.document.contentControls;
              
              // Queue a command to load the id property for all of the content controls. 
              context.load(contentControls, 'id');
               
              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  if (contentControls.items.length === 0) {
                      console.log('No content control found.');
                  }
                  else {
                      // Queue a command to insert a paragraph after the first content control. 
                      contentControls.items[0].insertParagraph('Text of the inserted paragraph.', 'After');
                  
                      // Synchronize the document state by executing the queued commands, 
                      // and return a promise to indicate task completion.
                      return context.sync()
                          .then(function () {
                              console.log('Inserted a paragraph after the first content control.');
                      });
                  }
              });  
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: paragraphText
          description: <span data-ttu-id="ce970-263">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="ce970-263">Required.</span></span> <span data-ttu-id="ce970-264">Texte de paragraphe à insérer.</span><span class="sxs-lookup"><span data-stu-id="ce970-264">The paragraph text to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="ce970-265">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="ce970-265">Required.</span></span> <span data-ttu-id="ce970-266">La valeur peut être «début», «fin», «avant» ou «après».</span><span class="sxs-lookup"><span data-stu-id="ce970-266">The value can be ''Start'', ''End'', ''Before'', or ''After''.</span></span> <span data-ttu-id="ce970-267">«Before» et «after» ne peuvent pas être utilisés avec les contrôles de contenu «RichTextTable», «RichTextTableRow» et «RichTextTableCell».</span><span class="sxs-lookup"><span data-stu-id="ce970-267">''Before'' and ''After'' cannot be used with ''RichTextTable'', ''RichTextTableRow'' and ''RichTextTableCell'' content controls.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word.Word.ContentControl.insertTable
    summary: |-
      <span data-ttu-id="ce970-268">Insère un tableau avec le nombre spécifié de lignes et de colonnes dans un contrôle de contenu ou à proximité de celui-ci.</span><span class="sxs-lookup"><span data-stu-id="ce970-268">Inserts a table with the specified number of rows and columns into, or next to, a content control.</span></span> <span data-ttu-id="ce970-269">La valeur insertLocation peut être «Start», «end», «Before» ou «after».</span><span class="sxs-lookup"><span data-stu-id="ce970-269">The insertLocation value can be 'Start', 'End', 'Before', or 'After'.</span></span>

      <span data-ttu-id="ce970-270">\[[Ensemble d'API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ce970-270">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertTable(rowCount, columnCount, insertLocation, values)'
    fullName: 'insertTable(rowCount, columnCount, insertLocation, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertTable(rowCount: number, columnCount: number, insertLocation: Word.InsertLocation, values?: string[][]): Word.Table;'
      return:
        type:
          - Word.Table
        description: ''
      parameters:
        - id: rowCount
          description: <span data-ttu-id="ce970-271">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="ce970-271">Required.</span></span> <span data-ttu-id="ce970-272">Nombre de lignes dans le tableau.</span><span class="sxs-lookup"><span data-stu-id="ce970-272">The number of rows in the table.</span></span>
          type:
            - number
        - id: columnCount
          description: <span data-ttu-id="ce970-273">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="ce970-273">Required.</span></span> <span data-ttu-id="ce970-274">Nombre de colonnes dans le tableau.</span><span class="sxs-lookup"><span data-stu-id="ce970-274">The number of columns in the table.</span></span>
          type:
            - number
        - id: insertLocation
          description: '<span data-ttu-id="ce970-275">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="ce970-275">Required.</span></span> <span data-ttu-id="ce970-276">La valeur peut être «début», «fin», «avant» ou «après».</span><span class="sxs-lookup"><span data-stu-id="ce970-276">The value can be ''Start'', ''End'', ''Before'', or ''After''.</span></span> <span data-ttu-id="ce970-277">«Before» et «after» ne peuvent pas être utilisés avec les contrôles de contenu «RichTextTable», «RichTextTableRow» et «RichTextTableCell».</span><span class="sxs-lookup"><span data-stu-id="ce970-277">''Before'' and ''After'' cannot be used with ''RichTextTable'', ''RichTextTableRow'' and ''RichTextTableCell'' content controls.</span></span>'
          type:
            - Word.InsertLocation
        - id: values
          description: <span data-ttu-id="ce970-278">Tableau 2D facultatif.</span><span class="sxs-lookup"><span data-stu-id="ce970-278">Optional 2D array.</span></span> <span data-ttu-id="ce970-279">Les cellules sont remplies si les chaînes correspondantes sont spécifiées dans le tableau.</span><span class="sxs-lookup"><span data-stu-id="ce970-279">Cells are filled if the corresponding strings are specified in the array.</span></span>
          type:
            - 'string[][]'
  - uid: word.Word.ContentControl.insertTable_1
    summary: |-
      <span data-ttu-id="ce970-280">Insère un tableau avec le nombre spécifié de lignes et de colonnes dans un contrôle de contenu ou à proximité de celui-ci.</span><span class="sxs-lookup"><span data-stu-id="ce970-280">Inserts a table with the specified number of rows and columns into, or next to, a content control.</span></span> <span data-ttu-id="ce970-281">La valeur insertLocation peut être «Start», «end», «Before» ou «after».</span><span class="sxs-lookup"><span data-stu-id="ce970-281">The insertLocation value can be 'Start', 'End', 'Before', or 'After'.</span></span>

      <span data-ttu-id="ce970-282">\[[Ensemble d'API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ce970-282">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertTable(rowCount, columnCount, insertLocationString, values)'
    fullName: 'insertTable(rowCount, columnCount, insertLocationString, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertTable(rowCount: number, columnCount: number, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace", values?: string[][]): Word.Table;'
      return:
        type:
          - Word.Table
        description: ''
      parameters:
        - id: rowCount
          description: <span data-ttu-id="ce970-283">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="ce970-283">Required.</span></span> <span data-ttu-id="ce970-284">Nombre de lignes dans le tableau.</span><span class="sxs-lookup"><span data-stu-id="ce970-284">The number of rows in the table.</span></span>
          type:
            - number
        - id: columnCount
          description: <span data-ttu-id="ce970-285">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="ce970-285">Required.</span></span> <span data-ttu-id="ce970-286">Nombre de colonnes dans le tableau.</span><span class="sxs-lookup"><span data-stu-id="ce970-286">The number of columns in the table.</span></span>
          type:
            - number
        - id: insertLocationString
          description: '<span data-ttu-id="ce970-287">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="ce970-287">Required.</span></span> <span data-ttu-id="ce970-288">La valeur peut être «début», «fin», «avant» ou «après».</span><span class="sxs-lookup"><span data-stu-id="ce970-288">The value can be ''Start'', ''End'', ''Before'', or ''After''.</span></span> <span data-ttu-id="ce970-289">«Before» et «after» ne peuvent pas être utilisés avec les contrôles de contenu «RichTextTable», «RichTextTableRow» et «RichTextTableCell».</span><span class="sxs-lookup"><span data-stu-id="ce970-289">''Before'' and ''After'' cannot be used with ''RichTextTable'', ''RichTextTableRow'' and ''RichTextTableCell'' content controls.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
        - id: values
          description: <span data-ttu-id="ce970-290">Tableau 2D facultatif.</span><span class="sxs-lookup"><span data-stu-id="ce970-290">Optional 2D array.</span></span> <span data-ttu-id="ce970-291">Les cellules sont remplies si les chaînes correspondantes sont spécifiées dans le tableau.</span><span class="sxs-lookup"><span data-stu-id="ce970-291">Cells are filled if the corresponding strings are specified in the array.</span></span>
          type:
            - 'string[][]'
  - uid: word.Word.ContentControl.insertText
    summary: "<span data-ttu-id=\"ce970-292\">Insère du texte dans le contrôle de contenu, à l’emplacement spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-292\">Inserts text into the content control at the specified location.</span></span> <span data-ttu-id=\"ce970-293\">La valeur insertLocation peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-293\">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>\n\n<span data-ttu-id=\"ce970-294\">\\[[Ensemble d'API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-294\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'insertText(text, insertLocation)'
    fullName: 'insertText(text, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: text
          description: <span data-ttu-id="ce970-295">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="ce970-295">Required.</span></span> <span data-ttu-id="ce970-296">Texte à insérer dans le contrôle de contenu.</span><span class="sxs-lookup"><span data-stu-id="ce970-296">The text to be inserted in to the content control.</span></span>
          type:
            - string
        - id: insertLocation
          description: "<span data-ttu-id=\"ce970-297\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-297\">Required.</span></span> <span data-ttu-id=\"ce970-298\">La valeur peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-298\">The value can be 'Replace', 'Start', or 'End'.</span></span> <span data-ttu-id=\"ce970-299\">«RePlace» ne peut pas être utilisé avec les contrôles de contenu «RichTextTable» et «RichTextTableRow».</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-299\">'Replace' cannot be used with 'RichTextTable' and 'RichTextTableRow' content controls.</span></span>"
          type:
            - Word.InsertLocation
  - uid: word.Word.ContentControl.insertText_1
    summary: "<span data-ttu-id=\"ce970-300\">Insère du texte dans le contrôle de contenu, à l’emplacement spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-300\">Inserts text into the content control at the specified location.</span></span> <span data-ttu-id=\"ce970-301\">La valeur insertLocation peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-301\">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>\n\n<span data-ttu-id=\"ce970-302\">\\[[Ensemble d'API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-302\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'insertText(text, insertLocationString)'
    fullName: 'insertText(text, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - Word.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="ce970-303">Exemples</span><span class="sxs-lookup"><span data-stu-id="ce970-303">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {
              
              // Create a proxy object for the content controls collection.
              var contentControls = context.document.contentControls;
              
              // Queue a command to load the id property for all of the content controls. 
              context.load(contentControls, 'id');
               
              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  if (contentControls.items.length === 0) {
                      console.log('No content control found.');
                  }
                  else {
                      // Queue a command to replace text in the first content control. 
                      contentControls.items[0].insertText('Replaced text in the first content control.', 'Replace');
                  
                      // Synchronize the document state by executing the queued commands, 
                      // and return a promise to indicate task completion.
                      return context.sync()
                          .then(function () {
                              console.log('Replaced text in the first content control.');
                      });
                  }
              });  
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });

          // The Silly stories add-in sample shows how to use the insertText method.
          // https://aka.ms/sillystorywordaddin
          ```
      parameters:
        - id: text
          description: <span data-ttu-id="ce970-304">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="ce970-304">Required.</span></span> <span data-ttu-id="ce970-305">Texte à insérer dans le contrôle de contenu.</span><span class="sxs-lookup"><span data-stu-id="ce970-305">The text to be inserted in to the content control.</span></span>
          type:
            - string
        - id: insertLocationString
          description: "<span data-ttu-id=\"ce970-306\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-306\">Required.</span></span> <span data-ttu-id=\"ce970-307\">La valeur peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-307\">The value can be 'Replace', 'Start', or 'End'.</span></span> <span data-ttu-id=\"ce970-308\">«RePlace» ne peut pas être utilisé avec les contrôles de contenu «RichTextTable» et «RichTextTableRow».</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-308\">'Replace' cannot be used with 'RichTextTable' and 'RichTextTableRow' content controls.</span></span>"
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word.Word.ContentControl.lists
    summary: |-
      <span data-ttu-id="ce970-309">Obtient la collection d’objets list du contrôle de contenu.</span><span class="sxs-lookup"><span data-stu-id="ce970-309">Gets the collection of list objects in the content control.</span></span> <span data-ttu-id="ce970-310">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="ce970-310">Read-only.</span></span>

      <span data-ttu-id="ce970-311">\[[Ensemble d'API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ce970-311">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: lists
    fullName: lists
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly lists: Word.ListCollection;'
      return:
        type:
          - word.Word.ListCollection
  - uid: word.Word.ContentControl.load
    summary: "<span data-ttu-id=\"ce970-312\">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-312\">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id=\"ce970-313\">Vous devez appeler «\_context.sync()\_» avant de lire les propriétés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-313\">You must call \"context.sync()\" before reading the properties.</span></span>"
    remarks: |-
      <span data-ttu-id="ce970-314">En plus de cette signature, cette méthode possède les signatures suivantes:</span><span class="sxs-lookup"><span data-stu-id="ce970-314">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="ce970-315">`load(option?: string | string[]): Word.ContentControl`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="ce970-315">`load(option?: string | string[]): Word.ContentControl` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="ce970-316">`load(option?: { select?: string; expand?: string; }): Word.ContentControl`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="ce970-316">`load(option?: { select?: string; expand?: string; }): Word.ContentControl` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="ce970-317">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.ContentControl`-Uniquement disponible sur les types de collection.</span><span class="sxs-lookup"><span data-stu-id="ce970-317">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.ContentControl` - Only available on collection types.</span></span> <span data-ttu-id="ce970-318">Elle est similaire à la signature précédente.</span><span class="sxs-lookup"><span data-stu-id="ce970-318">It is similar to the preceding signature.</span></span> <span data-ttu-id="ce970-319">Option. Top indique le nombre maximal d'éléments de collection qui peuvent être inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="ce970-319">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="ce970-320">Option. Skip indique le nombre d'éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="ce970-320">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="ce970-321">Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d'éléments.</span><span class="sxs-lookup"><span data-stu-id="ce970-321">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Word.Interfaces.ContentControlLoadOptions): Word.ContentControl;'
      return:
        type:
          - word.Word.ContentControl
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - word.Word.Interfaces.ContentControlLoadOptions
  - uid: word.Word.ContentControl.load_1
    summary: <span data-ttu-id="ce970-322">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="ce970-322">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="ce970-323">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="ce970-323">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.ContentControl;'
      return:
        type:
          - word.Word.ContentControl
        description: |-


          #### <a name="examples"></a><span data-ttu-id="ce970-324">Exemples</span><span class="sxs-lookup"><span data-stu-id="ce970-324">Examples</span></span>

          ```javascript
          // Load all of the content control properties
          // Run a batch operation against the Word object model.
          Word.run(function (context) {
              
              // Create a proxy object for the content controls collection.
              var contentControls = context.document.contentControls;
              
              // Queue a command to load the id property for all of the content controls. 
              context.load(contentControls, 'id');
               
              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  if (contentControls.items.length === 0) {
                      console.log('No content control found.');
                  }
                  else {
                      // Queue a command to load the properties on the first content control. 
                      contentControls.items[0].load(  'appearance,' +
                                                      'cannotDelete,' +
                                                      'cannotEdit,' +
                                                      'id,' +
                                                      'placeHolderText,' +
                                                      'removeWhenEdited,' +
                                                      'title,' +
                                                      'text,' +
                                                      'type,' +
                                                      'style,' +
                                                      'tag,' +
                                                      'font/size,' +
                                                      'font/name,' +
                                                      'font/color');             
                  
                      // Synchronize the document state by executing the queued commands, 
                      // and return a promise to indicate task completion.
                      return context.sync()
                          .then(function () {
                              console.log('Property values of the first content control:' + 
                                  '   ----- appearance: ' + contentControls.items[0].appearance + 
                                  '   ----- cannotDelete: ' + contentControls.items[0].cannotDelete +
                                  '   ----- cannotEdit: ' + contentControls.items[0].cannotEdit +
                                  '   ----- color: ' + contentControls.items[0].color +
                                  '   ----- id: ' + contentControls.items[0].id +
                                  '   ----- placeHolderText: ' + contentControls.items[0].placeholderText +
                                  '   ----- removeWhenEdited: ' + contentControls.items[0].removeWhenEdited +
                                  '   ----- title: ' + contentControls.items[0].title +
                                  '   ----- text: ' + contentControls.items[0].text +
                                  '   ----- type: ' + contentControls.items[0].type +
                                  '   ----- style: ' + contentControls.items[0].style +
                                  '   ----- tag: ' + contentControls.items[0].tag +
                                  '   ----- font size: ' + contentControls.items[0].font.size +
                                  '   ----- font name: ' + contentControls.items[0].font.name +
                                  '   ----- font color: ' + contentControls.items[0].font.color);
                      });
                  }
              });  
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="ce970-325">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="ce970-325">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: word.Word.ContentControl.load_2
    summary: <span data-ttu-id="ce970-326">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="ce970-326">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="ce970-327">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="ce970-327">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Word.ContentControl;'
      return:
        type:
          - word.Word.ContentControl
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="ce970-328">Où propertyNamesAndPaths. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et propertyNamesAndPaths. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="ce970-328">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: word.Word.ContentControl.paragraphs
    summary: |-
      <span data-ttu-id="ce970-329">Obtient la collection d’objets de paragraphe du contrôle de contenu.</span><span class="sxs-lookup"><span data-stu-id="ce970-329">Get the collection of paragraph objects in the content control.</span></span> <span data-ttu-id="ce970-330">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="ce970-330">Read-only.</span></span>

      <span data-ttu-id="ce970-331">\[[Ensemble d'API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ce970-331">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: paragraphs
    fullName: paragraphs
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly paragraphs: Word.ParagraphCollection;'
      return:
        type:
          - Word.ParagraphCollection
  - uid: word.Word.ContentControl.parentBody
    summary: |-
      <span data-ttu-id="ce970-332">Obtient le corps parent du contrôle de contenu.</span><span class="sxs-lookup"><span data-stu-id="ce970-332">Gets the parent body of the content control.</span></span> <span data-ttu-id="ce970-333">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="ce970-333">Read-only.</span></span>

      <span data-ttu-id="ce970-334">\[[Ensemble d'API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ce970-334">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentBody
    fullName: parentBody
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentBody: Word.Body;'
      return:
        type:
          - Word.Body
  - uid: word.Word.ContentControl.parentContentControl
    summary: |-
      <span data-ttu-id="ce970-335">Obtient le contrôle de contenu qui contient le contrôle de contenu spécifié.</span><span class="sxs-lookup"><span data-stu-id="ce970-335">Gets the content control that contains the content control.</span></span> <span data-ttu-id="ce970-336">S'il n'existe pas de contrôle de contenu parent.</span><span class="sxs-lookup"><span data-stu-id="ce970-336">Throws if there isn't a parent content control.</span></span> <span data-ttu-id="ce970-337">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="ce970-337">Read-only.</span></span>

      <span data-ttu-id="ce970-338">\[[Ensemble d'API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ce970-338">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentContentControl
    fullName: parentContentControl
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentContentControl: Word.ContentControl;'
      return:
        type:
          - word.Word.ContentControl
  - uid: word.Word.ContentControl.parentContentControlOrNullObject
    summary: |-
      <span data-ttu-id="ce970-339">Obtient le contrôle de contenu qui contient le contrôle de contenu spécifié.</span><span class="sxs-lookup"><span data-stu-id="ce970-339">Gets the content control that contains the content control.</span></span> <span data-ttu-id="ce970-340">Renvoie un objet null s'il n'existe pas de contrôle de contenu parent.</span><span class="sxs-lookup"><span data-stu-id="ce970-340">Returns a null object if there isn't a parent content control.</span></span> <span data-ttu-id="ce970-341">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="ce970-341">Read-only.</span></span>

      <span data-ttu-id="ce970-342">\[[Ensemble d'API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ce970-342">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentContentControlOrNullObject
    fullName: parentContentControlOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentContentControlOrNullObject: Word.ContentControl;'
      return:
        type:
          - word.Word.ContentControl
  - uid: word.Word.ContentControl.parentTable
    summary: |-
      <span data-ttu-id="ce970-343">Obtient le tableau qui contient le contrôle de contenu.</span><span class="sxs-lookup"><span data-stu-id="ce970-343">Gets the table that contains the content control.</span></span> <span data-ttu-id="ce970-344">S'il n'est pas contenu dans un tableau.</span><span class="sxs-lookup"><span data-stu-id="ce970-344">Throws if it is not contained in a table.</span></span> <span data-ttu-id="ce970-345">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="ce970-345">Read-only.</span></span>

      <span data-ttu-id="ce970-346">\[[Ensemble d'API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ce970-346">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentTable
    fullName: parentTable
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentTable: Word.Table;'
      return:
        type:
          - Word.Table
  - uid: word.Word.ContentControl.parentTableCell
    summary: |-
      <span data-ttu-id="ce970-347">Obtient la cellule de tableau qui contient le contrôle de contenu.</span><span class="sxs-lookup"><span data-stu-id="ce970-347">Gets the table cell that contains the content control.</span></span> <span data-ttu-id="ce970-348">S'il n'est pas contenu dans une cellule de tableau.</span><span class="sxs-lookup"><span data-stu-id="ce970-348">Throws if it is not contained in a table cell.</span></span> <span data-ttu-id="ce970-349">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="ce970-349">Read-only.</span></span>

      <span data-ttu-id="ce970-350">\[[Ensemble d'API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ce970-350">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentTableCell
    fullName: parentTableCell
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentTableCell: Word.TableCell;'
      return:
        type:
          - Word.TableCell
  - uid: word.Word.ContentControl.parentTableCellOrNullObject
    summary: |-
      <span data-ttu-id="ce970-351">Obtient la cellule de tableau qui contient le contrôle de contenu.</span><span class="sxs-lookup"><span data-stu-id="ce970-351">Gets the table cell that contains the content control.</span></span> <span data-ttu-id="ce970-352">Renvoie un objet null s’il n’est pas contenu dans une cellule de tableau.</span><span class="sxs-lookup"><span data-stu-id="ce970-352">Returns a null object if it is not contained in a table cell.</span></span> <span data-ttu-id="ce970-353">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="ce970-353">Read-only.</span></span>

      <span data-ttu-id="ce970-354">\[[Ensemble d'API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ce970-354">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentTableCellOrNullObject
    fullName: parentTableCellOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentTableCellOrNullObject: Word.TableCell;'
      return:
        type:
          - Word.TableCell
  - uid: word.Word.ContentControl.parentTableOrNullObject
    summary: |-
      <span data-ttu-id="ce970-355">Obtient le tableau qui contient le contrôle de contenu.</span><span class="sxs-lookup"><span data-stu-id="ce970-355">Gets the table that contains the content control.</span></span> <span data-ttu-id="ce970-356">Renvoie un objet null s’il n’est pas contenu dans un tableau.</span><span class="sxs-lookup"><span data-stu-id="ce970-356">Returns a null object if it is not contained in a table.</span></span> <span data-ttu-id="ce970-357">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="ce970-357">Read-only.</span></span>

      <span data-ttu-id="ce970-358">\[[Ensemble d'API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ce970-358">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentTableOrNullObject
    fullName: parentTableOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentTableOrNullObject: Word.Table;'
      return:
        type:
          - Word.Table
  - uid: word.Word.ContentControl.placeholderText
    summary: |-
      <span data-ttu-id="ce970-359">Obtient ou définit le texte de l’espace réservé du contrôle de contenu.</span><span class="sxs-lookup"><span data-stu-id="ce970-359">Gets or sets the placeholder text of the content control.</span></span> <span data-ttu-id="ce970-360">Ce texte apparaît de façon estompée lorsque le contrôle de contenu est vide.</span><span class="sxs-lookup"><span data-stu-id="ce970-360">Dimmed text will be displayed when the content control is empty.</span></span>

      <span data-ttu-id="ce970-361">\[[Ensemble d'API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ce970-361">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: placeholderText
    fullName: placeholderText
    langs:
      - typeScript
    type: property
    syntax:
      content: 'placeholderText: string;'
      return:
        type:
          - string
  - uid: word.Word.ContentControl.removeWhenEdited
    summary: |-
      <span data-ttu-id="ce970-362">Obtient ou définit une valeur qui indique si le contrôle de contenu doit être supprimé après modification.</span><span class="sxs-lookup"><span data-stu-id="ce970-362">Gets or sets a value that indicates whether the content control is removed after it is edited.</span></span> <span data-ttu-id="ce970-363">Non compatible avec cannotDelete.</span><span class="sxs-lookup"><span data-stu-id="ce970-363">Mutually exclusive with cannotDelete.</span></span>

      <span data-ttu-id="ce970-364">\[[Ensemble d'API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ce970-364">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: removeWhenEdited
    fullName: removeWhenEdited
    langs:
      - typeScript
    type: property
    syntax:
      content: 'removeWhenEdited: boolean;'
      return:
        type:
          - boolean
  - uid: word.Word.ContentControl.search
    summary: |-
      <span data-ttu-id="ce970-365">Effectue une recherche avec le SearchOptions spécifié dans l'étendue de l'objet de contrôle de contenu.</span><span class="sxs-lookup"><span data-stu-id="ce970-365">Performs a search with the specified SearchOptions on the scope of the content control object.</span></span> <span data-ttu-id="ce970-366">Les résultats de la recherche sont un ensemble d’objets de plage.</span><span class="sxs-lookup"><span data-stu-id="ce970-366">The search results are a collection of range objects.</span></span>

      <span data-ttu-id="ce970-367">\[[Ensemble d'API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ce970-367">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'search(searchText, searchOptions)'
    fullName: 'search(searchText, searchOptions)'
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        search(searchText: string, searchOptions?: Word.SearchOptions | {
                    ignorePunct?: boolean;
                    ignoreSpace?: boolean;
                    matchCase?: boolean;
                    matchPrefix?: boolean;
                    matchSuffix?: boolean;
                    matchWholeWord?: boolean;
                    matchWildcards?: boolean;
                }): Word.RangeCollection;
      return:
        type:
          - Word.RangeCollection
        description: |-


          #### <a name="examples"></a><span data-ttu-id="ce970-368">Exemples</span><span class="sxs-lookup"><span data-stu-id="ce970-368">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {
              
              // Create a proxy object for the content controls collection.
              var contentControls = context.document.contentControls;
              
              // Queue a command to load the id property for all of the content controls. 
              context.load(contentControls, 'id');
               
              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  if (contentControls.items.length === 0) {
                      console.log('No content control found.');
                  }
                  else {
                      // Queue a command to select the first content control.
                      contentControls.items[0].select();
                  
                      // Synchronize the document state by executing the queued commands, 
                      // and return a promise to indicate task completion.
                      return context.sync()
                          .then(function () {
                              console.log('Selected the first content control.');
                      });
                  }
              });  
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: searchText
          description: <span data-ttu-id="ce970-369">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="ce970-369">Required.</span></span> <span data-ttu-id="ce970-370">Texte de recherche.</span><span class="sxs-lookup"><span data-stu-id="ce970-370">The search text.</span></span>
          type:
            - string
        - id: searchOptions
          description: <span data-ttu-id="ce970-371">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="ce970-371">Optional.</span></span> <span data-ttu-id="ce970-372">Options de la recherche.</span><span class="sxs-lookup"><span data-stu-id="ce970-372">Options for the search.</span></span>
          type:
            - |-
              Word.SearchOptions | {
                          ignorePunct?: boolean;
                          ignoreSpace?: boolean;
                          matchCase?: boolean;
                          matchPrefix?: boolean;
                          matchSuffix?: boolean;
                          matchWholeWord?: boolean;
                          matchWildcards?: boolean;
                      }
  - uid: word.Word.ContentControl.select
    summary: |-
      <span data-ttu-id="ce970-373">Sélectionne le contrôle de contenu.</span><span class="sxs-lookup"><span data-stu-id="ce970-373">Selects the content control.</span></span> <span data-ttu-id="ce970-374">Word fait défiler le document jusqu’à accéder à la sélection.</span><span class="sxs-lookup"><span data-stu-id="ce970-374">This causes Word to scroll to the selection.</span></span>

      <span data-ttu-id="ce970-375">\[[Ensemble d'API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ce970-375">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: select(selectionMode)
    fullName: select(selectionMode)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionMode?: Word.SelectionMode): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: selectionMode
          description: "<span data-ttu-id=\"ce970-376\">Facultatif.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-376\">Optional.</span></span> <span data-ttu-id=\"ce970-377\">Le mode de sélection peut être «\_Select\_» (sélectionner), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-377\">The selection mode can be 'Select', 'Start', or 'End'.</span></span> <span data-ttu-id=\"ce970-378\">«\_Select\_» (sélectionner) est la valeur par défaut.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-378\">'Select' is the default.</span></span>"
          type:
            - Word.SelectionMode
  - uid: word.Word.ContentControl.select_1
    summary: |-
      <span data-ttu-id="ce970-379">Sélectionne le contrôle de contenu.</span><span class="sxs-lookup"><span data-stu-id="ce970-379">Selects the content control.</span></span> <span data-ttu-id="ce970-380">Word fait défiler le document jusqu’à accéder à la sélection.</span><span class="sxs-lookup"><span data-stu-id="ce970-380">This causes Word to scroll to the selection.</span></span>

      <span data-ttu-id="ce970-381">\[[Ensemble d'API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ce970-381">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: select(selectionModeString)
    fullName: select(selectionModeString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionModeString?: "Select" | "Start" | "End"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: selectionModeString
          description: "<span data-ttu-id=\"ce970-382\">Facultatif.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-382\">Optional.</span></span> <span data-ttu-id=\"ce970-383\">Le mode de sélection peut être «\_Select\_» (sélectionner), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-383\">The selection mode can be 'Select', 'Start', or 'End'.</span></span> <span data-ttu-id=\"ce970-384\">«\_Select\_» (sélectionner) est la valeur par défaut.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-384\">'Select' is the default.</span></span>"
          type:
            - '"Select" | "Start" | "End"'
  - uid: word.Word.ContentControl.set
    summary: '<span data-ttu-id="ce970-385">Définit plusieurs propriétés d''un objet en même temps.</span><span class="sxs-lookup"><span data-stu-id="ce970-385">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="ce970-386">Vous pouvez transmettre un objet plain avec les propriétés appropriées, ou un autre objet API du même type.</span><span class="sxs-lookup"><span data-stu-id="ce970-386">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="ce970-387">Cette méthode est dotée de la signature supplémentaire suivante:</span><span class="sxs-lookup"><span data-stu-id="ce970-387">This method has the following additional signature:</span></span>

      `set(properties: Word.ContentControl): void`

      #### <a name="examples"></a><span data-ttu-id="ce970-388">Exemples</span><span class="sxs-lookup"><span data-stu-id="ce970-388">Examples</span></span>

      ```typescript
      // Adds title and colors to odd and even content controls and changes their appearance.
      await Word.run(async (context) => {
        // Gets the complete sentence (as range) associated with the insertion point.
        let evenContentControls = context.document.contentControls.getByTag("even");
        let oddContentControls = context.document.contentControls.getByTag("odd");
        evenContentControls.load("length");
        oddContentControls.load("length");

        await context.sync();

        for (let i = 0; i < evenContentControls.items.length; i++) {
          // Change a few properties and append a paragraph
          evenContentControls.items[i].set({
            color: "red",
            title: "Odd ContentControl #" + (i + 1),
            appearance: "Tags"
          });
          evenContentControls.items[i].insertParagraph("This is an odd content control", "End");
        }

        for (let j = 0; j < oddContentControls.items.length; j++) {
          // Change a few properties and append a paragraph
          oddContentControls.items[j].set({
            color: "green",
            title: "Even ContentControl #" + (j + 1),
            appearance: "Tags"
          });
          oddContentControls.items[j].insertHtml("This is an <b>even</b> content control", "End");
        }

        await context.sync();
      });
      ```
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ContentControlUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="ce970-389">Objet JavaScript avec des propriétés qui sont structurées isomorphically vers les propriétés de l'objet sur lequel la méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="ce970-389">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.ContentControlUpdateData
        - id: options
          description: <span data-ttu-id="ce970-390">Fournit une option permettant de supprimer les erreurs si l'objet Properties tente de définir des propriétés en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="ce970-390">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: word.Word.ContentControl.set_1
    summary: '<span data-ttu-id="ce970-391">Définit plusieurs propriétés de l''objet en même temps, en fonction d''un objet chargé existant.</span><span class="sxs-lookup"><span data-stu-id="ce970-391">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Word.ContentControl): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - word.Word.ContentControl
  - uid: word.Word.ContentControl.split
    summary: |-
      <span data-ttu-id="ce970-392">Fractionne le contrôle de contenu en plages enfants à l’aide de délimiteurs.</span><span class="sxs-lookup"><span data-stu-id="ce970-392">Splits the content control into child ranges by using delimiters.</span></span>

      <span data-ttu-id="ce970-393">\[[Ensemble d'API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ce970-393">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'split(delimiters, multiParagraphs, trimDelimiters, trimSpacing)'
    fullName: 'split(delimiters, multiParagraphs, trimDelimiters, trimSpacing)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'split(delimiters: string[], multiParagraphs?: boolean, trimDelimiters?: boolean, trimSpacing?: boolean): Word.RangeCollection;'
      return:
        type:
          - Word.RangeCollection
        description: ''
      parameters:
        - id: delimiters
          description: <span data-ttu-id="ce970-394">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="ce970-394">Required.</span></span> <span data-ttu-id="ce970-395">Délimiteurs sous la forme d'un tableau de chaînes.</span><span class="sxs-lookup"><span data-stu-id="ce970-395">The delimiters as an array of strings.</span></span>
          type:
            - 'string[]'
        - id: multiParagraphs
          description: '<span data-ttu-id="ce970-396">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="ce970-396">Optional.</span></span> <span data-ttu-id="ce970-397">Indique si une plage enfant renvoyée peut traiter plusieurs paragraphes.</span><span class="sxs-lookup"><span data-stu-id="ce970-397">Indicates whether a returned child range can cover multiple paragraphs.</span></span> <span data-ttu-id="ce970-398">La valeur par défaut est false, ce qui indique que les limites de paragraphe sont également utilisées en tant que délimiteurs.</span><span class="sxs-lookup"><span data-stu-id="ce970-398">Default is false which indicates that the paragraph boundaries are also used as delimiters.</span></span>'
          type:
            - boolean
        - id: trimDelimiters
          description: '<span data-ttu-id="ce970-399">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="ce970-399">Optional.</span></span> <span data-ttu-id="ce970-400">Indique s''il faut délimiter les délimiteurs des plages de la collection Range.</span><span class="sxs-lookup"><span data-stu-id="ce970-400">Indicates whether to trim delimiters from the ranges in the range collection.</span></span> <span data-ttu-id="ce970-401">La valeur par défaut est false, ce qui indique que les délimiteurs sont inclus dans les plages renvoyées dans la collection Range.</span><span class="sxs-lookup"><span data-stu-id="ce970-401">Default is false which indicates that the delimiters are included in the ranges returned in the range collection.</span></span>'
          type:
            - boolean
        - id: trimSpacing
          description: '<span data-ttu-id="ce970-402">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="ce970-402">Optional.</span></span> <span data-ttu-id="ce970-403">Indique s''il faut supprimer les caractères d''espacement (espaces, tabulations, sauts de colonne et marques de fin de paragraphe) à partir du début et de la fin des plages renvoyées dans la collection Range.</span><span class="sxs-lookup"><span data-stu-id="ce970-403">Indicates whether to trim spacing characters (spaces, tabs, column breaks, and paragraph end marks) from the start and end of the ranges returned in the range collection.</span></span> <span data-ttu-id="ce970-404">La valeur par défaut est false, ce qui indique que l''espacement au début et à la fin des plages est inclus dans la collection Range.</span><span class="sxs-lookup"><span data-stu-id="ce970-404">Default is false which indicates that spacing characters at the start and end of the ranges are included in the range collection.</span></span>'
          type:
            - boolean
  - uid: word.Word.ContentControl.style
    summary: "<span data-ttu-id=\"ce970-405\">Obtient ou définit le nom du style pour le contrôle de contenu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-405\">Gets or sets the style name for the content control.</span></span> <span data-ttu-id=\"ce970-406\">Utilisez cette propriété pour les noms des styles personnalisés et localisés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-406\">Use this property for custom styles and localized style names.</span></span> <span data-ttu-id=\"ce970-407\">Pour utiliser les styles prédéfinis qui sont portables entre différents paramètres régionaux, voir la propriété «\_styleBuiltIn\_».</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-407\">To use the built-in styles that are portable between locales, see the \"styleBuiltIn\" property.</span></span>\n\n<span data-ttu-id=\"ce970-408\">\\[[Ensemble d'API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-408\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: string;'
      return:
        type:
          - string
  - uid: word.Word.ContentControl.styleBuiltIn
    summary: "<span data-ttu-id=\"ce970-p198\">Obtient ou définit le nom de style intégré pour le contrôle de contenu. Utilisez cette propriété pour les styles intégrés qui sont portables entre les paramètres régionaux. Pour utiliser des styles personnalisés ou des noms de style localisés, consultez la propriété «\_style\_».</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-p198\">Gets or sets the built-in style name for the content control. Use this property for built-in styles that are portable between locales. To use custom styles or localized style names, see the \"style\" property.</span></span>\n\n<span data-ttu-id=\"ce970-412\">\\[[Ensemble d'API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-412\">\\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: styleBuiltIn
    fullName: styleBuiltIn
    langs:
      - typeScript
    type: property
    syntax:
      content: 'styleBuiltIn: Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6";'
      return:
        type:
          - Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6"
  - uid: word.Word.ContentControl.subtype
    summary: "<span data-ttu-id=\"ce970-413\">Obtient le sous-type du contrôle de contenu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-413\">Gets the content control subtype.</span></span> <span data-ttu-id=\"ce970-414\">Le sous-type peut être « RichTextInline », «\_RichTextParagraphs\_», «\_RichTextTableCell\_», «\_RichTextTableRow\_» et «\_RichTextTable\_» pour les contrôles de contenu en texte enrichi.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-414\">The subtype can be 'RichTextInline', 'RichTextParagraphs', 'RichTextTableCell', 'RichTextTableRow' and 'RichTextTable' for rich text content controls.</span></span> <span data-ttu-id=\"ce970-415\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-415\">Read-only.</span></span>\n\n<span data-ttu-id=\"ce970-416\">\\[[Ensemble d'API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-416\">\\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: subtype
    fullName: subtype
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly subtype: Word.ContentControlType | "Unknown" | "RichTextInline" | "RichTextParagraphs" | "RichTextTableCell" | "RichTextTableRow" | "RichTextTable" | "PlainTextInline" | "PlainTextParagraph" | "Picture" | "BuildingBlockGallery" | "CheckBox" | "ComboBox" | "DropDownList" | "DatePicker" | "RepeatingSection" | "RichText" | "PlainText";'
      return:
        type:
          - Word.ContentControlType | "Unknown" | "RichTextInline" | "RichTextParagraphs" | "RichTextTableCell" | "RichTextTableRow" | "RichTextTable" | "PlainTextInline" | "PlainTextParagraph" | "Picture" | "BuildingBlockGallery" | "CheckBox" | "ComboBox" | "DropDownList" | "DatePicker" | "RepeatingSection" | "RichText" | "PlainText"
  - uid: word.Word.ContentControl.tables
    summary: |-
      <span data-ttu-id="ce970-417">Obtient la collection d’objets table du contrôle de contenu.</span><span class="sxs-lookup"><span data-stu-id="ce970-417">Gets the collection of table objects in the content control.</span></span> <span data-ttu-id="ce970-418">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="ce970-418">Read-only.</span></span>

      <span data-ttu-id="ce970-419">\[[Ensemble d'API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ce970-419">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: tables
    fullName: tables
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly tables: Word.TableCollection;'
      return:
        type:
          - Word.TableCollection
  - uid: word.Word.ContentControl.tag
    summary: |-
      <span data-ttu-id="ce970-420">Obtient ou définit un indicateur pour identifier un contrôle de contenu.</span><span class="sxs-lookup"><span data-stu-id="ce970-420">Gets or sets a tag to identify a content control.</span></span>

      <span data-ttu-id="ce970-421">\[[Ensemble d'API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ce970-421">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: tag
    fullName: tag
    langs:
      - typeScript
    type: property
    syntax:
      content: 'tag: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="ce970-422">Exemples</span><span class="sxs-lookup"><span data-stu-id="ce970-422">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {
              
              // Create a proxy range object for the current selection.
              var range = context.document.getSelection();
              
              // Queue a commmand to create the content control.
              var myContentControl = range.insertContentControl();
              myContentControl.tag = 'Customer-Address';
              myContentControl.title = ' has t';
              myContentControl.style = 'Heading 2';
              myContentControl.insertText('One Microsoft Way, Redmond, WA 98052', 'replace');
              myContentControl.cannotEdit = true;
              
              // Queue a command to load the id property for the content control you created.
              context.load(myContentControl, 'id');
              
              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Created content control with id: ' + myContentControl.id);
              });  
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```typescript
          // Traverses each paragraph of the document and wraps a content control on each with either a even or odd tags.
          await Word.run(async (context) => {
            let paragraphs = context.document.body.paragraphs;
            paragraphs.load("$none"); // Don't need any properties; just wrap each paragraph with a content control.

            await context.sync();

            for (let i = 0; i < paragraphs.items.length; i++) {
              let contentControl = paragraphs.items[i].insertContentControl();
              // For even, tag "even".
              if (i % 2 === 0) {
                contentControl.tag = "even";
              } else {
                contentControl.tag = "odd";
              }
            }
            console.log("Content controls inserted: " + paragraphs.items.length);

            await context.sync();
          });
          ```
  - uid: word.Word.ContentControl.text
    summary: |-
      <span data-ttu-id="ce970-423">Obtient le texte du contrôle de contenu.</span><span class="sxs-lookup"><span data-stu-id="ce970-423">Gets the text of the content control.</span></span> <span data-ttu-id="ce970-424">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="ce970-424">Read-only.</span></span>

      <span data-ttu-id="ce970-425">\[[Ensemble d'API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ce970-425">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: text
    fullName: text
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly text: string;'
      return:
        type:
          - string
  - uid: word.Word.ContentControl.title
    summary: |-
      <span data-ttu-id="ce970-426">Obtient ou définit le titre d’un contrôle de contenu.</span><span class="sxs-lookup"><span data-stu-id="ce970-426">Gets or sets the title for a content control.</span></span>

      <span data-ttu-id="ce970-427">\[[Ensemble d'API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ce970-427">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: title
    fullName: title
    langs:
      - typeScript
    type: property
    syntax:
      content: 'title: string;'
      return:
        type:
          - string
  - uid: word.Word.ContentControl.toJSON
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.ContentControlData;'
      return:
        type:
          - word.Word.Interfaces.ContentControlData
        description: ''
  - uid: word.Word.ContentControl.track
    summary: "<span data-ttu-id=\"ce970-428\">Effectuer le suivi de l’objet pour l’ajustement automatique en fonction environnant des modifications dans le document.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-428\">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id=\"ce970-429\">Cet appel est abréviations context.trackedObjects.add(thisObject).</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-429\">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id=\"ce970-430\">Si vous utilisez cet objet au sein de «\_.sync\_» appels et en dehors de l’exécution séquentielle d’un lot de «\_.run\_» et rencontrez un message d’erreur «\_InvalidObjectPath\_» lors de la définition d’une propriété ou appeler une méthode sur l’objet, vous devez ajouter l’objet à l’objet de suivi collection de sites lors de l’objet a été créé.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-430\">If you are using this object across \".sync\" calls and outside the sequential execution of a \".run\" batch, and get an \"InvalidObjectPath\" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>"
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.ContentControl;'
      return:
        type:
          - word.Word.ContentControl
        description: ''
  - uid: word.Word.ContentControl.type
    summary: |-
      <span data-ttu-id="ce970-431">Obtient le type du contrôle de contenu.</span><span class="sxs-lookup"><span data-stu-id="ce970-431">Gets the content control type.</span></span> <span data-ttu-id="ce970-432">Actuellement, seuls les contrôles de contenu à texte enrichi sont pris en charge.</span><span class="sxs-lookup"><span data-stu-id="ce970-432">Only rich text content controls are supported currently.</span></span> <span data-ttu-id="ce970-433">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="ce970-433">Read-only.</span></span>

      <span data-ttu-id="ce970-434">\[[Ensemble d'API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ce970-434">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: type
    fullName: type
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly type: Word.ContentControlType | "Unknown" | "RichTextInline" | "RichTextParagraphs" | "RichTextTableCell" | "RichTextTableRow" | "RichTextTable" | "PlainTextInline" | "PlainTextParagraph" | "Picture" | "BuildingBlockGallery" | "CheckBox" | "ComboBox" | "DropDownList" | "DatePicker" | "RepeatingSection" | "RichText" | "PlainText";'
      return:
        type:
          - Word.ContentControlType | "Unknown" | "RichTextInline" | "RichTextParagraphs" | "RichTextTableCell" | "RichTextTableRow" | "RichTextTable" | "PlainTextInline" | "PlainTextParagraph" | "Picture" | "BuildingBlockGallery" | "CheckBox" | "ComboBox" | "DropDownList" | "DatePicker" | "RepeatingSection" | "RichText" | "PlainText"
  - uid: word.Word.ContentControl.untrack
    summary: "<span data-ttu-id=\"ce970-435\">Publication mémoire associée à cet objet si elle a été précédemment suivie.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-435\">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id=\"ce970-436\">Cet appel est abréviations context.trackedObjects.add(thisObject).</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-436\">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id=\"ce970-437\">Vous rencontrez de nombreux objets suivies ralentit l’application hôte, donc n’oubliez pas de libérer les objets que l'on ajoute, une fois que vous avez terminé à les utiliser.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-437\">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them.</span></span> <span data-ttu-id=\"ce970-438\">Vous devez appeler «\_context.sync()\_» avant la publication de mémoire prend effet.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce970-438\">You will need to call \"context.sync()\" before the memory release takes effect.</span></span>"
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.ContentControl;'
      return:
        type:
          - word.Word.ContentControl
        description: ''