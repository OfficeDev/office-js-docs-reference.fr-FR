### YamlMime:UniversalReference
items:
  - uid: 'word!Word.Font:class'
    summary: "Représente une police.\n\n\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]"
    name: Word.Font
    fullName: Word.Font
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: word!
    children:
      - 'word!Word.Font#bold:member'
      - 'word!Word.Font#color:member'
      - 'word!Word.Font#context:member'
      - 'word!Word.Font#doubleStrikeThrough:member'
      - 'word!Word.Font#highlightColor:member'
      - 'word!Word.Font#italic:member'
      - 'word!Word.Font#load:member(1)'
      - 'word!Word.Font#load:member(2)'
      - 'word!Word.Font#load:member(3)'
      - 'word!Word.Font#name:member'
      - 'word!Word.Font#set:member(1)'
      - 'word!Word.Font#set:member(2)'
      - 'word!Word.Font#size:member'
      - 'word!Word.Font#strikeThrough:member'
      - 'word!Word.Font#subscript:member'
      - 'word!Word.Font#superscript:member'
      - 'word!Word.Font#toJSON:member(1)'
      - 'word!Word.Font#track:member(1)'
      - 'word!Word.Font#underline:member'
      - 'word!Word.Font#untrack:member(1)'
  - uid: 'word!Word.Font#bold:member'
    summary: "Obtient ou définit une valeur qui indique si la police en gras. Renvoie true si la police est mise en forme en gras, sinon, false.\n\n\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]"
    name: bold
    fullName: bold
    langs:
      - typeScript
    type: property
    syntax:
      content: 'bold: boolean;'
      return:
        type:
          - boolean
        description: |-


          #### <a name="examples"></a>Exemples

          ```javascript
          // Bold format text
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a range proxy object for the current selection.
              var selection = context.document.getSelection();

              // Queue a command to make the current selection bold.
              selection.font.bold = true;

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('The selection is now bold.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Font#color:member'
    summary: "Obtient ou définit la couleur de la police spécifiée. Vous pouvez fournir la valeur au format « \\# RRGGBB\_» ou au nom de la couleur.\n\n\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]"
    name: color
    fullName: color
    langs:
      - typeScript
    type: property
    syntax:
      content: 'color: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a>Exemples

          ```javascript
          // Change the font color
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a range proxy object for the current selection.
              var selection = context.document.getSelection();

              // Queue a command to change the font color of the current selection.
              selection.font.color = 'blue';

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('The font color of the selection has been changed.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Font#context:member'
    summary: Contexte de demande associé à l’objet. Cette opération connecte le processus du complément au processus de l’application hôte Office.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'word!Word.RequestContext:class'
  - uid: 'word!Word.Font#doubleStrikeThrough:member'
    summary: "Obtient ou définit une valeur qui indique si la police a un double barré. Renvoie true si la police est mise en forme en tant que texte barré double, sinon, false.\n\n\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]"
    name: doubleStrikeThrough
    fullName: doubleStrikeThrough
    langs:
      - typeScript
    type: property
    syntax:
      content: 'doubleStrikeThrough: boolean;'
      return:
        type:
          - boolean
  - uid: 'word!Word.Font#highlightColor:member'
    summary: "Obtient ou définit la couleur de surbrillance. Pour la définir, utilisez une valeur au \\# format «\_RRGGBB\_» ou au nom de la couleur. Pour supprimer la couleur de surbrillance, affectez-lui la valeur null. La couleur de surbrillance renvoyée peut être au \\# format «\_RRGGBB\_», une chaîne vide pour les couleurs de mise en surbrillance mixtes ou null pour aucune couleur de surbrillance. * Note * *\_: seules les couleurs de surbrillance par défaut sont disponibles dans Office pour ordinateur de bureau Windows. «\_Jaune\_», «\_vert citron\_», «\_turquoise\_», «\_rose\_», «\_bleu\_», «\_rouge\_», «\_DarkBlue\_», «\_bleu vert\_», «\_vert\_», «\_violet\_», «\_DarkRed\_», «\_marron\_», «\_jaune\_», «\_LightGray\_» et «\_noir\_». Lorsque le complément s’exécute dans Office pour le bureau Windows, toutes les autres couleurs sont converties à la couleur la plus proche lorsqu’elles sont appliquées à la police.\n\n\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]"
    name: highlightColor
    fullName: highlightColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'highlightColor: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a>Exemples

          ```javascript
          // Highlight selected text
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a range proxy object for the current selection.
              var selection = context.document.getSelection();

              // Queue a command to highlight the current selection.
              selection.font.highlightColor = '#FFFF00'; // Yellow

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('The selection has been highlighted.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Font#italic:member'
    summary: "Obtient ou définit une valeur qui indique si la police est en italique. Renvoie true si la police est en italique, sinon, false.\n\n\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]"
    name: italic
    fullName: italic
    langs:
      - typeScript
    type: property
    syntax:
      content: 'italic: boolean;'
      return:
        type:
          - boolean
  - uid: 'word!Word.Font#load:member(1)'
    summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Word.Interfaces.FontLoadOptions): Word.Font;'
      return:
        type:
          - 'word!Word.Font:class'
        description: ''
      parameters:
        - id: options
          description: Fournit des options pour les propriétés de l’objet à charger.
          type:
            - 'word!Word.Interfaces.FontLoadOptions:interface'
  - uid: 'word!Word.Font#load:member(2)'
    summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.Font;'
      return:
        type:
          - 'word!Word.Font:class'
        description: ''
      parameters:
        - id: propertyNames
          description: Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.
          type:
            - 'string | string[]'
  - uid: 'word!Word.Font#load:member(3)'
    summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Word.Font;
      return:
        type:
          - 'word!Word.Font:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '`propertyNamesAndPaths.select`est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et `propertyNamesAndPaths.expand` une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'word!Word.Font#name:member'
    summary: "Obtient ou définit une valeur qui représente le nom de la police.\n\n\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]"
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a>Exemples

          ```javascript
          // Change the font name
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a range proxy object for the current selection.
              var selection = context.document.getSelection();

              // Queue a command to change the current selection's font name.
              selection.font.name = 'Arial';

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('The font name has changed.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Font#set:member(1)'
    summary: 'Définit plusieurs propriétés d’un objet en même temps. Vous pouvez transmettre un objet plain avec les propriétés appropriées, ou un autre objet API du même type.'
    remarks: "Cette méthode est dotée de la signature supplémentaire suivante\_:\n\n`set(properties: Word.Font): void`"
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.FontUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: Objet JavaScript avec des propriétés qui sont structurées isomorphically vers les propriétés de l’objet sur lequel la méthode est appelée.
          type:
            - 'word!Word.Interfaces.FontUpdateData:interface'
        - id: options
          description: Fournit une option permettant de supprimer les erreurs si l’objet Properties tente de définir des propriétés en lecture seule.
          type:
            - 'office!OfficeExtension.UpdateOptions:interface'
  - uid: 'word!Word.Font#set:member(2)'
    summary: 'Définit plusieurs propriétés de l’objet en même temps, en fonction d’un objet chargé existant.'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Word.Font): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'word!Word.Font:class'
  - uid: 'word!Word.Font#size:member'
    summary: "Obtient ou définit une valeur qui représente la taille de police en points.\n\n\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]"
    name: size
    fullName: size
    langs:
      - typeScript
    type: property
    syntax:
      content: 'size: number;'
      return:
        type:
          - number
        description: |-


          #### <a name="examples"></a>Exemples

          ```javascript
          // Change the font size
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a range proxy object for the current selection.
              var selection = context.document.getSelection();

              // Queue a command to change the current selection's font size.
              selection.font.size = 20;

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('The font size has changed.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Font#strikeThrough:member'
    summary: "Obtient ou définit une valeur qui indique si la police est barrée. Renvoie true si la police est mise en forme en tant que texte barré, sinon, false.\n\n\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]"
    name: strikeThrough
    fullName: strikeThrough
    langs:
      - typeScript
    type: property
    syntax:
      content: 'strikeThrough: boolean;'
      return:
        type:
          - boolean
        description: |-


          #### <a name="examples"></a>Exemples

          ```javascript
          // Strike format text
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a range proxy object for the current selection.
              var selection = context.document.getSelection();

              // Queue a command to strikethrough the font of the current selection.
              selection.font.strikeThrough = true;

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('The selection now has a strikethrough.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Font#subscript:member'
    summary: "Obtient ou définit une valeur qui indique si la police correspond à du texte mis en indice. Renvoie true si la police correspond à du texte mis en indice, sinon, false.\n\n\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]"
    name: subscript
    fullName: subscript
    langs:
      - typeScript
    type: property
    syntax:
      content: 'subscript: boolean;'
      return:
        type:
          - boolean
  - uid: 'word!Word.Font#superscript:member'
    summary: "Obtient ou définit une valeur qui indique si la police correspond à du texte en exposant. Renvoie true si la police correspond à du texte mis en exposant, sinon, false.\n\n\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]"
    name: superscript
    fullName: superscript
    langs:
      - typeScript
    type: property
    syntax:
      content: 'superscript: boolean;'
      return:
        type:
          - boolean
  - uid: 'word!Word.Font#toJSON:member(1)'
    summary: 'Remplace la méthode JavaScript afin `toJSON()` de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, à son tour, appelle la `toJSON` méthode de l’objet qui lui est passé.) Tandis que l’objet Word. font d’origine est un objet d’API, la `toJSON` méthode renvoie un objet JavaScript simple (tapé comme`Word.Interfaces.FontData`<!-- -->) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l’objet d’origine.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.FontData;'
      return:
        type:
          - 'word!Word.Interfaces.FontData:interface'
        description: ''
  - uid: 'word!Word.Font#track:member(1)'
    summary: "Effectuer le suivi de l’objet pour l’ajustement automatique en fonction environnant des modifications dans le document. Cet appel est un raccourci pour`context.trackedObjects.add(thisObject)`<!-- -->. Si vous utilisez cet objet entre `.sync` les appels et en dehors de l’exécution séquentielle d’un lot «\_. Run\_», et si vous obtenez une erreur «\_InvalidObjectPath\_» lors de la définition d’une propriété ou de l’appel d’une méthode sur l’objet, vous deviez avoir ajouté l’objet à la collection d’objets suivi lors de la création initiale de l’objet."
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.Font;'
      return:
        type:
          - 'word!Word.Font:class'
        description: ''
  - uid: 'word!Word.Font#underline:member'
    summary: "Obtient ou définit une valeur qui indique le type de trait de soulignement de la police. «\_Aucun\_» si la police n’est pas soulignée.\n\n\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]"
    name: underline
    fullName: underline
    langs:
      - typeScript
    type: property
    syntax:
      content: 'underline: Word.UnderlineType | "Mixed" | "None" | "Hidden" | "DotLine" | "Single" | "Word" | "Double" | "Thick" | "Dotted" | "DottedHeavy" | "DashLine" | "DashLineHeavy" | "DashLineLong" | "DashLineLongHeavy" | "DotDashLine" | "DotDashLineHeavy" | "TwoDotDashLine" | "TwoDotDashLineHeavy" | "Wave" | "WaveHeavy" | "WaveDouble";'
      return:
        type:
          - 'word!Word.Font#underline~0:complex'
        description: |-


          #### <a name="examples"></a>Exemples

          ```javascript
          // Underline format text
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a range proxy object for the current selection.
              var selection = context.document.getSelection();

              // Queue a command to underline the current selection.
              selection.font.underline = Word.UnderlineType.single;

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('The selection now has an underline style.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Font#untrack:member(1)'
    summary: 'Publication mémoire associée à cet objet si elle a été précédemment suivie. Cet appel est un raccourci pour`context.trackedObjects.remove(thisObject)`<!-- -->. Vous rencontrez de nombreux objets suivies ralentit l’application hôte, donc n’oubliez pas de libérer les objets que l''on ajoute, une fois que vous avez terminé à les utiliser. Vous devrez appeler `context.sync()` avant que la version de mémoire ne prenne effet.'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.Font;'
      return:
        type:
          - 'word!Word.Font:class'
        description: ''
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'word!Word.RequestContext:class'
    name: RequestContext
  - uid: 'word!Word.Font:class'
    name: Word.Font
  - uid: 'word!Word.Interfaces.FontLoadOptions:interface'
    name: Word.Interfaces.FontLoadOptions
  - uid: 'word!Word.Interfaces.FontUpdateData:interface'
    name: Interfaces.FontUpdateData
  - uid: 'office!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'word!Word.Interfaces.FontData:interface'
    name: Word.Interfaces.FontData
  - uid: 'word!Word.Font#underline~0:complex'
    name: Word.UnderlineType | "Mixed" | "None" | "Hidden" | "DotLine" | "Single" | "Word" | "Double" | "Thick" | "Dotted" | "DottedHeavy" | "DashLine" | "DashLineHeavy" | "DashLineLong" | "DashLineLongHeavy" | "DotDashLine" | "DotDashLineHeavy" | "TwoDotDashLine" | "TwoDotDashLineHeavy" | "Wave" | "WaveHeavy" | "WaveDouble"
    fullName: Word.UnderlineType | "Mixed" | "None" | "Hidden" | "DotLine" | "Single" | "Word" | "Double" | "Thick" | "Dotted" | "DottedHeavy" | "DashLine" | "DashLineHeavy" | "DashLineLong" | "DashLineLongHeavy" | "DotDashLine" | "DotDashLineHeavy" | "TwoDotDashLine" | "TwoDotDashLineHeavy" | "Wave" | "WaveHeavy" | "WaveDouble"
    spec.typeScript:
      - uid: 'word!Word.UnderlineType:enum'
        name: Word.UnderlineType
        fullName: Word.UnderlineType
      - name: ' | "Mixed" | "None" | "Hidden" | "DotLine" | "Single" | "Word" | "Double" | "Thick" | "Dotted" | "DottedHeavy" | "DashLine" | "DashLineHeavy" | "DashLineLong" | "DashLineLongHeavy" | "DotDashLine" | "DotDashLineHeavy" | "TwoDotDashLine" | "TwoDotDashLineHeavy" | "Wave" | "WaveHeavy" | "WaveDouble"'
        fullName: ' | "Mixed" | "None" | "Hidden" | "DotLine" | "Single" | "Word" | "Double" | "Thick" | "Dotted" | "DottedHeavy" | "DashLine" | "DashLineHeavy" | "DashLineLong" | "DashLineLongHeavy" | "DotDashLine" | "DotDashLineHeavy" | "TwoDotDashLine" | "TwoDotDashLineHeavy" | "Wave" | "WaveHeavy" | "WaveDouble"'