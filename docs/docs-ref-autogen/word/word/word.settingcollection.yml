### YamlMime:UniversalReference
items:
  - uid: 'word!Word.SettingCollection:class'
    summary: "Contient la collection d’objets [Word. Setting](xref:word!Word.Setting:class) .\n\n\\[[Ensemble d’API\_: WORDAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]"
    isPreview: true
    name: Word.SettingCollection
    fullName: Word.SettingCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'word!OfficeExtension.ClientObject:class'
    package: word!
    children:
      - 'word!Word.SettingCollection#add:member(1)'
      - 'word!Word.SettingCollection#context:member'
      - 'word!Word.SettingCollection#deleteAll:member(1)'
      - 'word!Word.SettingCollection#getCount:member(1)'
      - 'word!Word.SettingCollection#getItem:member(1)'
      - 'word!Word.SettingCollection#getItemOrNullObject:member(1)'
      - 'word!Word.SettingCollection#items:member'
      - 'word!Word.SettingCollection#load:member(1)'
      - 'word!Word.SettingCollection#load:member(2)'
      - 'word!Word.SettingCollection#load:member(3)'
      - 'word!Word.SettingCollection#toJSON:member(1)'
      - 'word!Word.SettingCollection#track:member(1)'
      - 'word!Word.SettingCollection#untrack:member(1)'
  - uid: 'word!Word.SettingCollection#add:member(1)'
    summary: "Crée un nouveau paramètre ou définit un paramètre existant.\n\n\\[[Ensemble d’API\_: WORDAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]"
    isPreview: true
    name: 'add(key, value)'
    fullName: 'add(key, value)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(key: string, value: any): Word.Setting;'
      return:
        type:
          - 'word!Word.Setting:class'
        description: ''
      parameters:
        - id: key
          description: 'Obligatoire. La clé du paramètre, qui respecte la casse.'
          type:
            - string
        - id: value
          description: Obligatoire. Valeur du paramètre.
          type:
            - any
  - uid: 'word!Word.SettingCollection#context:member'
    summary: Contexte de demande associé à l’objet. Cette opération connecte le processus du complément au processus de l’application hôte Office.
    isPreview: true
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'word!Word.RequestContext:class'
  - uid: 'word!Word.SettingCollection#deleteAll:member(1)'
    summary: "Supprime tous les paramètres de ce complément.\n\n\\[[Ensemble d’API\_: WORDAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]"
    isPreview: true
    name: deleteAll()
    fullName: deleteAll()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'deleteAll(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Exemples

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue commands add a setting.
              var settings = context.document.settings;
              settings.add('startMonth', { month: 'March', year: 1998 });

              // Queue a command to get the count of settings.
              var count = settings.getCount();

              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log(count.value);

                  // Queue a command to delete all settings.
                  settings.deleteAll();

                  // Queue a command to get the new count of settings.
                  count = settings.getCount();
              })

              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              .then(context.sync)
              .then(function () {
                  console.log(count.value);
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.SettingCollection#getCount:member(1)'
    summary: "Obtient le nombre de paramètres.\n\n\\[[Ensemble d’API\_: WORDAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]"
    isPreview: true
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'word!Word.SettingCollection#getCount~0:complex'
        description: |-


          #### <a name="examples"></a>Exemples

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue commands add a setting.
              var settings = context.document.settings;
              settings.add('startMonth', { month: 'March', year: 1998 });

              // Queue a command to get the count of settings.
              var count = settings.getCount();

              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log(count.value);

                  // Queue a command to delete all settings.
                  settings.deleteAll();

                  // Queue a command to get the new count of settings.
                  count = settings.getCount();
              })

              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              .then(context.sync)
              .then(function () {
                  console.log(count.value);
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.SettingCollection#getItem:member(1)'
    summary: "Obtient un objet Setting par sa clé, qui respecte la casse. Lève une exception si le paramètre n’existe pas.\n\n\\[[Ensemble d’API\_: WORDAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]"
    isPreview: true
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Word.Setting;'
      return:
        type:
          - 'word!Word.Setting:class'
        description: |-


          #### <a name="examples"></a>Exemples

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue commands add a setting.
              var settings = context.document.settings;
              settings.add('startMonth', { month: 'March', year: 1998 });

              // Queue a command to retrieve a setting.
              var startMonth = settings.getItem('startMonth');

              // Queue a command to load the setting.
              context.load(startMonth);

              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log(JSON.stringify(startMonth.value));
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue commands add a setting.
              var settings = context.document.settings;
              settings.add('startMonth', { month: 'March', year: 1998 });
              
              // Queue commands to retrieve settings.
              var startMonth = settings.getItemOrNullObject('startMonth');
              var endMonth = settings.getItemOrNullObject('endMonth');

              // Queue commands to load settings.
              context.load(startMonth);
              context.load(endMonth);

              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
                 return context.sync().then(function () {
                     if (startMonth.isNullObject) {
                         console.log("No such setting.");
                     }
                     else {
                         console.log(JSON.stringify(startMonth.value));
                     }
                      if (endMonth.isNullObject) {
                         console.log("No such setting.");
                     }
                     else {
                         console.log(JSON.stringify(endMonth.value));
                     }
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: key
          description: Clé qui identifie l’objet de paramètre.
          type:
            - string
  - uid: 'word!Word.SettingCollection#getItemOrNullObject:member(1)'
    summary: "Obtient un objet Setting par sa clé, qui respecte la casse. Renvoie un objet null si le paramètre n’existe pas.\n\n\\[[Ensemble d’API\_: WORDAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]"
    isPreview: true
    name: getItemOrNullObject(key)
    fullName: getItemOrNullObject(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(key: string): Word.Setting;'
      return:
        type:
          - 'word!Word.Setting:class'
        description: ''
      parameters:
        - id: key
          description: Obligatoire. Clé qui identifie l’objet de paramètre.
          type:
            - string
  - uid: 'word!Word.SettingCollection#items:member'
    summary: Obtient l’élément enfant chargé dans cette collection de sites.
    isPreview: true
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Word.Setting[];'
      return:
        type:
          - 'word!Word.SettingCollection#items~0:complex'
  - uid: 'word!Word.SettingCollection#load:member(1)'
    summary: "Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez appeler «\_context.sync()\_» avant de lire les propriétés."
    remarks: "En plus de cette signature, cette méthode possède les signatures suivantes\_:\n\n`load(option?: string | string[]): Word.SettingCollection`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.\n\n`load(option?: { select?: string; expand?: string; }): Word.SettingCollection`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.\n\n`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.SettingCollection`-Uniquement disponible sur les types de collection. Elle est similaire à la signature précédente. Option. Top indique le nombre maximal d’éléments de collection qui peuvent être inclus dans le résultat. Option. Skip indique le nombre d’éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat. Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d’éléments."
    isPreview: true
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Word.Interfaces.SettingCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.SettingCollection;'
      return:
        type:
          - 'word!Word.SettingCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'word!Word.SettingCollection#load~0:complex'
  - uid: 'word!Word.SettingCollection#load:member(2)'
    summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez appeler `context.sync()` avant de lire les propriétés.
    isPreview: true
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.SettingCollection;'
      return:
        type:
          - 'word!Word.SettingCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.
          type:
            - 'string | string[]'
  - uid: 'word!Word.SettingCollection#load:member(3)'
    isPreview: true
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Word.SettingCollection;'
      return:
        type:
          - 'word!Word.SettingCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'word!OfficeExtension.LoadOption:interface'
  - uid: 'word!Word.SettingCollection#toJSON:member(1)'
    summary: "Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que `Word.SettingCollection` l’objet d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`Word.Interfaces.SettingCollectionData`<!-- -->) qui contient un tableau «\_éléments\_» avec des copies superficielles de toutes les propriétés chargées des éléments de la collection."
    isPreview: true
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.SettingCollectionData;'
      return:
        type:
          - 'word!Word.Interfaces.SettingCollectionData:interface'
        description: ''
  - uid: 'word!Word.SettingCollection#track:member(1)'
    summary: "Effectuer le suivi de l’objet pour l’ajustement automatique en fonction environnant des modifications dans le document. Cet appel est abréviations context.trackedObjects.add(thisObject). Si vous utilisez cet objet au sein de «\_.sync\_» appels et en dehors de l’exécution séquentielle d’un lot de «\_.run\_» et rencontrez un message d’erreur «\_InvalidObjectPath\_» lors de la définition d’une propriété ou appeler une méthode sur l’objet, vous devez ajouter l’objet à l’objet de suivi collection de sites lors de l’objet a été créé."
    isPreview: true
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.SettingCollection;'
      return:
        type:
          - 'word!Word.SettingCollection:class'
        description: ''
  - uid: 'word!Word.SettingCollection#untrack:member(1)'
    summary: "Publication mémoire associée à cet objet si elle a été précédemment suivie. Cet appel est abréviations context.trackedObjects.add(thisObject). Vous rencontrez de nombreux objets suivies ralentit l’application hôte, donc n’oubliez pas de libérer les objets que l'on ajoute, une fois que vous avez terminé à les utiliser. Vous devez appeler «\_context.sync()\_» avant la publication de mémoire prend effet."
    isPreview: true
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.SettingCollection;'
      return:
        type:
          - 'word!Word.SettingCollection:class'
        description: ''
references:
  - uid: 'word!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'word!Word.Setting:class'
    name: Word.Setting
  - uid: 'word!Word.RequestContext:class'
    name: RequestContext
  - uid: 'word!Word.SettingCollection#getCount~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'word!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'word!Word.SettingCollection#items~0:complex'
    name: 'Word.Setting[]'
    fullName: 'Word.Setting[]'
    spec.typeScript:
      - uid: 'word!Word.Setting:class'
        name: Word.Setting
        fullName: Word.Setting
      - name: '[]'
        fullName: '[]'
  - uid: 'word!Word.SettingCollection:class'
    name: Word.SettingCollection
  - uid: 'word!Word.SettingCollection#load~0:complex'
    name: Word.Interfaces.SettingCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions
    fullName: Word.Interfaces.SettingCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'word!Word.Interfaces.SettingCollectionLoadOptions:interface'
        name: Word.Interfaces.SettingCollectionLoadOptions
        fullName: Word.Interfaces.SettingCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'word!Word.Interfaces.CollectionLoadOptions:interface'
        name: Word.Interfaces.CollectionLoadOptions
        fullName: Word.Interfaces.CollectionLoadOptions
  - uid: 'word!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'word!Word.Interfaces.SettingCollectionData:interface'
    name: Word.Interfaces.SettingCollectionData