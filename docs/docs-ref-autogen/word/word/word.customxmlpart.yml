### YamlMime:TSType
name: Word.CustomXmlPart
uid: word!Word.CustomXmlPart:class
package: word!
fullName: Word.CustomXmlPart
summary: >-
  Représente une partie XML personnalisée.


  \[[Ensemble d’API : WordApi BÊTA (PRÉVISUALISATION UNIQUEMENT)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
remarks: ''
isPreview: true
isDeprecated: false
type: class
properties:
- name: context
  uid: word!Word.CustomXmlPart#context:member
  package: word!
  fullName: context
  summary: Contexte de demande associé à l’objet. Cela connecte le processus du add-in au processus de l’application hôte Office.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="word!Word.RequestContext:class" />
- name: id
  uid: word!Word.CustomXmlPart#id:member
  package: word!
  fullName: id
  summary: >-
    Obtient l’ID de la partie XML personnalisée. En lecture seule.


    \[[Ensemble d’API : WordApi BÊTA (PRÉVISUALISATION UNIQUEMENT)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'readonly id: string;'
    return:
      type: string
- name: namespaceUri
  uid: word!Word.CustomXmlPart#namespaceUri:member
  package: word!
  fullName: namespaceUri
  summary: >-
    Obtient l’URI d’espace de noms de la partie XML personnalisée. En lecture seule.


    \[[Ensemble d’API : WordApi BÊTA (PRÉVISUALISATION UNIQUEMENT)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'readonly namespaceUri: string;'
    return:
      type: string
methods:
- name: delete()
  uid: word!Word.CustomXmlPart#delete:member(1)
  package: word!
  fullName: delete()
  summary: >-
    Supprime la partie XML personnalisée.


    \[[Ensemble d’API : WordApi BÊTA (PRÉVISUALISATION UNIQUEMENT)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'delete(): void;'
    return:
      type: void
      description: ''
- name: deleteAttribute(xpath, namespaceMappings, name)
  uid: word!Word.CustomXmlPart#deleteAttribute:member(1)
  package: word!
  fullName: deleteAttribute(xpath, namespaceMappings, name)
  summary: >-
    Supprime un attribut avec le nom donné de l’élément identifié par xpath.


    \[[Ensemble d’API : WordApi BÊTA (PRÉVISUALISATION UNIQUEMENT)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: 'Si un élément dans l’arborescence possède un attribut xmlns (dont la valeur est généralement, mais pas toujours, un URI), un alias pour cette valeur d’attribut doit préfixer le nom de l’élément dans le paramètre xpath. Par exemple, supposons que l’arborescence est la suivante : <Day> <Month xmlns="http:\/\/calendartypes.org\/xsds\/GregorianCalendar"> <Week>quelque</Week> </Month> </Day> chose que le chemin d’accès x doit <Week> être /<!-- -->Day<!-- -->/<!-- -->contrôle :Month<!-- -->/<!-- -->Semaine, où il s’agit d’un alias qui est mappé sur « http :<!-- -->/<!-- -->/<!-- -->calendartypes.org<!-- -->/<!-- -->xsds<!-- -->/<!-- -->GregorianCalendar " dans le paramètre namespaceMappings.'
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'deleteAttribute(xpath: string, namespaceMappings: any, name: string): void;'
    parameters:
    - id: xpath
      description: Obligatoire. Chemin d’accès absolu à l’élément unique en notation XPath.
      type: string
    - id: namespaceMappings
      description: 'Obligatoire. Objet dont les valeurs de propriété sont des noms d’espaces de noms et dont les noms de propriété sont des alias pour les espaces de noms correspondants. Par exemple, `{greg: "http://calendartypes.org/xsds/GregorianCalendar"}`<!-- -->. Les noms des propriétés (par exemple, « barres ») peuvent être n’importe quelle chaîne qui n’utilise pas de caractères XPath réservés, tels que la barre oblique « / ».'
      type: any
    - id: name
      description: Obligatoire. Nom de l’attribut.
      type: string
    return:
      type: void
      description: ''
- name: deleteElement(xpath, namespaceMappings)
  uid: word!Word.CustomXmlPart#deleteElement:member(1)
  package: word!
  fullName: deleteElement(xpath, namespaceMappings)
  summary: >-
    Supprime l’élément identifié par xpath.


    \[[Ensemble d’API : WordApi BÊTA (PRÉVISUALISATION UNIQUEMENT)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: 'Si un élément de l’arborescence possède un attribut xmlns (dont la valeur est généralement, mais pas toujours, un URI), un alias pour cette valeur d’attribut doit préfixer le nom de l’élément dans le paramètre xpath. Par exemple, supposons que l’arborescence est la suivante : <Day> <Month xmlns="http:\/\/calendartypes.org\/xsds\/GregorianCalendar"> <Week>quelque</Week> </Month> </Day> chose que le chemin d’accès x doit <Week> être /<!-- -->Day<!-- -->/<!-- -->contrôle :Month<!-- -->/<!-- -->Semaine, où il s’agit d’un alias qui est mappé sur « http :<!-- -->/<!-- -->/<!-- -->calendartypes.org<!-- -->/<!-- -->xsds<!-- -->/<!-- -->GregorianCalendar " dans le paramètre namespaceMappings.'
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'deleteElement(xpath: string, namespaceMappings: any): void;'
    parameters:
    - id: xpath
      description: Obligatoire. Chemin d’accès absolu à l’élément unique en notation XPath.
      type: string
    - id: namespaceMappings
      description: 'Obligatoire. Objet dont les valeurs de propriété sont des noms d’espaces de noms et dont les noms de propriété sont des alias pour les espaces de noms correspondants. Par exemple, `{greg: "http://calendartypes.org/xsds/GregorianCalendar"}`<!-- -->. Les noms de propriétés (tels que « barres ») peuvent être n’importe quelle chaîne qui n’utilise pas de caractères XPath réservés, tels que la barre oblique « / ».'
      type: any
    return:
      type: void
      description: ''
- name: getXml()
  uid: word!Word.CustomXmlPart#getXml:member(1)
  package: word!
  fullName: getXml()
  summary: >-
    Obtient le contenu XML complet de la partie XML personnalisée.


    \[[Ensemble d’API : WordApi BÊTA (PRÉVISUALISATION UNIQUEMENT)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'getXml(): OfficeExtension.ClientResult<string>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;string&gt;
      description: ''
- name: insertAttribute(xpath, namespaceMappings, name, value)
  uid: word!Word.CustomXmlPart#insertAttribute:member(1)
  package: word!
  fullName: insertAttribute(xpath, namespaceMappings, name, value)
  summary: >-
    Insère un attribut avec le nom et la valeur donnés à l’élément identifié par xpath.


    \[[Ensemble d’API : WordApi BÊTA (PRÉVISUALISATION UNIQUEMENT)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: 'Si un élément dans l’arborescence possède un attribut xmlns (dont la valeur est généralement, mais pas toujours, un URI), un alias pour cette valeur d’attribut doit préfixer le nom de l’élément dans le paramètre xpath. Par exemple, supposons que l’arborescence est la suivante : <Day> <Month xmlns="http:\/\/calendartypes.org\/xsds\/GregorianCalendar"> <Week>quelque</Week> </Month> </Day> chose que le chemin d’accès x doit <Week> être /<!-- -->Day<!-- -->/<!-- -->contrôle :Month<!-- -->/<!-- -->Semaine, où il s’agit d’un alias qui est mappé sur « http :<!-- -->/<!-- -->/<!-- -->calendartypes.org<!-- -->/<!-- -->xsds<!-- -->/<!-- -->GregorianCalendar " dans le paramètre namespaceMappings.'
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'insertAttribute(xpath: string, namespaceMappings: any, name: string, value: string): void;'
    parameters:
    - id: xpath
      description: Obligatoire. Chemin d’accès absolu à l’élément unique en notation XPath.
      type: string
    - id: namespaceMappings
      description: 'Obligatoire. Objet dont les valeurs de propriété sont des noms d’espaces de noms et dont les noms de propriété sont des alias pour les espaces de noms correspondants. Par exemple, `{greg: "http://calendartypes.org/xsds/GregorianCalendar"}`<!-- -->. Les noms de propriétés (tels que « barres ») peuvent être n’importe quelle chaîne qui n’utilise pas de caractères XPath réservés, tels que la barre oblique « / ».'
      type: any
    - id: name
      description: Obligatoire. Nom de l’attribut.
      type: string
    - id: value
      description: Obligatoire. Valeur de l’attribut.
      type: string
    return:
      type: void
      description: ''
- name: insertElement(xpath, xml, namespaceMappings, index)
  uid: word!Word.CustomXmlPart#insertElement:member(1)
  package: word!
  fullName: insertElement(xpath, xml, namespaceMappings, index)
  summary: >-
    Insère le XML donné sous l’élément parent identifié par xpath à l’index de position enfant.


    \[[Ensemble d’API : WordApi BÊTA (PRÉVISUALISATION UNIQUEMENT)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: 'Si un élément de l’arborescence possède un attribut xmlns (dont la valeur est généralement, mais pas toujours, un URI), un alias pour cette valeur d’attribut doit préfixer le nom de l’élément dans le paramètre xpath. Par exemple, supposons que l’arborescence est la suivante : <Day> <Month xmlns="http:\/\/calendartypes.org\/xsds\/GregorianCalendar"> <Week>quelque</Week> </Month> </Day> chose que le chemin d’accès x doit <Week> être /<!-- -->Day<!-- -->/<!-- -->contrôle :Month<!-- -->/<!-- -->Semaine, où il s’agit d’un alias qui est mappé sur « http :<!-- -->/<!-- -->/<!-- -->calendartypes.org<!-- -->/<!-- -->xsds<!-- -->/<!-- -->GregorianCalendar " dans le paramètre namespaceMappings.'
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'insertElement(xpath: string, xml: string, namespaceMappings: any, index?: number): void;'
    parameters:
    - id: xpath
      description: Obligatoire. Chemin d’accès absolu à l’élément parent unique en notation XPath.
      type: string
    - id: xml
      description: Obligatoire. Contenu XML à insérer.
      type: string
    - id: namespaceMappings
      description: 'Obligatoire. Objet dont les valeurs de propriété sont des noms d’espaces de noms et dont les noms de propriété sont des alias pour les espaces de noms correspondants. Par exemple, `{greg: "http://calendartypes.org/xsds/GregorianCalendar"}`<!-- -->. Les noms des propriétés (par exemple, « barres ») peuvent être n’importe quelle chaîne qui n’utilise pas de caractères XPath réservés, tels que la barre oblique « / ».'
      type: any
    - id: index
      description: Facultatif. Position de base 0 à laquelle le nouveau XML doit être inséré. S’il est omis, le XML est appendé en tant que dernier enfant de ce parent.
      type: number
    return:
      type: void
      description: ''
- name: load(options)
  uid: word!Word.CustomXmlPart#load:member(1)
  package: word!
  fullName: load(options)
  summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'load(options?: Word.Interfaces.CustomXmlPartLoadOptions): Word.CustomXmlPart;'
    parameters:
    - id: options
      description: Fournit des options pour lesquelles les propriétés de l’objet à charger.
      type: <xref uid="word!Word.Interfaces.CustomXmlPartLoadOptions:interface" />
    return:
      type: <xref uid="word!Word.CustomXmlPart:class" />
      description: ''
- name: load(propertyNames)
  uid: word!Word.CustomXmlPart#load:member(2)
  package: word!
  fullName: load(propertyNames)
  summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Word.CustomXmlPart;'
    parameters:
    - id: propertyNames
      description: Chaîne délimitée par des virgules ou tableau de chaînes spécifiant les propriétés à charger.
      type: string | string[]
    return:
      type: <xref uid="word!Word.CustomXmlPart:class" />
      description: ''
- name: load(propertyNamesAndPaths)
  uid: word!Word.CustomXmlPart#load:member(3)
  package: word!
  fullName: load(propertyNamesAndPaths)
  summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: >-
      load(propertyNamesAndPaths?: {
                  select?: string;
                  expand?: string;
              }): Word.CustomXmlPart;
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` est une chaîne délimitée par des virgules qui spécifie les propriétés à charger, et est une chaîne délimitée par des virgules qui spécifie les propriétés de `propertyNamesAndPaths.expand` navigation à charger.'
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="word!Word.CustomXmlPart:class" />
      description: ''
- name: query(xpath, namespaceMappings)
  uid: word!Word.CustomXmlPart#query:member(1)
  package: word!
  fullName: query(xpath, namespaceMappings)
  summary: >-
    Interroge le contenu XML de la partie XML personnalisée.


    \[[Ensemble d’API : WordApi BÊTA (PRÉVISUALISATION UNIQUEMENT)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: 'Si un élément dans l’arborescence possède un attribut xmlns (dont la valeur est généralement, mais pas toujours, un URI), un alias pour cette valeur d’attribut doit préfixer le nom de l’élément dans le paramètre xpath. Par exemple, supposons que l’arborescence est la suivante : <Day> <Month xmlns="http:\/\/calendartypes.org\/xsds\/GregorianCalendar"> <Week>quelque</Week> </Month> </Day> chose que le chemin d’accès x doit <Week> être /<!-- -->Day<!-- -->/<!-- -->contrôle :Month<!-- -->/<!-- -->Semaine, où il s’agit d’un alias qui est mappé sur « http :<!-- -->/<!-- -->/<!-- -->calendartypes.org<!-- -->/<!-- -->xsds<!-- -->/<!-- -->GregorianCalendar " dans le paramètre namespaceMappings.'
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'query(xpath: string, namespaceMappings: any): OfficeExtension.ClientResult<string[]>;'
    parameters:
    - id: xpath
      description: Obligatoire. Requête XPath.
      type: string
    - id: namespaceMappings
      description: 'Obligatoire. Objet dont les valeurs de propriété sont des noms d’espaces de noms et dont les noms de propriété sont des alias pour les espaces de noms correspondants. Par exemple, `{greg: "http://calendartypes.org/xsds/GregorianCalendar"}`<!-- -->. Les noms des propriétés (par exemple, « barres ») peuvent être n’importe quelle chaîne qui n’utilise pas de caractères XPath réservés, tels que la barre oblique « / ».'
      type: any
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;string[]&gt;
      description: Tableau où chaque élément représente une entrée qui correspond à la requête XPath.
- name: setXml(xml)
  uid: word!Word.CustomXmlPart#setXml:member(1)
  package: word!
  fullName: setXml(xml)
  summary: >-
    Définit le contenu XML complet de la partie XML personnalisée.


    \[[Ensemble d’API : WordApi BÊTA (PRÉVISUALISATION UNIQUEMENT)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'setXml(xml: string): void;'
    parameters:
    - id: xml
      description: Obligatoire. Contenu XML à définir.
      type: string
    return:
      type: void
      description: ''
- name: toJSON()
  uid: word!Word.CustomXmlPart#toJSON:member(1)
  package: word!
  fullName: toJSON()
  summary: Remplace la méthode JavaScript afin de fournir une sortie plus utile lorsqu’un objet `toJSON()` API est transmis à `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, à son tour, appelle `toJSON` la méthode de l’objet qui lui est transmis.) Alors que l’objet Word.CustomXmlPart d’origine est un objet API, la méthode renvoie un objet `toJSON` JavaScript simple (tapé sous la forme `Word.Interfaces.CustomXmlPartData`<!-- -->) qui contient des copies superficiels de toutes les propriétés enfants chargées à partir de l’objet d’origine.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'toJSON(): Word.Interfaces.CustomXmlPartData;'
    return:
      type: <xref uid="word!Word.Interfaces.CustomXmlPartData:interface" />
      description: ''
- name: track()
  uid: word!Word.CustomXmlPart#track:member(1)
  package: word!
  fullName: track()
  summary: Effectuer le suivi de l’objet pour l’ajustement automatique en fonction environnant des modifications dans le document. Cet appel est un raccourci pour `context.trackedObjects.add(thisObject)`<!-- -->. Si vous utilisez cet objet entre les appels et en dehors de l’exécution séquentielle d’un lot « .run » et que vous obtenez une erreur « InvalidObjectPath » lors de la définition d’une propriété ou de l’appel d’une méthode sur l’objet, vous devez avoir ajouté l’objet à la collection d’objets suivis lors de la première création de `.sync` l’objet.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'track(): Word.CustomXmlPart;'
    return:
      type: <xref uid="word!Word.CustomXmlPart:class" />
      description: ''
- name: untrack()
  uid: word!Word.CustomXmlPart#untrack:member(1)
  package: word!
  fullName: untrack()
  summary: Publication mémoire associée à cet objet si elle a été précédemment suivie. Cet appel est abrégé pour `context.trackedObjects.remove(thisObject)`<!-- -->. Vous rencontrez de nombreux objets suivies ralentit l’application hôte, donc n’oubliez pas de libérer les objets que l'on ajoute, une fois que vous avez terminé à les utiliser. Vous devrez appeler avant `context.sync()` que la libération de mémoire prenne effet.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'untrack(): Word.CustomXmlPart;'
    return:
      type: <xref uid="word!Word.CustomXmlPart:class" />
      description: ''
- name: updateAttribute(xpath, namespaceMappings, name, value)
  uid: word!Word.CustomXmlPart#updateAttribute:member(1)
  package: word!
  fullName: updateAttribute(xpath, namespaceMappings, name, value)
  summary: >-
    Met à jour la valeur d’un attribut avec le nom donné de l’élément identifié par xpath.


    \[[Ensemble d’API : WordApi BÊTA (PRÉVISUALISATION UNIQUEMENT)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: 'Si un élément dans l’arborescence possède un attribut xmlns (dont la valeur est généralement, mais pas toujours, un URI), un alias pour cette valeur d’attribut doit préfixer le nom de l’élément dans le paramètre xpath. Par exemple, supposons que l’arborescence est la suivante : <Day> <Month xmlns="http:\/\/calendartypes.org\/xsds\/GregorianCalendar"> <Week>quelque</Week> </Month> </Day> chose que le chemin d’accès x doit <Week> être /<!-- -->Day<!-- -->/<!-- -->contrôle :Month<!-- -->/<!-- -->Semaine, où il s’agit d’un alias qui est mappé sur « http :<!-- -->/<!-- -->/<!-- -->calendartypes.org<!-- -->/<!-- -->xsds<!-- -->/<!-- -->GregorianCalendar " dans le paramètre namespaceMappings.'
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'updateAttribute(xpath: string, namespaceMappings: any, name: string, value: string): void;'
    parameters:
    - id: xpath
      description: Obligatoire. Chemin d’accès absolu à l’élément unique en notation XPath.
      type: string
    - id: namespaceMappings
      description: 'Obligatoire. Objet dont les valeurs de propriété sont des noms d’espaces de noms et dont les noms de propriété sont des alias pour les espaces de noms correspondants. Par exemple, `{greg: "http://calendartypes.org/xsds/GregorianCalendar"}`<!-- -->. Les noms des propriétés (par exemple, « barres ») peuvent être n’importe quelle chaîne qui n’utilise pas de caractères XPath réservés, tels que la barre oblique « / ».'
      type: any
    - id: name
      description: Obligatoire. Nom de l’attribut.
      type: string
    - id: value
      description: Obligatoire. Nouvelle valeur de l’attribut.
      type: string
    return:
      type: void
      description: ''
- name: updateElement(xpath, xml, namespaceMappings)
  uid: word!Word.CustomXmlPart#updateElement:member(1)
  package: word!
  fullName: updateElement(xpath, xml, namespaceMappings)
  summary: >-
    Met à jour le XML de l’élément identifié par xpath.


    \[[Ensemble d’API : WordApi BÊTA (PRÉVISUALISATION UNIQUEMENT)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: 'Si un élément de l’arborescence possède un attribut xmlns (dont la valeur est généralement, mais pas toujours, un URI), un alias pour cette valeur d’attribut doit préfixer le nom de l’élément dans le paramètre xpath. Par exemple, supposons que l’arborescence est la suivante : <Day> <Month xmlns="http:\/\/calendartypes.org\/xsds\/GregorianCalendar"> <Week>quelque</Week> </Month> </Day> chose que le chemin d’accès x doit <Week> être /<!-- -->Day<!-- -->/<!-- -->contrôle :Month<!-- -->/<!-- -->Semaine, où il s’agit d’un alias qui est mappé sur « http :<!-- -->/<!-- -->/<!-- -->calendartypes.org<!-- -->/<!-- -->xsds<!-- -->/<!-- -->GregorianCalendar " dans le paramètre namespaceMappings.'
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'updateElement(xpath: string, xml: string, namespaceMappings: any): void;'
    parameters:
    - id: xpath
      description: Obligatoire. Chemin d’accès absolu à l’élément unique en notation XPath.
      type: string
    - id: xml
      description: Obligatoire. Nouveau contenu XML à stocker.
      type: string
    - id: namespaceMappings
      description: 'Obligatoire. Objet dont les valeurs de propriété sont des noms d’espaces de noms et dont les noms de propriété sont des alias pour les espaces de noms correspondants. Par exemple, `{greg: "http://calendartypes.org/xsds/GregorianCalendar"}`<!-- -->. Les noms des propriétés (par exemple, « barres ») peuvent être n’importe quelle chaîne qui n’utilise pas de caractères XPath réservés, tels que la barre oblique « / ».'
      type: any
    return:
      type: void
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: b6d0a86c68a4c9fe5c8876bef881283f306aff90
  ms.sourcegitcommit: f229afdd4c2bc820ac799394a77b637fc66e87b4
  ms.translationtype: MT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 01/27/2021
  ms.locfileid: "49992254"
