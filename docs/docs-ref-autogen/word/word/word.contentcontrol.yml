### YamlMime:TSType
name: Word.ContentControl
uid: word!Word.ContentControl:class
package: word!
fullName: Word.ContentControl
summary: >-
  Représente un contrôle de contenu. Les contrôles de contenu sont des zones d’un document délimitées par des bordures et pouvant porter une étiquette qui servent à contenir certains types de contenu. Les contrôles de contenu individuels peuvent contenir des images, des tableaux ou des paragraphes de texte mis en forme. Actuellement, seuls les contrôles de contenu à texte enrichi sont pris en charge.


  \[[Ensemble d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: appearance
  uid: word!Word.ContentControl#appearance:member
  package: word!
  fullName: appearance
  summary: >-
    Obtient ou définit l’apparence du contrôle de contenu. La valeur peut être « BoundingBox », « Tags » ou « Hidden ».


    \[[Ensemble d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'appearance: Word.ContentControlAppearance | "BoundingBox" | "Tags" | "Hidden";'
    return:
      type: <xref uid="word!Word.ContentControlAppearance:enum" /> | "BoundingBox" | "Tags" | "Hidden"
- name: cannotDelete
  uid: word!Word.ContentControl#cannotDelete:member
  package: word!
  fullName: cannotDelete
  summary: >-
    Obtient ou définit une valeur qui indique si l’utilisateur peut supprimer le contrôle de contenu. Non compatible avec removeWhenEdited.


    \[[Ensemble d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'cannotDelete: boolean;'
    return:
      type: boolean
- name: cannotEdit
  uid: word!Word.ContentControl#cannotEdit:member
  package: word!
  fullName: cannotEdit
  summary: >-
    Obtient ou définit une valeur qui indique si l’utilisateur peut modifier le contenu du contrôle.


    \[[Ensemble d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'cannotEdit: boolean;'
    return:
      type: boolean
- name: color
  uid: word!Word.ContentControl#color:member
  package: word!
  fullName: color
  summary: >-
    Obtient ou définit la couleur du contrôle de contenu. La couleur est spécifiée au format « RRGGBB » ou à \# l’aide du nom de la couleur.


    \[[Ensemble d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'color: string;'
    return:
      type: string
- name: contentControls
  uid: word!Word.ContentControl#contentControls:member
  package: word!
  fullName: contentControls
  summary: >-
    Obtient la collection d’objets de contrôle de contenu compris dans le contrôle de contenu. En lecture seule.


    \[[Ensemble d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly contentControls: Word.ContentControlCollection;'
    return:
      type: <xref uid="word!Word.ContentControlCollection:class" />
- name: context
  uid: word!Word.ContentControl#context:member
  package: word!
  fullName: context
  summary: Contexte de demande associé à l’objet. Cela connecte le processus du add-in au processus de l’application hôte Office.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="word!Word.RequestContext:class" />
- name: font
  uid: word!Word.ContentControl#font:member
  package: word!
  fullName: font
  summary: >-
    Obtient le format de texte du contrôle de contenu. Utilisez cette propriété pour obtenir et définir le nom de la police, la taille, la couleur et d’autres propriétés. En lecture seule.


    \[[Ensemble d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly font: Word.Font;'
    return:
      type: <xref uid="word!Word.Font:class" />
- name: id
  uid: word!Word.ContentControl#id:member
  package: word!
  fullName: id
  summary: >-
    Obtient un entier qui représente l’identificateur du contrôle de contenu. En lecture seule.


    \[[Ensemble d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly id: number;'
    return:
      type: number
- name: inlinePictures
  uid: word!Word.ContentControl#inlinePictures:member
  package: word!
  fullName: inlinePictures
  summary: >-
    Obtient la collection d’objets inlinePicture du contrôle de contenu. La collection n’inclut pas d’images flottantes. En lecture seule.


    \[[Ensemble d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly inlinePictures: Word.InlinePictureCollection;'
    return:
      type: <xref uid="word!Word.InlinePictureCollection:class" />
- name: lists
  uid: word!Word.ContentControl#lists:member
  package: word!
  fullName: lists
  summary: >-
    Obtient la collection d’objets list du contrôle de contenu. En lecture seule.


    \[[Ensemble d’API : WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly lists: Word.ListCollection;'
    return:
      type: <xref uid="word!Word.ListCollection:class" />
- name: onDataChanged
  uid: word!Word.ContentControl#onDataChanged:member
  package: word!
  fullName: onDataChanged
  summary: >-
    Se produit lorsque les données dans le contrôle de contenu sont modifiées. Pour obtenir le nouveau texte, chargez ce contrôle de contenu dans le handler. Pour obtenir l’ancien texte, ne le chargez pas.


    \[[Ensemble d’API : WordApi BÊTA (PRÉVISUALISATION UNIQUEMENT)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'readonly onDataChanged: OfficeExtension.EventHandlers<Word.ContentControlEventArgs>;'
    return:
      type: <xref uid="office!OfficeExtension.EventHandlers:class" />&lt;<xref uid="word!Word.ContentControlEventArgs:interface" />&gt;
- name: onDeleted
  uid: word!Word.ContentControl#onDeleted:member
  package: word!
  fullName: onDeleted
  summary: >-
    Se produit lorsque le contrôle de contenu est supprimé. Ne chargez pas ce contrôle de contenu dans le handler, sinon vous ne pourrez pas obtenir ses propriétés d’origine.


    \[[Ensemble d’API : WordApi BÊTA (PRÉVISUALISATION UNIQUEMENT)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'readonly onDeleted: OfficeExtension.EventHandlers<Word.ContentControlEventArgs>;'
    return:
      type: <xref uid="office!OfficeExtension.EventHandlers:class" />&lt;<xref uid="word!Word.ContentControlEventArgs:interface" />&gt;
- name: onSelectionChanged
  uid: word!Word.ContentControl#onSelectionChanged:member
  package: word!
  fullName: onSelectionChanged
  summary: >-
    Se produit lorsque la sélection dans le contrôle de contenu est modifiée.


    \[[Ensemble d’API : WordApi BÊTA (PRÉVISUALISATION UNIQUEMENT)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Word.ContentControlEventArgs>;'
    return:
      type: <xref uid="office!OfficeExtension.EventHandlers:class" />&lt;<xref uid="word!Word.ContentControlEventArgs:interface" />&gt;
- name: paragraphs
  uid: word!Word.ContentControl#paragraphs:member
  package: word!
  fullName: paragraphs
  summary: >-
    Obtient la collection d’objets de paragraphe du contrôle de contenu. En lecture seule.


    \[[Ensemble d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly paragraphs: Word.ParagraphCollection;'
    return:
      type: <xref uid="word!Word.ParagraphCollection:class" />
- name: parentBody
  uid: word!Word.ContentControl#parentBody:member
  package: word!
  fullName: parentBody
  summary: >-
    Obtient le corps parent du contrôle de contenu. En lecture seule.


    \[[Ensemble d’API : WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentBody: Word.Body;'
    return:
      type: <xref uid="word!Word.Body:class" />
- name: parentContentControl
  uid: word!Word.ContentControl#parentContentControl:member
  package: word!
  fullName: parentContentControl
  summary: >-
    Obtient le contrôle de contenu qui contient le contrôle de contenu spécifié. Envoie une erreur s’il n’existe pas de contrôle de contenu parent. En lecture seule.


    \[[Ensemble d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentContentControl: Word.ContentControl;'
    return:
      type: <xref uid="word!Word.ContentControl:class" />
- name: parentContentControlOrNullObject
  uid: word!Word.ContentControl#parentContentControlOrNullObject:member
  package: word!
  fullName: parentContentControlOrNullObject
  summary: >-
    Obtient le contrôle de contenu qui contient le contrôle de contenu spécifié. Renvoie un objet null s’il n’existe pas de contrôle de contenu parent. En lecture seule.


    \[[Ensemble d’API : WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentContentControlOrNullObject: Word.ContentControl;'
    return:
      type: <xref uid="word!Word.ContentControl:class" />
- name: parentTable
  uid: word!Word.ContentControl#parentTable:member
  package: word!
  fullName: parentTable
  summary: >-
    Obtient le tableau qui contient le contrôle de contenu. Envoie une erreur si elle n’est pas contenue dans un tableau. En lecture seule.


    \[[Ensemble d’API : WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentTable: Word.Table;'
    return:
      type: <xref uid="word!Word.Table:class" />
- name: parentTableCell
  uid: word!Word.ContentControl#parentTableCell:member
  package: word!
  fullName: parentTableCell
  summary: >-
    Obtient la cellule de tableau qui contient le contrôle de contenu. Envoie une erreur si elle n’est pas contenue dans une cellule de tableau. En lecture seule.


    \[[Ensemble d’API : WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentTableCell: Word.TableCell;'
    return:
      type: <xref uid="word!Word.TableCell:class" />
- name: parentTableCellOrNullObject
  uid: word!Word.ContentControl#parentTableCellOrNullObject:member
  package: word!
  fullName: parentTableCellOrNullObject
  summary: >-
    Obtient la cellule de tableau qui contient le contrôle de contenu. Renvoie un objet null s’il n’est pas contenu dans une cellule de tableau. En lecture seule.


    \[[Ensemble d’API : WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentTableCellOrNullObject: Word.TableCell;'
    return:
      type: <xref uid="word!Word.TableCell:class" />
- name: parentTableOrNullObject
  uid: word!Word.ContentControl#parentTableOrNullObject:member
  package: word!
  fullName: parentTableOrNullObject
  summary: >-
    Obtient le tableau qui contient le contrôle de contenu. Renvoie un objet null s’il n’est pas contenu dans un tableau. En lecture seule.


    \[[Ensemble d’API : WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentTableOrNullObject: Word.Table;'
    return:
      type: <xref uid="word!Word.Table:class" />
- name: placeholderText
  uid: word!Word.ContentControl#placeholderText:member
  package: word!
  fullName: placeholderText
  summary: >-
    Obtient ou définit le texte de l’espace réservé du contrôle de contenu. Ce texte apparaît de façon estompée lorsque le contrôle de contenu est vide.


    **Remarque**: l’opération set pour cette propriété n’est pas prise en charge dans Word sur le web.


    \[[Ensemble d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'placeholderText: string;'
    return:
      type: string
- name: removeWhenEdited
  uid: word!Word.ContentControl#removeWhenEdited:member
  package: word!
  fullName: removeWhenEdited
  summary: >-
    Obtient ou définit une valeur qui indique si le contrôle de contenu doit être supprimé après modification. Non compatible avec cannotDelete.


    \[[Ensemble d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'removeWhenEdited: boolean;'
    return:
      type: boolean
- name: style
  uid: word!Word.ContentControl#style:member
  package: word!
  fullName: style
  summary: >-
    Obtient ou définit le nom du style du contrôle de contenu. Utilisez cette propriété pour les noms des styles personnalisés et localisés. Pour utiliser les styles prédéfinis qui sont portables entre différents paramètres régionaux, voir la propriété « styleBuiltIn ».


    \[[Ensemble d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'style: string;'
    return:
      type: string
- name: styleBuiltIn
  uid: word!Word.ContentControl#styleBuiltIn:member
  package: word!
  fullName: styleBuiltIn
  summary: >-
    Obtient ou définit le nom de style intégré pour le contrôle de contenu. Utilisez cette propriété pour les styles intégrés qui sont portables entre les paramètres régionaux. Pour utiliser des styles personnalisés ou des noms de style localisés, consultez la propriété « style ».


    \[[Ensemble d’API : WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'styleBuiltIn: Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6";'
    return:
      type: <xref uid="word!Word.Style:enum" /> | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6"
- name: subtype
  uid: word!Word.ContentControl#subtype:member
  package: word!
  fullName: subtype
  summary: >-
    Obtient le sous-type du contrôle de contenu. Le sous-type peut être « RichTextInline », « RichTextParagraphs », « RichTextTableCell », « RichTextTableRow » et « RichTextTable » pour les contrôles de contenu en texte enrichi. En lecture seule.


    \[[Ensemble d’API : WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly subtype: Word.ContentControlType | "Unknown" | "RichTextInline" | "RichTextParagraphs" | "RichTextTableCell" | "RichTextTableRow" | "RichTextTable" | "PlainTextInline" | "PlainTextParagraph" | "Picture" | "BuildingBlockGallery" | "CheckBox" | "ComboBox" | "DropDownList" | "DatePicker" | "RepeatingSection" | "RichText" | "PlainText";'
    return:
      type: <xref uid="word!Word.ContentControlType:enum" /> | "Unknown" | "RichTextInline" | "RichTextParagraphs" | "RichTextTableCell" | "RichTextTableRow" | "RichTextTable" | "PlainTextInline" | "PlainTextParagraph" | "Picture" | "BuildingBlockGallery" | "CheckBox" | "ComboBox" | "DropDownList" | "DatePicker" | "RepeatingSection" | "RichText" | "PlainText"
- name: tables
  uid: word!Word.ContentControl#tables:member
  package: word!
  fullName: tables
  summary: >-
    Obtient la collection d’objets table du contrôle de contenu. En lecture seule.


    \[[Ensemble d’API : WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly tables: Word.TableCollection;'
    return:
      type: <xref uid="word!Word.TableCollection:class" />
- name: tag
  uid: word!Word.ContentControl#tag:member
  package: word!
  fullName: tag
  summary: >-
    Obtient ou définit un indicateur pour identifier un contrôle de contenu.


    \[[Ensemble d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'tag: string;'
    return:
      type: string
      description: "\n\n#### <a name=\"examples\"></a>Exemples\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/10-content-controls/insert-and-change-content-controls.yaml\n// Traverses each paragraph of the document and wraps a content control on each with either a even or odd tags.\nawait Word.run(async (context) => {\n  let paragraphs = context.document.body.paragraphs;\n  paragraphs.load(\"$none\"); // Don't need any properties; just wrap each paragraph with a content control.\n\n  await context.sync();\n\n  for (let i = 0; i < paragraphs.items.length; i++) {\n    let contentControl = paragraphs.items[i].insertContentControl();\n    // For even, tag \"even\".\n    if (i % 2 === 0) {\n      contentControl.tag = \"even\";\n    } else {\n      contentControl.tag = \"odd\";\n    }\n  }\n  console.log(\"Content controls inserted: \" + paragraphs.items.length);\n\n  await context.sync();\n});\n```"
- name: text
  uid: word!Word.ContentControl#text:member
  package: word!
  fullName: text
  summary: >-
    Obtient le texte du contrôle de contenu. En lecture seule.


    \[[Ensemble d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly text: string;'
    return:
      type: string
- name: title
  uid: word!Word.ContentControl#title:member
  package: word!
  fullName: title
  summary: >-
    Obtient ou définit le titre d’un contrôle de contenu.


    \[[Ensemble d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'title: string;'
    return:
      type: string
- name: type
  uid: word!Word.ContentControl#type:member
  package: word!
  fullName: type
  summary: >-
    Obtient le type du contrôle de contenu. Actuellement, seuls les contrôles de contenu à texte enrichi sont pris en charge. En lecture seule.


    \[[Ensemble d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly type: Word.ContentControlType | "Unknown" | "RichTextInline" | "RichTextParagraphs" | "RichTextTableCell" | "RichTextTableRow" | "RichTextTable" | "PlainTextInline" | "PlainTextParagraph" | "Picture" | "BuildingBlockGallery" | "CheckBox" | "ComboBox" | "DropDownList" | "DatePicker" | "RepeatingSection" | "RichText" | "PlainText";'
    return:
      type: <xref uid="word!Word.ContentControlType:enum" /> | "Unknown" | "RichTextInline" | "RichTextParagraphs" | "RichTextTableCell" | "RichTextTableRow" | "RichTextTable" | "PlainTextInline" | "PlainTextParagraph" | "Picture" | "BuildingBlockGallery" | "CheckBox" | "ComboBox" | "DropDownList" | "DatePicker" | "RepeatingSection" | "RichText" | "PlainText"
methods:
- name: clear()
  uid: word!Word.ContentControl#clear:member(1)
  package: word!
  fullName: clear()
  summary: >-
    Efface le contenu du contrôle de contenu. L’utilisateur peut effectuer l’opération d’annulation sur le contenu effacé.


    \[[Ensemble d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'clear(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Exemples\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy object for the content controls collection.\n    var contentControls = context.document.contentControls;\n    \n    // Queue a command to load the content controls collection.\n    contentControls.load('text');\n     \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        \n        if (contentControls.items.length === 0) {\n            console.log(\"There isn't a content control in this document.\");\n        } else {\n            \n            // Queue a command to clear the contents of the first content control.\n            contentControls.items[0].clear();\n            // Synchronize the document state by executing the queued commands, \n            // and return a promise to indicate task completion.\n            return context.sync().then(function () {\n                console.log('Content control cleared of contents.');\n            });      \n        }\n            \n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: delete(keepContent)
  uid: word!Word.ContentControl#delete:member(1)
  package: word!
  fullName: delete(keepContent)
  summary: >-
    Supprime le contrôle de contenu et son contenu. Si keepContent est défini sur true, le contenu n’est pas supprimé.


    \[[Ensemble d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'delete(keepContent: boolean): void;'
    parameters:
    - id: keepContent
      description: Obligatoire. Indique si le contenu doit être supprimé avec le contrôle de contenu. Si keepContent est défini sur true, le contenu n’est pas supprimé.
      type: boolean
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Exemples\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy object for the content controls collection.\n    var contentControls = context.document.contentControls;\n    \n    // Queue a command to load the content controls collection.\n    contentControls.load('text');\n     \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        \n        if (contentControls.items.length === 0) {\n            console.log(\"There isn't a content control in this document.\");\n        } else {\n            \n            // Queue a command to delete the first content control. The\n            // contents will remain in the document.\n            contentControls.items[0].delete(true);\n            // Synchronize the document state by executing the queued commands, \n            // and return a promise to indicate task completion.\n            return context.sync().then(function () {\n                console.log('Content control cleared of contents.');\n            });      \n        }\n            \n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: getHtml()
  uid: word!Word.ContentControl#getHtml:member(1)
  package: word!
  fullName: getHtml()
  summary: >-
    Obtient une représentation HTML de l’objet de contrôle de contenu. Lorsqu’elle est restituer dans une page web ou une visionneuse HTML, la mise en forme sera une correspondance proche, mais pas exacte, de la mise en forme du document. Cette méthode ne retourne pas exactement le même code HTML pour le même document sur différentes plateformes (Windows, Mac, Word sur le web, etc.). Si vous avez besoin d’une fidélité ou d’une cohérence exactes entre les plateformes, utilisez et convertissez le `ContentControl.getOoxml()` code XML renvoyé au format HTML.


    \[[Ensemble d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getHtml(): OfficeExtension.ClientResult<string>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;string&gt;
      description: "\n\n#### <a name=\"examples\"></a>Exemples\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy object for the content controls collection that contains a specific tag.\n    var contentControlsWithTag = context.document.contentControls.getByTag('Customer-Address');\n    \n    // Queue a command to load the tag property for all of content controls. \n    context.load(contentControlsWithTag, 'tag');\n     \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        if (contentControlsWithTag.items.length === 0) {\n            console.log('No content control found.');\n        }\n        else {\n            // Queue a command to get the HTML contents of the first content control.\n            var html = contentControlsWithTag.items[0].getHtml();\n        \n            // Synchronize the document state by executing the queued commands, \n            // and return a promise to indicate task completion.\n            return context.sync()\n                .then(function () {\n                    console.log('Content control HTML: ' + html.value);\n            });\n        }\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: getOoxml()
  uid: word!Word.ContentControl#getOoxml:member(1)
  package: word!
  fullName: getOoxml()
  summary: >-
    Obtient la représentation Office Open XML (OOXML) de l’objet de contrôle de contenu.


    \[[Ensemble d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getOoxml(): OfficeExtension.ClientResult<string>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;string&gt;
      description: "\n\n#### <a name=\"examples\"></a>Exemples\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy object for the content controls collection.\n    var contentControls = context.document.contentControls;\n    \n    // Queue a command to load the id property for all of the content controls. \n    context.load(contentControls, 'id');\n     \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        if (contentControls.items.length === 0) {\n            console.log('No content control found.');\n        }\n        else {\n            // Queue a command to get the OOXML contents of the first content control.\n            var ooxml = contentControls.items[0].getOoxml();\n        \n            // Synchronize the document state by executing the queued commands, \n            // and return a promise to indicate task completion.\n            return context.sync()\n                .then(function () {\n                    console.log('Content control OOXML: ' + ooxml.value);\n            });\n        }\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: getRange(rangeLocation)
  uid: word!Word.ContentControl#getRange:member(1)
  package: word!
  fullName: getRange(rangeLocation)
  summary: >-
    Obtient le contrôle de contenu entier, ou le point de début ou de fin du contrôle de contenu, sous la forme d’une plage.


    \[[Ensemble d’API : WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRange(rangeLocation?: Word.RangeLocation): Word.Range;'
    parameters:
    - id: rangeLocation
      description: Facultatif. L’emplacement de la plage peut être « Whole » (entier), « Before » (avant), « Start » (début), « End » (fin), « After » (après) ou « Content » (contenu).
      type: <xref uid="word!Word.RangeLocation:enum" />
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: getRange(rangeLocationString)
  uid: word!Word.ContentControl#getRange:member(2)
  package: word!
  fullName: getRange(rangeLocationString)
  summary: >-
    Obtient le contrôle de contenu entier, ou le point de début ou de fin du contrôle de contenu, sous la forme d’une plage.


    \[[Ensemble d’API : WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRange(rangeLocationString?: "Whole" | "Start" | "End" | "Before" | "After" | "Content"): Word.Range;'
    parameters:
    - id: rangeLocationString
      description: Facultatif. L’emplacement de la plage peut être « Whole » (entier), « Before » (avant), « Start » (début), « End » (fin), « After » (après) ou « Content » (contenu).
      type: "\"Whole\" | \"Start\" | \"End\" | \"Before\" | \"After\" | \"Content\""
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: getTextRanges(endingMarks, trimSpacing)
  uid: word!Word.ContentControl#getTextRanges:member(1)
  package: word!
  fullName: getTextRanges(endingMarks, trimSpacing)
  summary: >-
    Obtient les plages de texte dans le contrôle de contenu à l’aide de signes de ponctuation et/ou d’autres marques de fin.


    \[[Ensemble d’API : WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getTextRanges(endingMarks: string[], trimSpacing?: boolean): Word.RangeCollection;'
    parameters:
    - id: endingMarks
      description: Obligatoire. Signes de ponctuation et/ou autres marques de fin sous forme de tableau de chaînes.
      type: string[]
    - id: trimSpacing
      description: Facultatif. Indique s’il faut découper les caractères d’espacement (espaces, tabulations, coupures de colonnes et marques de fin de paragraphe) à partir du début et de la fin des plages renvoyées dans la collection de plages. La valeur par défaut est false, ce qui indique que les caractères d’espacement au début et à la fin des plages sont inclus dans la collection de plages.
      type: boolean
    return:
      type: <xref uid="word!Word.RangeCollection:class" />
      description: ''
- name: insertBreak(breakType, insertLocation)
  uid: word!Word.ContentControl#insertBreak:member(1)
  package: word!
  fullName: insertBreak(breakType, insertLocation)
  summary: >-
    Insère un saut à l’emplacement spécifié du document principal. Cette méthode ne peut pas être utilisée avec les contrôles de contenu « RichTextTableTable » et « RichTextTableCell ».


    \[[Ensemble d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertBreak(breakType: Word.BreakType, insertLocation: Word.InsertLocation): void;'
    parameters:
    - id: breakType
      description: Obligatoire. Type de coupure.
      type: <xref uid="word!Word.BreakType:enum" />
    - id: insertLocation
      description: Obligatoire. La valeur peut être « Start » (début), « End » (fin), « Before » (avant) ou « After » (après).
      type: <xref uid="word!Word.InsertLocation:enum" />
    return:
      type: void
      description: ''
- name: insertBreak(breakTypeString, insertLocation)
  uid: word!Word.ContentControl#insertBreak:member(2)
  package: word!
  fullName: insertBreak(breakTypeString, insertLocation)
  summary: >-
    Insère un saut à l’emplacement spécifié du document principal. Cette méthode ne peut pas être utilisée avec les contrôles de contenu « RichTextTableTable » et « RichTextTableCell ».


    \[[Ensemble d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertBreak(breakTypeString: "Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line", insertLocation: "Before" | "After" | "Start" | "End" | "Replace"): void;'
    parameters:
    - id: breakTypeString
      description: Obligatoire. Type de coupure.
      type: "\"Page\" | \"Next\" | \"SectionNext\" | \"SectionContinuous\" | \"SectionEven\" | \"SectionOdd\" | \"Line\""
    - id: insertLocation
      description: Obligatoire. La valeur peut être « Start » (début), « End » (fin), « Before » (avant) ou « After » (après).
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Exemples\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy object for the content controls collection.\n    var contentControls = context.document.contentControls;\n    \n    // Queue a command to load the id property for all of content controls. \n    context.load(contentControls, 'id');\n    \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion. We now will have \n    // access to the content control collection.\n    return context.sync().then(function () {\n        if (contentControls.items.length === 0) {\n            console.log('No content control found.');\n        }\n        else {\n            // Queue a command to insert a page break after the first content control. \n            contentControls.items[0].insertBreak('page', \"After\");\n            \n            // Synchronize the document state by executing the queued commands, \n            // and return a promise to indicate task completion. \n            return context.sync()\n                .then(function () {\n                    console.log('Inserted a page break after the first content control.');    \n            });\n        }\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: insertFileFromBase64(base64File, insertLocation)
  uid: word!Word.ContentControl#insertFileFromBase64:member(1)
  package: word!
  fullName: insertFileFromBase64(base64File, insertLocation)
  summary: >-
    Insère un document dans le contrôle de contenu à l’emplacement spécifié.


    \[[Ensemble d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertFileFromBase64(base64File: string, insertLocation: Word.InsertLocation): Word.Range;'
    parameters:
    - id: base64File
      description: Obligatoire. Contenu codé en base 64 d’un fichier .docx.
      type: string
    - id: insertLocation
      description: Obligatoire. La valeur peut être « Replace » (remplacer), « Start » (début) ou « End » (fin). « Replace » ne peut pas être utilisé avec les contrôles de contenu « RichTextTable » et « RichTextTableRow ».
      type: <xref uid="word!Word.InsertLocation:enum" />
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: insertFileFromBase64(base64File, insertLocationString)
  uid: word!Word.ContentControl#insertFileFromBase64:member(2)
  package: word!
  fullName: insertFileFromBase64(base64File, insertLocationString)
  summary: >-
    Insère un document dans le contrôle de contenu à l’emplacement spécifié.


    \[[Ensemble d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertFileFromBase64(base64File: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
    parameters:
    - id: base64File
      description: Obligatoire. Contenu codé en base 64 d’un fichier .docx.
      type: string
    - id: insertLocationString
      description: Obligatoire. La valeur peut être « Replace » (remplacer), « Start » (début) ou « End » (fin). « Replace » ne peut pas être utilisé avec les contrôles de contenu « RichTextTable » et « RichTextTableRow ».
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: insertHtml(html, insertLocation)
  uid: word!Word.ContentControl#insertHtml:member(1)
  package: word!
  fullName: insertHtml(html, insertLocation)
  summary: >-
    Insère du code HTML dans le contrôle de contenu, à l’emplacement spécifié.


    \[[Ensemble d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertHtml(html: string, insertLocation: Word.InsertLocation): Word.Range;'
    parameters:
    - id: html
      description: Obligatoire. Code HTML à insérer dans le contrôle de contenu.
      type: string
    - id: insertLocation
      description: Obligatoire. La valeur peut être « Replace » (remplacer), « Start » (début) ou « End » (fin). « Replace » ne peut pas être utilisé avec les contrôles de contenu « RichTextTable » et « RichTextTableRow ».
      type: <xref uid="word!Word.InsertLocation:enum" />
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: insertHtml(html, insertLocationString)
  uid: word!Word.ContentControl#insertHtml:member(2)
  package: word!
  fullName: insertHtml(html, insertLocationString)
  summary: >-
    Insère du code HTML dans le contrôle de contenu, à l’emplacement spécifié.


    \[[Ensemble d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertHtml(html: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
    parameters:
    - id: html
      description: Obligatoire. Code HTML à insérer dans le contrôle de contenu.
      type: string
    - id: insertLocationString
      description: Obligatoire. La valeur peut être « Replace » (remplacer), « Start » (début) ou « End » (fin). « Replace » ne peut pas être utilisé avec les contrôles de contenu « RichTextTable » et « RichTextTableRow ».
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    return:
      type: <xref uid="word!Word.Range:class" />
      description: "\n\n#### <a name=\"examples\"></a>Exemples\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy object for the content controls collection.\n    var contentControls = context.document.contentControls;\n    \n    // Queue a command to load the id property for all of the content controls. \n    context.load(contentControls, 'id');\n     \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        if (contentControls.items.length === 0) {\n            console.log('No content control found.');\n        }\n        else {\n            // Queue a command to put HTML into the contents of the first content control.\n            contentControls.items[0].insertHtml(\n                '<strong>HTML content inserted into the content control.</strong>',\n                'Start');\n        \n            // Synchronize the document state by executing the queued commands, \n            // and return a promise to indicate task completion.\n            return context.sync()\n                .then(function () {\n                    console.log('Inserted HTML in the first content control.');\n            });\n        }\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: insertInlinePictureFromBase64(base64EncodedImage, insertLocation)
  uid: word!Word.ContentControl#insertInlinePictureFromBase64:member(1)
  package: word!
  fullName: insertInlinePictureFromBase64(base64EncodedImage, insertLocation)
  summary: >-
    Insère une image incluse dans le contrôle de contenu, à l’emplacement spécifié.


    \[[Ensemble d’API : WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocation: Word.InsertLocation): Word.InlinePicture;'
    parameters:
    - id: base64EncodedImage
      description: Obligatoire. Image encodée au format Base64 à insérer dans le contrôle de contenu.
      type: string
    - id: insertLocation
      description: Obligatoire. La valeur peut être « Replace » (remplacer), « Start » (début) ou « End » (fin). « Replace » ne peut pas être utilisé avec les contrôles de contenu « RichTextTable » et « RichTextTableRow ».
      type: <xref uid="word!Word.InsertLocation:enum" />
    return:
      type: <xref uid="word!Word.InlinePicture:class" />
      description: ''
- name: insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)
  uid: word!Word.ContentControl#insertInlinePictureFromBase64:member(2)
  package: word!
  fullName: insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)
  summary: >-
    Insère une image incluse dans le contrôle de contenu, à l’emplacement spécifié.


    \[[Ensemble d’API : WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.InlinePicture;'
    parameters:
    - id: base64EncodedImage
      description: Obligatoire. Image encodée au format Base64 à insérer dans le contrôle de contenu.
      type: string
    - id: insertLocationString
      description: Obligatoire. La valeur peut être « Replace » (remplacer), « Start » (début) ou « End » (fin). « Replace » ne peut pas être utilisé avec les contrôles de contenu « RichTextTable » et « RichTextTableRow ».
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    return:
      type: <xref uid="word!Word.InlinePicture:class" />
      description: ''
- name: insertOoxml(ooxml, insertLocation)
  uid: word!Word.ContentControl#insertOoxml:member(1)
  package: word!
  fullName: insertOoxml(ooxml, insertLocation)
  summary: >-
    Insère du contenu OOXML dans le contrôle de contenu à l’emplacement spécifié.


    \[[Ensemble d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertOoxml(ooxml: string, insertLocation: Word.InsertLocation): Word.Range;'
    parameters:
    - id: ooxml
      description: Obligatoire. Contenu OOXML à insérer dans le contrôle de contenu.
      type: string
    - id: insertLocation
      description: Obligatoire. La valeur peut être « Replace » (remplacer), « Start » (début) ou « End » (fin). « Replace » ne peut pas être utilisé avec les contrôles de contenu « RichTextTable » et « RichTextTableRow ».
      type: <xref uid="word!Word.InsertLocation:enum" />
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: insertOoxml(ooxml, insertLocationString)
  uid: word!Word.ContentControl#insertOoxml:member(2)
  package: word!
  fullName: insertOoxml(ooxml, insertLocationString)
  summary: >-
    Insère du contenu OOXML dans le contrôle de contenu à l’emplacement spécifié.


    \[[Ensemble d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertOoxml(ooxml: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
    parameters:
    - id: ooxml
      description: Obligatoire. Contenu OOXML à insérer dans le contrôle de contenu.
      type: string
    - id: insertLocationString
      description: Obligatoire. La valeur peut être « Replace » (remplacer), « Start » (début) ou « End » (fin). « Replace » ne peut pas être utilisé avec les contrôles de contenu « RichTextTable » et « RichTextTableRow ».
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    return:
      type: <xref uid="word!Word.Range:class" />
      description: "\n\n#### <a name=\"examples\"></a>Exemples\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy object for the content controls collection.\n    var contentControls = context.document.contentControls;\n    \n    // Queue a command to load the id property for all of the content controls. \n    context.load(contentControls, 'id');\n     \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        if (contentControls.items.length === 0) {\n            console.log('No content control found.');\n        }\n        else {\n            // Queue a command to put OOXML into the contents of the first content control.\n            contentControls.items[0].insertOoxml(\"<pkg:package xmlns:pkg='http://schemas.microsoft.com/office/2006/xmlPackage'><pkg:part pkg:name='/_rels/.rels' pkg:contentType='application/vnd.openxmlformats-package.relationships+xml' pkg:padding='512'><pkg:xmlData><Relationships xmlns='http://schemas.openxmlformats.org/package/2006/relationships'><Relationship Id='rId1' Type='http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument' Target='word/document.xml'/></Relationships></pkg:xmlData></pkg:part><pkg:part pkg:name='/word/document.xml' pkg:contentType='application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml'><pkg:xmlData><w:document xmlns:w='http://schemas.openxmlformats.org/wordprocessingml/2006/main' ><w:body><w:p><w:pPr><w:spacing w:before='360' w:after='0' w:line='480' w:lineRule='auto'/><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr></w:pPr><w:r><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr><w:t>This text has formatting directly applied to achieve its font size, color, line spacing, and paragraph spacing.</w:t></w:r></w:p></w:body></w:document></pkg:xmlData></pkg:part></pkg:package>\", \"End\");\n        \n            // Synchronize the document state by executing the queued commands, \n            // and return a promise to indicate task completion.\n            return context.sync()\n                .then(function () {\n                    console.log('Inserted OOXML in the first content control.');\n            });\n        }\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n\n// Read \"Create better add-ins for Word with Office Open XML\" for guidance on working with OOXML.\n// https://docs.microsoft.com/office/dev/add-ins/word/create-better-add-ins-for-word-with-office-open-xml\n```"
- name: insertParagraph(paragraphText, insertLocation)
  uid: word!Word.ContentControl#insertParagraph:member(1)
  package: word!
  fullName: insertParagraph(paragraphText, insertLocation)
  summary: >-
    Insère un paragraphe à l’emplacement spécifié.


    \[[Ensemble d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation): Word.Paragraph;'
    parameters:
    - id: paragraphText
      description: Obligatoire. Texte de paragraphe à insérer.
      type: string
    - id: insertLocation
      description: Obligatoire. La valeur peut être « Start » (début), « End » (fin), « Before » (avant) ou « After » (après). Les contrôles de contenu « Before » et « After » ne peuvent pas être utilisés avec les contrôles de contenu « RichTextTable » et « RichTextTableRow ».
      type: <xref uid="word!Word.InsertLocation:enum" />
    return:
      type: <xref uid="word!Word.Paragraph:class" />
      description: ''
- name: insertParagraph(paragraphText, insertLocationString)
  uid: word!Word.ContentControl#insertParagraph:member(2)
  package: word!
  fullName: insertParagraph(paragraphText, insertLocationString)
  summary: >-
    Insère un paragraphe à l’emplacement spécifié.


    \[[Ensemble d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertParagraph(paragraphText: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Paragraph;'
    parameters:
    - id: paragraphText
      description: Obligatoire. Texte de paragraphe à insérer.
      type: string
    - id: insertLocationString
      description: Obligatoire. La valeur peut être « Start » (début), « End » (fin), « Before » (avant) ou « After » (après). Les contrôles de contenu « Before » et « After » ne peuvent pas être utilisés avec les contrôles de contenu « RichTextTable » et « RichTextTableRow ».
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    return:
      type: <xref uid="word!Word.Paragraph:class" />
      description: "\n\n#### <a name=\"examples\"></a>Exemples\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy object for the content controls collection.\n    var contentControls = context.document.contentControls;\n    \n    // Queue a command to load the id property for all of the content controls. \n    context.load(contentControls, 'id');\n     \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        if (contentControls.items.length === 0) {\n            console.log('No content control found.');\n        }\n        else {\n            // Queue a command to insert a paragraph after the first content control. \n            contentControls.items[0].insertParagraph('Text of the inserted paragraph.', 'After');\n        \n            // Synchronize the document state by executing the queued commands, \n            // and return a promise to indicate task completion.\n            return context.sync()\n                .then(function () {\n                    console.log('Inserted a paragraph after the first content control.');\n            });\n        }\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: insertTable(rowCount, columnCount, insertLocation, values)
  uid: word!Word.ContentControl#insertTable:member(1)
  package: word!
  fullName: insertTable(rowCount, columnCount, insertLocation, values)
  summary: >-
    Insère un tableau avec le nombre spécifié de lignes et de colonnes dans un contrôle de contenu ou à proximité de celui-ci.


    \[[Ensemble d’API : WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertTable(rowCount: number, columnCount: number, insertLocation: Word.InsertLocation, values?: string[][]): Word.Table;'
    parameters:
    - id: rowCount
      description: Obligatoire. Nombre de lignes dans le tableau.
      type: number
    - id: columnCount
      description: Obligatoire. Nombre de colonnes dans le tableau.
      type: number
    - id: insertLocation
      description: Obligatoire. La valeur peut être « Start » (début), « End » (fin), « Before » (avant) ou « After » (après). Les contrôles de contenu « Before » et « After » ne peuvent pas être utilisés avec les contrôles de contenu « RichTextTable » et « RichTextTableRow ».
      type: <xref uid="word!Word.InsertLocation:enum" />
    - id: values
      description: Tableau 2D facultatif. Les cellules sont remplies si les chaînes correspondantes sont spécifiées dans le tableau.
      type: string[][]
    return:
      type: <xref uid="word!Word.Table:class" />
      description: ''
- name: insertTable(rowCount, columnCount, insertLocationString, values)
  uid: word!Word.ContentControl#insertTable:member(2)
  package: word!
  fullName: insertTable(rowCount, columnCount, insertLocationString, values)
  summary: >-
    Insère un tableau avec le nombre spécifié de lignes et de colonnes dans un contrôle de contenu ou à proximité de celui-ci.


    \[[Ensemble d’API : WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertTable(rowCount: number, columnCount: number, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace", values?: string[][]): Word.Table;'
    parameters:
    - id: rowCount
      description: Obligatoire. Nombre de lignes dans le tableau.
      type: number
    - id: columnCount
      description: Obligatoire. Nombre de colonnes dans le tableau.
      type: number
    - id: insertLocationString
      description: Obligatoire. La valeur peut être « Start » (début), « End » (fin), « Before » (avant) ou « After » (après). Les contrôles de contenu « Before » et « After » ne peuvent pas être utilisés avec les contrôles de contenu « RichTextTable » et « RichTextTableRow ».
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    - id: values
      description: Tableau 2D facultatif. Les cellules sont remplies si les chaînes correspondantes sont spécifiées dans le tableau.
      type: string[][]
    return:
      type: <xref uid="word!Word.Table:class" />
      description: ''
- name: insertText(text, insertLocation)
  uid: word!Word.ContentControl#insertText:member(1)
  package: word!
  fullName: insertText(text, insertLocation)
  summary: >-
    Insère du texte dans le contrôle de contenu, à l’emplacement spécifié.


    \[[Ensemble d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertText(text: string, insertLocation: Word.InsertLocation): Word.Range;'
    parameters:
    - id: text
      description: Obligatoire. Texte à insérer dans le contrôle de contenu.
      type: string
    - id: insertLocation
      description: Obligatoire. La valeur peut être « Replace » (remplacer), « Start » (début) ou « End » (fin). « Replace » ne peut pas être utilisé avec les contrôles de contenu « RichTextTable » et « RichTextTableRow ».
      type: <xref uid="word!Word.InsertLocation:enum" />
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: insertText(text, insertLocationString)
  uid: word!Word.ContentControl#insertText:member(2)
  package: word!
  fullName: insertText(text, insertLocationString)
  summary: >-
    Insère du texte dans le contrôle de contenu, à l’emplacement spécifié.


    \[[Ensemble d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertText(text: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
    parameters:
    - id: text
      description: Obligatoire. Texte à insérer dans le contrôle de contenu.
      type: string
    - id: insertLocationString
      description: Obligatoire. La valeur peut être « Replace » (remplacer), « Start » (début) ou « End » (fin). « Replace » ne peut pas être utilisé avec les contrôles de contenu « RichTextTable » et « RichTextTableRow ».
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    return:
      type: <xref uid="word!Word.Range:class" />
      description: "\n\n#### <a name=\"examples\"></a>Exemples\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy object for the content controls collection.\n    var contentControls = context.document.contentControls;\n    \n    // Queue a command to load the id property for all of the content controls. \n    context.load(contentControls, 'id');\n     \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        if (contentControls.items.length === 0) {\n            console.log('No content control found.');\n        }\n        else {\n            // Queue a command to replace text in the first content control. \n            contentControls.items[0].insertText('Replaced text in the first content control.', 'Replace');\n        \n            // Synchronize the document state by executing the queued commands, \n            // and return a promise to indicate task completion.\n            return context.sync()\n                .then(function () {\n                    console.log('Replaced text in the first content control.');\n            });\n        }\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n\n// The Silly stories add-in sample shows how to use the insertText method.\n// https://aka.ms/sillystorywordaddin\n```"
- name: load(options)
  uid: word!Word.ContentControl#load:member(1)
  package: word!
  fullName: load(options)
  summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(options?: Word.Interfaces.ContentControlLoadOptions): Word.ContentControl;'
    parameters:
    - id: options
      description: Fournit des options pour lesquelles les propriétés de l’objet à charger.
      type: <xref uid="word!Word.Interfaces.ContentControlLoadOptions:interface" />
    return:
      type: <xref uid="word!Word.ContentControl:class" />
      description: "\n\n#### <a name=\"examples\"></a>Exemples\n\n```javascript\n// Load all of the content control properties\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy object for the content controls collection.\n    var contentControls = context.document.contentControls;\n    \n    // Queue a command to load the id property for all of the content controls. \n    context.load(contentControls, 'id');\n     \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        if (contentControls.items.length === 0) {\n            console.log('No content control found.');\n        }\n        else {\n            // Queue a command to load the properties on the first content control. \n            contentControls.items[0].load(  'appearance,' +\n                                            'cannotDelete,' +\n                                            'cannotEdit,' +\n                                            'id,' +\n                                            'placeHolderText,' +\n                                            'removeWhenEdited,' +\n                                            'title,' +\n                                            'text,' +\n                                            'type,' +\n                                            'style,' +\n                                            'tag,' +\n                                            'font/size,' +\n                                            'font/name,' +\n                                            'font/color');             \n        \n            // Synchronize the document state by executing the queued commands, \n            // and return a promise to indicate task completion.\n            return context.sync()\n                .then(function () {\n                    console.log('Property values of the first content control:' + \n                        '   ----- appearance: ' + contentControls.items[0].appearance + \n                        '   ----- cannotDelete: ' + contentControls.items[0].cannotDelete +\n                        '   ----- cannotEdit: ' + contentControls.items[0].cannotEdit +\n                        '   ----- color: ' + contentControls.items[0].color +\n                        '   ----- id: ' + contentControls.items[0].id +\n                        '   ----- placeHolderText: ' + contentControls.items[0].placeholderText +\n                        '   ----- removeWhenEdited: ' + contentControls.items[0].removeWhenEdited +\n                        '   ----- title: ' + contentControls.items[0].title +\n                        '   ----- text: ' + contentControls.items[0].text +\n                        '   ----- type: ' + contentControls.items[0].type +\n                        '   ----- style: ' + contentControls.items[0].style +\n                        '   ----- tag: ' + contentControls.items[0].tag +\n                        '   ----- font size: ' + contentControls.items[0].font.size +\n                        '   ----- font name: ' + contentControls.items[0].font.name +\n                        '   ----- font color: ' + contentControls.items[0].font.color);\n            });\n        }\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: load(propertyNames)
  uid: word!Word.ContentControl#load:member(2)
  package: word!
  fullName: load(propertyNames)
  summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Word.ContentControl;'
    parameters:
    - id: propertyNames
      description: Chaîne délimitée par des virgules ou tableau de chaînes spécifiant les propriétés à charger.
      type: string | string[]
    return:
      type: <xref uid="word!Word.ContentControl:class" />
      description: ''
- name: load(propertyNamesAndPaths)
  uid: word!Word.ContentControl#load:member(3)
  package: word!
  fullName: load(propertyNamesAndPaths)
  summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(propertyNamesAndPaths?: {
                  select?: string;
                  expand?: string;
              }): Word.ContentControl;
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` est une chaîne délimitée par des virgules qui spécifie les propriétés à charger, et est une chaîne délimitée par des virgules qui spécifie les propriétés de `propertyNamesAndPaths.expand` navigation à charger.'
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="word!Word.ContentControl:class" />
      description: ''
- name: search(searchText, searchOptions)
  uid: word!Word.ContentControl#search:member(1)
  package: word!
  fullName: search(searchText, searchOptions)
  summary: >-
    Effectue une recherche avec les searchOptions spécifiées sur l’étendue de l’objet de contrôle de contenu. Les résultats de la recherche sont un ensemble d’objets de plage.


    \[[Ensemble d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      search(searchText: string, searchOptions?: Word.SearchOptions | {
                  ignorePunct?: boolean;
                  ignoreSpace?: boolean;
                  matchCase?: boolean;
                  matchPrefix?: boolean;
                  matchSuffix?: boolean;
                  matchWholeWord?: boolean;
                  matchWildcards?: boolean;
              }): Word.RangeCollection;
    parameters:
    - id: searchText
      description: Obligatoire. Texte de recherche.
      type: string
    - id: searchOptions
      description: Facultatif. Options de la recherche.
      type: >-
        <xref uid="word!Word.SearchOptions:class" /> | {
                    ignorePunct?: boolean;
                    ignoreSpace?: boolean;
                    matchCase?: boolean;
                    matchPrefix?: boolean;
                    matchSuffix?: boolean;
                    matchWholeWord?: boolean;
                    matchWildcards?: boolean;
                }
    return:
      type: <xref uid="word!Word.RangeCollection:class" />
      description: "\n\n#### <a name=\"examples\"></a>Exemples\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy object for the content controls collection.\n    var contentControls = context.document.contentControls;\n    \n    // Queue a command to load the id property for all of the content controls. \n    context.load(contentControls, 'id');\n     \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        if (contentControls.items.length === 0) {\n            console.log('No content control found.');\n        }\n        else {\n            // Queue a command to select the first content control.\n            contentControls.items[0].select();\n        \n            // Synchronize the document state by executing the queued commands, \n            // and return a promise to indicate task completion.\n            return context.sync()\n                .then(function () {\n                    console.log('Selected the first content control.');\n            });\n        }\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: select(selectionMode)
  uid: word!Word.ContentControl#select:member(1)
  package: word!
  fullName: select(selectionMode)
  summary: >-
    Sélectionne le contrôle de contenu. Word fait défiler le document jusqu’à accéder à la sélection.


    \[[Ensemble d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'select(selectionMode?: Word.SelectionMode): void;'
    parameters:
    - id: selectionMode
      description: Facultatif. Le mode de sélection peut être « Select » (sélectionner), « Start » (début) ou « End » (fin). « Select » (sélectionner) est la valeur par défaut.
      type: <xref uid="word!Word.SelectionMode:enum" />
    return:
      type: void
      description: ''
- name: select(selectionModeString)
  uid: word!Word.ContentControl#select:member(2)
  package: word!
  fullName: select(selectionModeString)
  summary: >-
    Sélectionne le contrôle de contenu. Word fait défiler le document jusqu’à accéder à la sélection.


    \[[Ensemble d’API : WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'select(selectionModeString?: "Select" | "Start" | "End"): void;'
    parameters:
    - id: selectionModeString
      description: Facultatif. Le mode de sélection peut être « Select » (sélectionner), « Start » (début) ou « End » (fin). « Select » (sélectionner) est la valeur par défaut.
      type: "\"Select\" | \"Start\" | \"End\""
    return:
      type: void
      description: ''
- name: set(properties, options)
  uid: word!Word.ContentControl#set:member(1)
  package: word!
  fullName: set(properties, options)
  summary: Définit plusieurs propriétés d’un objet en même temps. Vous pouvez transmettre un objet simple avec les propriétés appropriées ou un autre objet API du même type.
  remarks: >-
    Cette méthode possède la signature supplémentaire suivante :


    `set(properties: Word.ContentControl): void`


    #### <a name="examples"></a>Exemples


    ```typescript

    // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/10-content-controls/insert-and-change-content-controls.yaml

    // Adds title and colors to odd and even content controls and changes their appearance.

    await Word.run(async (context) => {
      // Gets the complete sentence (as range) associated with the insertion point.
      let evenContentControls = context.document.contentControls.getByTag("even");
      let oddContentControls = context.document.contentControls.getByTag("odd");
      evenContentControls.load("length");
      oddContentControls.load("length");

      await context.sync();

      for (let i = 0; i < evenContentControls.items.length; i++) {
        // Change a few properties and append a paragraph
        evenContentControls.items[i].set({
          color: "red",
          title: "Odd ContentControl #" + (i + 1),
          appearance: "Tags"
        });
        evenContentControls.items[i].insertParagraph("This is an odd content control", "End");
      }

      for (let j = 0; j < oddContentControls.items.length; j++) {
        // Change a few properties and append a paragraph
        oddContentControls.items[j].set({
          color: "green",
          title: "Even ContentControl #" + (j + 1),
          appearance: "Tags"
        });
        oddContentControls.items[j].insertHtml("This is an <b>even</b> content control", "End");
      }

      await context.sync();
    });

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Interfaces.ContentControlUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    parameters:
    - id: properties
      description: Objet JavaScript avec des propriétés structurées de manière isomorphe aux propriétés de l’objet sur lequel la méthode est appelée.
      type: <xref uid="word!Word.Interfaces.ContentControlUpdateData:interface" />
    - id: options
      description: Fournit une option pour supprimer les erreurs si l’objet propriétés tente de définir des propriétés en lecture seule.
      type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
    return:
      type: void
      description: ''
- name: set(properties)
  uid: word!Word.ContentControl#set:member(2)
  package: word!
  fullName: set(properties)
  summary: Définit plusieurs propriétés de l’objet en même temps, en fonction d’un objet chargé existant.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Word.ContentControl): void;'
    parameters:
    - id: properties
      description: ''
      type: <xref uid="word!Word.ContentControl:class" />
    return:
      type: void
      description: ''
- name: split(delimiters, multiParagraphs, trimDelimiters, trimSpacing)
  uid: word!Word.ContentControl#split:member(1)
  package: word!
  fullName: split(delimiters, multiParagraphs, trimDelimiters, trimSpacing)
  summary: >-
    Fractionne le contrôle de contenu en plages enfants à l’aide de délimiteurs.


    \[[Ensemble d’API : WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'split(delimiters: string[], multiParagraphs?: boolean, trimDelimiters?: boolean, trimSpacing?: boolean): Word.RangeCollection;'
    parameters:
    - id: delimiters
      description: Obligatoire. Délimiteur sous la mesure d’un tableau de chaînes.
      type: string[]
    - id: multiParagraphs
      description: Facultatif. Indique si une plage enfant renvoyée peut couvrir plusieurs paragraphes. La valeur par défaut est false, ce qui indique que les limites de paragraphe sont également utilisées comme délimiteur.
      type: boolean
    - id: trimDelimiters
      description: Facultatif. Indique s’il faut découper les délimiteur des plages de la collection de plages. La valeur par défaut est false, ce qui indique que les délimiteur sont inclus dans les plages renvoyées dans la collection de plages.
      type: boolean
    - id: trimSpacing
      description: Facultatif. Indique s’il faut découper les caractères d’espacement (espaces, tabulations, coupures de colonnes et marques de fin de paragraphe) à partir du début et de la fin des plages renvoyées dans la collection de plages. La valeur par défaut est false, ce qui indique que les caractères d’espacement au début et à la fin des plages sont inclus dans la collection de plages.
      type: boolean
    return:
      type: <xref uid="word!Word.RangeCollection:class" />
      description: ''
- name: toJSON()
  uid: word!Word.ContentControl#toJSON:member(1)
  package: word!
  fullName: toJSON()
  summary: Remplace la méthode JavaScript afin de fournir une sortie plus utile lorsqu’un objet `toJSON()` API est transmis à `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, à son tour, appelle `toJSON` la méthode de l’objet qui lui est transmis.) Alors que l’objet Word.ContentControl d’origine est un objet API, la méthode renvoie un objet `toJSON` JavaScript simple (tapé sous la forme `Word.Interfaces.ContentControlData`<!-- -->) qui contient des copies superficiels de toutes les propriétés enfants chargées à partir de l’objet d’origine.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Word.Interfaces.ContentControlData;'
    return:
      type: <xref uid="word!Word.Interfaces.ContentControlData:interface" />
      description: ''
- name: track()
  uid: word!Word.ContentControl#track:member(1)
  package: word!
  fullName: track()
  summary: Effectuer le suivi de l’objet pour l’ajustement automatique en fonction environnant des modifications dans le document. Cet appel est un raccourci pour `context.trackedObjects.add(thisObject)`<!-- -->. Si vous utilisez cet objet entre les appels et en dehors de l’exécution séquentielle d’un lot « .run » et que vous obtenez une erreur « InvalidObjectPath » lors de la définition d’une propriété ou de l’appel d’une méthode sur l’objet, vous devez avoir ajouté l’objet à la collection d’objets suivis lors de la première création de `.sync` l’objet.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'track(): Word.ContentControl;'
    return:
      type: <xref uid="word!Word.ContentControl:class" />
      description: ''
- name: untrack()
  uid: word!Word.ContentControl#untrack:member(1)
  package: word!
  fullName: untrack()
  summary: Publication mémoire associée à cet objet si elle a été précédemment suivie. Cet appel est abrégé pour `context.trackedObjects.remove(thisObject)`<!-- -->. Vous rencontrez de nombreux objets suivies ralentit l’application hôte, donc n’oubliez pas de libérer les objets que l'on ajoute, une fois que vous avez terminé à les utiliser. Vous devrez appeler avant `context.sync()` que la libération de mémoire prenne effet.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'untrack(): Word.ContentControl;'
    return:
      type: <xref uid="word!Word.ContentControl:class" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: a0b17572d32468e03e45435a6cd86bf9b4aec103
  ms.sourcegitcommit: a8a86cfcaff5ad7dacc653d63502c76b1fedbebe
  ms.translationtype: MT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 03/26/2021
  ms.locfileid: "51319319"
