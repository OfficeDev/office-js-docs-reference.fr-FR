### YamlMime:UniversalReference
items:
  - uid: word.Word.SettingCollection
    summary: |-
      <span data-ttu-id="c8176-101">Contient la collection d’objets [Word. Setting](xref:word.Word.Setting) .</span><span class="sxs-lookup"><span data-stu-id="c8176-101">Contains the collection of [Word.Setting](xref:word.Word.Setting) objects.</span></span>

      <span data-ttu-id="c8176-102">\[[Ensemble d’API: WORDAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c8176-102">\[ [API set: WordApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    isPreview: true
    name: Word.SettingCollection
    fullName: Word.SettingCollection
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: word
    children:
      - word.Word.SettingCollection.add
      - word.Word.SettingCollection.context
      - word.Word.SettingCollection.deleteAll
      - word.Word.SettingCollection.getCount
      - word.Word.SettingCollection.getItem
      - word.Word.SettingCollection.getItemOrNullObject
      - word.Word.SettingCollection.items
      - word.Word.SettingCollection.load
      - word.Word.SettingCollection.load_1
      - word.Word.SettingCollection.load_2
      - word.Word.SettingCollection.toJSON
      - word.Word.SettingCollection.track
      - word.Word.SettingCollection.untrack
  - uid: word.Word.SettingCollection.add
    summary: |-
      <span data-ttu-id="c8176-103">Crée un nouveau paramètre ou définit un paramètre existant.</span><span class="sxs-lookup"><span data-stu-id="c8176-103">Creates a new setting or sets an existing setting.</span></span>

      <span data-ttu-id="c8176-104">\[[Ensemble d’API: WORDAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c8176-104">\[ [API set: WordApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    isPreview: true
    name: 'add(key, value)'
    fullName: 'add(key, value)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(key: string, value: any): Word.Setting;'
      return:
        type:
          - Word.Setting
        description: ''
      parameters:
        - id: key
          description: '<span data-ttu-id="c8176-105">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c8176-105">Required.</span></span> <span data-ttu-id="c8176-106">La clé du paramètre, qui respecte la casse.</span><span class="sxs-lookup"><span data-stu-id="c8176-106">The setting''s key, which is case-sensitive.</span></span>'
          type:
            - string
        - id: value
          description: <span data-ttu-id="c8176-107">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c8176-107">Required.</span></span> <span data-ttu-id="c8176-108">Valeur du paramètre.</span><span class="sxs-lookup"><span data-stu-id="c8176-108">The setting's value.</span></span>
          type:
            - any
  - uid: word.Word.SettingCollection.context
    summary: <span data-ttu-id="c8176-109">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="c8176-109">The request context associated with the object.</span></span> <span data-ttu-id="c8176-110">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="c8176-110">This connects the add-in's process to the Office host application's process.</span></span>
    isPreview: true
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: word.Word.SettingCollection.deleteAll
    summary: |-
      <span data-ttu-id="c8176-111">Supprime tous les paramètres de ce complément.</span><span class="sxs-lookup"><span data-stu-id="c8176-111">Deletes all settings in this add-in.</span></span>

      <span data-ttu-id="c8176-112">\[[Ensemble d’API: WORDAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c8176-112">\[ [API set: WordApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    isPreview: true
    name: deleteAll()
    fullName: deleteAll()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'deleteAll(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c8176-113">Exemples</span><span class="sxs-lookup"><span data-stu-id="c8176-113">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue commands add a setting.
              var settings = context.document.settings;
              settings.add('startMonth', { month: 'March', year: 1998 });

              // Queue a command to get the count of settings.
              var count = settings.getCount();

              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log(count.value);

                  // Queue a command to delete all settings.
                  settings.deleteAll();

                  // Queue a command to get the new count of settings.
                  count = settings.getCount();
              })

              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              .then(context.sync)
              .then(function () {
                  console.log(count.value);
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word.Word.SettingCollection.getCount
    summary: |-
      <span data-ttu-id="c8176-114">Obtient le nombre de paramètres.</span><span class="sxs-lookup"><span data-stu-id="c8176-114">Gets the count of settings.</span></span>

      <span data-ttu-id="c8176-115">\[[Ensemble d’API: WORDAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c8176-115">\[ [API set: WordApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c8176-116">Exemples</span><span class="sxs-lookup"><span data-stu-id="c8176-116">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue commands add a setting.
              var settings = context.document.settings;
              settings.add('startMonth', { month: 'March', year: 1998 });

              // Queue a command to get the count of settings.
              var count = settings.getCount();

              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log(count.value);

                  // Queue a command to delete all settings.
                  settings.deleteAll();

                  // Queue a command to get the new count of settings.
                  count = settings.getCount();
              })

              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              .then(context.sync)
              .then(function () {
                  console.log(count.value);
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word.Word.SettingCollection.getItem
    summary: |-
      <span data-ttu-id="c8176-117">Obtient un objet Setting par sa clé, qui respecte la casse.</span><span class="sxs-lookup"><span data-stu-id="c8176-117">Gets a setting object by its key, which is case-sensitive.</span></span> <span data-ttu-id="c8176-118">Lève une exception si le paramètre n’existe pas.</span><span class="sxs-lookup"><span data-stu-id="c8176-118">Throws if the setting does not exist.</span></span>

      <span data-ttu-id="c8176-119">\[[Ensemble d’API: WORDAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c8176-119">\[ [API set: WordApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Word.Setting;'
      return:
        type:
          - Word.Setting
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c8176-120">Exemples</span><span class="sxs-lookup"><span data-stu-id="c8176-120">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue commands add a setting.
              var settings = context.document.settings;
              settings.add('startMonth', { month: 'March', year: 1998 });

              // Queue a command to retrieve a setting.
              var startMonth = settings.getItem('startMonth');

              // Queue a command to load the setting.
              context.load(startMonth);

              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log(JSON.stringify(startMonth.value));
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue commands add a setting.
              var settings = context.document.settings;
              settings.add('startMonth', { month: 'March', year: 1998 });
              
              // Queue commands to retrieve settings.
              var startMonth = settings.getItemOrNullObject('startMonth');
              var endMonth = settings.getItemOrNullObject('endMonth');

              // Queue commands to load settings.
              context.load(startMonth);
              context.load(endMonth);

              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
                 return context.sync().then(function () {
                     if (startMonth.isNullObject) {
                         console.log("No such setting.");
                     }
                     else {
                         console.log(JSON.stringify(startMonth.value));
                     }
                      if (endMonth.isNullObject) {
                         console.log("No such setting.");
                     }
                     else {
                         console.log(JSON.stringify(endMonth.value));
                     }
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: key
          description: <span data-ttu-id="c8176-121">Clé qui identifie l’objet de paramètre.</span><span class="sxs-lookup"><span data-stu-id="c8176-121">The key that identifies the setting object.</span></span>
          type:
            - string
  - uid: word.Word.SettingCollection.getItemOrNullObject
    summary: |-
      <span data-ttu-id="c8176-122">Obtient un objet Setting par sa clé, qui respecte la casse.</span><span class="sxs-lookup"><span data-stu-id="c8176-122">Gets a setting object by its key, which is case-sensitive.</span></span> <span data-ttu-id="c8176-123">Renvoie un objet null si le paramètre n’existe pas.</span><span class="sxs-lookup"><span data-stu-id="c8176-123">Returns a null object if the setting does not exist.</span></span>

      <span data-ttu-id="c8176-124">\[[Ensemble d’API: WORDAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c8176-124">\[ [API set: WordApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getItemOrNullObject(key)
    fullName: getItemOrNullObject(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(key: string): Word.Setting;'
      return:
        type:
          - Word.Setting
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="c8176-125">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c8176-125">Required.</span></span> <span data-ttu-id="c8176-126">Clé qui identifie l’objet de paramètre.</span><span class="sxs-lookup"><span data-stu-id="c8176-126">The key that identifies the setting object.</span></span>
          type:
            - string
  - uid: word.Word.SettingCollection.items
    summary: <span data-ttu-id="c8176-127">Obtient l’élément enfant chargé dans cette collection de sites.</span><span class="sxs-lookup"><span data-stu-id="c8176-127">Gets the loaded child items in this collection.</span></span>
    isPreview: true
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Word.Setting[];'
      return:
        type:
          - 'Word.Setting[]'
  - uid: word.Word.SettingCollection.load
    summary: "<span data-ttu-id=\"c8176-128\">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"c8176-128\">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id=\"c8176-129\">Vous devez appeler «\_context.sync()\_» avant de lire les propriétés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"c8176-129\">You must call \"context.sync()\" before reading the properties.</span></span>"
    remarks: |-
      <span data-ttu-id="c8176-130">En plus de cette signature, cette méthode possède les signatures suivantes:</span><span class="sxs-lookup"><span data-stu-id="c8176-130">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="c8176-131">`load(option?: string | string[]): Word.SettingCollection`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="c8176-131">`load(option?: string | string[]): Word.SettingCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="c8176-132">`load(option?: { select?: string; expand?: string; }): Word.SettingCollection`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="c8176-132">`load(option?: { select?: string; expand?: string; }): Word.SettingCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="c8176-133">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.SettingCollection`-Uniquement disponible sur les types de collection.</span><span class="sxs-lookup"><span data-stu-id="c8176-133">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.SettingCollection` - Only available on collection types.</span></span> <span data-ttu-id="c8176-134">Elle est similaire à la signature précédente.</span><span class="sxs-lookup"><span data-stu-id="c8176-134">It is similar to the preceding signature.</span></span> <span data-ttu-id="c8176-135">Option. Top indique le nombre maximal d’éléments de collection qui peuvent être inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="c8176-135">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="c8176-136">Option. Skip indique le nombre d’éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="c8176-136">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="c8176-137">Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d’éléments.</span><span class="sxs-lookup"><span data-stu-id="c8176-137">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    isPreview: true
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Word.Interfaces.SettingCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.SettingCollection;'
      return:
        type:
          - Word.SettingCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Word.Interfaces.SettingCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions
  - uid: word.Word.SettingCollection.load_1
    summary: <span data-ttu-id="c8176-138">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="c8176-138">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c8176-139">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="c8176-139">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.SettingCollection;'
      return:
        type:
          - Word.SettingCollection
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="c8176-140">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="c8176-140">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: word.Word.SettingCollection.load_2
    isPreview: true
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Word.SettingCollection;'
      return:
        type:
          - Word.SettingCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - office.OfficeExtension.LoadOption
  - uid: word.Word.SettingCollection.toJSON
    summary: '<span data-ttu-id="c8176-141">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="c8176-141">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="c8176-142">.</span><span class="sxs-lookup"><span data-stu-id="c8176-142"></span></span> <span data-ttu-id="c8176-143">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="c8176-143"></span></span><!-- --><span data-ttu-id="c8176-144">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que `Word.SettingCollection` l’objet d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`Word.Interfaces.SettingCollectionData`</span><span class="sxs-lookup"><span data-stu-id="c8176-144">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Word.SettingCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.SettingCollectionData`</span></span><!-- --><span data-ttu-id="c8176-145">) qui contient un tableau «éléments» avec des copies superficielles de toutes les propriétés chargées des éléments de la collection.</span><span class="sxs-lookup"><span data-stu-id="c8176-145">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    isPreview: true
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.SettingCollectionData;'
      return:
        type:
          - Word.Interfaces.SettingCollectionData
        description: ''
  - uid: word.Word.SettingCollection.track
    summary: "<span data-ttu-id=\"c8176-146\">Effectuer le suivi de l’objet pour l’ajustement automatique en fonction environnant des modifications dans le document.</span><span class=\"sxs-lookup\"><span data-stu-id=\"c8176-146\">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id=\"c8176-147\">Cet appel est abréviations context.trackedObjects.add(thisObject).</span><span class=\"sxs-lookup\"><span data-stu-id=\"c8176-147\">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id=\"c8176-148\">Si vous utilisez cet objet au sein de «\_.sync\_» appels et en dehors de l’exécution séquentielle d’un lot de «\_.run\_» et rencontrez un message d’erreur «\_InvalidObjectPath\_» lors de la définition d’une propriété ou appeler une méthode sur l’objet, vous devez ajouter l’objet à l’objet de suivi collection de sites lors de l’objet a été créé.</span><span class=\"sxs-lookup\"><span data-stu-id=\"c8176-148\">If you are using this object across \".sync\" calls and outside the sequential execution of a \".run\" batch, and get an \"InvalidObjectPath\" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>"
    isPreview: true
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.SettingCollection;'
      return:
        type:
          - Word.SettingCollection
        description: ''
  - uid: word.Word.SettingCollection.untrack
    summary: "<span data-ttu-id=\"c8176-149\">Publication mémoire associée à cet objet si elle a été précédemment suivie.</span><span class=\"sxs-lookup\"><span data-stu-id=\"c8176-149\">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id=\"c8176-150\">Cet appel est abréviations context.trackedObjects.add(thisObject).</span><span class=\"sxs-lookup\"><span data-stu-id=\"c8176-150\">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id=\"c8176-151\">Vous rencontrez de nombreux objets suivies ralentit l’application hôte, donc n’oubliez pas de libérer les objets que l'on ajoute, une fois que vous avez terminé à les utiliser.</span><span class=\"sxs-lookup\"><span data-stu-id=\"c8176-151\">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them.</span></span> <span data-ttu-id=\"c8176-152\">Vous devez appeler «\_context.sync()\_» avant la publication de mémoire prend effet.</span><span class=\"sxs-lookup\"><span data-stu-id=\"c8176-152\">You will need to call \"context.sync()\" before the memory release takes effect.</span></span>"
    isPreview: true
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.SettingCollection;'
      return:
        type:
          - Word.SettingCollection
        description: ''