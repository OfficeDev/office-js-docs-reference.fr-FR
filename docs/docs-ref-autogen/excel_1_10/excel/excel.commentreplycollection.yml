### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.CommentReplyCollection:class'
    summary: "Représente une collection d’objets de réponse aux commentaires qui font partie du commentaire.\n\n\\[[Ensemble d’API\_: ExcelApi 1,10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: Excel.CommentReplyCollection
    fullName: Excel.CommentReplyCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.CommentReplyCollection#add:member(1)'
      - 'excel!Excel.CommentReplyCollection#add:member(2)'
      - 'excel!Excel.CommentReplyCollection#context:member'
      - 'excel!Excel.CommentReplyCollection#getCount:member(1)'
      - 'excel!Excel.CommentReplyCollection#getItem:member(1)'
      - 'excel!Excel.CommentReplyCollection#getItemAt:member(1)'
      - 'excel!Excel.CommentReplyCollection#items:member'
      - 'excel!Excel.CommentReplyCollection#load:member(1)'
      - 'excel!Excel.CommentReplyCollection#load:member(2)'
      - 'excel!Excel.CommentReplyCollection#load:member(3)'
      - 'excel!Excel.CommentReplyCollection#toJSON:member(1)'
  - uid: 'excel!Excel.CommentReplyCollection#add:member(1)'
    summary: "Crée une réponse à un commentaire pour un commentaire.\n\n\\[[Ensemble d’API\_: ExcelApi 1,10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: 'add(content, contentType)'
    fullName: 'add(content, contentType)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(content: string, contentType?: Excel.ContentType): Excel.CommentReply;'
      return:
        type:
          - 'excel!Excel.CommentReply:class'
        description: |-


          #### <a name="examples"></a>Exemples

          ```typescript
          // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/12-comment/comment-replies.yaml
          await Excel.run(async (context) => {
              // Adds a reply to the first comment in this worksheet.
              const sheet = context.workbook.worksheets.getItem("Comments");
              const comment = sheet.comments.getItemAt(0);
              comment.replies.add("Add content to this worksheet.");
              await context.sync();
          });
          ```
      parameters:
        - id: content
          description: "Contenu du commentaire. Il peut s’agir d’une chaîne ou d’une interface CommentRichContent (par exemple, pour les commentaires avec mentions). \\[Ensemble d’API\_: ExcelApi 1,10 pour String, 1,11 pour l’objet CommentRichContent\\]"
          type:
            - string
        - id: contentType
          description: "Facultatif. Type de contenu contenu dans le commentaire. La valeur par défaut est enum`ContentType.Plain`<!-- -->. \\[Ensemble d’API\_: ExcelApi 1,10 pour enum ContentType. Plain, 1,11 pour enum ContentType. specifier\\]"
          type:
            - 'excel!Excel.ContentType:enum'
  - uid: 'excel!Excel.CommentReplyCollection#add:member(2)'
    summary: "Crée une réponse à un commentaire pour un commentaire.\n\n\\[[Ensemble d’API\_: ExcelApi 1,10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: 'add(content, contentTypeString)'
    fullName: 'add(content, contentTypeString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(content: string, contentTypeString?: "Plain" | "Mention"): Excel.CommentReply;'
      return:
        type:
          - 'excel!Excel.CommentReply:class'
        description: ''
      parameters:
        - id: content
          description: "Contenu du commentaire. Il peut s’agir d’une chaîne ou d’une interface CommentRichContent (par exemple, pour les commentaires avec mentions). \\[Ensemble d’API\_: ExcelApi 1,10 pour String, 1,11 pour l’objet CommentRichContent\\]"
          type:
            - string
        - id: contentTypeString
          description: "Facultatif. Type de contenu contenu dans le commentaire. La valeur par défaut est enum`ContentType.Plain`<!-- -->. \\[Ensemble d’API\_: ExcelApi 1,10 pour enum ContentType. Plain, 1,11 pour enum ContentType. specifier\\]"
          type:
            - '"Plain" | "Mention"'
  - uid: 'excel!Excel.CommentReplyCollection#context:member'
    summary: Contexte de demande associé à l’objet. Cette opération connecte le processus du complément au processus de l’application hôte Office.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.CommentReplyCollection#getCount:member(1)'
    summary: "Obtient le nombre de réponses aux commentaires de la collection.\n\n\\[[Ensemble d’API\_: ExcelApi 1,10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.CommentReplyCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.CommentReplyCollection#getItem:member(1)'
    summary: "Renvoie une réponse de commentaire identifié via son ID.\n\n\\[[Ensemble d’API\_: ExcelApi 1,10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: getItem(commentReplyId)
    fullName: getItem(commentReplyId)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(commentReplyId: string): Excel.CommentReply;'
      return:
        type:
          - 'excel!Excel.CommentReply:class'
        description: ''
      parameters:
        - id: commentReplyId
          description: Identificateur de la réponse de commentaire.
          type:
            - string
  - uid: 'excel!Excel.CommentReplyCollection#getItemAt:member(1)'
    summary: "Obtient une réponse de commentaire en fonction de sa position dans la collection.\n\n\\[[Ensemble d’API\_: ExcelApi 1,10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.CommentReply;'
      return:
        type:
          - 'excel!Excel.CommentReply:class'
        description: ''
      parameters:
        - id: index
          description: Valeur d’index de la réponse de commentaire à récupérer. La collection utilise l’indexation de base zéro.
          type:
            - number
  - uid: 'excel!Excel.CommentReplyCollection#items:member'
    summary: Obtient l’élément enfant chargé dans cette collection de sites.
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.CommentReply[];'
      return:
        type:
          - 'excel!Excel.CommentReplyCollection#items~0:complex'
  - uid: 'excel!Excel.CommentReplyCollection#load:member(1)'
    summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.CommentReplyCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.CommentReplyCollection;'
      return:
        type:
          - 'excel!Excel.CommentReplyCollection:class'
        description: ''
      parameters:
        - id: options
          description: Fournit des options pour les propriétés de l’objet à charger.
          type:
            - 'excel!Excel.CommentReplyCollection#load~0:complex'
  - uid: 'excel!Excel.CommentReplyCollection#load:member(2)'
    summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.CommentReplyCollection;'
      return:
        type:
          - 'excel!Excel.CommentReplyCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.CommentReplyCollection#load:member(3)'
    summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Excel.CommentReplyCollection;'
      return:
        type:
          - 'excel!Excel.CommentReplyCollection:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '`propertyNamesAndPaths.select`est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et `propertyNamesAndPaths.expand` une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.'
          type:
            - 'office!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.CommentReplyCollection#toJSON:member(1)'
    summary: "Remplace la méthode JavaScript afin `toJSON()` de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, à son tour, appelle la `toJSON` méthode de l’objet qui lui est passé.) Tandis que l’objet d’origine `Excel.CommentReplyCollection` est un objet d’API, la `toJSON` méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.CommentReplyCollectionData`<!-- -->) qui contient un tableau «\_éléments\_» avec des copies superficielles de toutes les propriétés chargées des éléments de la collection."
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.CommentReplyCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.CommentReplyCollectionData:interface'
        description: ''
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.CommentReply:class'
    name: Excel.CommentReply
  - uid: 'excel!Excel.ContentType:enum'
    name: Excel.ContentType
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.CommentReplyCollection#getCount~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'office!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel!Excel.CommentReplyCollection#items~0:complex'
    name: 'Excel.CommentReply[]'
    fullName: 'Excel.CommentReply[]'
    spec.typeScript:
      - uid: 'excel!Excel.CommentReply:class'
        name: Excel.CommentReply
        fullName: Excel.CommentReply
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.CommentReplyCollection:class'
    name: Excel.CommentReplyCollection
  - uid: 'excel!Excel.CommentReplyCollection#load~0:complex'
    name: Excel.Interfaces.CommentReplyCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.CommentReplyCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.CommentReplyCollectionLoadOptions:interface'
        name: Excel.Interfaces.CommentReplyCollectionLoadOptions
        fullName: Excel.Interfaces.CommentReplyCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'office!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.Interfaces.CommentReplyCollectionData:interface'
    name: Excel.Interfaces.CommentReplyCollectionData