### YamlMime:UniversalReference
items:
  - uid: 'outlook!Office.Recipients:interface'
    summary: "\\[[Ensemble d’API\_: boîte aux lettres 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\\]"
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadItem

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition
    name: Office.Recipients
    fullName: Office.Recipients
    langs:
      - typeScript
    type: interface
    package: outlook!
    children:
      - 'outlook!Office.Recipients#addAsync:member(1)'
      - 'outlook!Office.Recipients#addAsync:member(2)'
      - 'outlook!Office.Recipients#getAsync:member(1)'
      - 'outlook!Office.Recipients#getAsync:member(2)'
      - 'outlook!Office.Recipients#setAsync:member(1)'
      - 'outlook!Office.Recipients#setAsync:member(2)'
  - uid: 'outlook!Office.Recipients#addAsync:member(1)'
    summary: "Ajoute une liste de destinataires aux destinataires existants d’un rendez-vous ou d’un message.\n\nLe paramètre Recipients peut être un tableau d’un des éléments suivants\_:\n\n- Chaînes contenant des adresses de messagerie SMTP\n\n- Objets EmailUser\n\n- Objets EmailAddressDetails\n\n\\[[Ensemble d’API\_: boîte aux lettres 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\\]"
    remarks: "**<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadWriteItem\n\n**<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition\n\n**Erreurs**:\n\n- NumberOfRecipientsExceeded\_: le nombre de destinataires est supérieur à 100 entrées."
    name: 'addAsync(recipients, options, callback)'
    fullName: 'addAsync(recipients, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addAsync(recipients: (string | EmailUser | EmailAddressDetails)[], options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: recipients
          description: Destinataires à ajouter à la liste des destinataires.
          type:
            - 'outlook!Office.Recipients#addAsync~0:complex'
        - id: options
          description: "Facultatif. Littéral d’objet contenant une ou plusieurs des propriétés suivantes. asyncContext\_: les développeurs peuvent fournir n’importe quel objet auquel ils souhaitent accéder dans la méthode de rappel."
          type:
            - 'outlook!Office.AsyncContextOptions:interface'
        - id: callback
          description: 'Facultatif. Une fois la méthode exécutée, la fonction transmise au paramètre callback est appelée avec un seul paramètre de type Office. AsyncResult. En cas d’échec de l’ajout des destinataires, la propriété asyncResult. Error contient un code d’erreur.'
          type:
            - 'outlook!Office.Recipients#addAsync~1:complex'
  - uid: 'outlook!Office.Recipients#addAsync:member(2)'
    summary: "Ajoute une liste de destinataires aux destinataires existants d’un rendez-vous ou d’un message.\n\nLe paramètre Recipients peut être un tableau d’un des éléments suivants\_:\n\n- Chaînes contenant des adresses de messagerie SMTP\n\n- Objets [Office. EmailUser](xref:outlook!Office.EmailUser:interface)\n\n- Objets [Office. EmailAddressDetails](xref:outlook!Office.EmailAddressDetails:interface)\n\n\\[[Ensemble d’API\_: boîte aux lettres 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\\]"
    remarks: "**<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadWriteItem\n\n**<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition\n\n**Erreurs**:\n\n- NumberOfRecipientsExceeded\_: le nombre de destinataires est supérieur à 100 entrées.\n\n#### <a name=\"examples\"></a>Exemples\n\n```javascript\n// The following example creates an array of EmailUser objects\n// and adds them to the To recipients of the message.\nvar newRecipients = [\n    {\n        \"displayName\": \"Allie Bellew\",\n        \"emailAddress\": \"allieb@contoso.com\"\n    },\n    {\n        \"displayName\": \"Alex Darrow\",\n        \"emailAddress\": \"alexd@contoso.com\"\n    }\n];\n\nOffice.context.mailbox.item.to.addAsync(newRecipients, function(result) {\n    if (result.error) {\n        console.log(result.error);\n    } else {\n        console.log(\"Recipients added\");\n    }\n});\n```"
    name: 'addAsync(recipients, callback)'
    fullName: 'addAsync(recipients, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addAsync(recipients: (string | EmailUser | EmailAddressDetails)[], callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: recipients
          description: Destinataires à ajouter à la liste des destinataires.
          type:
            - 'outlook!Office.Recipients#addAsync~2:complex'
        - id: callback
          description: 'Facultatif. Une fois la méthode exécutée, la fonction transmise au paramètre callback est appelée avec un seul paramètre de type Office. AsyncResult. En cas d’échec de l’ajout des destinataires, la propriété asyncResult. Error contient un code d’erreur.'
          type:
            - 'outlook!Office.Recipients#addAsync~3:complex'
  - uid: 'outlook!Office.Recipients#getAsync:member(1)'
    summary: "Obtient une liste de destinataires pour un rendez-vous ou un message.\n\nUne fois l’appel terminé, la propriété asyncResult. value contient un tableau des objets [Office. EmailAddressDetails](xref:outlook!Office.EmailAddressDetails:interface) .\n\n\\[[Ensemble d’API\_: boîte aux lettres 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\\]"
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadItem

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition
    name: 'getAsync(options, callback)'
    fullName: 'getAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAsync(options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<EmailAddressDetails[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: "Littéral d’objet contenant une ou plusieurs des propriétés suivantes. asyncContext\_: les développeurs peuvent fournir n’importe quel objet auquel ils souhaitent accéder dans la méthode de rappel."
          type:
            - 'outlook!Office.AsyncContextOptions:interface'
        - id: callback
          description: 'Une fois la méthode exécutée, la fonction transmise au paramètre callback est appelée avec un seul paramètre de type Office. AsyncResult. La `value` propriété du résultat est un tableau d’objets EmailAddressDetails.'
          type:
            - 'outlook!Office.Recipients#getAsync~0:complex'
  - uid: 'outlook!Office.Recipients#getAsync:member(2)'
    summary: "Obtient une liste de destinataires pour un rendez-vous ou un message.\n\nUne fois l’appel terminé, la propriété asyncResult. value contient un tableau des objets [Office. EmailAddressDetails](xref:outlook!Office.EmailAddressDetails:interface) .\n\n\\[[Ensemble d’API\_: boîte aux lettres 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\\]"
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadItem

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition

      #### <a name="examples"></a>Exemples

      ```javascript
      // The following example gets the optional attendees of a meeting.
      Office.context.mailbox.item.optionalAttendees.getAsync(function(result) {
          if (result.error) {
              console.log(result.error);
          } else {
              var msg = "";
              result.value.forEach(function(recip, index) {
                  msg = msg + recip.displayName + " (" + recip.emailAddress + ");";
              });
              console.log(msg);
          }
      });
      ```
    name: getAsync(callback)
    fullName: getAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAsync(callback: (asyncResult: Office.AsyncResult<EmailAddressDetails[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: 'Une fois la méthode exécutée, la fonction transmise au paramètre callback est appelée avec un seul paramètre de type Office. AsyncResult. La `value` propriété du résultat est un tableau d’objets EmailAddressDetails.'
          type:
            - 'outlook!Office.Recipients#getAsync~1:complex'
  - uid: 'outlook!Office.Recipients#setAsync:member(1)'
    summary: "Définit une liste de destinataires pour un rendez-vous ou un message.\n\nLa méthode setAsync remplace la liste de destinataires actuelle.\n\nLe paramètre Recipients peut être un tableau d’un des éléments suivants\_:\n\n- Chaînes contenant des adresses de messagerie SMTP\n\n- Objets [Office. EmailUser](xref:outlook!Office.EmailUser:interface)\n\n- Objets [Office. EmailAddressDetails](xref:outlook!Office.EmailAddressDetails:interface)\n\n\\[[Ensemble d’API\_: boîte aux lettres 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\\]"
    remarks: "**<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadWriteItem\n\n**<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition\n\n**Erreurs**:\n\n- NumberOfRecipientsExceeded\_: le nombre de destinataires est supérieur à 100 entrées."
    name: 'setAsync(recipients, options, callback)'
    fullName: 'setAsync(recipients, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setAsync(recipients: (string | EmailUser | EmailAddressDetails)[], options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: recipients
          description: Destinataires à ajouter à la liste des destinataires.
          type:
            - 'outlook!Office.Recipients#setAsync~0:complex'
        - id: options
          description: "Littéral d’objet contenant une ou plusieurs des propriétés suivantes. asyncContext\_: les développeurs peuvent fournir n’importe quel objet auquel ils souhaitent accéder dans la méthode de rappel."
          type:
            - 'outlook!Office.AsyncContextOptions:interface'
        - id: callback
          description: 'Une fois la méthode exécutée, la fonction transmise au paramètre callback est appelée avec un seul paramètre de type Office. AsyncResult. Si la définition des destinataires échoue, la propriété asyncResult. Error contient un code indiquant toute erreur survenue lors de l’ajout des données.'
          type:
            - 'outlook!Office.Recipients#setAsync~1:complex'
  - uid: 'outlook!Office.Recipients#setAsync:member(2)'
    summary: "Définit une liste de destinataires pour un rendez-vous ou un message.\n\nLa méthode setAsync remplace la liste de destinataires actuelle.\n\nLe paramètre Recipients peut être un tableau d’un des éléments suivants\_:\n\n- Chaînes contenant des adresses de messagerie SMTP\n\n- Objets [Office. EmailUser](xref:outlook!Office.EmailUser:interface)\n\n- Objets [Office. EmailAddressDetails](xref:outlook!Office.EmailAddressDetails:interface)\n\n\\[[Ensemble d’API\_: boîte aux lettres 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\\]"
    remarks: "**<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadWriteItem\n\n**<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition\n\n**Erreurs**:\n\n- NumberOfRecipientsExceeded\_: le nombre de destinataires est supérieur à 100 entrées.\n\n#### <a name=\"examples\"></a>Exemples\n\n```javascript\n// The following example creates an array of EmailUser objects and\n// replaces the CC recipients of the message with the array.\nvar newRecipients = [\n    {\n        \"displayName\": \"Allie Bellew\",\n        \"emailAddress\": \"allieb@contoso.com\"\n    },\n    {\n        \"displayName\": \"Alex Darrow\",\n        \"emailAddress\": \"alexd@contoso.com\"\n    }\n];\n\nOffice.context.mailbox.item.cc.setAsync(newRecipients, function(result) {\n    if (result.error) {\n        console.log(result.error);\n    } else {\n        console.log(\"Recipients overwritten\");\n    }\n});\n```"
    name: 'setAsync(recipients, callback)'
    fullName: 'setAsync(recipients, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setAsync(recipients: (string | EmailUser | EmailAddressDetails)[], callback: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: recipients
          description: Destinataires à ajouter à la liste des destinataires.
          type:
            - 'outlook!Office.Recipients#setAsync~2:complex'
        - id: callback
          description: 'Une fois la méthode exécutée, la fonction transmise au paramètre callback est appelée avec un seul paramètre de type Office. AsyncResult. Si la définition des destinataires échoue, la propriété asyncResult. Error contient un code indiquant toute erreur survenue lors de l’ajout des données.'
          type:
            - 'outlook!Office.Recipients#setAsync~3:complex'
references:
  - uid: 'outlook!Office.Recipients#addAsync~0:complex'
    name: '(string | EmailUser | EmailAddressDetails)[]'
    fullName: '(string | Office.EmailUser | Office.EmailAddressDetails)[]'
    spec.typeScript:
      - name: '(string | '
        fullName: '(string | '
      - uid: 'outlook!Office.EmailUser:interface'
        name: EmailUser
        fullName: Office.EmailUser
      - name: ' | '
        fullName: ' | '
      - uid: 'outlook!Office.EmailAddressDetails:interface'
        name: EmailAddressDetails
        fullName: Office.EmailAddressDetails
      - name: ')[]'
        fullName: ')[]'
  - uid: 'outlook!Office.AsyncContextOptions:interface'
    name: Office.AsyncContextOptions
  - uid: 'outlook!Office.Recipients#addAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.Recipients#addAsync~2:complex'
    name: '(string | EmailUser | EmailAddressDetails)[]'
    fullName: '(string | Office.EmailUser | Office.EmailAddressDetails)[]'
    spec.typeScript:
      - name: '(string | '
        fullName: '(string | '
      - uid: 'outlook!Office.EmailUser:interface'
        name: EmailUser
        fullName: Office.EmailUser
      - name: ' | '
        fullName: ' | '
      - uid: 'outlook!Office.EmailAddressDetails:interface'
        name: EmailAddressDetails
        fullName: Office.EmailAddressDetails
      - name: ')[]'
        fullName: ')[]'
  - uid: 'outlook!Office.Recipients#addAsync~3:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.Recipients#getAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<EmailAddressDetails[]>) => void'
    fullName: '(asyncResult: Office.AsyncResult<Office.EmailAddressDetails[]>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'outlook!Office.EmailAddressDetails:interface'
        name: EmailAddressDetails
        fullName: Office.EmailAddressDetails
      - name: '[]>) => void'
        fullName: '[]>) => void'
  - uid: 'outlook!Office.Recipients#getAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<EmailAddressDetails[]>) => void'
    fullName: '(asyncResult: Office.AsyncResult<Office.EmailAddressDetails[]>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'outlook!Office.EmailAddressDetails:interface'
        name: EmailAddressDetails
        fullName: Office.EmailAddressDetails
      - name: '[]>) => void'
        fullName: '[]>) => void'
  - uid: 'outlook!Office.Recipients#setAsync~0:complex'
    name: '(string | EmailUser | EmailAddressDetails)[]'
    fullName: '(string | Office.EmailUser | Office.EmailAddressDetails)[]'
    spec.typeScript:
      - name: '(string | '
        fullName: '(string | '
      - uid: 'outlook!Office.EmailUser:interface'
        name: EmailUser
        fullName: Office.EmailUser
      - name: ' | '
        fullName: ' | '
      - uid: 'outlook!Office.EmailAddressDetails:interface'
        name: EmailAddressDetails
        fullName: Office.EmailAddressDetails
      - name: ')[]'
        fullName: ')[]'
  - uid: 'outlook!Office.Recipients#setAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.Recipients#setAsync~2:complex'
    name: '(string | EmailUser | EmailAddressDetails)[]'
    fullName: '(string | Office.EmailUser | Office.EmailAddressDetails)[]'
    spec.typeScript:
      - name: '(string | '
        fullName: '(string | '
      - uid: 'outlook!Office.EmailUser:interface'
        name: EmailUser
        fullName: Office.EmailUser
      - name: ' | '
        fullName: ' | '
      - uid: 'outlook!Office.EmailAddressDetails:interface'
        name: EmailAddressDetails
        fullName: Office.EmailAddressDetails
      - name: ')[]'
        fullName: ')[]'
  - uid: 'outlook!Office.Recipients#setAsync~3:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void