### YamlMime:UniversalReference
items:
  - uid: excel_release.Excel.FunctionResult
    summary: |-
      Objet contenant le résultat d'une opération d'évaluation de fonction

      \[[Ensemble d'API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.FunctionResult
    fullName: Excel.FunctionResult
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel_release
    children:
      - excel_release.Excel.FunctionResult.context
      - excel_release.Excel.FunctionResult.error
      - excel_release.Excel.FunctionResult.load
      - excel_release.Excel.FunctionResult.load_1
      - excel_release.Excel.FunctionResult.load_2
      - excel_release.Excel.FunctionResult.toJSON
      - excel_release.Excel.FunctionResult.value
  - uid: excel_release.Excel.FunctionResult.context
    summary: Contexte de demande associé à l'objet. Cette opération connecte le processus du complément au processus de l'application hôte Office.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel_release.Excel.FunctionResult.error
    summary: |-
      Valeur d'erreur (par exemple\#, «div/0») représentant l'erreur. Si la chaîne d'erreur n'est pas définie, la fonction a réussi et son résultat est écrit dans le champ valeur. L'erreur est toujours en anglais.

      \[[Ensemble d'API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: error
    fullName: error
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly error: string;'
      return:
        type:
          - string
  - uid: excel_release.Excel.FunctionResult.load
    summary: "Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez appeler «\_context.sync()\_» avant de lire les propriétés."
    remarks: |-
      En plus de cette signature, cette méthode possède les signatures suivantes:

      `load(option?: string | string[]): FunctionResult<T>`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.

      `load(option?: { select?: string; expand?: string; }): FunctionResult<T>`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): FunctionResult<T>`-Uniquement disponible sur les types de collection. Elle est similaire à la signature précédente. Option. Top indique le nombre maximal d'éléments de collection qui peuvent être inclus dans le résultat. Option. Skip indique le nombre d'éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat. Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d'éléments.
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.FunctionResultLoadOptions): FunctionResult<T>;'
      return:
        type:
          - FunctionResult<T>
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.FunctionResultLoadOptions
  - uid: excel_release.Excel.FunctionResult.load_1
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: string | string[]): FunctionResult<T>;'
      return:
        type:
          - FunctionResult<T>
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'string | string[]'
  - uid: excel_release.Excel.FunctionResult.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(option?: {
                    select?: string;
                    expand?: string;
                }): FunctionResult<T>;
      return:
        type:
          - FunctionResult<T>
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: excel_release.Excel.FunctionResult.toJSON
    summary: 'Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu''un objet d''API est transmis à`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, à son tour, appelle `toJSON` la méthode de l''objet qui lui est passé.) Tandis que l''<T> objet FunctionResult d''origine est un objet `toJSON` d''API, la méthode renvoie un objet JavaScript simple (tapé comme`Interfaces.FunctionResultData<T>`<!-- -->) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l''objet d''origine.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Interfaces.FunctionResultData<T>;'
      return:
        type:
          - Interfaces.FunctionResultData<T>
        description: ''
  - uid: excel_release.Excel.FunctionResult.value
    summary: |-
      Valeur de l'évaluation de la fonction. Le champ valeur est renseigné uniquement si aucune erreur n'est survenue (autrement dit, la propriété Error n'est pas définie).

      \[[Ensemble d'API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: value
    fullName: value
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly value: T;'
      return:
        type:
          - T