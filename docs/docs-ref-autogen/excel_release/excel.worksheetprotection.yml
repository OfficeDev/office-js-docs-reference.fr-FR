### YamlMime:UniversalReference
ms.openlocfilehash: 1563a1cc818bc1c0a64ad08987c2779fa40fc1cf
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 02/20/2019
ms.locfileid: "30108855"
items:
- uid: excel_release.Excel.WorksheetProtection
  summary: >-
    <span data-ttu-id="c121a-101">Représente la protection d’un objet de la feuille.</span><span class="sxs-lookup"><span data-stu-id="c121a-101">Represents the protection of a sheet object.</span></span>


    <span data-ttu-id="c121a-102">\[[Ensemble d'API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c121a-102">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.WorksheetProtection
  fullName: Excel.WorksheetProtection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.WorksheetProtection.context
  - excel_release.Excel.WorksheetProtection.load
  - excel_release.Excel.WorksheetProtection.load_1
  - excel_release.Excel.WorksheetProtection.load_2
  - excel_release.Excel.WorksheetProtection.options
  - excel_release.Excel.WorksheetProtection.protect
  - excel_release.Excel.WorksheetProtection.protected
  - excel_release.Excel.WorksheetProtection.toJSON
  - excel_release.Excel.WorksheetProtection.unprotect
- uid: excel_release.Excel.WorksheetProtection.context
  summary: <span data-ttu-id="c121a-103">Contexte de demande associé à l'objet.</span><span class="sxs-lookup"><span data-stu-id="c121a-103">The request context associated with the object.</span></span> <span data-ttu-id="c121a-104">Cette opération connecte le processus du complément au processus de l'application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="c121a-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.WorksheetProtection.load
  summary: <span data-ttu-id="c121a-105">Met en file d'attente une commande pour charger les propriétés spécifiées de l'objet.</span><span class="sxs-lookup"><span data-stu-id="c121a-105">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c121a-106">Vous devez appeler «Context. Sync ()» avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="c121a-106">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="c121a-107">En plus de cette signature, cette méthode possède les signatures suivantes:</span><span class="sxs-lookup"><span data-stu-id="c121a-107">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="c121a-108">`load(option?: string | string[]): Excel.WorksheetProtection`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="c121a-108">`load(option?: string | string[]): Excel.WorksheetProtection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="c121a-109">`load(option?: { select?: string; expand?: string; }): Excel.WorksheetProtection`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="c121a-109">`load(option?: { select?: string; expand?: string; }): Excel.WorksheetProtection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="c121a-110">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.WorksheetProtection`-Uniquement disponible sur les types de collection.</span><span class="sxs-lookup"><span data-stu-id="c121a-110">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.WorksheetProtection` - Only available on collection types.</span></span> <span data-ttu-id="c121a-111">Elle est similaire à la signature précédente.</span><span class="sxs-lookup"><span data-stu-id="c121a-111">It is similar to the preceding signature.</span></span> <span data-ttu-id="c121a-112">Option. Top indique le nombre maximal d'éléments de collection qui peuvent être inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="c121a-112">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="c121a-113">Option. Skip indique le nombre d'éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="c121a-113">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="c121a-114">Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d'éléments.</span><span class="sxs-lookup"><span data-stu-id="c121a-114">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.WorksheetProtectionLoadOptions): Excel.WorksheetProtection;'
    return:
      type:
      - excel.Excel.WorksheetProtection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.WorksheetProtectionLoadOptions
- uid: excel_release.Excel.WorksheetProtection.load_1
  summary: <span data-ttu-id="c121a-115">Met en file d'attente une commande pour charger les propriétés spécifiées de l'objet.</span><span class="sxs-lookup"><span data-stu-id="c121a-115">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c121a-116">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="c121a-116">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.WorksheetProtection;'
    return:
      type:
      - excel.Excel.WorksheetProtection
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="c121a-117">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="c121a-117">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel_release.Excel.WorksheetProtection.load_2
  summary: <span data-ttu-id="c121a-118">Met en file d'attente une commande pour charger les propriétés spécifiées de l'objet.</span><span class="sxs-lookup"><span data-stu-id="c121a-118">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c121a-119">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="c121a-119">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.WorksheetProtection;'
    return:
      type:
      - excel.Excel.WorksheetProtection
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="c121a-120">Où propertyNamesAndPaths. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et propertyNamesAndPaths. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="c121a-120">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel_release.Excel.WorksheetProtection.options
  summary: >-
    <span data-ttu-id="c121a-p106">Options de protection de feuille. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="c121a-p106">Sheet protection options. Read-only.</span></span>


    <span data-ttu-id="c121a-123">\[[Ensemble d'API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c121a-123">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: options
  fullName: options
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly options: Excel.WorksheetProtectionOptions;'
    return:
      type:
      - excel.Excel.WorksheetProtectionOptions
- uid: excel_release.Excel.WorksheetProtection.protect
  summary: >-
    <span data-ttu-id="c121a-124">Protège une feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="c121a-124">Protects a worksheet.</span></span> <span data-ttu-id="c121a-125">Échoue si la feuille de calcul a déjà été protégée.</span><span class="sxs-lookup"><span data-stu-id="c121a-125">Fails if the worksheet has already been protected.</span></span>


    <span data-ttu-id="c121a-126">\[[Ensemble d'API: ExcelApi 1,2 pour les options; 1,7 pour le mot de passe](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c121a-126">\[ [API set: ExcelApi 1.2 for options; 1.7 for password](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: protect(options, password)
  fullName: protect(options, password)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'protect(options?: Excel.WorksheetProtectionOptions, password?: string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"c121a-127\">範例</span><span class=\"sxs-lookup\"><span data-stu-id=\"c121a-127\">Examples</span></span>\n\n```javascript\nExcel.run(function(ctx) {\n  // get a reference to Sheet1\n  var sheet = ctx.workbook.worksheets.getItem(\"Sheet1\");\n\n  // Protect inserting or deleting rows in Sheet1\n  sheet.protection.protect({\n    allowInsertRows: false,\n    allowDeleteRows: false\n  });\n\n  return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```typescript\nawait Excel.run(async (context) => {\n    let activeSheet = context.workbook.worksheets.getActiveWorksheet();\n    activeSheet.load(\"protection/protected\");\n\n    await context.sync();\n\n    if (!activeSheet.protection.protected) {\n        activeSheet.protection.protect();\n    }\n});\n```\n```typescript\nlet password = await passwordHandler();\npasswordHelper(password);\nawait Excel.run(async (context) => {\n    let activeSheet = context.workbook.worksheets.getActiveWorksheet();\n    activeSheet.load(\"protection/protected\");\n\n    await context.sync();\n\n    if (!activeSheet.protection.protected) {\n        activeSheet.protection.protect(null, password);\n    }\n});\n```"
    parameters:
    - id: options
      description: <span data-ttu-id="c121a-128">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="c121a-128">Optional.</span></span> <span data-ttu-id="c121a-129">Options de protection de feuille.</span><span class="sxs-lookup"><span data-stu-id="c121a-129">Sheet protection options.</span></span>
      type:
      - excel.Excel.WorksheetProtectionOptions
    - id: password
      description: <span data-ttu-id="c121a-130">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="c121a-130">Optional.</span></span> <span data-ttu-id="c121a-131">Mot de passe de protection de la feuille.</span><span class="sxs-lookup"><span data-stu-id="c121a-131">Sheet protection password.</span></span>
      type:
      - string
- uid: excel_release.Excel.WorksheetProtection.protected
  summary: >-
    <span data-ttu-id="c121a-132">Indique si la feuille de calcul est protégée.</span><span class="sxs-lookup"><span data-stu-id="c121a-132">Indicates if the worksheet is protected.</span></span> <span data-ttu-id="c121a-133">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="c121a-133">Read-only.</span></span>


    <span data-ttu-id="c121a-134">\[[Ensemble d'API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c121a-134">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: protected
  fullName: protected
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly protected: boolean;'
    return:
      type:
      - boolean
- uid: excel_release.Excel.WorksheetProtection.toJSON
  summary: <span data-ttu-id="c121a-135">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu'un objet d'API est transmis à. `JSON.stringify()` <!-- --></span><span class="sxs-lookup"><span data-stu-id="c121a-135">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="c121a-136">(`JSON.stringify`<!-- -->, à son tour, appelle `toJSON` la méthode de l'objet qui lui est passé.) Tandis que l'objet Excel. WorksheetProtection d'origine est un objet `toJSON` d'API, la méthode renvoie un objet JavaScript `Excel.Interfaces.WorksheetProtectionData` <!-- -->simple (tapé sous la forme) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l'objet d'origine.</span><span class="sxs-lookup"><span data-stu-id="c121a-136">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.WorksheetProtection object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.WorksheetProtectionData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.WorksheetProtectionData;'
    return:
      type:
      - excel.Excel.Interfaces.WorksheetProtectionData
      description: ''
- uid: excel_release.Excel.WorksheetProtection.unprotect
  summary: >-
    <span data-ttu-id="c121a-137">Annule la protection d’une feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="c121a-137">Unprotects a worksheet.</span></span>


    <span data-ttu-id="c121a-138">\[[Ensemble d'API: ExcelApi 1,7 pour le mot de passe](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c121a-138">\[ [API set: ExcelApi 1.7 for password](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: unprotect(password)
  fullName: unprotect(password)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'unprotect(password?: string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"c121a-139\">範例</span><span class=\"sxs-lookup\"><span data-stu-id=\"c121a-139\">Examples</span></span>\n\n```javascript\nExcel.run(function(ctx) {\n  // get a reference to Sheet1\n  var sheet = ctx.workbook.worksheets.getItem(\"Sheet1\");\n\n  // Remove all protects applied to Sheet1\n  sheet.protection.unprotect();\n\n  return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// Unprotecting a worksheet with unprotect() will remove all \n// WorksheetProtectionOptions options applied to a worksheet.\n// To remove only a subset of WorksheetProtectionOptions use the \n// protect() method and set the options you wish to remove to true.\nExcel.run(function(ctx) {\n  var sheet = ctx.workbook.worksheets.getItem(\"Sheet1\");\n  sheet.protection.protect({\n    allowInsertRows: false, // Protect row insertion\n    allowDeleteRows: true // Unprotect row deletion\n  });\n});\n```\n```typescript\nawait Excel.run(async (context) => {\n    let activeSheet = context.workbook.worksheets.getActiveWorksheet();\n    activeSheet.protection.unprotect();\n});\n```\n```typescript\nlet password = await passwordHandler();\npasswordHelper(password);\nawait Excel.run(async (context) => {\n    let activeSheet = context.workbook.worksheets.getActiveWorksheet();\n    activeSheet.protection.unprotect(password);\n});\n```"
    parameters:
    - id: password
      description: <span data-ttu-id="c121a-140">mot de passe de protection de la feuille.</span><span class="sxs-lookup"><span data-stu-id="c121a-140">sheet protection password.</span></span>
      type:
      - string
