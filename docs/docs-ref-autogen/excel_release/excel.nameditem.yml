### YamlMime:UniversalReference
ms.openlocfilehash: a00d58522afc78436b279e69f33320ab56d816fd
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 02/20/2019
ms.locfileid: "30115141"
items:
- uid: excel_release.Excel.NamedItem
  summary: >-
    <span data-ttu-id="26084-101">Représente un nom défini pour une plage de cellules ou une valeur.</span><span class="sxs-lookup"><span data-stu-id="26084-101">Represents a defined name for a range of cells or value.</span></span> <span data-ttu-id="26084-102">Les noms peuvent être des objets nommés primitifs (comme indiqué dans le type ci-dessous), un objet Range ou une référence à une plage.</span><span class="sxs-lookup"><span data-stu-id="26084-102">Names can be primitive named objects (as seen in the type below), range object, or a reference to a range.</span></span> <span data-ttu-id="26084-103">Cet objet peut être utilisé pour obtenir l'objet Range associé aux noms.</span><span class="sxs-lookup"><span data-stu-id="26084-103">This object can be used to obtain range object associated with names.</span></span>


    <span data-ttu-id="26084-104">\[[Ensemble d'API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="26084-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.NamedItem
  fullName: Excel.NamedItem
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.NamedItem.arrayValues
  - excel_release.Excel.NamedItem.comment
  - excel_release.Excel.NamedItem.context
  - excel_release.Excel.NamedItem.delete
  - excel_release.Excel.NamedItem.formula
  - excel_release.Excel.NamedItem.getRange
  - excel_release.Excel.NamedItem.getRangeOrNullObject
  - excel_release.Excel.NamedItem.load
  - excel_release.Excel.NamedItem.load_1
  - excel_release.Excel.NamedItem.load_2
  - excel_release.Excel.NamedItem.name
  - excel_release.Excel.NamedItem.scope
  - excel_release.Excel.NamedItem.set
  - excel_release.Excel.NamedItem.set_1
  - excel_release.Excel.NamedItem.toJSON
  - excel_release.Excel.NamedItem.type
  - excel_release.Excel.NamedItem.value
  - excel_release.Excel.NamedItem.visible
  - excel_release.Excel.NamedItem.worksheet
  - excel_release.Excel.NamedItem.worksheetOrNullObject
- uid: excel_release.Excel.NamedItem.arrayValues
  summary: >-
    <span data-ttu-id="26084-105">Renvoie un objet contenant les valeurs et les types de l’élément nommé.</span><span class="sxs-lookup"><span data-stu-id="26084-105">Returns an object containing values and types of the named item.</span></span> <span data-ttu-id="26084-106">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="26084-106">Read-only.</span></span>


    <span data-ttu-id="26084-107">\[[Ensemble d'API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="26084-107">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: arrayValues
  fullName: arrayValues
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly arrayValues: Excel.NamedItemArrayValues;'
    return:
      type:
      - excel.Excel.NamedItemArrayValues
- uid: excel_release.Excel.NamedItem.comment
  summary: >-
    <span data-ttu-id="26084-108">Représente le commentaire associé à ce nom.</span><span class="sxs-lookup"><span data-stu-id="26084-108">Represents the comment associated with this name.</span></span>


    <span data-ttu-id="26084-109">\[[Ensemble d'API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="26084-109">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: comment
  fullName: comment
  langs:
  - typeScript
  type: property
  syntax:
    content: 'comment: string;'
    return:
      type:
      - string
- uid: excel_release.Excel.NamedItem.context
  summary: <span data-ttu-id="26084-110">Contexte de demande associé à l'objet.</span><span class="sxs-lookup"><span data-stu-id="26084-110">The request context associated with the object.</span></span> <span data-ttu-id="26084-111">Cette opération connecte le processus du complément au processus de l'application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="26084-111">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.NamedItem.delete
  summary: >-
    <span data-ttu-id="26084-112">Supprime le nom donné.</span><span class="sxs-lookup"><span data-stu-id="26084-112">Deletes the given name.</span></span>


    <span data-ttu-id="26084-113">\[[Ensemble d'API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="26084-113">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: delete()
  fullName: delete()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"26084-114\">範例</span><span class=\"sxs-lookup\"><span data-stu-id=\"26084-114\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const totalName = sheet.names.getItemOrNullObject(\"TotalAmount\");\n    totalName.load();\n    await context.sync();\n\n    if (totalName.value) {\n        totalName.delete();\n\n        // Replace the named item (TotalAmount) with the actual formula for TotalAmount to avoid displaying #NAME in the cell.\n        sheet.getRange(\"D11\").values = [[\"=SUM(ExpensesTable[AMOUNT])\"]];\n    } else {\n        console.log(\"No named item created for the formula.\");\n    }\n\n    await context.sync();\n});\n```"
- uid: excel_release.Excel.NamedItem.formula
  summary: >-
    <span data-ttu-id="26084-115">Obtient ou définit la formule de l’élément nommé.</span><span class="sxs-lookup"><span data-stu-id="26084-115">Gets or sets the formula of the named item.</span></span> <span data-ttu-id="26084-116">La formule commence toujours par un signe '='.</span><span class="sxs-lookup"><span data-stu-id="26084-116">Formula always starts with a '=' sign.</span></span>


    <span data-ttu-id="26084-117">\[[Ensemble d'API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="26084-117">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: formula
  fullName: formula
  langs:
  - typeScript
  type: property
  syntax:
    content: 'formula: any;'
    return:
      type:
      - any
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"26084-118\">範例</span><span class=\"sxs-lookup\"><span data-stu-id=\"26084-118\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    // Get the named item\n    const myNamedItem = sheet.names.getItemOrNullObject(\"MyRange\");\n    myNamedItem.load(\"name, formula\");\n    await context.sync();\n\n    if (myNamedItem.isNullObject) {\n        console.log(`There is no named item. Create it with \"Add named item for a range\" first.`);\n    } else {                    \n        // Update named item to point to the second range\n        myNamedItem.formula = \"=Sample!$B$10:$D$14\";\n        sheet.getRange(\"B10:D14\").select();\n        await context.sync();\n\n        console.log(`Just updated the named item \"${myNamedItem.name}\" -- it's now located here: ${myNamedItem.formula}`);\n    }\n});\n```"
- uid: excel_release.Excel.NamedItem.getRange
  summary: >-
    <span data-ttu-id="26084-p105">Renvoie l’objet de plage qui est associé au nom. Renvoie une erreur si le type de l’élément nommé n’est pas une plage.</span><span class="sxs-lookup"><span data-stu-id="26084-p105">Returns the range object that is associated with the name. Throws an error if the named item's type is not a range.</span></span>


    <span data-ttu-id="26084-121">\[[Ensemble d'API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="26084-121">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRange()
  fullName: getRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"26084-122\">範例</span><span class=\"sxs-lookup\"><span data-stu-id=\"26084-122\">Examples</span></span>\n\n```javascript\n// Returns the Range object that is associated with the name. \n// null if the name is not of the type Range.\n// Note: This API currently supports only the Workbook scoped items.\nExcel.run(function (ctx) { \n    var names = ctx.workbook.names;\n    var range = names.getItem('MyRange').getRange();\n    range.load('address');\n    return ctx.sync().then(function() {\n        console.log(range.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel_release.Excel.NamedItem.getRangeOrNullObject
  summary: >-
    <span data-ttu-id="26084-p106">Renvoie l’objet de plage qui est associé au nom. Renvoie un objet null si le type de l’élément nommé n’est pas une plage.</span><span class="sxs-lookup"><span data-stu-id="26084-p106">Returns the range object that is associated with the name. Returns a null object if the named item's type is not a range.</span></span>


    <span data-ttu-id="26084-125">\[[Ensemble d'API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="26084-125">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRangeOrNullObject()
  fullName: getRangeOrNullObject()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRangeOrNullObject(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
- uid: excel_release.Excel.NamedItem.load
  summary: <span data-ttu-id="26084-126">Met en file d'attente une commande pour charger les propriétés spécifiées de l'objet.</span><span class="sxs-lookup"><span data-stu-id="26084-126">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="26084-127">Vous devez appeler «Context. Sync ()» avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="26084-127">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="26084-128">En plus de cette signature, cette méthode possède les signatures suivantes:</span><span class="sxs-lookup"><span data-stu-id="26084-128">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="26084-129">`load(option?: string | string[]): Excel.NamedItem`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="26084-129">`load(option?: string | string[]): Excel.NamedItem` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="26084-130">`load(option?: { select?: string; expand?: string; }): Excel.NamedItem`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="26084-130">`load(option?: { select?: string; expand?: string; }): Excel.NamedItem` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="26084-131">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.NamedItem`-Uniquement disponible sur les types de collection.</span><span class="sxs-lookup"><span data-stu-id="26084-131">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.NamedItem` - Only available on collection types.</span></span> <span data-ttu-id="26084-132">Elle est similaire à la signature précédente.</span><span class="sxs-lookup"><span data-stu-id="26084-132">It is similar to the preceding signature.</span></span> <span data-ttu-id="26084-133">Option. Top indique le nombre maximal d'éléments de collection qui peuvent être inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="26084-133">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="26084-134">Option. Skip indique le nombre d'éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="26084-134">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="26084-135">Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d'éléments.</span><span class="sxs-lookup"><span data-stu-id="26084-135">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.NamedItemLoadOptions): Excel.NamedItem;'
    return:
      type:
      - excel.Excel.NamedItem
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.NamedItemLoadOptions
- uid: excel_release.Excel.NamedItem.load_1
  summary: <span data-ttu-id="26084-136">Met en file d'attente une commande pour charger les propriétés spécifiées de l'objet.</span><span class="sxs-lookup"><span data-stu-id="26084-136">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="26084-137">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="26084-137">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.NamedItem;'
    return:
      type:
      - excel.Excel.NamedItem
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"26084-138\">範例</span><span class=\"sxs-lookup\"><span data-stu-id=\"26084-138\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var names = ctx.workbook.names;\n    var namedItem = names.getItem('MyRange');\n    namedItem.load('type');\n    return ctx.sync().then(function() {\n            console.log(namedItem.type);\n    });\n}).catch(function(error) {\n        console.log(\"Error: \" + error);\n        if (error instanceof OfficeExtension.Error) {\n            console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n        }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="26084-139">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="26084-139">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel_release.Excel.NamedItem.load_2
  summary: <span data-ttu-id="26084-140">Met en file d'attente une commande pour charger les propriétés spécifiées de l'objet.</span><span class="sxs-lookup"><span data-stu-id="26084-140">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="26084-141">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="26084-141">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.NamedItem;'
    return:
      type:
      - excel.Excel.NamedItem
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="26084-142">Où propertyNamesAndPaths. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et propertyNamesAndPaths. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="26084-142">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel_release.Excel.NamedItem.name
  summary: >-
    <span data-ttu-id="26084-p111">Nom de l’objet. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="26084-p111">The name of the object. Read-only.</span></span>


    <span data-ttu-id="26084-145">\[[Ensemble d'API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="26084-145">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: name
  fullName: name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly name: string;'
    return:
      type:
      - string
- uid: excel_release.Excel.NamedItem.scope
  summary: >-
    <span data-ttu-id="26084-146">Indique si le nom est inclus dans le classeur ou dans une feuille de calcul spécifique.</span><span class="sxs-lookup"><span data-stu-id="26084-146">Indicates whether the name is scoped to the workbook or to a specific worksheet.</span></span> <span data-ttu-id="26084-147">Les valeurs possibles sont les suivantes: Worksheet, Workbook.</span><span class="sxs-lookup"><span data-stu-id="26084-147">Possible values are: Worksheet, Workbook.</span></span> <span data-ttu-id="26084-148">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="26084-148">Read-only.</span></span>


    <span data-ttu-id="26084-149">\[[Ensemble d'API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="26084-149">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: scope
  fullName: scope
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly scope: Excel.NamedItemScope | "Worksheet" | "Workbook";'
    return:
      type:
      - Excel.NamedItemScope | "Worksheet" | "Workbook"
- uid: excel_release.Excel.NamedItem.set
  summary: <span data-ttu-id="26084-150">Définit plusieurs propriétés d'un objet en même temps.</span><span class="sxs-lookup"><span data-stu-id="26084-150">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="26084-151">Vous pouvez transmettre un objet plain avec les propriétés appropriées, ou un autre objet API du même type.</span><span class="sxs-lookup"><span data-stu-id="26084-151">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="26084-152">Cette méthode est dotée de la signature supplémentaire suivante:</span><span class="sxs-lookup"><span data-stu-id="26084-152">This method has the following additional signature:</span></span>


    `set(properties: Excel.NamedItem): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.NamedItemUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="26084-153">Objet JavaScript avec des propriétés qui sont structurées isomorphically vers les propriétés de l'objet sur lequel la méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="26084-153">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.NamedItemUpdateData
    - id: options
      description: <span data-ttu-id="26084-154">Fournit une option permettant de supprimer les erreurs si l'objet Properties tente de définir des propriétés en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="26084-154">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel_release.Excel.NamedItem.set_1
  summary: <span data-ttu-id="26084-155">Définit plusieurs propriétés de l'objet en même temps, en fonction d'un objet chargé existant.</span><span class="sxs-lookup"><span data-stu-id="26084-155">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.NamedItem): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.NamedItem
- uid: excel_release.Excel.NamedItem.toJSON
  summary: <span data-ttu-id="26084-156">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu'un objet d'API est transmis à. `JSON.stringify()` <!-- --></span><span class="sxs-lookup"><span data-stu-id="26084-156">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="26084-157">(`JSON.stringify`<!-- -->, à son tour, appelle `toJSON` la méthode de l'objet qui lui est passé.) Tandis que l'objet Excel. NamedItem d'origine est un objet `toJSON` d'API, la méthode renvoie un objet JavaScript `Excel.Interfaces.NamedItemData` <!-- -->simple (tapé sous la forme) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l'objet d'origine.</span><span class="sxs-lookup"><span data-stu-id="26084-157">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.NamedItem object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.NamedItemData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.NamedItemData;'
    return:
      type:
      - excel.Excel.Interfaces.NamedItemData
      description: ''
- uid: excel_release.Excel.NamedItem.type
  summary: >-
    <span data-ttu-id="26084-158">Indique le type de la valeur renvoyée par la formule du nom.</span><span class="sxs-lookup"><span data-stu-id="26084-158">Indicates the type of the value returned by the name's formula.</span></span> <span data-ttu-id="26084-159">Pour plus d'informations, voir Excel. NamedItemType.</span><span class="sxs-lookup"><span data-stu-id="26084-159">See Excel.NamedItemType for details.</span></span> <span data-ttu-id="26084-160">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="26084-160">Read-only.</span></span>


    <span data-ttu-id="26084-161">\[[Ensemble d'API: ExcelApi 1,1 pour String, Integer, double, Boolean, Range, Error; 1,7 pour Array](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="26084-161">\[ [API set: ExcelApi 1.1 for String,Integer,Double,Boolean,Range,Error; 1.7 for Array](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: type
  fullName: type
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly type: Excel.NamedItemType | "String" | "Integer" | "Double" | "Boolean" | "Range" | "Error" | "Array";'
    return:
      type:
      - Excel.NamedItemType | "String" | "Integer" | "Double" | "Boolean" | "Range" | "Error" | "Array"
- uid: excel_release.Excel.NamedItem.value
  summary: >-
    <span data-ttu-id="26084-p116">Représente la valeur calculée par la formule du nom. Pour une plage nommée, renvoie l’adresse de la plage. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="26084-p116">Represents the value computed by the name's formula. For a named range, will return the range address. Read-only.</span></span>


    <span data-ttu-id="26084-165">\[[Ensemble d'API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="26084-165">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: value
  fullName: value
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly value: any;'
    return:
      type:
      - any
- uid: excel_release.Excel.NamedItem.visible
  summary: >-
    <span data-ttu-id="26084-166">Indique si l’objet est visible ou non.</span><span class="sxs-lookup"><span data-stu-id="26084-166">Specifies whether the object is visible or not.</span></span>


    <span data-ttu-id="26084-167">\[[Ensemble d'API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="26084-167">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: visible
  fullName: visible
  langs:
  - typeScript
  type: property
  syntax:
    content: 'visible: boolean;'
    return:
      type:
      - boolean
- uid: excel_release.Excel.NamedItem.worksheet
  summary: >-
    <span data-ttu-id="26084-168">Renvoie la feuille de calcul dans laquelle l'élément nommé est inclus dans l'étendue.</span><span class="sxs-lookup"><span data-stu-id="26084-168">Returns the worksheet on which the named item is scoped to.</span></span> <span data-ttu-id="26084-169">Renvoie une erreur si l'élément est inclus dans l'étendue du classeur.</span><span class="sxs-lookup"><span data-stu-id="26084-169">Throws an error if the item is scoped to the workbook instead.</span></span>


    <span data-ttu-id="26084-170">\[[Ensemble d'API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="26084-170">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: worksheet
  fullName: worksheet
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly worksheet: Excel.Worksheet;'
    return:
      type:
      - excel.Excel.Worksheet
- uid: excel_release.Excel.NamedItem.worksheetOrNullObject
  summary: >-
    <span data-ttu-id="26084-171">Renvoie la feuille de calcul dans laquelle l'élément nommé est inclus dans l'étendue.</span><span class="sxs-lookup"><span data-stu-id="26084-171">Returns the worksheet on which the named item is scoped to.</span></span> <span data-ttu-id="26084-172">Renvoie un objet null si l'élément est inclus dans l'étendue du classeur.</span><span class="sxs-lookup"><span data-stu-id="26084-172">Returns a null object if the item is scoped to the workbook instead.</span></span>


    <span data-ttu-id="26084-173">\[[Ensemble d'API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="26084-173">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: worksheetOrNullObject
  fullName: worksheetOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly worksheetOrNullObject: Excel.Worksheet;'
    return:
      type:
      - excel.Excel.Worksheet
