### YamlMime:UniversalReference
items:
  - uid: excel_release.Excel.RangeCollection
    summary: '<span data-ttu-id="8d6e8-101">\[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8d6e8-101">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>'
    name: Excel.RangeCollection
    fullName: Excel.RangeCollection
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel_release
    children:
      - excel_release.Excel.RangeCollection.context
      - excel_release.Excel.RangeCollection.getCount
      - excel_release.Excel.RangeCollection.getItemAt
      - excel_release.Excel.RangeCollection.items
      - excel_release.Excel.RangeCollection.load
      - excel_release.Excel.RangeCollection.load_1
      - excel_release.Excel.RangeCollection.load_2
      - excel_release.Excel.RangeCollection.toJSON
  - uid: excel_release.Excel.RangeCollection.context
    summary: <span data-ttu-id="8d6e8-102">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="8d6e8-102">The request context associated with the object.</span></span> <span data-ttu-id="8d6e8-103">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="8d6e8-103">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel_release.Excel.RangeCollection.getCount
    summary: |-
      <span data-ttu-id="8d6e8-104">Renvoie le nombre de pages de la collection.</span><span class="sxs-lookup"><span data-stu-id="8d6e8-104">Returns the number of ranges in the RangeCollection.</span></span>

      <span data-ttu-id="8d6e8-105">\[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8d6e8-105">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: excel_release.Excel.RangeCollection.getItemAt
    summary: |-
      <span data-ttu-id="8d6e8-106">Renvoie la plage d’objet selon sa position dans la RangeCollection.</span><span class="sxs-lookup"><span data-stu-id="8d6e8-106">Returns the range object based on its position in the RangeCollection.</span></span>

      <span data-ttu-id="8d6e8-107">\[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8d6e8-107">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
      parameters:
        - id: index
          description: <span data-ttu-id="8d6e8-108">Valeur d’index de l’objet de plage à récupérer.</span><span class="sxs-lookup"><span data-stu-id="8d6e8-108">Index value of the range object to be retrieved.</span></span> <span data-ttu-id="8d6e8-109">Avec indice zéro.</span><span class="sxs-lookup"><span data-stu-id="8d6e8-109">Zero-indexed.</span></span>
          type:
            - number
  - uid: excel_release.Excel.RangeCollection.items
    summary: <span data-ttu-id="8d6e8-110">Obtient l’élément enfant chargé dans cette collection de sites.</span><span class="sxs-lookup"><span data-stu-id="8d6e8-110">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Range[];'
      return:
        type:
          - 'Excel.Range[]'
  - uid: excel_release.Excel.RangeCollection.load
    summary: "<span data-ttu-id=\"8d6e8-111\">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"8d6e8-111\">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id=\"8d6e8-112\">Vous devez appeler «\_context.sync()\_» avant de lire les propriétés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"8d6e8-112\">You must call \"context.sync()\" before reading the properties.</span></span>"
    remarks: |-
      <span data-ttu-id="8d6e8-113">En plus de cette signature, cette méthode possède les signatures suivantes:</span><span class="sxs-lookup"><span data-stu-id="8d6e8-113">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="8d6e8-114">`load(option?: string | string[]): Excel.RangeCollection`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="8d6e8-114">`load(option?: string | string[]): Excel.RangeCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="8d6e8-115">`load(option?: { select?: string; expand?: string; }): Excel.RangeCollection`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="8d6e8-115">`load(option?: { select?: string; expand?: string; }): Excel.RangeCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="8d6e8-116">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeCollection`-Uniquement disponible sur les types de collection.</span><span class="sxs-lookup"><span data-stu-id="8d6e8-116">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeCollection` - Only available on collection types.</span></span> <span data-ttu-id="8d6e8-117">Elle est similaire à la signature précédente.</span><span class="sxs-lookup"><span data-stu-id="8d6e8-117">It is similar to the preceding signature.</span></span> <span data-ttu-id="8d6e8-118">Option. Top indique le nombre maximal d’éléments de collection qui peuvent être inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="8d6e8-118">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="8d6e8-119">Option. Skip indique le nombre d’éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="8d6e8-119">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="8d6e8-120">Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d’éléments.</span><span class="sxs-lookup"><span data-stu-id="8d6e8-120">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.RangeCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.RangeCollection;'
      return:
        type:
          - excel.Excel.RangeCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.RangeCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel_release.Excel.RangeCollection.load_1
    summary: <span data-ttu-id="8d6e8-121">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="8d6e8-121">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="8d6e8-122">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="8d6e8-122">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.RangeCollection;'
      return:
        type:
          - excel.Excel.RangeCollection
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="8d6e8-123">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="8d6e8-123">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel_release.Excel.RangeCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.RangeCollection;'
      return:
        type:
          - excel.Excel.RangeCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - office.OfficeExtension.LoadOption
  - uid: excel_release.Excel.RangeCollection.toJSON
    summary: '<span data-ttu-id="8d6e8-124">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="8d6e8-124">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="8d6e8-125">.</span><span class="sxs-lookup"><span data-stu-id="8d6e8-125"></span></span> <span data-ttu-id="8d6e8-126">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="8d6e8-126"></span></span><!-- --><span data-ttu-id="8d6e8-127">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que `Excel.RangeCollection` l’objet d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.RangeCollectionData`</span><span class="sxs-lookup"><span data-stu-id="8d6e8-127">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.RangeCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.RangeCollectionData`</span></span><!-- --><span data-ttu-id="8d6e8-128">) qui contient un tableau «éléments» avec des copies superficielles de toutes les propriétés chargées des éléments de la collection.</span><span class="sxs-lookup"><span data-stu-id="8d6e8-128">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.RangeCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.RangeCollectionData
        description: ''