### YamlMime:UniversalReference
ms.openlocfilehash: 041dc1d0ec672224ed1f69908b0f28083eec0070
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 02/20/2019
ms.locfileid: "30110430"
items:
- uid: excel_release.Excel.TableRowCollection
  summary: >-
    <span data-ttu-id="c7aa4-101">Représente une collection de toutes les lignes du tableau.</span><span class="sxs-lookup"><span data-stu-id="c7aa4-101">Represents a collection of all the rows that are part of the table.</span></span>


    <span data-ttu-id="c7aa4-102">Notez que, à la différence des plages ou colonnes, qui s'ajusteront si de nouvelles lignes/colonnes sont ajoutées avant celles-ci, un objet TableRow représente l'emplacement physique de la ligne de table, mais pas les données.</span><span class="sxs-lookup"><span data-stu-id="c7aa4-102">Note that unlike Ranges or Columns, which will adjust if new rows/columns are added before them, a TableRow object represent the physical location of the table row, but not the data.</span></span> <span data-ttu-id="c7aa4-103">Autrement dit, si les données sont triées ou si de nouvelles lignes sont ajoutées, une ligne de tableau continue de pointer vers l'index pour lequel elle a été créée.</span><span class="sxs-lookup"><span data-stu-id="c7aa4-103">That is, if the data is sorted or if new rows are added, a table row will continue to point at the index for which it was created.</span></span>


    <span data-ttu-id="c7aa4-104">\[[Ensemble d'API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c7aa4-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.TableRowCollection
  fullName: Excel.TableRowCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.TableRowCollection.add
  - excel_release.Excel.TableRowCollection.context
  - excel_release.Excel.TableRowCollection.count
  - excel_release.Excel.TableRowCollection.getCount
  - excel_release.Excel.TableRowCollection.getItemAt
  - excel_release.Excel.TableRowCollection.items
  - excel_release.Excel.TableRowCollection.load
  - excel_release.Excel.TableRowCollection.load_1
  - excel_release.Excel.TableRowCollection.load_2
  - excel_release.Excel.TableRowCollection.toJSON
- uid: excel_release.Excel.TableRowCollection.add
  summary: >-
    <span data-ttu-id="c7aa4-p102">Ajoute une ou plusieurs lignes dans le tableau. L’objet renvoyé sera placé en premier dans les lignes récemment ajoutées.</span><span class="sxs-lookup"><span data-stu-id="c7aa4-p102">Adds one or more rows to the table. The return object will be the top of the newly added row(s).</span></span>


    <span data-ttu-id="c7aa4-107">Notez que, à la différence des plages ou colonnes, qui s'ajusteront si de nouvelles lignes/colonnes sont ajoutées avant celles-ci, un objet TableRow représente l'emplacement physique de la ligne de table, mais pas les données.</span><span class="sxs-lookup"><span data-stu-id="c7aa4-107">Note that unlike Ranges or Columns, which will adjust if new rows/columns are added before them, a TableRow object represent the physical location of the table row, but not the data.</span></span> <span data-ttu-id="c7aa4-108">Autrement dit, si les données sont triées ou si de nouvelles lignes sont ajoutées, une ligne de tableau continue de pointer vers l'index pour lequel elle a été créée.</span><span class="sxs-lookup"><span data-stu-id="c7aa4-108">That is, if the data is sorted or if new rows are added, a table row will continue to point at the index for which it was created.</span></span>


    <span data-ttu-id="c7aa4-109">\[[Ensemble d'API: ExcelApi 1,1 pour l'ajout d'une seule ligne; 1,4 permet l'ajout de plusieurs lignes.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span><span class="sxs-lookup"><span data-stu-id="c7aa4-109">\[ [API set: ExcelApi 1.1 for adding a single row; 1.4 allows adding of multiple rows.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span></span> <span data-ttu-id="c7aa4-110">\]</span><span class="sxs-lookup"><span data-stu-id="c7aa4-110"></span></span>
  name: add(index, values)
  fullName: add(index, values)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(index?: number, values?: Array<Array<boolean | string | number>> | boolean | string | number): Excel.TableRow;'
    return:
      type:
      - excel.Excel.TableRow
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"c7aa4-111\">範例</span><span class=\"sxs-lookup\"><span data-stu-id=\"c7aa4-111\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tables = ctx.workbook.tables;\n    var values = [[\"Sample\", \"Values\", \"For\", \"New\", \"Row\"]];\n    var row = tables.getItem(\"Table1\").rows.add(null, values);\n    row.load('index');\n    return ctx.sync().then(function() {\n        console.log(row.index);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="c7aa4-p105">Facultatif. Spécifie la position relative de la nouvelle ligne. Si la valeur est null ou -1, la ligne est ajoutée à la fin. Toutes les lignes en dessous de la ligne insérée sont déplacées vers le bas. Avec indice zéro.</span><span class="sxs-lookup"><span data-stu-id="c7aa4-p105">Optional. Specifies the relative position of the new row. If null or -1, the addition happens at the end. Any rows below the inserted row are shifted downwards. Zero-indexed.</span></span>
      type:
      - number
    - id: values
      description: <span data-ttu-id="c7aa4-p106">Facultatif. Matrice 2D des valeurs non mises en forme de la ligne du tableau.</span><span class="sxs-lookup"><span data-stu-id="c7aa4-p106">Optional. A 2-dimensional array of unformatted values of the table row.</span></span>
      type:
      - Array<Array<boolean | string | number>> | boolean | string | number
- uid: excel_release.Excel.TableRowCollection.context
  summary: <span data-ttu-id="c7aa4-119">Contexte de demande associé à l'objet.</span><span class="sxs-lookup"><span data-stu-id="c7aa4-119">The request context associated with the object.</span></span> <span data-ttu-id="c7aa4-120">Cette opération connecte le processus du complément au processus de l'application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="c7aa4-120">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.TableRowCollection.count
  summary: >-
    <span data-ttu-id="c7aa4-p108">Renvoie le nombre de lignes du tableau. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="c7aa4-p108">Returns the number of rows in the table. Read-only.</span></span>


    <span data-ttu-id="c7aa4-123">\[[Ensemble d'API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c7aa4-123">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: count
  fullName: count
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly count: number;'
    return:
      type:
      - number
- uid: excel_release.Excel.TableRowCollection.getCount
  summary: >-
    <span data-ttu-id="c7aa4-124">Obtient le nombre de lignes dans le tableau.</span><span class="sxs-lookup"><span data-stu-id="c7aa4-124">Gets the number of rows in the table.</span></span>


    <span data-ttu-id="c7aa4-125">\[[Ensemble d'API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c7aa4-125">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel_release.Excel.TableRowCollection.getItemAt
  summary: >-
    <span data-ttu-id="c7aa4-126">Obtient une ligne en fonction de sa position dans la collection.</span><span class="sxs-lookup"><span data-stu-id="c7aa4-126">Gets a row based on its position in the collection.</span></span>


    <span data-ttu-id="c7aa4-127">Notez que, à la différence des plages ou colonnes, qui s'ajusteront si de nouvelles lignes/colonnes sont ajoutées avant celles-ci, un objet TableRow représente l'emplacement physique de la ligne de table, mais pas les données.</span><span class="sxs-lookup"><span data-stu-id="c7aa4-127">Note that unlike Ranges or Columns, which will adjust if new rows/columns are added before them, a TableRow object represent the physical location of the table row, but not the data.</span></span> <span data-ttu-id="c7aa4-128">Autrement dit, si les données sont triées ou si de nouvelles lignes sont ajoutées, une ligne de tableau continue de pointer vers l'index pour lequel elle a été créée.</span><span class="sxs-lookup"><span data-stu-id="c7aa4-128">That is, if the data is sorted or if new rows are added, a table row will continue to point at the index for which it was created.</span></span>


    <span data-ttu-id="c7aa4-129">\[[Ensemble d'API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c7aa4-129">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemAt(index)
  fullName: getItemAt(index)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): Excel.TableRow;'
    return:
      type:
      - excel.Excel.TableRow
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"c7aa4-130\">範例</span><span class=\"sxs-lookup\"><span data-stu-id=\"c7aa4-130\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tablerow = ctx.workbook.tables.getItem('Table1').rows.getItemAt(0);\n    tablerow.load('name');\n    return ctx.sync().then(function() {\n            console.log(tablerow.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="c7aa4-p110">Valeur d’indice de l’objet à récupérer. Avec indice zéro.</span><span class="sxs-lookup"><span data-stu-id="c7aa4-p110">Index value of the object to be retrieved. Zero-indexed.</span></span>
      type:
      - number
- uid: excel_release.Excel.TableRowCollection.items
  summary: <span data-ttu-id="c7aa4-133">Obtient les éléments enfants chargés dans cette collection.</span><span class="sxs-lookup"><span data-stu-id="c7aa4-133">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.TableRow[];'
    return:
      type:
      - Excel.TableRow[]
- uid: excel_release.Excel.TableRowCollection.load
  summary: <span data-ttu-id="c7aa4-134">Met en file d'attente une commande pour charger les propriétés spécifiées de l'objet.</span><span class="sxs-lookup"><span data-stu-id="c7aa4-134">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c7aa4-135">Vous devez appeler «Context. Sync ()» avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="c7aa4-135">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="c7aa4-136">En plus de cette signature, cette méthode possède les signatures suivantes:</span><span class="sxs-lookup"><span data-stu-id="c7aa4-136">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="c7aa4-137">`load(option?: string | string[]): Excel.TableRowCollection`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="c7aa4-137">`load(option?: string | string[]): Excel.TableRowCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="c7aa4-138">`load(option?: { select?: string; expand?: string; }): Excel.TableRowCollection`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="c7aa4-138">`load(option?: { select?: string; expand?: string; }): Excel.TableRowCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="c7aa4-139">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableRowCollection`-Uniquement disponible sur les types de collection.</span><span class="sxs-lookup"><span data-stu-id="c7aa4-139">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableRowCollection` - Only available on collection types.</span></span> <span data-ttu-id="c7aa4-140">Elle est similaire à la signature précédente.</span><span class="sxs-lookup"><span data-stu-id="c7aa4-140">It is similar to the preceding signature.</span></span> <span data-ttu-id="c7aa4-141">Option. Top indique le nombre maximal d'éléments de collection qui peuvent être inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="c7aa4-141">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="c7aa4-142">Option. Skip indique le nombre d'éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="c7aa4-142">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="c7aa4-143">Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d'éléments.</span><span class="sxs-lookup"><span data-stu-id="c7aa4-143">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.TableRowCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.TableRowCollection;'
    return:
      type:
      - excel.Excel.TableRowCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Excel.Interfaces.TableRowCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
- uid: excel_release.Excel.TableRowCollection.load_1
  summary: <span data-ttu-id="c7aa4-144">Met en file d'attente une commande pour charger les propriétés spécifiées de l'objet.</span><span class="sxs-lookup"><span data-stu-id="c7aa4-144">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c7aa4-145">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="c7aa4-145">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.TableRowCollection;'
    return:
      type:
      - excel.Excel.TableRowCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"c7aa4-146\">範例</span><span class=\"sxs-lookup\"><span data-stu-id=\"c7aa4-146\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tablerows = ctx.workbook.tables.getItem('Table1').rows;\n    tablerows.load('items');\n    return ctx.sync().then(function() {\n        console.log(\"tablerows Count: \" + tablerows.count);\n        for (var i = 0; i < tablerows.items.length; i++)\n        {\n            console.log(tablerows.items[i].index);\n        }\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// In the example, we'll select the top 100 rows of the table.\nExcel.run(function (ctx) { \n    var table = ctx.workbook.tables.getItem(\"Table1\");\n    var tableRows = table.rows.load({\"select\" : \"index, values\",\"top\": 100, \"skip\": 0 })\n    return ctx.sync().then(function() {\n        for (var i = 0; i < tableRows.items.length; i++)\n        {\n            console.log(tableRows.items[i].index);\n            console.log(tableRows.items[i].values);\n        }\n    });\n}).catch(function(error) {\n        console.log(\"Error: \" + error);\n        if (error instanceof OfficeExtension.Error) {\n            console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n        }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="c7aa4-147">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="c7aa4-147">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel_release.Excel.TableRowCollection.load_2
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Excel.TableRowCollection;'
    return:
      type:
      - excel.Excel.TableRowCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: excel_release.Excel.TableRowCollection.toJSON
  summary: <span data-ttu-id="c7aa4-148">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu'un objet d'API est transmis à. `JSON.stringify()` <!-- --></span><span class="sxs-lookup"><span data-stu-id="c7aa4-148">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="c7aa4-149">(`JSON.stringify`<!-- -->, à son tour, appelle `toJSON` la méthode de l'objet qui lui est passé.) Tandis que `Excel.TableRowCollection` l'objet d'origine est un objet `toJSON` d'API, la méthode renvoie un objet JavaScript `Excel.Interfaces.TableRowCollectionData` <!-- -->simple (tapé sous la forme) qui contient un tableau d'éléments avec des copies superficielles de toutes les propriétés chargées des éléments de la collection.</span><span class="sxs-lookup"><span data-stu-id="c7aa4-149">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.TableRowCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableRowCollectionData`<!-- -->) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.TableRowCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.TableRowCollectionData
      description: ''
