### YamlMime:UniversalReference
ms.openlocfilehash: a836621fe36591eec474cbaae80d93b1b964e9cd
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 02/20/2019
ms.locfileid: "30117409"
items:
- uid: excel_release.Excel.WorksheetFreezePanes
  summary: "\\[[Ensemble d'API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
  name: Excel.WorksheetFreezePanes
  fullName: Excel.WorksheetFreezePanes
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.WorksheetFreezePanes.context
  - excel_release.Excel.WorksheetFreezePanes.freezeAt
  - excel_release.Excel.WorksheetFreezePanes.freezeColumns
  - excel_release.Excel.WorksheetFreezePanes.freezeRows
  - excel_release.Excel.WorksheetFreezePanes.getLocation
  - excel_release.Excel.WorksheetFreezePanes.getLocationOrNullObject
  - excel_release.Excel.WorksheetFreezePanes.toJSON
  - excel_release.Excel.WorksheetFreezePanes.unfreeze
- uid: excel_release.Excel.WorksheetFreezePanes.context
  summary: Contexte de demande associé à l'objet. Cette opération connecte le processus du complément au processus de l'application hôte Office.
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.WorksheetFreezePanes.freezeAt
  summary: >-
    Définit les cellules figées dans l’affichage de la feuille de calcul active. La plage fournie correspond aux cellules qui seront figées dans le volet supérieur et le volet de gauche.


    \[[Ensemble d'API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: freezeAt(frozenRange)
  fullName: freezeAt(frozenRange)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'freezeAt(frozenRange: Range | string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a>範例\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    // Freeze the specified range in top-and-left-most pane of the worksheet.\n    sheet.freezePanes.freezeAt(sheet.getRange(\"H2:K5\"));\n\n    await context.sync();\n});\n```"
    parameters:
    - id: frozenRange
      description: Plage qui représente les cellules à figer ou null pour supprimer tous les volets figés.
      type:
      - Range | string
- uid: excel_release.Excel.WorksheetFreezePanes.freezeColumns
  summary: >-
    Figer la/les première(s) colonne(s) de la feuille de calcul en place.


    \[[Ensemble d'API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: freezeColumns(count)
  fullName: freezeColumns(count)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'freezeColumns(count?: number): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a>範例\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    // Freeze the first two columns in the worksheet.\n    sheet.freezePanes.freezeColumns(2);\n\n    await context.sync();\n});\n```"
    parameters:
    - id: count
      description: Nombre facultatif de colonnes à geler, ou zéro pour libérer toutes les colonnes
      type:
      - number
- uid: excel_release.Excel.WorksheetFreezePanes.freezeRows
  summary: >-
    Figer la/les première(s) ligne(s) de la feuille de calcul en place.


    \[[Ensemble d'API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: freezeRows(count)
  fullName: freezeRows(count)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'freezeRows(count?: number): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a>範例\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    // Freeze the top two rows in the worksheet.\n    sheet.freezePanes.freezeRows(2);\n\n    await context.sync();\n});\n```"
    parameters:
    - id: count
      description: Nombre facultatif de lignes à geler, ou zéro pour libérer toutes les lignes
      type:
      - number
- uid: excel_release.Excel.WorksheetFreezePanes.getLocation
  summary: >-
    Obtient une plage qui définit les cellules figées dans l’affichage de la feuille de calcul active. La plage figée correspond aux cellules qui sont figées dans le volet supérieur et le volet de gauche.


    \[[Ensemble d'API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: getLocation()
  fullName: getLocation()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getLocation(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
- uid: excel_release.Excel.WorksheetFreezePanes.getLocationOrNullObject
  summary: >-
    Obtient une plage qui définit les cellules figées dans l’affichage de la feuille de calcul active. La plage figée correspond aux cellules qui sont figées dans le volet supérieur et le volet de gauche. S'il n'y a pas de volet figé, renvoie un objet null.


    \[[Ensemble d'API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: getLocationOrNullObject()
  fullName: getLocationOrNullObject()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getLocationOrNullObject(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a>範例\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const frozenRange = sheet.freezePanes.getLocationOrNullObject();\n    frozenRange.load(\"address\");\n\n    await context.sync();\n\n    if (frozenRange.isNullObject) {\n        console.log(`The worksheet does not contain a frozen pane.`);\n    } else {\n        console.log(`The address of the frozen range (cells that are frozen in the top-and-left-most pane) is \"${frozenRange.address}\"`);\n    }\n});\n```"
- uid: excel_release.Excel.WorksheetFreezePanes.toJSON
  summary: Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu'un objet d'API est transmis à. `JSON.stringify()` <!-- --> (`JSON.stringify`<!-- -->, à son tour, appelle `toJSON` la méthode de l'objet qui lui est passé.) Tandis que l'objet Excel. WorksheetFreezePanes d'origine est un objet `toJSON` d'API, la méthode renvoie un objet JavaScript `Excel.Interfaces.WorksheetFreezePanesData` <!-- -->simple (tapé sous la forme) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l'objet d'origine.
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: >-
      toJSON(): {

                  [key: string]: string;

              };
    return:
      type:
      - >-
        {

                    [key: string]: string;

                }
      description: ''
- uid: excel_release.Excel.WorksheetFreezePanes.unfreeze
  summary: >-
    Supprime tous les volets figés dans la feuille de calcul.


    \[[Ensemble d'API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: unfreeze()
  fullName: unfreeze()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'unfreeze(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a>範例\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    sheet.freezePanes.unfreeze();\n\n    await context.sync();\n});\n```"
