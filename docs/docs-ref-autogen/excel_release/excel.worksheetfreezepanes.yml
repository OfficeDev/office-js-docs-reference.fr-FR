### YamlMime:UniversalReference
ms.openlocfilehash: a836621fe36591eec474cbaae80d93b1b964e9cd
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 02/20/2019
ms.locfileid: "30117409"
items:
- uid: excel_release.Excel.WorksheetFreezePanes
  summary: "<span data-ttu-id=\"f15f6-101\">\\[[Ensemble d'API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"f15f6-101\">\\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
  name: Excel.WorksheetFreezePanes
  fullName: Excel.WorksheetFreezePanes
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.WorksheetFreezePanes.context
  - excel_release.Excel.WorksheetFreezePanes.freezeAt
  - excel_release.Excel.WorksheetFreezePanes.freezeColumns
  - excel_release.Excel.WorksheetFreezePanes.freezeRows
  - excel_release.Excel.WorksheetFreezePanes.getLocation
  - excel_release.Excel.WorksheetFreezePanes.getLocationOrNullObject
  - excel_release.Excel.WorksheetFreezePanes.toJSON
  - excel_release.Excel.WorksheetFreezePanes.unfreeze
- uid: excel_release.Excel.WorksheetFreezePanes.context
  summary: <span data-ttu-id="f15f6-102">Contexte de demande associé à l'objet.</span><span class="sxs-lookup"><span data-stu-id="f15f6-102">The request context associated with the object.</span></span> <span data-ttu-id="f15f6-103">Cette opération connecte le processus du complément au processus de l'application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="f15f6-103">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.WorksheetFreezePanes.freezeAt
  summary: >-
    <span data-ttu-id="f15f6-104">Définit les cellules figées dans l’affichage de la feuille de calcul active.</span><span class="sxs-lookup"><span data-stu-id="f15f6-104">Sets the frozen cells in the active worksheet view.</span></span> <span data-ttu-id="f15f6-105">La plage fournie correspond aux cellules qui seront figées dans le volet supérieur et le volet de gauche.</span><span class="sxs-lookup"><span data-stu-id="f15f6-105">The range provided corresponds to cells that will be frozen in the top- and left-most pane.</span></span>


    <span data-ttu-id="f15f6-106">\[[Ensemble d'API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f15f6-106">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: freezeAt(frozenRange)
  fullName: freezeAt(frozenRange)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'freezeAt(frozenRange: Range | string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"f15f6-107\">範例</span><span class=\"sxs-lookup\"><span data-stu-id=\"f15f6-107\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    // Freeze the specified range in top-and-left-most pane of the worksheet.\n    sheet.freezePanes.freezeAt(sheet.getRange(\"H2:K5\"));\n\n    await context.sync();\n});\n```"
    parameters:
    - id: frozenRange
      description: <span data-ttu-id="f15f6-108">Plage qui représente les cellules à figer ou null pour supprimer tous les volets figés.</span><span class="sxs-lookup"><span data-stu-id="f15f6-108">A range that represents the cells to be frozen, or null to remove all frozen panes.</span></span>
      type:
      - Range | string
- uid: excel_release.Excel.WorksheetFreezePanes.freezeColumns
  summary: >-
    <span data-ttu-id="f15f6-109">Figer la/les première(s) colonne(s) de la feuille de calcul en place.</span><span class="sxs-lookup"><span data-stu-id="f15f6-109">Freeze the first column(s) of the worksheet in place.</span></span>


    <span data-ttu-id="f15f6-110">\[[Ensemble d'API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f15f6-110">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: freezeColumns(count)
  fullName: freezeColumns(count)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'freezeColumns(count?: number): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"f15f6-111\">範例</span><span class=\"sxs-lookup\"><span data-stu-id=\"f15f6-111\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    // Freeze the first two columns in the worksheet.\n    sheet.freezePanes.freezeColumns(2);\n\n    await context.sync();\n});\n```"
    parameters:
    - id: count
      description: <span data-ttu-id="f15f6-112">Nombre facultatif de colonnes à geler, ou zéro pour libérer toutes les colonnes</span><span class="sxs-lookup"><span data-stu-id="f15f6-112">Optional number of columns to freeze, or zero to unfreeze all columns</span></span>
      type:
      - number
- uid: excel_release.Excel.WorksheetFreezePanes.freezeRows
  summary: >-
    <span data-ttu-id="f15f6-113">Figer la/les première(s) ligne(s) de la feuille de calcul en place.</span><span class="sxs-lookup"><span data-stu-id="f15f6-113">Freeze the top row(s) of the worksheet in place.</span></span>


    <span data-ttu-id="f15f6-114">\[[Ensemble d'API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f15f6-114">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: freezeRows(count)
  fullName: freezeRows(count)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'freezeRows(count?: number): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"f15f6-115\">範例</span><span class=\"sxs-lookup\"><span data-stu-id=\"f15f6-115\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    // Freeze the top two rows in the worksheet.\n    sheet.freezePanes.freezeRows(2);\n\n    await context.sync();\n});\n```"
    parameters:
    - id: count
      description: <span data-ttu-id="f15f6-116">Nombre facultatif de lignes à geler, ou zéro pour libérer toutes les lignes</span><span class="sxs-lookup"><span data-stu-id="f15f6-116">Optional number of rows to freeze, or zero to unfreeze all rows</span></span>
      type:
      - number
- uid: excel_release.Excel.WorksheetFreezePanes.getLocation
  summary: >-
    <span data-ttu-id="f15f6-117">Obtient une plage qui définit les cellules figées dans l’affichage de la feuille de calcul active.</span><span class="sxs-lookup"><span data-stu-id="f15f6-117">Gets a range that describes the frozen cells in the active worksheet view.</span></span> <span data-ttu-id="f15f6-118">La plage figée correspond aux cellules qui sont figées dans le volet supérieur et le volet de gauche.</span><span class="sxs-lookup"><span data-stu-id="f15f6-118">The frozen range is corresponds to cells that are frozen in the top- and left-most pane.</span></span>


    <span data-ttu-id="f15f6-119">\[[Ensemble d'API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f15f6-119">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getLocation()
  fullName: getLocation()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getLocation(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
- uid: excel_release.Excel.WorksheetFreezePanes.getLocationOrNullObject
  summary: >-
    <span data-ttu-id="f15f6-120">Obtient une plage qui définit les cellules figées dans l’affichage de la feuille de calcul active.</span><span class="sxs-lookup"><span data-stu-id="f15f6-120">Gets a range that describes the frozen cells in the active worksheet view.</span></span> <span data-ttu-id="f15f6-121">La plage figée correspond aux cellules qui sont figées dans le volet supérieur et le volet de gauche.</span><span class="sxs-lookup"><span data-stu-id="f15f6-121">The frozen range is corresponds to cells that are frozen in the top- and left-most pane.</span></span> <span data-ttu-id="f15f6-122">S'il n'y a pas de volet figé, renvoie un objet null.</span><span class="sxs-lookup"><span data-stu-id="f15f6-122">If there is no frozen pane, returns a null object.</span></span>


    <span data-ttu-id="f15f6-123">\[[Ensemble d'API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f15f6-123">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getLocationOrNullObject()
  fullName: getLocationOrNullObject()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getLocationOrNullObject(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"f15f6-124\">範例</span><span class=\"sxs-lookup\"><span data-stu-id=\"f15f6-124\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const frozenRange = sheet.freezePanes.getLocationOrNullObject();\n    frozenRange.load(\"address\");\n\n    await context.sync();\n\n    if (frozenRange.isNullObject) {\n        console.log(`The worksheet does not contain a frozen pane.`);\n    } else {\n        console.log(`The address of the frozen range (cells that are frozen in the top-and-left-most pane) is \"${frozenRange.address}\"`);\n    }\n});\n```"
- uid: excel_release.Excel.WorksheetFreezePanes.toJSON
  summary: <span data-ttu-id="f15f6-125">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu'un objet d'API est transmis à. `JSON.stringify()` <!-- --></span><span class="sxs-lookup"><span data-stu-id="f15f6-125">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="f15f6-126">(`JSON.stringify`<!-- -->, à son tour, appelle `toJSON` la méthode de l'objet qui lui est passé.) Tandis que l'objet Excel. WorksheetFreezePanes d'origine est un objet `toJSON` d'API, la méthode renvoie un objet JavaScript `Excel.Interfaces.WorksheetFreezePanesData` <!-- -->simple (tapé sous la forme) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l'objet d'origine.</span><span class="sxs-lookup"><span data-stu-id="f15f6-126">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.WorksheetFreezePanes object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.WorksheetFreezePanesData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: >-
      toJSON(): {

                  [key: string]: string;

              };
    return:
      type:
      - >-
        {

                    [key: string]: string;

                }
      description: ''
- uid: excel_release.Excel.WorksheetFreezePanes.unfreeze
  summary: >-
    <span data-ttu-id="f15f6-127">Supprime tous les volets figés dans la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="f15f6-127">Removes all frozen panes in the worksheet.</span></span>


    <span data-ttu-id="f15f6-128">\[[Ensemble d'API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f15f6-128">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: unfreeze()
  fullName: unfreeze()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'unfreeze(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"f15f6-129\">範例</span><span class=\"sxs-lookup\"><span data-stu-id=\"f15f6-129\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    sheet.freezePanes.unfreeze();\n\n    await context.sync();\n});\n```"
