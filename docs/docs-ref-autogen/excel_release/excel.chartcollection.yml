### YamlMime:UniversalReference
ms.openlocfilehash: 6eec0c5facd3ae0b780502d9f622ef6d27232ddd
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 02/20/2019
ms.locfileid: "30106860"
items:
- uid: excel_release.Excel.ChartCollection
  summary: >-
    <span data-ttu-id="4527f-101">Collection de tous les objets de graphique d’une feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="4527f-101">A collection of all the chart objects on a worksheet.</span></span>


    <span data-ttu-id="4527f-102">\[[Ensemble d'API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4527f-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.ChartCollection
  fullName: Excel.ChartCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.ChartCollection.add
  - excel_release.Excel.ChartCollection.add_1
  - excel_release.Excel.ChartCollection.context
  - excel_release.Excel.ChartCollection.count
  - excel_release.Excel.ChartCollection.getCount
  - excel_release.Excel.ChartCollection.getItem
  - excel_release.Excel.ChartCollection.getItemAt
  - excel_release.Excel.ChartCollection.getItemOrNullObject
  - excel_release.Excel.ChartCollection.items
  - excel_release.Excel.ChartCollection.load
  - excel_release.Excel.ChartCollection.load_1
  - excel_release.Excel.ChartCollection.load_2
  - excel_release.Excel.ChartCollection.onActivated
  - excel_release.Excel.ChartCollection.onAdded
  - excel_release.Excel.ChartCollection.onDeactivated
  - excel_release.Excel.ChartCollection.onDeleted
  - excel_release.Excel.ChartCollection.toJSON
- uid: excel_release.Excel.ChartCollection.add
  summary: >-
    <span data-ttu-id="4527f-103">Crée un graphique.</span><span class="sxs-lookup"><span data-stu-id="4527f-103">Creates a new chart.</span></span>


    <span data-ttu-id="4527f-104">\[[Ensemble d'API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4527f-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: add(type, sourceData, seriesBy)
  fullName: add(type, sourceData, seriesBy)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(type: Excel.ChartType, sourceData: Range, seriesBy?: Excel.ChartSeriesBy): Excel.Chart;'
    return:
      type:
      - excel.Excel.Chart
      description: ''
    parameters:
    - id: type
      description: <span data-ttu-id="4527f-105">Représente le type d'un graphique.</span><span class="sxs-lookup"><span data-stu-id="4527f-105">Represents the type of a chart.</span></span> <span data-ttu-id="4527f-106">Pour plus d'informations, voir Excel. ChartType.</span><span class="sxs-lookup"><span data-stu-id="4527f-106">See Excel.ChartType for details.</span></span>
      type:
      - excel.Excel.ChartType
    - id: sourceData
      description: <span data-ttu-id="4527f-107">Objet Range correspondant aux données source.</span><span class="sxs-lookup"><span data-stu-id="4527f-107">The Range object corresponding to the source data.</span></span>
      type:
      - Range
    - id: seriesBy
      description: <span data-ttu-id="4527f-108">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="4527f-108">Optional.</span></span> <span data-ttu-id="4527f-109">Indique la manière dont les colonnes ou les lignes sont utilisées comme séries de données dans le graphique.</span><span class="sxs-lookup"><span data-stu-id="4527f-109">Specifies the way columns or rows are used as data series on the chart.</span></span> <span data-ttu-id="4527f-110">Pour plus d'informations, voir Excel. ChartSeriesBy.</span><span class="sxs-lookup"><span data-stu-id="4527f-110">See Excel.ChartSeriesBy for details.</span></span>
      type:
      - excel.Excel.ChartSeriesBy
- uid: excel_release.Excel.ChartCollection.add_1
  summary: >-
    <span data-ttu-id="4527f-111">Crée un graphique.</span><span class="sxs-lookup"><span data-stu-id="4527f-111">Creates a new chart.</span></span>


    <span data-ttu-id="4527f-112">\[[Ensemble d'API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4527f-112">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: add(typeString, sourceData, seriesBy)
  fullName: add(typeString, sourceData, seriesBy)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(typeString: "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel", sourceData: Range, seriesBy?: "Auto" | "Columns" | "Rows"): Excel.Chart;'
    return:
      type:
      - excel.Excel.Chart
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4527f-113\">範例</span><span class=\"sxs-lookup\"><span data-stu-id=\"4527f-113\">Examples</span></span>\n\n```javascript\n// Add a chart of chartType \"ColumnClustered\" on worksheet \"Charts\" \n// with sourceData from Range \"A1:B4\" and seriresBy is set to be \"auto\".\nExcel.run(function (ctx) { \n    var rangeSelection = \"A1:B4\";\n    var range = ctx.workbook.worksheets.getItem(sheetName)\n        .getRange(rangeSelection);\n    var chart = ctx.workbook.worksheets.getItem(sheetName)\n        .charts.add(\"ColumnClustered\", range, \"auto\");    return ctx.sync().then(function() {\n            console.log(\"New Chart Added\");\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: typeString
      description: <span data-ttu-id="4527f-114">Représente le type d'un graphique.</span><span class="sxs-lookup"><span data-stu-id="4527f-114">Represents the type of a chart.</span></span> <span data-ttu-id="4527f-115">Pour plus d'informations, voir Excel. ChartType.</span><span class="sxs-lookup"><span data-stu-id="4527f-115">See Excel.ChartType for details.</span></span>
      type:
      - "\"Invalid\" | \"ColumnClustered\" | \"ColumnStacked\" | \"ColumnStacked100\" | \"3DColumnClustered\" | \"3DColumnStacked\" | \"3DColumnStacked100\" | \"BarClustered\" | \"BarStacked\" | \"BarStacked100\" | \"3DBarClustered\" | \"3DBarStacked\" | \"3DBarStacked100\" | \"LineStacked\" | \"LineStacked100\" | \"LineMarkers\" | \"LineMarkersStacked\" | \"LineMarkersStacked100\" | \"PieOfPie\" | \"PieExploded\" | \"3DPieExploded\" | \"BarOfPie\" | \"XYScatterSmooth\" | \"XYScatterSmoothNoMarkers\" | \"XYScatterLines\" | \"XYScatterLinesNoMarkers\" | \"AreaStacked\" | \"AreaStacked100\" | \"3DAreaStacked\" | \"3DAreaStacked100\" | \"DoughnutExploded\" | \"RadarMarkers\" | \"RadarFilled\" | \"Surface\" | \"SurfaceWireframe\" | \"SurfaceTopView\" | \"SurfaceTopViewWireframe\" | \"Bubble\" | \"Bubble3DEffect\" | \"StockHLC\" | \"StockOHLC\" | \"StockVHLC\" | \"StockVOHLC\" | \"CylinderColClustered\" | \"CylinderColStacked\" | \"CylinderColStacked100\" | \"CylinderBarClustered\" | \"CylinderBarStacked\" | \"CylinderBarStacked100\" | \"CylinderCol\" | \"ConeColClustered\" | \"ConeColStacked\" | \"ConeColStacked100\" | \"ConeBarClustered\" | \"ConeBarStacked\" | \"ConeBarStacked100\" | \"ConeCol\" | \"PyramidColClustered\" | \"PyramidColStacked\" | \"PyramidColStacked100\" | \"PyramidBarClustered\" | \"PyramidBarStacked\" | \"PyramidBarStacked100\" | \"PyramidCol\" | \"3DColumn\" | \"Line\" | \"3DLine\" | \"3DPie\" | \"Pie\" | \"XYScatter\" | \"3DArea\" | \"Area\" | \"Doughnut\" | \"Radar\" | \"Histogram\" | \"Boxwhisker\" | \"Pareto\" | \"RegionMap\" | \"Treemap\" | \"Waterfall\" | \"Sunburst\" | \"Funnel\""
    - id: sourceData
      description: <span data-ttu-id="4527f-116">Objet Range correspondant aux données source.</span><span class="sxs-lookup"><span data-stu-id="4527f-116">The Range object corresponding to the source data.</span></span>
      type:
      - Range
    - id: seriesBy
      description: <span data-ttu-id="4527f-117">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="4527f-117">Optional.</span></span> <span data-ttu-id="4527f-118">Indique la manière dont les colonnes ou les lignes sont utilisées comme séries de données dans le graphique.</span><span class="sxs-lookup"><span data-stu-id="4527f-118">Specifies the way columns or rows are used as data series on the chart.</span></span> <span data-ttu-id="4527f-119">Pour plus d'informations, voir Excel. ChartSeriesBy.</span><span class="sxs-lookup"><span data-stu-id="4527f-119">See Excel.ChartSeriesBy for details.</span></span>
      type:
      - "\"Auto\" | \"Columns\" | \"Rows\""
- uid: excel_release.Excel.ChartCollection.context
  summary: <span data-ttu-id="4527f-120">Contexte de demande associé à l'objet.</span><span class="sxs-lookup"><span data-stu-id="4527f-120">The request context associated with the object.</span></span> <span data-ttu-id="4527f-121">Cette opération connecte le processus du complément au processus de l'application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="4527f-121">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.ChartCollection.count
  summary: >-
    <span data-ttu-id="4527f-p106">Renvoie le nombre de graphiques dans la feuille de calcul. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="4527f-p106">Returns the number of charts in the worksheet. Read-only.</span></span>


    <span data-ttu-id="4527f-124">\[[Ensemble d'API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4527f-124">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: count
  fullName: count
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly count: number;'
    return:
      type:
      - number
- uid: excel_release.Excel.ChartCollection.getCount
  summary: >-
    <span data-ttu-id="4527f-125">Renvoie le nombre de graphiques dans la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="4527f-125">Returns the number of charts in the worksheet.</span></span>


    <span data-ttu-id="4527f-126">\[[Ensemble d'API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4527f-126">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel_release.Excel.ChartCollection.getItem
  summary: >-
    <span data-ttu-id="4527f-p107">Extrait un graphique à l’aide de son nom. Si plusieurs graphiques portent le même nom, c’est le premier d’entre eux qui est renvoyé.</span><span class="sxs-lookup"><span data-stu-id="4527f-p107">Gets a chart using its name. If there are multiple charts with the same name, the first one will be returned.</span></span>


    <span data-ttu-id="4527f-129">\[[Ensemble d'API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4527f-129">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItem(name)
  fullName: getItem(name)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(name: string): Excel.Chart;'
    return:
      type:
      - excel.Excel.Chart
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4527f-130\">範例</span><span class=\"sxs-lookup\"><span data-stu-id=\"4527f-130\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var chartname = 'Chart1';\n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(chartname);\n    return ctx.sync().then(function() {\n            console.log(chart.height);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nExcel.run(function (ctx) { \n    var chartId = 'SampleChartId';\n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(chartId);\n    return ctx.sync().then(function() {\n            console.log(chart.height);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nExcel.run(function (ctx) { \n    var lastPosition = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.count - 1;\n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItemAt(lastPosition);\n    return ctx.sync().then(function() {\n            console.log(chart.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: name
      description: <span data-ttu-id="4527f-131">Nom du graphique à extraire.</span><span class="sxs-lookup"><span data-stu-id="4527f-131">Name of the chart to be retrieved.</span></span>
      type:
      - string
- uid: excel_release.Excel.ChartCollection.getItemAt
  summary: >-
    <span data-ttu-id="4527f-132">Extrait un graphique en fonction de sa position dans la collection.</span><span class="sxs-lookup"><span data-stu-id="4527f-132">Gets a chart based on its position in the collection.</span></span>


    <span data-ttu-id="4527f-133">\[[Ensemble d'API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4527f-133">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemAt(index)
  fullName: getItemAt(index)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): Excel.Chart;'
    return:
      type:
      - excel.Excel.Chart
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4527f-134\">範例</span><span class=\"sxs-lookup\"><span data-stu-id=\"4527f-134\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var lastPosition = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.count - 1;\n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItemAt(lastPosition);\n    return ctx.sync().then(function() {\n            console.log(chart.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="4527f-p108">Valeur d’indice de l’objet à récupérer. Avec indice zéro.</span><span class="sxs-lookup"><span data-stu-id="4527f-p108">Index value of the object to be retrieved. Zero-indexed.</span></span>
      type:
      - number
- uid: excel_release.Excel.ChartCollection.getItemOrNullObject
  summary: >-
    <span data-ttu-id="4527f-137">Obtient un graphique à l'aide de son nom.</span><span class="sxs-lookup"><span data-stu-id="4527f-137">Gets a chart using its name.</span></span> <span data-ttu-id="4527f-138">S'il existe plusieurs graphiques portant le même nom, le premier est renvoyé.</span><span class="sxs-lookup"><span data-stu-id="4527f-138">If there are multiple charts with the same name, the first one will be returned.</span></span> <span data-ttu-id="4527f-139">Si le graphique n'existe pas, renvoie un objet null.</span><span class="sxs-lookup"><span data-stu-id="4527f-139">If the chart does not exist, will return a null object.</span></span>


    <span data-ttu-id="4527f-140">\[[Ensemble d'API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4527f-140">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemOrNullObject(name)
  fullName: getItemOrNullObject(name)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemOrNullObject(name: string): Excel.Chart;'
    return:
      type:
      - excel.Excel.Chart
      description: ''
    parameters:
    - id: name
      description: <span data-ttu-id="4527f-141">Nom du graphique à extraire.</span><span class="sxs-lookup"><span data-stu-id="4527f-141">Name of the chart to be retrieved.</span></span>
      type:
      - string
- uid: excel_release.Excel.ChartCollection.items
  summary: <span data-ttu-id="4527f-142">Obtient les éléments enfants chargés dans cette collection.</span><span class="sxs-lookup"><span data-stu-id="4527f-142">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.Chart[];'
    return:
      type:
      - Excel.Chart[]
- uid: excel_release.Excel.ChartCollection.load
  summary: <span data-ttu-id="4527f-143">Met en file d'attente une commande pour charger les propriétés spécifiées de l'objet.</span><span class="sxs-lookup"><span data-stu-id="4527f-143">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="4527f-144">Vous devez appeler «Context. Sync ()» avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="4527f-144">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="4527f-145">En plus de cette signature, cette méthode possède les signatures suivantes:</span><span class="sxs-lookup"><span data-stu-id="4527f-145">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="4527f-146">`load(option?: string | string[]): Excel.ChartCollection`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="4527f-146">`load(option?: string | string[]): Excel.ChartCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="4527f-147">`load(option?: { select?: string; expand?: string; }): Excel.ChartCollection`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="4527f-147">`load(option?: { select?: string; expand?: string; }): Excel.ChartCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="4527f-148">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartCollection`-Uniquement disponible sur les types de collection.</span><span class="sxs-lookup"><span data-stu-id="4527f-148">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartCollection` - Only available on collection types.</span></span> <span data-ttu-id="4527f-149">Elle est similaire à la signature précédente.</span><span class="sxs-lookup"><span data-stu-id="4527f-149">It is similar to the preceding signature.</span></span> <span data-ttu-id="4527f-150">Option. Top indique le nombre maximal d'éléments de collection qui peuvent être inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="4527f-150">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="4527f-151">Option. Skip indique le nombre d'éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="4527f-151">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="4527f-152">Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d'éléments.</span><span class="sxs-lookup"><span data-stu-id="4527f-152">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.ChartCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.ChartCollection;'
    return:
      type:
      - excel.Excel.ChartCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Excel.Interfaces.ChartCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
- uid: excel_release.Excel.ChartCollection.load_1
  summary: <span data-ttu-id="4527f-153">Met en file d'attente une commande pour charger les propriétés spécifiées de l'objet.</span><span class="sxs-lookup"><span data-stu-id="4527f-153">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="4527f-154">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="4527f-154">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.ChartCollection;'
    return:
      type:
      - excel.Excel.ChartCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4527f-155\">範例</span><span class=\"sxs-lookup\"><span data-stu-id=\"4527f-155\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var charts = ctx.workbook.worksheets.getItem(\"Sheet1\").charts;\n    charts.load('items');\n    return ctx.sync().then(function() {\n        for (var i = 0; i < charts.items.length; i++)\n        {\n            console.log(charts.items[i].name);\n        }\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// Get the number of charts\nExcel.run(function (ctx) { \n    var charts = ctx.workbook.worksheets.getItem(\"Sheet1\").charts;\n    charts.load('count');\n    return ctx.sync().then(function() {\n        console.log(\"charts: Count= \" + charts.count);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="4527f-156">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="4527f-156">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel_release.Excel.ChartCollection.load_2
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Excel.ChartCollection;'
    return:
      type:
      - excel.Excel.ChartCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: excel_release.Excel.ChartCollection.onActivated
  summary: >-
    <span data-ttu-id="4527f-157">Se produit lorsqu'un graphique est activé.</span><span class="sxs-lookup"><span data-stu-id="4527f-157">Occurs when a chart is activated.</span></span>


    <span data-ttu-id="4527f-158">\[[Ensemble d'API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4527f-158">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onActivated
  fullName: onActivated
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onActivated: OfficeExtension.EventHandlers<Excel.ChartActivatedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.ChartActivatedEventArgs>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4527f-159\">範例</span><span class=\"sxs-lookup\"><span data-stu-id=\"4527f-159\">Examples</span></span>\n\n```javascript\nExcel.run(function (context){\n    context.workbook.worksheets.getActiveWorksheet()\n        .charts.onActivated.add(function (event) {\n        return Excel.run((context) => {\n            console.log(\"The ID of the active chart is: \" + event.chartId)\n            return context.sync();\n        });\n    });\n    return context.sync();\n});\n```"
- uid: excel_release.Excel.ChartCollection.onAdded
  summary: >-
    <span data-ttu-id="4527f-160">SurVient lors de l'ajout d'un nouveau graphique à la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="4527f-160">Occurs when a new chart is added to the worksheet.</span></span>


    <span data-ttu-id="4527f-161">\[[Ensemble d'API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4527f-161">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onAdded
  fullName: onAdded
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onAdded: OfficeExtension.EventHandlers<Excel.ChartAddedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.ChartAddedEventArgs>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4527f-162\">範例</span><span class=\"sxs-lookup\"><span data-stu-id=\"4527f-162\">Examples</span></span>\n\n```javascript\nExcel.run(function (context){\n    context.workbook.worksheets.getActiveWorksheet()\n        .charts.onAdded.add(function (event) {\n        return Excel.run((context) => {\n            console.log(\"A chart has been added with ID: \" + event.chartId);\n            return context.sync();\n        });\n    });\n    return context.sync();\n});\n```"
- uid: excel_release.Excel.ChartCollection.onDeactivated
  summary: >-
    <span data-ttu-id="4527f-163">Se produit lorsqu'un graphique est désactivé.</span><span class="sxs-lookup"><span data-stu-id="4527f-163">Occurs when a chart is deactivated.</span></span>


    <span data-ttu-id="4527f-164">\[[Ensemble d'API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4527f-164">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onDeactivated
  fullName: onDeactivated
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onDeactivated: OfficeExtension.EventHandlers<Excel.ChartDeactivatedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.ChartDeactivatedEventArgs>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4527f-165\">範例</span><span class=\"sxs-lookup\"><span data-stu-id=\"4527f-165\">Examples</span></span>\n\n```javascript\nExcel.run(function (context){\n    context.workbook.worksheets.getActiveWorksheet()\n        .charts.onDeactivated.add(function (event) {\n        return Excel.run((context) => {\n            console.log(\"The chart with this ID was deactivated: \" + event.chartId);\n            return context.sync();\n        });\n    });\n    return context.sync();\n});\n```"
- uid: excel_release.Excel.ChartCollection.onDeleted
  summary: >-
    <span data-ttu-id="4527f-166">SurVient lors de la suppression d'un graphique.</span><span class="sxs-lookup"><span data-stu-id="4527f-166">Occurs when a chart is deleted.</span></span>


    <span data-ttu-id="4527f-167">\[[Ensemble d'API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4527f-167">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onDeleted
  fullName: onDeleted
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onDeleted: OfficeExtension.EventHandlers<Excel.ChartDeletedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.ChartDeletedEventArgs>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4527f-168\">範例</span><span class=\"sxs-lookup\"><span data-stu-id=\"4527f-168\">Examples</span></span>\n\n```javascript\nExcel.run(function (context){\n    context.workbook.worksheets.getActiveWorksheet()\n        .charts.onDeleted.add(function (event) {\n        return Excel.run((context) => {\n            console.log(\"The chart with this ID was deleted: \" + event.chartId);\n            return context.sync();\n        });\n    });\n    return context.sync();\n});\n```"
- uid: excel_release.Excel.ChartCollection.toJSON
  summary: <span data-ttu-id="4527f-169">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu'un objet d'API est transmis à. `JSON.stringify()` <!-- --></span><span class="sxs-lookup"><span data-stu-id="4527f-169">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="4527f-170">(`JSON.stringify`<!-- -->, à son tour, appelle `toJSON` la méthode de l'objet qui lui est passé.) Tandis que `Excel.ChartCollection` l'objet d'origine est un objet `toJSON` d'API, la méthode renvoie un objet JavaScript `Excel.Interfaces.ChartCollectionData` <!-- -->simple (tapé sous la forme) qui contient un tableau d'éléments avec des copies superficielles de toutes les propriétés chargées des éléments de la collection.</span><span class="sxs-lookup"><span data-stu-id="4527f-170">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.ChartCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ChartCollectionData`<!-- -->) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ChartCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.ChartCollectionData
      description: ''
