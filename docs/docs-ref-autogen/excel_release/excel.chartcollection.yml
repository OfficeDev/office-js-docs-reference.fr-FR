### YamlMime:UniversalReference
items:
  - uid: excel_release.Excel.ChartCollection
    summary: |-
      <span data-ttu-id="380b1-101">Collection de tous les objets de graphique d’une feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="380b1-101">A collection of all the chart objects on a worksheet.</span></span>

      <span data-ttu-id="380b1-102">\[[Ensemble d'API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="380b1-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.ChartCollection
    fullName: Excel.ChartCollection
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel_release
    children:
      - excel_release.Excel.ChartCollection.add
      - excel_release.Excel.ChartCollection.add_1
      - excel_release.Excel.ChartCollection.context
      - excel_release.Excel.ChartCollection.count
      - excel_release.Excel.ChartCollection.getCount
      - excel_release.Excel.ChartCollection.getItem
      - excel_release.Excel.ChartCollection.getItemAt
      - excel_release.Excel.ChartCollection.getItemOrNullObject
      - excel_release.Excel.ChartCollection.items
      - excel_release.Excel.ChartCollection.load
      - excel_release.Excel.ChartCollection.load_1
      - excel_release.Excel.ChartCollection.load_2
      - excel_release.Excel.ChartCollection.onActivated
      - excel_release.Excel.ChartCollection.onAdded
      - excel_release.Excel.ChartCollection.onDeactivated
      - excel_release.Excel.ChartCollection.onDeleted
      - excel_release.Excel.ChartCollection.toJSON
  - uid: excel_release.Excel.ChartCollection.add
    summary: |-
      <span data-ttu-id="380b1-103">Crée un graphique.</span><span class="sxs-lookup"><span data-stu-id="380b1-103">Creates a new chart.</span></span>

      <span data-ttu-id="380b1-104">\[[Ensemble d'API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="380b1-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'add(type, sourceData, seriesBy)'
    fullName: 'add(type, sourceData, seriesBy)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(type: Excel.ChartType, sourceData: Range, seriesBy?: Excel.ChartSeriesBy): Excel.Chart;'
      return:
        type:
          - excel.Excel.Chart
        description: ''
      parameters:
        - id: type
          description: '<span data-ttu-id="380b1-105">Représente le type d’un graphique.</span><span class="sxs-lookup"><span data-stu-id="380b1-105">Represents the type of a chart.</span></span> <span data-ttu-id="380b1-106">Pour plus d''informations, voir Excel. ChartType.</span><span class="sxs-lookup"><span data-stu-id="380b1-106">See Excel.ChartType for details.</span></span>'
          type:
            - excel.Excel.ChartType
        - id: sourceData
          description: <span data-ttu-id="380b1-107">Objet Range correspondant aux données source.</span><span class="sxs-lookup"><span data-stu-id="380b1-107">The Range object corresponding to the source data.</span></span>
          type:
            - Range
        - id: seriesBy
          description: '<span data-ttu-id="380b1-108">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="380b1-108">Optional.</span></span> <span data-ttu-id="380b1-109">Spécifie la façon dont les colonnes ou les lignes sont utilisées comme séries de données sur le graphique.</span><span class="sxs-lookup"><span data-stu-id="380b1-109">Specifies the way columns or rows are used as data series on the chart.</span></span> <span data-ttu-id="380b1-110">Pour plus d''informations, voir Excel. ChartSeriesBy.</span><span class="sxs-lookup"><span data-stu-id="380b1-110">See Excel.ChartSeriesBy for details.</span></span>'
          type:
            - excel.Excel.ChartSeriesBy
  - uid: excel_release.Excel.ChartCollection.add_1
    summary: |-
      <span data-ttu-id="380b1-111">Crée un graphique.</span><span class="sxs-lookup"><span data-stu-id="380b1-111">Creates a new chart.</span></span>

      <span data-ttu-id="380b1-112">\[[Ensemble d'API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="380b1-112">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'add(typeString, sourceData, seriesBy)'
    fullName: 'add(typeString, sourceData, seriesBy)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(typeString: "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel", sourceData: Range, seriesBy?: "Auto" | "Columns" | "Rows"): Excel.Chart;'
      return:
        type:
          - excel.Excel.Chart
        description: |-


          #### <a name="examples"></a><span data-ttu-id="380b1-113">Exemples</span><span class="sxs-lookup"><span data-stu-id="380b1-113">Examples</span></span>

          ```javascript
          // Add a chart of chartType "ColumnClustered" on worksheet "Charts" 
          // with sourceData from Range "A1:B4" and seriresBy is set to be "auto".
          Excel.run(function (ctx) { 
              var rangeSelection = "A1:B4";
              var range = ctx.workbook.worksheets.getItem(sheetName)
                  .getRange(rangeSelection);
              var chart = ctx.workbook.worksheets.getItem(sheetName)
                  .charts.add("ColumnClustered", range, "auto");    return ctx.sync().then(function() {
                      console.log("New Chart Added");
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: typeString
          description: '<span data-ttu-id="380b1-114">Représente le type d’un graphique.</span><span class="sxs-lookup"><span data-stu-id="380b1-114">Represents the type of a chart.</span></span> <span data-ttu-id="380b1-115">Pour plus d''informations, voir Excel. ChartType.</span><span class="sxs-lookup"><span data-stu-id="380b1-115">See Excel.ChartType for details.</span></span>'
          type:
            - '"Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel"'
        - id: sourceData
          description: <span data-ttu-id="380b1-116">Objet Range correspondant aux données source.</span><span class="sxs-lookup"><span data-stu-id="380b1-116">The Range object corresponding to the source data.</span></span>
          type:
            - Range
        - id: seriesBy
          description: '<span data-ttu-id="380b1-117">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="380b1-117">Optional.</span></span> <span data-ttu-id="380b1-118">Spécifie la façon dont les colonnes ou les lignes sont utilisées comme séries de données sur le graphique.</span><span class="sxs-lookup"><span data-stu-id="380b1-118">Specifies the way columns or rows are used as data series on the chart.</span></span> <span data-ttu-id="380b1-119">Pour plus d''informations, voir Excel. ChartSeriesBy.</span><span class="sxs-lookup"><span data-stu-id="380b1-119">See Excel.ChartSeriesBy for details.</span></span>'
          type:
            - '"Auto" | "Columns" | "Rows"'
  - uid: excel_release.Excel.ChartCollection.context
    summary: <span data-ttu-id="380b1-120">Contexte de demande associé à l'objet.</span><span class="sxs-lookup"><span data-stu-id="380b1-120">The request context associated with the object.</span></span> <span data-ttu-id="380b1-121">Cette opération connecte le processus du complément au processus de l'application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="380b1-121">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel_release.Excel.ChartCollection.count
    summary: |-
      <span data-ttu-id="380b1-122">Renvoie le nombre de graphiques dans la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="380b1-122">Returns the number of charts in the worksheet.</span></span> <span data-ttu-id="380b1-123">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="380b1-123">Read-only.</span></span>

      <span data-ttu-id="380b1-124">\[[Ensemble d'API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="380b1-124">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.ChartCollection.getCount
    summary: |-
      <span data-ttu-id="380b1-125">Renvoie le nombre de graphiques dans la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="380b1-125">Returns the number of charts in the worksheet.</span></span>

      <span data-ttu-id="380b1-126">\[[Ensemble d'API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="380b1-126">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: excel_release.Excel.ChartCollection.getItem
    summary: |-
      <span data-ttu-id="380b1-127">Extrait un graphique à l’aide de son nom.</span><span class="sxs-lookup"><span data-stu-id="380b1-127">Gets a chart using its name.</span></span> <span data-ttu-id="380b1-128">Si plusieurs graphiques portent le même nom, c’est le premier d’entre eux qui est renvoyé.</span><span class="sxs-lookup"><span data-stu-id="380b1-128">If there are multiple charts with the same name, the first one will be returned.</span></span>

      <span data-ttu-id="380b1-129">\[[Ensemble d'API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="380b1-129">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItem(name)
    fullName: getItem(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(name: string): Excel.Chart;'
      return:
        type:
          - excel.Excel.Chart
        description: |-


          #### <a name="examples"></a><span data-ttu-id="380b1-130">Exemples</span><span class="sxs-lookup"><span data-stu-id="380b1-130">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var chartname = 'Chart1';
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem(chartname);
              return ctx.sync().then(function() {
                      console.log(chart.height);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          Excel.run(function (ctx) { 
              var chartId = 'SampleChartId';
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem(chartId);
              return ctx.sync().then(function() {
                      console.log(chart.height);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          Excel.run(function (ctx) { 
              var lastPosition = ctx.workbook.worksheets.getItem("Sheet1").charts.count - 1;
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItemAt(lastPosition);
              return ctx.sync().then(function() {
                      console.log(chart.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: name
          description: <span data-ttu-id="380b1-131">Nom du graphique à extraire.</span><span class="sxs-lookup"><span data-stu-id="380b1-131">Name of the chart to be retrieved.</span></span>
          type:
            - string
  - uid: excel_release.Excel.ChartCollection.getItemAt
    summary: |-
      <span data-ttu-id="380b1-132">Extrait un graphique en fonction de sa position dans la collection.</span><span class="sxs-lookup"><span data-stu-id="380b1-132">Gets a chart based on its position in the collection.</span></span>

      <span data-ttu-id="380b1-133">\[[Ensemble d'API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="380b1-133">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.Chart;'
      return:
        type:
          - excel.Excel.Chart
        description: |-


          #### <a name="examples"></a><span data-ttu-id="380b1-134">Exemples</span><span class="sxs-lookup"><span data-stu-id="380b1-134">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var lastPosition = ctx.workbook.worksheets.getItem("Sheet1").charts.count - 1;
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItemAt(lastPosition);
              return ctx.sync().then(function() {
                      console.log(chart.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: <span data-ttu-id="380b1-135">Valeur d’indice de l’objet à récupérer.</span><span class="sxs-lookup"><span data-stu-id="380b1-135">Index value of the object to be retrieved.</span></span> <span data-ttu-id="380b1-136">Avec indice zéro.</span><span class="sxs-lookup"><span data-stu-id="380b1-136">Zero-indexed.</span></span>
          type:
            - number
  - uid: excel_release.Excel.ChartCollection.getItemOrNullObject
    summary: |-
      <span data-ttu-id="380b1-137">Extrait un graphique à l’aide de son nom.</span><span class="sxs-lookup"><span data-stu-id="380b1-137">Gets a chart using its name.</span></span> <span data-ttu-id="380b1-138">Si plusieurs graphiques portent le même nom, c’est le premier d’entre eux qui est renvoyé.</span><span class="sxs-lookup"><span data-stu-id="380b1-138">If there are multiple charts with the same name, the first one will be returned.</span></span> <span data-ttu-id="380b1-139">Si le graphique n'existe pas, renvoie un objet null.</span><span class="sxs-lookup"><span data-stu-id="380b1-139">If the chart does not exist, will return a null object.</span></span>

      <span data-ttu-id="380b1-140">\[[Ensemble d'API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="380b1-140">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemOrNullObject(name)
    fullName: getItemOrNullObject(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(name: string): Excel.Chart;'
      return:
        type:
          - excel.Excel.Chart
        description: ''
      parameters:
        - id: name
          description: <span data-ttu-id="380b1-141">Nom du graphique à extraire.</span><span class="sxs-lookup"><span data-stu-id="380b1-141">Name of the chart to be retrieved.</span></span>
          type:
            - string
  - uid: excel_release.Excel.ChartCollection.items
    summary: <span data-ttu-id="380b1-142">Obtient l’élément enfant chargé dans cette collection de sites.</span><span class="sxs-lookup"><span data-stu-id="380b1-142">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Chart[];'
      return:
        type:
          - 'Excel.Chart[]'
  - uid: excel_release.Excel.ChartCollection.load
    summary: "<span data-ttu-id=\"380b1-143\">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"380b1-143\">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id=\"380b1-144\">Vous devez appeler «\_context.sync()\_» avant de lire les propriétés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"380b1-144\">You must call \"context.sync()\" before reading the properties.</span></span>"
    remarks: |-
      <span data-ttu-id="380b1-145">En plus de cette signature, cette méthode possède les signatures suivantes:</span><span class="sxs-lookup"><span data-stu-id="380b1-145">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="380b1-146">`load(option?: string | string[]): Excel.ChartCollection`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="380b1-146">`load(option?: string | string[]): Excel.ChartCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="380b1-147">`load(option?: { select?: string; expand?: string; }): Excel.ChartCollection`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="380b1-147">`load(option?: { select?: string; expand?: string; }): Excel.ChartCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="380b1-148">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartCollection`-Uniquement disponible sur les types de collection.</span><span class="sxs-lookup"><span data-stu-id="380b1-148">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartCollection` - Only available on collection types.</span></span> <span data-ttu-id="380b1-149">Elle est similaire à la signature précédente.</span><span class="sxs-lookup"><span data-stu-id="380b1-149">It is similar to the preceding signature.</span></span> <span data-ttu-id="380b1-150">Option. Top indique le nombre maximal d'éléments de collection qui peuvent être inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="380b1-150">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="380b1-151">Option. Skip indique le nombre d'éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="380b1-151">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="380b1-152">Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d'éléments.</span><span class="sxs-lookup"><span data-stu-id="380b1-152">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ChartCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.ChartCollection;'
      return:
        type:
          - excel.Excel.ChartCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.ChartCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel_release.Excel.ChartCollection.load_1
    summary: <span data-ttu-id="380b1-153">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="380b1-153">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="380b1-154">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="380b1-154">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ChartCollection;'
      return:
        type:
          - excel.Excel.ChartCollection
        description: |-


          #### <a name="examples"></a><span data-ttu-id="380b1-155">Exemples</span><span class="sxs-lookup"><span data-stu-id="380b1-155">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var charts = ctx.workbook.worksheets.getItem("Sheet1").charts;
              charts.load('items');
              return ctx.sync().then(function() {
                  for (var i = 0; i < charts.items.length; i++)
                  {
                      console.log(charts.items[i].name);
                  }
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Get the number of charts
          Excel.run(function (ctx) { 
              var charts = ctx.workbook.worksheets.getItem("Sheet1").charts;
              charts.load('count');
              return ctx.sync().then(function() {
                  console.log("charts: Count= " + charts.count);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="380b1-156">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="380b1-156">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel_release.Excel.ChartCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.ChartCollection;'
      return:
        type:
          - excel.Excel.ChartCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - office.OfficeExtension.LoadOption
  - uid: excel_release.Excel.ChartCollection.onActivated
    summary: |-
      <span data-ttu-id="380b1-157">Se produit lorsqu'un graphique est activé.</span><span class="sxs-lookup"><span data-stu-id="380b1-157">Occurs when a chart is activated.</span></span>

      <span data-ttu-id="380b1-158">\[[Ensemble d'API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="380b1-158">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onActivated
    fullName: onActivated
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onActivated: OfficeExtension.EventHandlers<Excel.ChartActivatedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.ChartActivatedEventArgs>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="380b1-159">Exemples</span><span class="sxs-lookup"><span data-stu-id="380b1-159">Examples</span></span>

          ```javascript
          Excel.run(function (context){
              context.workbook.worksheets.getActiveWorksheet()
                  .charts.onActivated.add(function (event) {
                  return Excel.run((context) => {
                      console.log("The ID of the active chart is: " + event.chartId)
                      return context.sync();
                  });
              });
              return context.sync();
          });
          ```
  - uid: excel_release.Excel.ChartCollection.onAdded
    summary: |-
      <span data-ttu-id="380b1-160">SurVient lors de l'ajout d'un nouveau graphique à la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="380b1-160">Occurs when a new chart is added to the worksheet.</span></span>

      <span data-ttu-id="380b1-161">\[[Ensemble d'API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="380b1-161">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onAdded
    fullName: onAdded
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onAdded: OfficeExtension.EventHandlers<Excel.ChartAddedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.ChartAddedEventArgs>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="380b1-162">Exemples</span><span class="sxs-lookup"><span data-stu-id="380b1-162">Examples</span></span>

          ```javascript
          Excel.run(function (context){
              context.workbook.worksheets.getActiveWorksheet()
                  .charts.onAdded.add(function (event) {
                  return Excel.run((context) => {
                      console.log("A chart has been added with ID: " + event.chartId);
                      return context.sync();
                  });
              });
              return context.sync();
          });
          ```
  - uid: excel_release.Excel.ChartCollection.onDeactivated
    summary: |-
      <span data-ttu-id="380b1-163">Se produit lorsqu'un graphique est désactivé.</span><span class="sxs-lookup"><span data-stu-id="380b1-163">Occurs when a chart is deactivated.</span></span>

      <span data-ttu-id="380b1-164">\[[Ensemble d'API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="380b1-164">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onDeactivated
    fullName: onDeactivated
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onDeactivated: OfficeExtension.EventHandlers<Excel.ChartDeactivatedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.ChartDeactivatedEventArgs>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="380b1-165">Exemples</span><span class="sxs-lookup"><span data-stu-id="380b1-165">Examples</span></span>

          ```javascript
          Excel.run(function (context){
              context.workbook.worksheets.getActiveWorksheet()
                  .charts.onDeactivated.add(function (event) {
                  return Excel.run((context) => {
                      console.log("The chart with this ID was deactivated: " + event.chartId);
                      return context.sync();
                  });
              });
              return context.sync();
          });
          ```
  - uid: excel_release.Excel.ChartCollection.onDeleted
    summary: |-
      <span data-ttu-id="380b1-166">SurVient lors de la suppression d'un graphique.</span><span class="sxs-lookup"><span data-stu-id="380b1-166">Occurs when a chart is deleted.</span></span>

      <span data-ttu-id="380b1-167">\[[Ensemble d'API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="380b1-167">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onDeleted
    fullName: onDeleted
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onDeleted: OfficeExtension.EventHandlers<Excel.ChartDeletedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.ChartDeletedEventArgs>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="380b1-168">Exemples</span><span class="sxs-lookup"><span data-stu-id="380b1-168">Examples</span></span>

          ```javascript
          Excel.run(function (context){
              context.workbook.worksheets.getActiveWorksheet()
                  .charts.onDeleted.add(function (event) {
                  return Excel.run((context) => {
                      console.log("The chart with this ID was deleted: " + event.chartId);
                      return context.sync();
                  });
              });
              return context.sync();
          });
          ```
  - uid: excel_release.Excel.ChartCollection.toJSON
    summary: '<span data-ttu-id="380b1-169">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu''un objet d''API est transmis à`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="380b1-169">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="380b1-170">.</span><span class="sxs-lookup"><span data-stu-id="380b1-170"></span></span> <span data-ttu-id="380b1-171">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="380b1-171"></span></span><!-- --><span data-ttu-id="380b1-172">, à son tour, appelle `toJSON` la méthode de l''objet qui lui est passé.) Tandis que `Excel.ChartCollection` l''objet d''origine est un objet `toJSON` d''API, la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.ChartCollectionData`</span><span class="sxs-lookup"><span data-stu-id="380b1-172">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.ChartCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ChartCollectionData`</span></span><!-- --><span data-ttu-id="380b1-173">) qui contient un tableau «éléments» avec des copies superficielles de toutes les propriétés chargées des éléments de la collection.</span><span class="sxs-lookup"><span data-stu-id="380b1-173">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ChartCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.ChartCollectionData
        description: ''