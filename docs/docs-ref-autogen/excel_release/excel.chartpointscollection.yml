### YamlMime:UniversalReference
ms.openlocfilehash: 96c7a20d063ecf21925b8d6d4973e378c02fcb5c
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 02/20/2019
ms.locfileid: "30114910"
items:
- uid: excel_release.Excel.ChartPointsCollection
  summary: >-
    <span data-ttu-id="6118d-101">Collection de tous les points d’une série sur un graphique.</span><span class="sxs-lookup"><span data-stu-id="6118d-101">A collection of all the chart points within a series inside a chart.</span></span>


    <span data-ttu-id="6118d-102">\[[Ensemble d'API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6118d-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.ChartPointsCollection
  fullName: Excel.ChartPointsCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.ChartPointsCollection.context
  - excel_release.Excel.ChartPointsCollection.count
  - excel_release.Excel.ChartPointsCollection.getCount
  - excel_release.Excel.ChartPointsCollection.getItemAt
  - excel_release.Excel.ChartPointsCollection.items
  - excel_release.Excel.ChartPointsCollection.load
  - excel_release.Excel.ChartPointsCollection.load_1
  - excel_release.Excel.ChartPointsCollection.load_2
  - excel_release.Excel.ChartPointsCollection.toJSON
- uid: excel_release.Excel.ChartPointsCollection.context
  summary: <span data-ttu-id="6118d-103">Contexte de demande associé à l'objet.</span><span class="sxs-lookup"><span data-stu-id="6118d-103">The request context associated with the object.</span></span> <span data-ttu-id="6118d-104">Cette opération connecte le processus du complément au processus de l'application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="6118d-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.ChartPointsCollection.count
  summary: >-
    <span data-ttu-id="6118d-p102">Renvoie le nombre de points de graphique dans la série. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="6118d-p102">Returns the number of chart points in the series. Read-only.</span></span>


    <span data-ttu-id="6118d-107">\[[Ensemble d'API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6118d-107">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: count
  fullName: count
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly count: number;'
    return:
      type:
      - number
- uid: excel_release.Excel.ChartPointsCollection.getCount
  summary: >-
    <span data-ttu-id="6118d-108">Renvoie le nombre de points de graphique dans la série.</span><span class="sxs-lookup"><span data-stu-id="6118d-108">Returns the number of chart points in the series.</span></span>


    <span data-ttu-id="6118d-109">\[[Ensemble d'API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6118d-109">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel_release.Excel.ChartPointsCollection.getItemAt
  summary: >-
    <span data-ttu-id="6118d-110">Extrait un point en fonction de sa position dans la série.</span><span class="sxs-lookup"><span data-stu-id="6118d-110">Retrieve a point based on its position within the series.</span></span>


    <span data-ttu-id="6118d-111">\[[Ensemble d'API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6118d-111">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemAt(index)
  fullName: getItemAt(index)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): Excel.ChartPoint;'
    return:
      type:
      - excel.Excel.ChartPoint
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"6118d-112\">範例</span><span class=\"sxs-lookup\"><span data-stu-id=\"6118d-112\">Examples</span></span>\n\n```javascript\n// Set the border color for the first points in the points collection\nExcel.run(function (ctx) { \n    var points = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\").series.getItemAt(0).points;\n    points.getItemAt(0).format.fill.setSolidColor(\"8FBC8F\");\n    return ctx.sync().then(function() {\n        console.log(\"Point Border Color Changed\");\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="6118d-p103">Valeur d’indice de l’objet à récupérer. Avec indice zéro.</span><span class="sxs-lookup"><span data-stu-id="6118d-p103">Index value of the object to be retrieved. Zero-indexed.</span></span>
      type:
      - number
- uid: excel_release.Excel.ChartPointsCollection.items
  summary: <span data-ttu-id="6118d-115">Obtient les éléments enfants chargés dans cette collection.</span><span class="sxs-lookup"><span data-stu-id="6118d-115">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.ChartPoint[];'
    return:
      type:
      - Excel.ChartPoint[]
- uid: excel_release.Excel.ChartPointsCollection.load
  summary: <span data-ttu-id="6118d-116">Met en file d'attente une commande pour charger les propriétés spécifiées de l'objet.</span><span class="sxs-lookup"><span data-stu-id="6118d-116">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="6118d-117">Vous devez appeler «Context. Sync ()» avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="6118d-117">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="6118d-118">En plus de cette signature, cette méthode possède les signatures suivantes:</span><span class="sxs-lookup"><span data-stu-id="6118d-118">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="6118d-119">`load(option?: string | string[]): Excel.ChartPointsCollection`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="6118d-119">`load(option?: string | string[]): Excel.ChartPointsCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="6118d-120">`load(option?: { select?: string; expand?: string; }): Excel.ChartPointsCollection`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="6118d-120">`load(option?: { select?: string; expand?: string; }): Excel.ChartPointsCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="6118d-121">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartPointsCollection`-Uniquement disponible sur les types de collection.</span><span class="sxs-lookup"><span data-stu-id="6118d-121">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartPointsCollection` - Only available on collection types.</span></span> <span data-ttu-id="6118d-122">Elle est similaire à la signature précédente.</span><span class="sxs-lookup"><span data-stu-id="6118d-122">It is similar to the preceding signature.</span></span> <span data-ttu-id="6118d-123">Option. Top indique le nombre maximal d'éléments de collection qui peuvent être inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="6118d-123">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="6118d-124">Option. Skip indique le nombre d'éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="6118d-124">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="6118d-125">Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d'éléments.</span><span class="sxs-lookup"><span data-stu-id="6118d-125">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.ChartPointsCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.ChartPointsCollection;'
    return:
      type:
      - excel.Excel.ChartPointsCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Excel.Interfaces.ChartPointsCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
- uid: excel_release.Excel.ChartPointsCollection.load_1
  summary: <span data-ttu-id="6118d-126">Met en file d'attente une commande pour charger les propriétés spécifiées de l'objet.</span><span class="sxs-lookup"><span data-stu-id="6118d-126">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="6118d-127">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="6118d-127">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.ChartPointsCollection;'
    return:
      type:
      - excel.Excel.ChartPointsCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"6118d-128\">範例</span><span class=\"sxs-lookup\"><span data-stu-id=\"6118d-128\">Examples</span></span>\n\n```javascript\n// Get the names of points in the points collection\nExcel.run(function (ctx) { \n    var pointsCollection = \n        ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\").series.getItemAt(0).points;\n    pointsCollection.load('items');\n    return ctx.sync().then(function() {\n        console.log(\"Points Collection loaded\");\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// Get the number of points\nExcel.run(function (ctx) { \n    var pointsCollection = \n        ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\").series.getItemAt(0).points;\n    pointsCollection.load('count');\n    return ctx.sync().then(function() {\n        console.log(\"points: Count= \" + pointsCollection.count);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="6118d-129">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="6118d-129">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel_release.Excel.ChartPointsCollection.load_2
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Excel.ChartPointsCollection;'
    return:
      type:
      - excel.Excel.ChartPointsCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: excel_release.Excel.ChartPointsCollection.toJSON
  summary: <span data-ttu-id="6118d-130">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu'un objet d'API est transmis à. `JSON.stringify()` <!-- --></span><span class="sxs-lookup"><span data-stu-id="6118d-130">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="6118d-131">(`JSON.stringify`<!-- -->, à son tour, appelle `toJSON` la méthode de l'objet qui lui est passé.) Tandis que `Excel.ChartPointsCollection` l'objet d'origine est un objet `toJSON` d'API, la méthode renvoie un objet JavaScript `Excel.Interfaces.ChartPointsCollectionData` <!-- -->simple (tapé sous la forme) qui contient un tableau d'éléments avec des copies superficielles de toutes les propriétés chargées des éléments de la collection.</span><span class="sxs-lookup"><span data-stu-id="6118d-131">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.ChartPointsCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ChartPointsCollectionData`<!-- -->) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ChartPointsCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.ChartPointsCollectionData
      description: ''
