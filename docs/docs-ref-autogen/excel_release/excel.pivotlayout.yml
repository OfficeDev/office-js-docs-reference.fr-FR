### YamlMime:UniversalReference
items:
  - uid: excel_release.Excel.PivotLayout
    summary: |-
      Représente la disposition visuelle du tableau croisé dynamique.

      \[[Ensemble d’API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.PivotLayout
    fullName: Excel.PivotLayout
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel_release
    children:
      - excel_release.Excel.PivotLayout.autoFormat
      - excel_release.Excel.PivotLayout.context
      - excel_release.Excel.PivotLayout.getColumnLabelRange
      - excel_release.Excel.PivotLayout.getDataBodyRange
      - excel_release.Excel.PivotLayout.getDataHierarchy
      - excel_release.Excel.PivotLayout.getFilterAxisRange
      - excel_release.Excel.PivotLayout.getPivotItems
      - excel_release.Excel.PivotLayout.getPivotItems_1
      - excel_release.Excel.PivotLayout.getRange
      - excel_release.Excel.PivotLayout.getRowLabelRange
      - excel_release.Excel.PivotLayout.layoutType
      - excel_release.Excel.PivotLayout.load
      - excel_release.Excel.PivotLayout.load_1
      - excel_release.Excel.PivotLayout.load_2
      - excel_release.Excel.PivotLayout.preserveFormatting
      - excel_release.Excel.PivotLayout.set
      - excel_release.Excel.PivotLayout.set_1
      - excel_release.Excel.PivotLayout.setAutoSortOnCell
      - excel_release.Excel.PivotLayout.setAutoSortOnCell_1
      - excel_release.Excel.PivotLayout.showColumnGrandTotals
      - excel_release.Excel.PivotLayout.showRowGrandTotals
      - excel_release.Excel.PivotLayout.subtotalLocation
      - excel_release.Excel.PivotLayout.toJSON
  - uid: excel_release.Excel.PivotLayout.autoFormat
    summary: |-
      Indique si la mise en forme est automatiquement mise en forme lorsqu’elle est actualisée ou lorsque des champs sont déplacés.

      \[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: autoFormat
    fullName: autoFormat
    langs:
      - typeScript
    type: property
    syntax:
      content: 'autoFormat: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.PivotLayout.context
    summary: Contexte de demande associé à l’objet. Cette opération connecte le processus du complément au processus de l’application hôte Office.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel_release.Excel.PivotLayout.getColumnLabelRange
    summary: |-
      Renvoie la plage où les étiquettes de colonnes de tableau croisé dynamique se trouvent.

      \[[Ensemble d’API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getColumnLabelRange()
    fullName: getColumnLabelRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getColumnLabelRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
  - uid: excel_release.Excel.PivotLayout.getDataBodyRange
    summary: |-
      Renvoie la plage où les valeurs de données de tableau croisé dynamique se trouvent.

      \[[Ensemble d’API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getDataBodyRange()
    fullName: getDataBodyRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDataBodyRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a>Exemples

          ```typescript
          await Excel.run(async (context) => {
              const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");

              // the layout controls the ranges used by the PivotTable
              const range = pivotTable.layout.getDataBodyRange();

              // get all the data hierarchy totals
              const grandTotalRange = range.getLastRow();
              grandTotalRange.load("address");
              await context.sync();
              
              // use the wholesale and farm sale totals to make a final sum
              const masterTotalRange = context.workbook.worksheets.getActiveWorksheet().getRange("B27:C27");
              masterTotalRange.formulas = [["All Crates", "=SUM(" + grandTotalRange.address + ")"]];
              await context.sync();
          });
          ```
  - uid: excel_release.Excel.PivotLayout.getDataHierarchy
    summary: |-
      Obtient DataHierarchy servant à calculer la valeur dans une plage spécifiée dans le tableau croisé dynamique.

      \[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getDataHierarchy(cell)
    fullName: getDataHierarchy(cell)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDataHierarchy(cell: Range | string): Excel.DataPivotHierarchy;'
      return:
        type:
          - excel.Excel.DataPivotHierarchy
        description: Objet DataPivotHierarchy utilisé pour calculer la valeur dans la cellule spécifiée.
      parameters:
        - id: cell
          description: Cellule unique dans le corps de données du tableau croisé dynamique.
          type:
            - Range | string
  - uid: excel_release.Excel.PivotLayout.getFilterAxisRange
    summary: |-
      Renvoie la plage de la zone de filtre de tableau croisé dynamique.

      \[[Ensemble d’API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getFilterAxisRange()
    fullName: getFilterAxisRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFilterAxisRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
  - uid: excel_release.Excel.PivotLayout.getPivotItems
    summary: |-
      Obtient le PivotItems à partir d’un axe qui composent la valeur dans une plage spécifiée dans le tableau croisé dynamique.

      \[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'getPivotItems(axis, cell)'
    fullName: 'getPivotItems(axis, cell)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPivotItems(axis: Excel.PivotAxis, cell: Range | string): OfficeExtension.ClientResult<Excel.PivotItem[]>;'
      return:
        type:
          - 'OfficeExtension.ClientResult<Excel.PivotItem[]>'
        description: Collection de PivotItems qui sont utilisées pour calculer les valeurs de la ligne spécifiée.
      parameters:
        - id: axis
          description: L’axe à partir duquel obtenir le PivotItems. Doit être «ligne» ou «colonne».
          type:
            - excel.Excel.PivotAxis
        - id: cell
          description: Cellule unique dans le corps des données du tableau croisé dynamique.
          type:
            - Range | string
  - uid: excel_release.Excel.PivotLayout.getPivotItems_1
    summary: |-
      Obtient le PivotItems à partir d’un axe qui composent la valeur dans une plage spécifiée dans le tableau croisé dynamique.

      \[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'getPivotItems(axisString, cell)'
    fullName: 'getPivotItems(axisString, cell)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPivotItems(axisString: "Unknown" | "Row" | "Column" | "Data" | "Filter", cell: Range | string): OfficeExtension.ClientResult<Excel.PivotItem[]>;'
      return:
        type:
          - 'OfficeExtension.ClientResult<Excel.PivotItem[]>'
        description: Collection de PivotItems qui sont utilisées pour calculer les valeurs de la ligne spécifiée.
      parameters:
        - id: axisString
          description: L’axe à partir duquel obtenir le PivotItems. Doit être «ligne» ou «colonne».
          type:
            - '"Unknown" | "Row" | "Column" | "Data" | "Filter"'
        - id: cell
          description: Cellule unique dans le corps des données du tableau croisé dynamique.
          type:
            - Range | string
  - uid: excel_release.Excel.PivotLayout.getRange
    summary: |-
      Renvoie la plage sur laquelle le tableau croisé dynamique existe, à l’exception de la zone de filtre.

      \[[Ensemble d’API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
  - uid: excel_release.Excel.PivotLayout.getRowLabelRange
    summary: |-
      Renvoie la plage où les étiquettes de lignes de tableau croisé dynamique se trouvent.

      \[[Ensemble d’API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getRowLabelRange()
    fullName: getRowLabelRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRowLabelRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
  - uid: excel_release.Excel.PivotLayout.layoutType
    summary: |-
      Cette propriété indique le PivotLayoutType de tous les champs sur le tableau croisé dynamique. Si les champs ont des états différents, la valeur sera null.

      \[[Ensemble d’API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: layoutType
    fullName: layoutType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'layoutType: Excel.PivotLayoutType | "Compact" | "Tabular" | "Outline";'
      return:
        type:
          - Excel.PivotLayoutType | "Compact" | "Tabular" | "Outline"
  - uid: excel_release.Excel.PivotLayout.load
    summary: "Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez appeler «\_context.sync()\_» avant de lire les propriétés."
    remarks: |-
      En plus de cette signature, cette méthode possède les signatures suivantes:

      `load(option?: string | string[]): Excel.PivotLayout`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.

      `load(option?: { select?: string; expand?: string; }): Excel.PivotLayout`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotLayout`-Uniquement disponible sur les types de collection. Elle est similaire à la signature précédente. Option. Top indique le nombre maximal d’éléments de collection qui peuvent être inclus dans le résultat. Option. Skip indique le nombre d’éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat. Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d’éléments.
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.PivotLayoutLoadOptions): Excel.PivotLayout;'
      return:
        type:
          - excel.Excel.PivotLayout
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.PivotLayoutLoadOptions
  - uid: excel_release.Excel.PivotLayout.load_1
    summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez appeler `context.sync()` avant de lire les propriétés.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.PivotLayout;'
      return:
        type:
          - excel.Excel.PivotLayout
        description: ''
      parameters:
        - id: propertyNames
          description: Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.
          type:
            - 'string | string[]'
  - uid: excel_release.Excel.PivotLayout.load_2
    summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez appeler `context.sync()` avant de lire les propriétés.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.PivotLayout;'
      return:
        type:
          - excel.Excel.PivotLayout
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: Où propertyNamesAndPaths. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et propertyNamesAndPaths. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel_release.Excel.PivotLayout.preserveFormatting
    summary: |-
      Indique si la mise en forme est conservée lorsque le rapport est actualisé ou recalcule par des opérations telles que le pivotement, le tri ou la modification des éléments de champ de page.

      \[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: preserveFormatting
    fullName: preserveFormatting
    langs:
      - typeScript
    type: property
    syntax:
      content: 'preserveFormatting: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.PivotLayout.set
    summary: 'Définit plusieurs propriétés d’un objet en même temps. Vous pouvez transmettre un objet plain avec les propriétés appropriées, ou un autre objet API du même type.'
    remarks: |-
      Cette méthode est dotée de la signature supplémentaire suivante:

      `set(properties: Excel.PivotLayout): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.PivotLayoutUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: Objet JavaScript avec des propriétés qui sont structurées isomorphically vers les propriétés de l’objet sur lequel la méthode est appelée.
          type:
            - Interfaces.PivotLayoutUpdateData
        - id: options
          description: Fournit une option permettant de supprimer les erreurs si l’objet Properties tente de définir des propriétés en lecture seule.
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: excel_release.Excel.PivotLayout.set_1
    summary: 'Définit plusieurs propriétés de l’objet en même temps, en fonction d’un objet chargé existant.'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.PivotLayout): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.PivotLayout
  - uid: excel_release.Excel.PivotLayout.setAutoSortOnCell
    summary: |-
      Définit le tableau croisé dynamique pour un tri automatique à l’aide de la cellule spécifiée pour sélectionner automatiquement tous les critères et le contexte nécessaires. Cela se comporte de la même manière que l’application d’un tri automatique à partir de l’interface utilisateur.

      \[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'setAutoSortOnCell(cell, sortBy)'
    fullName: 'setAutoSortOnCell(cell, sortBy)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setAutoSortOnCell(cell: Range | string, sortBy: Excel.SortBy): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: cell
          description: Une cellule unique à utiliser obtenir les critères à partir de pour appliquer le tri automatique.
          type:
            - Range | string
        - id: sortBy
          description: Sens du tri.
          type:
            - excel.Excel.SortBy
  - uid: excel_release.Excel.PivotLayout.setAutoSortOnCell_1
    summary: |-
      Définit le tableau croisé dynamique pour un tri automatique à l’aide de la cellule spécifiée pour sélectionner automatiquement tous les critères et le contexte nécessaires. Cela se comporte de la même manière que l’application d’un tri automatique à partir de l’interface utilisateur.

      \[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'setAutoSortOnCell(cell, sortByString)'
    fullName: 'setAutoSortOnCell(cell, sortByString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setAutoSortOnCell(cell: Range | string, sortByString: "Ascending" | "Descending"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: cell
          description: Une cellule unique à utiliser obtenir les critères à partir de pour appliquer le tri automatique.
          type:
            - Range | string
        - id: sortByString
          description: Sens du tri.
          type:
            - '"Ascending" | "Descending"'
  - uid: excel_release.Excel.PivotLayout.showColumnGrandTotals
    summary: |-
      Indique si le rapport de tableau croisé dynamique affiche les totaux généraux des colonnes.

      \[[Ensemble d’API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: showColumnGrandTotals
    fullName: showColumnGrandTotals
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showColumnGrandTotals: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.PivotLayout.showRowGrandTotals
    summary: |-
      Indique si le rapport de tableau croisé dynamique affiche les totaux généraux des lignes.

      \[[Ensemble d’API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: showRowGrandTotals
    fullName: showRowGrandTotals
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showRowGrandTotals: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.PivotLayout.subtotalLocation
    summary: |-
      Cette propriété indique le SubtotalLocationType de tous les champs sur le tableau croisé dynamique. Si les champs ont des états différents, la valeur sera null.

      \[[Ensemble d’API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: subtotalLocation
    fullName: subtotalLocation
    langs:
      - typeScript
    type: property
    syntax:
      content: 'subtotalLocation: Excel.SubtotalLocationType | "AtTop" | "AtBottom" | "Off";'
      return:
        type:
          - Excel.SubtotalLocationType | "AtTop" | "AtBottom" | "Off"
  - uid: excel_release.Excel.PivotLayout.toJSON
    summary: 'Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que l’objet Excel. PivotLayout d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.PivotLayoutData`<!-- -->) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l’objet d’origine.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.PivotLayoutData;'
      return:
        type:
          - excel.Excel.Interfaces.PivotLayoutData
        description: ''