### YamlMime:UniversalReference
items:
  - uid: excel_release.Excel.Filter
    summary: |-
      Gère le filtrage de la colonne d’un tableau.

      \[[Ensemble d'API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.Filter
    fullName: Excel.Filter
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel_release
    children:
      - excel_release.Excel.Filter.apply
      - excel_release.Excel.Filter.applyBottomItemsFilter
      - excel_release.Excel.Filter.applyBottomPercentFilter
      - excel_release.Excel.Filter.applyCellColorFilter
      - excel_release.Excel.Filter.applyCustomFilter
      - excel_release.Excel.Filter.applyCustomFilter_1
      - excel_release.Excel.Filter.applyDynamicFilter
      - excel_release.Excel.Filter.applyDynamicFilter_1
      - excel_release.Excel.Filter.applyFontColorFilter
      - excel_release.Excel.Filter.applyIconFilter
      - excel_release.Excel.Filter.applyTopItemsFilter
      - excel_release.Excel.Filter.applyTopPercentFilter
      - excel_release.Excel.Filter.applyValuesFilter
      - excel_release.Excel.Filter.clear
      - excel_release.Excel.Filter.context
      - excel_release.Excel.Filter.criteria
      - excel_release.Excel.Filter.load
      - excel_release.Excel.Filter.load_1
      - excel_release.Excel.Filter.load_2
      - excel_release.Excel.Filter.toJSON
  - uid: excel_release.Excel.Filter.apply
    summary: |-
      Appliquer les critères de filtre donnés à la colonne indiquée.

      \[[Ensemble d'API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: apply(criteria)
    fullName: apply(criteria)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'apply(criteria: Excel.FilterCriteria): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: criteria
          description: Critères à appliquer.
          type:
            - excel.Excel.FilterCriteria
  - uid: excel_release.Excel.Filter.applyBottomItemsFilter
    summary: "Appliquer un filtre «\_Élément inférieur\_» à la colonne pour le nombre d’éléments donné.\n\n\\[[Ensemble d'API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: applyBottomItemsFilter(count)
    fullName: applyBottomItemsFilter(count)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyBottomItemsFilter(count: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: count
          description: Nombre d’éléments à partir du bas à afficher.
          type:
            - number
  - uid: excel_release.Excel.Filter.applyBottomPercentFilter
    summary: "Appliquer un filtre «\_Pourcentage inférieur\_» à la colonne pour le pourcentage d’éléments donné.\n\n\\[[Ensemble d'API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: applyBottomPercentFilter(percent)
    fullName: applyBottomPercentFilter(percent)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyBottomPercentFilter(percent: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: percent
          description: Pourcentage d’éléments à partir du bas à afficher.
          type:
            - number
  - uid: excel_release.Excel.Filter.applyCellColorFilter
    summary: "Appliquer un filtre «\_Couleur de cellule\_» à la colonne pour la couleur donnée.\n\n\\[[Ensemble d'API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: applyCellColorFilter(color)
    fullName: applyCellColorFilter(color)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyCellColorFilter(color: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: color
          description: Couleur d’arrière-plan des cellules à afficher.
          type:
            - string
  - uid: excel_release.Excel.Filter.applyCustomFilter
    summary: |-
      Appliquer un filtre «icône» à la colonne pour les chaînes de critères données.

      \[[Ensemble d'API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'applyCustomFilter(criteria1, criteria2, oper)'
    fullName: 'applyCustomFilter(criteria1, criteria2, oper)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyCustomFilter(criteria1: string, criteria2?: string, oper?: Excel.FilterOperator): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: criteria1
          description: Première chaîne de critères.
          type:
            - string
        - id: criteria2
          description: Facultatif. Deuxième chaîne de critères.
          type:
            - string
        - id: oper
          description: Facultatif. Opérateur qui décrit comment les deux critères sont joints.
          type:
            - excel.Excel.FilterOperator
  - uid: excel_release.Excel.Filter.applyCustomFilter_1
    summary: |-
      Appliquer un filtre «icône» à la colonne pour les chaînes de critères données.

      \[[Ensemble d'API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'applyCustomFilter(criteria1, criteria2, operString)'
    fullName: 'applyCustomFilter(criteria1, criteria2, operString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyCustomFilter(criteria1: string, criteria2?: string, operString?: "And" | "Or"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: criteria1
          description: Première chaîne de critères.
          type:
            - string
        - id: criteria2
          description: Facultatif. Deuxième chaîne de critères.
          type:
            - string
        - id: operString
          description: Facultatif. Opérateur qui décrit comment les deux critères sont joints.
          type:
            - '"And" | "Or"'
  - uid: excel_release.Excel.Filter.applyDynamicFilter
    summary: "Appliquer un filtre «\_Dynamique\_» à la colonne.\n\n\\[[Ensemble d'API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: applyDynamicFilter(criteria)
    fullName: applyDynamicFilter(criteria)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyDynamicFilter(criteria: Excel.DynamicFilterCriteria): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: criteria
          description: Critères dynamiques à appliquer.
          type:
            - excel.Excel.DynamicFilterCriteria
  - uid: excel_release.Excel.Filter.applyDynamicFilter_1
    summary: "Appliquer un filtre «\_Dynamique\_» à la colonne.\n\n\\[[Ensemble d'API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: applyDynamicFilter(criteriaString)
    fullName: applyDynamicFilter(criteriaString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyDynamicFilter(criteriaString: "Unknown" | "AboveAverage" | "AllDatesInPeriodApril" | "AllDatesInPeriodAugust" | "AllDatesInPeriodDecember" | "AllDatesInPeriodFebruray" | "AllDatesInPeriodJanuary" | "AllDatesInPeriodJuly" | "AllDatesInPeriodJune" | "AllDatesInPeriodMarch" | "AllDatesInPeriodMay" | "AllDatesInPeriodNovember" | "AllDatesInPeriodOctober" | "AllDatesInPeriodQuarter1" | "AllDatesInPeriodQuarter2" | "AllDatesInPeriodQuarter3" | "AllDatesInPeriodQuarter4" | "AllDatesInPeriodSeptember" | "BelowAverage" | "LastMonth" | "LastQuarter" | "LastWeek" | "LastYear" | "NextMonth" | "NextQuarter" | "NextWeek" | "NextYear" | "ThisMonth" | "ThisQuarter" | "ThisWeek" | "ThisYear" | "Today" | "Tomorrow" | "YearToDate" | "Yesterday"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: criteriaString
          description: Critères dynamiques à appliquer.
          type:
            - '"Unknown" | "AboveAverage" | "AllDatesInPeriodApril" | "AllDatesInPeriodAugust" | "AllDatesInPeriodDecember" | "AllDatesInPeriodFebruray" | "AllDatesInPeriodJanuary" | "AllDatesInPeriodJuly" | "AllDatesInPeriodJune" | "AllDatesInPeriodMarch" | "AllDatesInPeriodMay" | "AllDatesInPeriodNovember" | "AllDatesInPeriodOctober" | "AllDatesInPeriodQuarter1" | "AllDatesInPeriodQuarter2" | "AllDatesInPeriodQuarter3" | "AllDatesInPeriodQuarter4" | "AllDatesInPeriodSeptember" | "BelowAverage" | "LastMonth" | "LastQuarter" | "LastWeek" | "LastYear" | "NextMonth" | "NextQuarter" | "NextWeek" | "NextYear" | "ThisMonth" | "ThisQuarter" | "ThisWeek" | "ThisYear" | "Today" | "Tomorrow" | "YearToDate" | "Yesterday"'
  - uid: excel_release.Excel.Filter.applyFontColorFilter
    summary: "Appliquer un filtre «\_Couleur de police\_» à la colonne pour la couleur donnée.\n\n\\[[Ensemble d'API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: applyFontColorFilter(color)
    fullName: applyFontColorFilter(color)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyFontColorFilter(color: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: color
          description: Couleur de police des cellules à afficher.
          type:
            - string
  - uid: excel_release.Excel.Filter.applyIconFilter
    summary: |-
      Appliquer un filtre «icône» à la colonne pour l'icône donnée.

      \[[Ensemble d'API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: applyIconFilter(icon)
    fullName: applyIconFilter(icon)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyIconFilter(icon: Excel.Icon): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: icon
          description: Icônes des cellules à afficher.
          type:
            - excel.Excel.Icon
  - uid: excel_release.Excel.Filter.applyTopItemsFilter
    summary: "Appliquer un filtre «\_Élément supérieur\_» à la colonne pour le nombre d’éléments donné.\n\n\\[[Ensemble d'API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: applyTopItemsFilter(count)
    fullName: applyTopItemsFilter(count)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyTopItemsFilter(count: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: count
          description: Nombre d’éléments à partir du haut à afficher.
          type:
            - number
  - uid: excel_release.Excel.Filter.applyTopPercentFilter
    summary: "Appliquer un filtre «\_Pourcentage supérieur\_» à la colonne pour le pourcentage d’éléments donné.\n\n\\[[Ensemble d'API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: applyTopPercentFilter(percent)
    fullName: applyTopPercentFilter(percent)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyTopPercentFilter(percent: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: percent
          description: Pourcentage d’éléments à partir du haut à afficher.
          type:
            - number
  - uid: excel_release.Excel.Filter.applyValuesFilter
    summary: "Appliquer un filtre «\_Valeurs\_» à la colonne pour les valeurs données.\n\n\\[[Ensemble d'API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: applyValuesFilter(values)
    fullName: applyValuesFilter(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyValuesFilter(values: Array<string | FilterDatetime>): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: values
          description: Liste des valeurs à afficher. Il doit s'agir d'un tableau de chaînes ou d'un tableau d'objets Excel. FilterDateTime.
          type:
            - Array<string | FilterDatetime>
  - uid: excel_release.Excel.Filter.clear
    summary: |-
      Effacer le filtre sur la colonne donnée.

      \[[Ensemble d'API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel_release.Excel.Filter.context
    summary: Contexte de demande associé à l'objet. Cette opération connecte le processus du complément au processus de l'application hôte Office.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel_release.Excel.Filter.criteria
    summary: |-
      Le filtre actuellement appliqué à la colonne donnée. En lecture seule.

      \[[Ensemble d'API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: criteria
    fullName: criteria
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly criteria: Excel.FilterCriteria;'
      return:
        type:
          - excel.Excel.FilterCriteria
  - uid: excel_release.Excel.Filter.load
    summary: "Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez appeler «\_context.sync()\_» avant de lire les propriétés."
    remarks: |-
      En plus de cette signature, cette méthode possède les signatures suivantes:

      `load(option?: string | string[]): Excel.Filter`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.

      `load(option?: { select?: string; expand?: string; }): Excel.Filter`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Filter`-Uniquement disponible sur les types de collection. Elle est similaire à la signature précédente. Option. Top indique le nombre maximal d'éléments de collection qui peuvent être inclus dans le résultat. Option. Skip indique le nombre d'éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat. Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d'éléments.
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.FilterLoadOptions): Excel.Filter;'
      return:
        type:
          - excel.Excel.Filter
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.FilterLoadOptions
  - uid: excel_release.Excel.Filter.load_1
    summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez appeler `context.sync()` avant de lire les propriétés.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Filter;'
      return:
        type:
          - excel.Excel.Filter
        description: ''
      parameters:
        - id: propertyNames
          description: Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.
          type:
            - 'string | string[]'
  - uid: excel_release.Excel.Filter.load_2
    summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez appeler `context.sync()` avant de lire les propriétés.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Filter;'
      return:
        type:
          - excel.Excel.Filter
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: Où propertyNamesAndPaths. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et propertyNamesAndPaths. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel_release.Excel.Filter.toJSON
    summary: 'Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu''un objet d''API est transmis à`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, à son tour, appelle `toJSON` la méthode de l''objet qui lui est passé.) Tandis que l''objet Excel. Filter d''origine est un objet `toJSON` d''API, la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.FilterData`<!-- -->) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l''objet d''origine.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.FilterData;'
      return:
        type:
          - excel.Excel.Interfaces.FilterData
        description: ''