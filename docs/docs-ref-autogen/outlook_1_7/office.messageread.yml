### YamlMime:UniversalReference
ms.openlocfilehash: bcdc86754ef572684aa392c32fac36e0173626ba
ms.sourcegitcommit: b0b614f5315ab2e5c1e0ea51c687498f87684a07
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 02/15/2019
ms.locfileid: "30055233"
items:
- uid: Outlook_1_7.Office.MessageRead
  summary: >-
    Mode de lecture de message d' [Office. Context. Mailbox. Item](xref:Outlook_1_7.Office.Item)<!-- -->.


    **Important**: il s'agit d'un objet Outlook interne, qui n'est pas directement exposé via les interfaces existantes. Vous devez traiter ceci comme un mode d'Office. Context. Mailbox. Item. Pour plus d'informations, rePortez-vous à la page [modèle objet](https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/requirement-set-1.7/office.context.mailbox.item) .
  name: Office.MessageRead
  fullName: Office.MessageRead
  langs:
  - typeScript
  type: interface
  extends:
  - Message
  - 'ItemRead '
  package: Outlook_1_7
  children:
  - Outlook_1_7.Office.MessageRead.addHandlerAsync
  - Outlook_1_7.Office.MessageRead.addHandlerAsync_1
  - Outlook_1_7.Office.MessageRead.displayReplyAllForm
  - Outlook_1_7.Office.MessageRead.displayReplyForm
  - Outlook_1_7.Office.MessageRead.getEntities
  - Outlook_1_7.Office.MessageRead.getEntitiesByType
  - Outlook_1_7.Office.MessageRead.getFilteredEntitiesByName
  - Outlook_1_7.Office.MessageRead.getRegExMatches
  - Outlook_1_7.Office.MessageRead.getRegExMatchesByName
  - Outlook_1_7.Office.MessageRead.getSelectedEntities
  - Outlook_1_7.Office.MessageRead.getSelectedRegExMatches
  - Outlook_1_7.Office.MessageRead.loadCustomPropertiesAsync
  - Outlook_1_7.Office.MessageRead.removeHandlerAsync
  - Outlook_1_7.Office.MessageRead.removeHandlerAsync_1
  - Outlook_1_7.Office.MessageRead.attachments
  - Outlook_1_7.Office.MessageRead.body
  - Outlook_1_7.Office.MessageRead.cc
  - Outlook_1_7.Office.MessageRead.conversationId
  - Outlook_1_7.Office.MessageRead.dateTimeCreated
  - Outlook_1_7.Office.MessageRead.dateTimeModified
  - Outlook_1_7.Office.MessageRead.from
  - Outlook_1_7.Office.MessageRead.internetMessageId
  - Outlook_1_7.Office.MessageRead.itemClass
  - Outlook_1_7.Office.MessageRead.itemId
  - Outlook_1_7.Office.MessageRead.itemType
  - Outlook_1_7.Office.MessageRead.normalizedSubject
  - Outlook_1_7.Office.MessageRead.notificationMessages
  - Outlook_1_7.Office.MessageRead.recurrence
  - Outlook_1_7.Office.MessageRead.sender
  - Outlook_1_7.Office.MessageRead.seriesId
  - Outlook_1_7.Office.MessageRead.subject
  - Outlook_1_7.Office.MessageRead.to
- uid: Outlook_1_7.Office.MessageRead.addHandlerAsync
  summary: >-
    ajoute un gestionnaire d’événements pour un événement pris en charge.


    Actuellement, les types d'événement `Office.EventType.AppointmentTimeChanged` <!-- -->pris `Office.EventType.RecipientsChanged` <!-- -->en charge `Office.EventType.RecurrenceChanged` <!-- -->sont, et.


    \[[Ensemble d'API: boîte aux lettres 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Lecture de message</td></tr></table>


    En plus de cette signature, la méthode possède également la signature suivante:


    `addHandlerAsync(eventType: Office.EventType, handler: any, callback?: (result: Office.AsyncResult<void>) => void): void;`
  name: addHandlerAsync(eventType, handler, options, callback)
  fullName: addHandlerAsync(eventType, handler, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addHandlerAsync(eventType: Office.EventType, handler: any, options?: any, callback?: (result: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: Événement qui doit appeler le gestionnaire.
      type:
      - Office.EventType
    - id: handler
      description: Fonction permettant de gérer l'événement. La fonction doit accepter un seul paramètre, qui est un littéral d'objet. La propriété type sur le paramètre correspond au paramètre eventType transmis à addHandlerAsync.
      type:
      - any
    - id: options
      description: "Facultatif. Littéral d’objet contenant une ou plusieurs des propriétés suivantes. asyncContext: les développeurs peuvent fournir n'importe quel objet auquel ils souhaitent accéder dans la méthode de rappel."
      type:
      - any
    - id: callback
      description: Facultatif. Une fois la méthode exécutée, la fonction transmise au paramètre callback est appelée avec un seul paramètre, asyncResult, qui est un objet Office. AsyncResult.
      type:
      - '(result: Office.AsyncResult<void>) => void'
- uid: Outlook_1_7.Office.MessageRead.addHandlerAsync_1
  summary: >-
    ajoute un gestionnaire d’événements pour un événement pris en charge.


    Actuellement, les types d'événement `Office.EventType.AppointmentTimeChanged` <!-- -->pris `Office.EventType.RecipientsChanged` <!-- -->en charge `Office.EventType.RecurrenceChanged` <!-- -->sont, et.


    \[[Ensemble d'API: boîte aux lettres 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Lecture de message</td></tr></table>
  name: addHandlerAsync(eventType, handler, callback)
  fullName: addHandlerAsync(eventType, handler, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addHandlerAsync(eventType: Office.EventType, handler: any, callback?: (result: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: Événement qui doit appeler le gestionnaire.
      type:
      - Office.EventType
    - id: handler
      description: Fonction permettant de gérer l'événement. La fonction doit accepter un seul paramètre, qui est un littéral d'objet. La propriété type sur le paramètre correspond au paramètre eventType transmis à addHandlerAsync.
      type:
      - any
    - id: callback
      description: Facultatif. Une fois la méthode exécutée, la fonction transmise au paramètre callback est appelée avec un seul paramètre, asyncResult, qui est un objet Office. AsyncResult.
      type:
      - '(result: Office.AsyncResult<void>) => void'
- uid: Outlook_1_7.Office.MessageRead.displayReplyAllForm
  summary: >-
    Affiche un formulaire de réponse qui inclut, soit l’expéditeur et tous les destinataires du message sélectionné, soit l’organisateur et tous les participants du rendez-vous sélectionné.


    Dans Outlook Web App, le formulaire de réponse s’affiche sous forme de formulaire isolé dans l’affichage à 3 colonnes et sous forme de formulaire contextuel dans l’affichage à 1 ou 2 colonnes.


    Si un des paramètres de chaîne dépasse la limite, displayReplyAllForm génère une exception.


    Lorsque des pièces jointes sont spécifiées dans le paramètre formData.attachments, Outlook et Outlook Web App tentent de télécharger toutes les pièces jointes et de les joindre au formulaire de réponse. Si une pièce jointe n’est pas ajoutée, une erreur s’affiche dans l’interface utilisateur du formulaire. Si ce n’est pas possible, aucun message d’erreur n’est généré.


    **Remarque**: cette méthode n'est pas prise en charge dans Outlook pour iOS ou Outlook pour Android.


    \[[Ensemble d'API: boîte aux lettres 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Lecture de message</td></tr></table>

    ####Voici


    ```javascript

    // The following code passes a string to the `displayReplyAllForm` function.

    Office.context.mailbox.item.displayReplyAllForm('hello there');

    Office.context.mailbox.item.displayReplyAllForm('<b>hello there</b>');


    // Reply with an empty body.

    Office.context.mailbox.item.displayReplyAllForm({});


    // Reply with just a body.

    Office.context.mailbox.item.displayReplyAllForm(

    {

    'htmlBody' : 'hi'

    });


    // Reply with a body and a file attachment.

    Office.context.mailbox.item.displayReplyAllForm(

    {
        'htmlBody' : 'hi',
        'attachments' :
        [
            {
            'type' : Office.MailboxEnums.AttachmentType.File,
            'name' : 'squirrel.png',
            'url' : 'http://i.imgur.com/sRgTlGR.jpg'
            }
        ]
    });


    // Reply with a body and an item attachment.

    Office.context.mailbox.item.displayReplyAllForm(

    {
        'htmlBody' : 'hi',
        'attachments' :
        [
            {
            'type' : 'item',
            'name' : 'rand',
            'itemId' : Office.context.mailbox.item.itemId
            }
        ]
    });


    // Reply with a body, file attachment, item attachment, and a callback.

    Office.context.mailbox.item.displayReplyAllForm(

    {
        'htmlBody' : 'hi',
        'attachments' :
        [
            {
                'type' : Office.MailboxEnums.AttachmentType.File,
                'name' : 'squirrel.png',
                'url' : 'http://i.imgur.com/sRgTlGR.jpg'
            },
            {
                'type' : 'item',
                'name' : 'rand',
                'itemId' : Office.context.mailbox.item.itemId
            }
        ],
        'callback' : function(asyncResult)
        {
            console.log(asyncResult.value);
        }
    });

    ```
  name: displayReplyAllForm(formData)
  fullName: displayReplyAllForm(formData)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'displayReplyAllForm(formData: string | ReplyFormData): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: formData
      description: Chaîne qui contient du texte et des éléments HTML et qui représente le corps du formulaire de réponse. La chaîne est limitée à 32 Ko ou un objet [Office. ReplyFormData](xref:Outlook_1_7.Office.ReplyFormData) qui contient les données de corps ou de pièces jointes et une fonction de rappel
      type:
      - string | ReplyFormData
- uid: Outlook_1_7.Office.MessageRead.displayReplyForm
  summary: >-
    Affiche un formulaire de réponse qui comprend uniquement l’expéditeur du message sélectionné ou l’organisateur du rendez-vous sélectionné.


    Dans Outlook Web App, le formulaire de réponse s’affiche sous forme de formulaire isolé dans l’affichage à 3 colonnes et sous forme de formulaire contextuel dans l’affichage à 1 ou 2 colonnes.


    Si un des paramètres de chaîne dépasse la limite, displayReplyForm génère une exception.


    Lorsque des pièces jointes sont spécifiées dans le paramètre formData.attachments, Outlook et Outlook Web App tentent de télécharger toutes les pièces jointes et de les joindre au formulaire de réponse. Si une pièce jointe n’est pas ajoutée, une erreur s’affiche dans l’interface utilisateur du formulaire. Si ce n’est pas possible, aucun message d’erreur n’est généré.


    **Remarque**: cette méthode n'est pas prise en charge dans Outlook pour iOS ou Outlook pour Android.


    \[[Ensemble d'API: boîte aux lettres 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Lecture de message</td></tr></table>

    ####Voici


    ```javascript

    // The following code passes a string to the `displayReplyForm` function.

    Office.context.mailbox.item.displayReplyForm('hello there');

    Office.context.mailbox.item.displayReplyForm('<b>hello there</b>');


    // Reply with an empty body.

    Office.context.mailbox.item.displayReplyForm({});


    // Reply with just a body.

    Office.context.mailbox.item.displayReplyForm(

    {
        'htmlBody' : 'hi'
    });


    // Reply with a body and a file attachment.

    Office.context.mailbox.item.displayReplyForm(

    {
        'htmlBody' : 'hi',
        'attachments' :
        [
            {
                'type' : Office.MailboxEnums.AttachmentType.File,
                'name' : 'squirrel.png',
                'url' : 'http://i.imgur.com/sRgTlGR.jpg'
            }
        ]
    });


    // Reply with a body and an item attachment.

    Office.context.mailbox.item.displayReplyForm(

    {
        'htmlBody' : 'hi',
        'attachments' :
        [
            {
                'type' : 'item',
                'name' : 'rand',
                'itemId' : Office.context.mailbox.item.itemId
            }
        ]
    });


    // Reply with a body, file attachment, item attachment, and a callback.

    Office.context.mailbox.item.displayReplyForm(

    {
        'htmlBody' : 'hi',
        'attachments' :
        [
            {
                'type' : Office.MailboxEnums.AttachmentType.File,
                'name' : 'squirrel.png',
                'url' : 'http://i.imgur.com/sRgTlGR.jpg'
            },
            {
                'type' : 'item',
                'name' : 'rand',
                'itemId' : Office.context.mailbox.item.itemId
            }
        ],
        'callback' : function(asyncResult)
        {
            console.log(asyncResult.value);
        }
    });

    ```
  name: displayReplyForm(formData)
  fullName: displayReplyForm(formData)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'displayReplyForm(formData: string | ReplyFormData): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: formData
      description: Chaîne qui contient du texte et des éléments HTML et qui représente le corps du formulaire de réponse. La chaîne est limitée à 32 Ko. OU un objet [Office. ReplyFormData](xref:Outlook_1_7.Office.ReplyFormData) qui contient des données de corps ou de pièces jointes et une fonction de rappel.
      type:
      - string | ReplyFormData
- uid: Outlook_1_7.Office.MessageRead.getEntities
  summary: >-
    Permet d’obtenir les entités figurant dans le corps de l’élément sélectionné.


    **Remarque**: cette méthode n'est pas prise en charge dans Outlook pour iOS ou Outlook pour Android.


    \[[Ensemble d'API: boîte aux lettres 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Lecture de message</td></tr></table>

    ####Voici


    ```javascript

    // The following example accesses the contacts entities in the current item's body.


    var contacts = Office.context.mailbox.item.getEntities().contacts;

    ```
  name: getEntities()
  fullName: getEntities()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getEntities(): Entities;'
    return:
      type:
      - Entities
      description: ''
- uid: Outlook_1_7.Office.MessageRead.getEntitiesByType
  summary: >-
    Permet d’obtenir un tableau de toutes les entités du type spécifié trouvées dans le corps de l’élément sélectionné.


    **Remarque**: cette méthode n'est pas prise en charge dans Outlook pour iOS ou Outlook pour Android.


    \[[Ensemble d'API: boîte aux lettres 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>Restreinte</td></tr>


    <tr><td>[Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Lecture</td></tr></table>


    Alors que le niveau d’autorisation minimal Restricted suffit pour utiliser cette méthode, certains types d’entité nécessitent le niveau ReadItem pour pouvoir y accéder, comme indiqué dans le tableau suivant.


    <table> <tr> <th>Valeur de entityType</th> <th>Type des objets du tableau renvoyé</th> <th>Relevé d'autorisation requis</th> </tr> <tr> <td>Address</td> <td>String

    </td> <td>Restreinte</td> </tr> <tr> <td>Contact</td> <td>Contact</td> <td>ReadItem</td> </tr> <tr> <td>EmailAddress</td> <td>String</td> <td>ReadItem</td> </tr> <tr> <td>MeetingSuggestion</td> <td>MeetingSuggestion</td> <td>ReadItem</td> </tr> <tr> <td>PhoneNumber</td> <td>PhoneNumber</td> <td>Restricted</td> </tr> <tr> <td>TaskSuggestion</td> <td>TaskSuggestion</td> <td>ReadItem</td> </tr> <tr> <td>URL</td> <td>String

    </td> <td>Restreinte</td> </tr> </table>

    #### Exemples


    ```javascript

    // The following example shows how to access an array of strings that represent postal addresses

    // in the current item's body.


    // The initialize function is required for all apps.

    Office.initialize = function () {
        // Checks for the DOM to load using the jQuery ready function.
        $(document).ready(function () {
            // After the DOM is loaded, app-specific code can run.
            var item = Office.context.mailbox.item;
            // Get an array of strings that represent postal addresses in the current item's body.
            var addresses = item.getEntitiesByType(Office.MailboxEnums.EntityType.Address);
            // Continue processing the array of addresses.
        });
    };

    ```
  name: getEntitiesByType(entityType)
  fullName: getEntitiesByType(entityType)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getEntitiesByType(entityType: MailboxEnums.EntityType): (string | Contact | MeetingSuggestion | PhoneNumber | TaskSuggestion)[];'
    return:
      type:
      - (string | Contact | MeetingSuggestion | PhoneNumber | TaskSuggestion)[]
      description: Si la valeur passée dans entityType n'est pas un membre valide de l'énumération EntityType, la méthode renvoie la valeur null. Si aucune entité du type spécifié n’est présente dans le corps de l’élément, la méthode renvoie un tableau vide. Sinon, le type des objets dans le tableau renvoyé dépend du type d'entité demandé dans le paramètre entityType.
    parameters:
    - id: entityType
      description: Une des valeurs d’énumération EntityType.
      type:
      - MailboxEnums.EntityType
- uid: Outlook_1_7.Office.MessageRead.getFilteredEntitiesByName
  summary: >-
    Renvoie des entités reconnues dans l’élément sélectionné, qui transmettent le filtre nommé défini au fichier manifeste XML.


    La méthode getFilteredEntitiesByName renvoie les entités qui correspondent à l’expression régulière définie dans l’élément de règle ItemHasKnownEntity du fichier manifeste XML ayant la valeur de l’élément FilterName spécifié.


    **Remarque**: cette méthode n'est pas prise en charge dans Outlook pour iOS ou Outlook pour Android.


    \[[Ensemble d'API: boîte aux lettres 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Lecture de message</td></tr></table>
  name: getFilteredEntitiesByName(name)
  fullName: getFilteredEntitiesByName(name)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getFilteredEntitiesByName(name: string): (string | Contact | MeetingSuggestion | PhoneNumber | TaskSuggestion)[];'
    return:
      type:
      - (string | Contact | MeetingSuggestion | PhoneNumber | TaskSuggestion)[]
      description: Si aucun élément ItemHasKnownEntity dans le manifeste n’a une valeur d’élément FilterName qui correspond au paramètre name, la méthode renvoie null. Si le paramètre name correspond à un élément ItemHasKnownEntity dans le manifeste, mais qu’aucune entité dans l’élément actif ne correspond, la méthode renvoie un tableau vide.
    parameters:
    - id: name
      description: Nom de l’élément de règle ItemHasKnownEntity qui définit le filtre à respecter.
      type:
      - string
- uid: Outlook_1_7.Office.MessageRead.getRegExMatches
  summary: >-
    Renvoie des valeurs de chaîne dans l’élément sélectionné, qui correspondent aux expressions régulières définies dans le fichier manifeste XML.


    La méthode getRegExMatches renvoie les chaînes qui correspondent à l’expression régulière définie dans chaque élément de règle ItemHasRegularExpressionMatch ou ItemHasKnownEntity du fichier manifeste XML. Pour une règle ItemHasRegularExpressionMatch, une chaîne correspondante doit être présente dans la propriété de l’élément spécifié par cette règle. Le type simple PropertyName définit les propriétés prises en charge.


    Si vous spécifiez une règle ItemHasRegularExpressionMatch pour la propriété du corps d’un élément, l’expression régulière doit filtrer davantage le corps. Par ailleurs, elle ne doit pas tenter de renvoyer l’intégralité du corps de l’élément. L’utilisation d’une expression régulière telle que .* pour obtenir l’intégralité du corps d’un élément ne renvoie pas toujours les résultats attendus. Utilisez plutôt la méthode Body.getAsync pour récupérer l’intégralité du corps de l’élément.


    **Remarque**: cette méthode n'est pas prise en charge dans Outlook pour iOS ou Outlook pour Android.


    \[[Ensemble d'API: boîte aux lettres 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Lecture de message</td></tr></table>

    ####Voici


    ```javascript

    // Consider an add-in manifest has the following `Rule` element:

    //<Rule xsi:type="RuleCollection" Mode="And">

    //  <Rule xsi:type="ItemIs" FormType="Read" ItemType="Message" />

    //  <Rule xsi:type="RuleCollection" Mode="Or">

    //    <Rule xsi:type="ItemHasRegularExpressionMatch" RegExName="fruits" RegExValue="apple|banana|coconut" PropertyName="BodyAsPlaintext" IgnoreCase="true" />

    //    <Rule xsi:type="ItemHasRegularExpressionMatch" RegExName="veggies" RegExValue="tomato|onion|spinach|broccoli" PropertyName="BodyAsPlaintext" IgnoreCase="true" />

    //  </Rule>

    //</Rule>


    // The object returned from `getRegExMatches` would have two properties: `fruits` and `veggies`.

    //{

    //'fruits': ['apple','banana','Banana','coconut'],

    //'veggies': ['tomato','onion','spinach','broccoli']

    //}


    // The following example shows how to access the array of

    // matches for the regular expression rule elements `fruits`

    // and `veggies`, which are specified in the manifest.

    var allMatches = Office.context.mailbox.item.getRegExMatches();

    var fruits = allMatches.fruits;

    var veggies = allMatches.veggies;

    ```
  name: getRegExMatches()
  fullName: getRegExMatches()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRegExMatches(): any;'
    return:
      type:
      - any
      description: Un objet qui contient les tableaux des chaînes correspondant aux expressions régulières définies dans le fichier manifeste XML. Le nom de chaque tableau est égal à la valeur correspondante de l’attribut RegExName de la règle ItemHasRegularExpressionMatch correspondante ou de l’attribut FilterName de la règle ItemHasKnownEntity correspondante.
- uid: Outlook_1_7.Office.MessageRead.getRegExMatchesByName
  summary: >-
    Renvoie des valeurs de chaîne dans l’élément sélectionné, qui correspondent aux expressions régulières nommées définies dans le fichier manifeste XML.


    La méthode getRegExMatchesByName renvoie les chaînes qui correspondent à l’expression régulière définie dans l’élément de règle ItemHasRegularExpressionMatch du fichier manifeste XML ayant la valeur de l’élément RegExName spécifié.


    Si vous spécifiez une règle ItemHasRegularExpressionMatch pour la propriété de corps d’un élément, l’expression régulière doit filtrer davantage le corps. Par ailleurs, elle ne doit pas tenter de renvoyer l’intégralité du corps de l’élément. L’utilisation d’une expression régulière telle que .* pour obtenir l’intégralité du corps d’un élément ne renvoie pas toujours les résultats attendus.


    **Remarque**: cette méthode n'est pas prise en charge dans Outlook pour iOS ou Outlook pour Android.


    \[[Ensemble d'API: boîte aux lettres 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Lecture de message</td></tr></table>

    ####Voici


    ```javascript

    // Consider an add-in manifest has the following `Rule` element:

    //<Rule xsi:type="RuleCollection" Mode="And">

    //  <Rule xsi:type="ItemIs" FormType="Read" ItemType="Message" />

    //  <Rule xsi:type="RuleCollection" Mode="Or">

    //    <Rule xsi:type="ItemHasRegularExpressionMatch" RegExName="fruits" RegExValue="apple|banana|coconut" PropertyName="BodyAsPlaintext" IgnoreCase="true" />

    //    <Rule xsi:type="ItemHasRegularExpressionMatch" RegExName="veggies" RegExValue="tomato|onion|spinach|broccoli" PropertyName="BodyAsPlaintext" IgnoreCase="true" />

    //  </Rule>

    //</Rule>


    // The object returned from `getRegExMatches` would have two properties: `fruits` and `veggies`.

    //{

    //'fruits': ['apple','banana','Banana','coconut'],

    //'veggies': ['tomato','onion','spinach','broccoli']

    //}


    var fruits = Office.context.mailbox.item.getRegExMatchesByName("fruits");

    var veggies = Office.context.mailbox.item.getRegExMatchesByName("veggies");

    ```
  name: getRegExMatchesByName(name)
  fullName: getRegExMatchesByName(name)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRegExMatchesByName(name: string): string[];'
    return:
      type:
      - string[]
      description: Un tableau qui contient les chaînes correspondant à l’expression régulière définie dans le fichier manifeste XML.
    parameters:
    - id: name
      description: Nom de l’élément de règle ItemHasRegularExpressionMatch qui définit le filtre à respecter.
      type:
      - string
- uid: Outlook_1_7.Office.MessageRead.getSelectedEntities
  summary: >-
    Permet d’obtenir les entités figurant dans une correspondance en surbrillance qu’un utilisateur a sélectionné. Les correspondances en surbrillance s’appliquent aux compléments contextuels.


    **Remarque**: cette méthode n'est pas prise en charge dans Outlook pour iOS ou Outlook pour Android.


    \[[Ensemble d'API: boîte aux lettres 1,6](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Lecture de message</td></tr></table>

    ####Voici


    ```javascript

    // The following example accesses the addresses entities in the highlighted

    // match selected by the user.

    var addresses = Office.context.mailbox.item.getSelectedEntities().addresses;

    ```
  name: getSelectedEntities()
  fullName: getSelectedEntities()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSelectedEntities(): Entities;'
    return:
      type:
      - Entities
      description: ''
- uid: Outlook_1_7.Office.MessageRead.getSelectedRegExMatches
  summary: >-
    Renvoie des valeurs de chaîne dans une correspondance en surbrillance, qui correspondent aux expressions régulières définies dans le fichier manifeste XML. Les correspondances en surbrillance s’appliquent aux compléments contextuels.


    La méthode getSelectedRegExMatches renvoie les chaînes qui correspondent à l'expression régulière définie dans chaque élément de règle ItemHasRegularExpressionMatch ou ItemHasKnownEntity dans le fichier manifeste XML. Pour une règle ItemHasRegularExpressionMatch, une chaîne correspondante doit se produire dans la propriété de l'élément spécifié par cette règle. Le type simple PropertyName définit les propriétés prises en charge.


    Si vous spécifiez une règle ItemHasRegularExpressionMatch pour la propriété du corps d’un élément, l’expression régulière doit filtrer davantage le corps. Par ailleurs, elle ne doit pas tenter de renvoyer l’intégralité du corps de l’élément. L’utilisation d’une expression régulière telle que .* pour obtenir l’intégralité du corps d’un élément ne renvoie pas toujours les résultats attendus. Utilisez plutôt la méthode Body.getAsync pour récupérer l’intégralité du corps de l’élément.


    **Remarque**: cette méthode n'est pas prise en charge dans Outlook pour iOS ou Outlook pour Android.


    \[[Ensemble d'API: boîte aux lettres 1,6](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Lecture de message</td></tr></table>

    ####Voici


    ```javascript

    // Consider an add-in manifest has the following `Rule` element:

    //<Rule xsi:type="RuleCollection" Mode="And">

    //  <Rule xsi:type="ItemIs" FormType="Read" ItemType="Message" />

    //  <Rule xsi:type="RuleCollection" Mode="Or">

    //    <Rule xsi:type="ItemHasRegularExpressionMatch" RegExName="fruits" RegExValue="apple|banana|coconut" PropertyName="BodyAsPlaintext" IgnoreCase="true" />

    //    <Rule xsi:type="ItemHasRegularExpressionMatch" RegExName="veggies" RegExValue="tomato|onion|spinach|broccoli" PropertyName="BodyAsPlaintext" IgnoreCase="true" />

    //  </Rule>

    //</Rule>


    // The object returned from `getRegExMatches` would have two properties: `fruits` and `veggies`.

    //{

    //'fruits': ['apple','banana','Banana','coconut'],

    //'veggies': ['tomato','onion','spinach','broccoli']

    //}


    // The following example shows how to access the array of matches for the

    // regular expression rule elements `fruits` and `veggies`, which are

    // specified in the manifest.

    var selectedMatches = Office.context.mailbox.item.getSelectedRegExMatches();

    var fruits = selectedMatches.fruits;

    var veggies = selectedMatches.veggies;

    ```
  name: getSelectedRegExMatches()
  fullName: getSelectedRegExMatches()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSelectedRegExMatches(): any;'
    return:
      type:
      - any
      description: Un objet qui contient les tableaux des chaînes correspondant aux expressions régulières définies dans le fichier manifeste XML. Le nom de chaque tableau est égal à la valeur correspondante de l’attribut RegExName de la règle ItemHasRegularExpressionMatch correspondante ou de l’attribut FilterName de la règle ItemHasKnownEntity correspondante.
- uid: Outlook_1_7.Office.MessageRead.loadCustomPropertiesAsync
  summary: >-
    Charge de manière asynchrone les propriétés personnalisées de ce complément vers l’élément sélectionné.


    Les propriétés personnalisées sont stockées sous la forme de paires clé/valeur qui s’appliquent à une application ou un élément. Cette méthode renvoie un objet CustomProperties dans le rappel, qui fournit des méthodes pour accéder aux propriétés personnalisées propres à l’élément et au complément actifs. Les propriétés personnalisées ne sont pas chiffrées dans l’élément, par conséquent elles ne doivent pas servir d’espace de stockage sécurisé.


    Les propriétés personnalisées sont fournies sous la forme d’un objet CustomProperties dans la propriété asyncResult.value. Cet objet peut être utilisé pour obtenir, définir et supprimer des propriétés personnalisées à partir de l’élément et réenregistrer les modifications apportées au jeu de propriétés personnalisées sur le serveur.


    \[[Ensemble d'API: boîte aux lettres 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Lecture de message</td></tr></table>
  name: loadCustomPropertiesAsync(callback, userContext)
  fullName: loadCustomPropertiesAsync(callback, userContext)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'loadCustomPropertiesAsync(callback: (result: Office.AsyncResult<CustomProperties>) => void, userContext?: any): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: Une fois la méthode exécutée, la fonction transmise au paramètre callback est appelée avec un seul paramètre de type Office. AsyncResult.
      type:
      - '(result: Office.AsyncResult<CustomProperties>) => void'
    - id: userContext
      description: Facultatif. Les développeurs peuvent fournir un objet auquel ils souhaitent accéder dans la fonction de rappel. Cet objet est accessible à l'aide de la propriété asyncResult. asyncContext dans la fonction de rappel.
      type:
      - any
- uid: Outlook_1_7.Office.MessageRead.removeHandlerAsync
  summary: >-
    Supprime les gestionnaires d’événements pour un type d’événement pris en charge.


    Actuellement, les types d'événement `Office.EventType.AppointmentTimeChanged` <!-- -->pris `Office.EventType.RecipientsChanged` <!-- -->en charge `Office.EventType.RecurrenceChanged` <!-- -->sont, et.


    \[[Ensemble d'API: boîte aux lettres 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Lecture de message</td></tr></table>


    En plus de cette signature, la méthode possède également la signature suivante:


    `removeHandlerAsync(eventType: Office.EventType, callback?: (result: Office.AsyncResult<void>) => void): void;`
  name: removeHandlerAsync(eventType, options, callback)
  fullName: removeHandlerAsync(eventType, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeHandlerAsync(eventType: Office.EventType, options?: any, callback?: (result: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: Événement qui doit révoquer le gestionnaire.
      type:
      - Office.EventType
    - id: options
      description: "Facultatif. Littéral d’objet contenant une ou plusieurs des propriétés suivantes. asyncContext: les développeurs peuvent fournir n'importe quel objet auquel ils souhaitent accéder dans la méthode de rappel."
      type:
      - any
    - id: callback
      description: Facultatif. Une fois la méthode exécutée, la fonction transmise au paramètre callback est appelée avec un seul paramètre, asyncResult, qui est un objet Office. AsyncResult.
      type:
      - '(result: Office.AsyncResult<void>) => void'
- uid: Outlook_1_7.Office.MessageRead.removeHandlerAsync_1
  summary: >-
    Supprime les gestionnaires d’événements pour un type d’événement pris en charge.


    Actuellement, les types d'événement `Office.EventType.AppointmentTimeChanged` <!-- -->pris `Office.EventType.RecipientsChanged` <!-- -->en charge `Office.EventType.RecurrenceChanged` <!-- -->sont, et.


    \[[Ensemble d'API: boîte aux lettres 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Lecture de message</td></tr></table>
  name: removeHandlerAsync(eventType, callback)
  fullName: removeHandlerAsync(eventType, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeHandlerAsync(eventType: Office.EventType, callback?: (result: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: Événement qui doit révoquer le gestionnaire.
      type:
      - Office.EventType
    - id: callback
      description: Facultatif. Une fois la méthode exécutée, la fonction transmise au paramètre callback est appelée avec un seul paramètre, asyncResult, qui est un objet Office. AsyncResult.
      type:
      - '(result: Office.AsyncResult<void>) => void'
- uid: Outlook_1_7.Office.MessageRead.attachments
  summary: >-
    Permet d’obtenir les pièces jointes de l’élément sous forme de tableau.


    \[[Ensemble d'API: boîte aux lettres 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Lecture de message</td></tr></table>


    **Remarque**: certains types de fichiers sont bloqués par Outlook en raison de problèmes de sécurité potentiels et ne sont donc pas renvoyés. Pour plus d'informations, consultez la rubrique [pièces jointEs bloquées dans Outlook](https://support.office.com/article/Blocked-attachments-in-Outlook-434752E1-02D3-4E90-9124-8B81E49A8519)<!-- -->.

    #### <a name="examples"></a>Exemples


    ```javascript

    // The following code builds an HTML string with details of all attachments on the current item.

    var item = Office.context.mailbox.item;

    var outputString = "";


    if (item.attachments.length > 0) {
        for (i = 0 ; i < item.attachments.length ; i++) {
            var attachment = item.attachments[i];
            outputString += "<BR>" + i + ". Name: ";
            outputString += attachment.name;
            outputString += "<BR>ID: " + attachment.id;
            outputString += "<BR>contentType: " + attachment.contentType;
            outputString += "<BR>size: " + attachment.size;
            outputString += "<BR>attachmentType: " + attachment.attachmentType;
            outputString += "<BR>isInline: " + attachment.isInline;
        }
    }


    console.log(outputString);

    ```
  name: attachments
  fullName: attachments
  langs:
  - typeScript
  type: property
  syntax:
    content: 'attachments: AttachmentDetails[];'
    return:
      type:
      - AttachmentDetails[]
- uid: Outlook_1_7.Office.MessageRead.body
  summary: >-
    Obtient un objet qui fournit des méthodes permettant de manipuler le corps d’un élément.


    \[[Ensemble d'API: boîte aux lettres 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Lecture de message</td></tr></table>

    ####Voici


    ```javascript

    // This example gets the body of the message in plain text.

    Office.context.mailbox.item.body.getAsync(
        "text",
        { asyncContext: "This is passed to the callback" },
        function callback(result) {
            // Do something with the result.
        });

    // The following is an example of the result parameter passed to the callback function.

    {
        "value": "TEXT of whole body (including threads below)",
        "status": "succeeded",
        "asyncContext": "This is passed to the callback"
    }

    ```
  name: body
  fullName: body
  langs:
  - typeScript
  type: property
  syntax:
    content: 'body: Body;'
    return:
      type:
      - Body
- uid: Outlook_1_7.Office.MessageRead.cc
  summary: >-
    Permet d’accéder aux destinataires en copie carbone (Cc) d’un message. Le type d’objet et le niveau d’accès varient selon le mode de l’élément actif.


    La propriété cc renvoie un tableau contenant un objet EmailAddressDetails pour chaque destinataire répertorié sur la ligne Cc du message. La collection est limitée à 100 membres.


    \[[Ensemble d'API: boîte aux lettres 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Lecture de message</td></tr></table>

    ####Voici


    ```javascript

    console.log(JSON.stringify(Office.context.mailbox.item.cc));

    ```
  name: cc
  fullName: cc
  langs:
  - typeScript
  type: property
  syntax:
    content: 'cc: EmailAddressDetails[];'
    return:
      type:
      - EmailAddressDetails[]
- uid: Outlook_1_7.Office.MessageRead.conversationId
  summary: >-
    Obtient l’identificateur de la conversation qui contient un message particulier.


    Vous pouvez obtenir un nombre entier de cette propriété si votre application de messagerie est activée dans les formulaires de lecture ou les réponses des formulaires de composition. Si, par la suite, l’utilisateur modifie l’objet du message de réponse, lors de l’envoi de la réponse, l’ID de conversation de ce message va changer et la valeur que vous avez obtenue plus tôt ne sera plus applicable.


    Cette propriété obtient une valeur null lorsqu’un élément est ajouté à un formulaire de composition. Si l’utilisateur définit la ligne Objet et enregistre l’élément, la propriété conversationId renvoie une valeur.


    \[[Ensemble d'API: boîte aux lettres 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Lecture de message</td></tr></table>

    ####Voici


    ```javascript

    var conversationId = Office.context.mailbox.item.conversationId;

    console.log("conversationId: " + conversationId);

    ```
  name: conversationId
  fullName: conversationId
  langs:
  - typeScript
  type: property
  syntax:
    content: 'conversationId: string;'
    return:
      type:
      - string
- uid: Outlook_1_7.Office.MessageRead.dateTimeCreated
  summary: >-
    Obtient la date et l’heure de création d’un élément.


    \[[Ensemble d'API: boîte aux lettres 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Lecture de message</td></tr></table>

    ####Voici


    ```javascript

    var dateTimeCreated = Office.context.mailbox.item.dateTimeCreated;

    console.log("Date and time created: " + dateTimeCreated);

    ```
  name: dateTimeCreated
  fullName: dateTimeCreated
  langs:
  - typeScript
  type: property
  syntax:
    content: 'dateTimeCreated: Date;'
    return:
      type:
      - Date
- uid: Outlook_1_7.Office.MessageRead.dateTimeModified
  summary: >-
    Obtient la date et l’heure de la dernière modification d’un élément.


    \[[Ensemble d'API: boîte aux lettres 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Lecture de message</td></tr></table>


    **Remarque**: ce membre n'est pas pris en charge dans Outlook pour iOS ou Outlook pour Android.

    #### <a name="examples"></a>Exemples


    ```javascript

    var dateTimeModified = Office.context.mailbox.item.dateTimeModified;

    console.log("Date and time modified: " + dateTimeModified);

    ```
  name: dateTimeModified
  fullName: dateTimeModified
  langs:
  - typeScript
  type: property
  syntax:
    content: 'dateTimeModified: Date;'
    return:
      type:
      - Date
- uid: Outlook_1_7.Office.MessageRead.from
  summary: >-
    Permet d’obtenir l’adresse de messagerie de l’expéditeur d’un message.


    Les propriétés from et sender représentent la même personne, sauf si le message est envoyé par un délégué. Dans ce cas, la propriété from représente le délégant et la propriété sender représente le délégué.


    **Remarque**: la propriété recipientType de l'objet EmailAddressDetails dans la propriété from n'est pas définie.


    La propriété from renvoie un objet EmailAddressDetails.


    \[[Ensemble d'API: boîte aux lettres 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Lecture de message</td></tr></table>

    ####Voici


    ```javascript

    var from = Office.context.mailbox.item.from;

    console.log("From " + from);

    ```
  name: from
  fullName: from
  langs:
  - typeScript
  type: property
  syntax:
    content: 'from: EmailAddressDetails;'
    return:
      type:
      - EmailAddressDetails
- uid: Outlook_1_7.Office.MessageRead.internetMessageId
  summary: >-
    Obtient l’identificateur de message Internet correspondant à un e-mail.


    \[[Ensemble d'API: boîte aux lettres 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Lecture de message</td></tr></table>

    ####Voici


    ```javascript

    var internetMessageId = Office.context.mailbox.item.internetMessageId;

    console.log("internetMessageId: " + internetMessageId);

    ```
  name: internetMessageId
  fullName: internetMessageId
  langs:
  - typeScript
  type: property
  syntax:
    content: 'internetMessageId: string;'
    return:
      type:
      - string
- uid: Outlook_1_7.Office.MessageRead.itemClass
  summary: >-
    Obtient la classe de l’élément des services web Exchange de l’élément sélectionné.


    Vous pouvez créer des classes de message personnalisées qui étendent une classe de message par défaut, par exemple, une classe de message de rendez-vous personnalisée IPM.Appointment.Contoso.


    \[[Ensemble d'API: boîte aux lettres 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Lecture de message</td></tr></table>


    La propriété itemClass spécifie la classe de message de l’élément sélectionné. Les classes de message par défaut de l’élément de message ou de rendez-vous sont les suivantes.


    <table> <tr> <th>Type</th> <th>Description</th> <th>Classe d'élément</th> </tr> <tr> <td>Éléments de rendez-vous</td> <td>Il s'agit des éléments de calendrier de la classe d'élément IPM. Rendez-vous ou IPM. Appointment. occurrence.</td> <td>Mn. Rendez-vous, IPM. Appointment. occurrence</td> </tr> <tr> <td>Éléments de message</td> <td>Ces éléments incluent les messages électroniques dont la classe de message par défaut est IPM.Note, ainsi que les demandes de réunion, les réponses et les annulations qui utilisent IPM.Schedule.Meeting comme classe de message de base.</td> <td>Mn. Remarque, IPM. La tâche Schedule. Meeting. Request, IPM. Schedule. Meeting. nég, IPM. Schedule. Meeting. POS, IPM. Schedule. Meeting. chevalet, IPM. Schedule. Meeting. Canceled</td> </tr> </table>

    #### Exemples


    ```javascript

    var itemClass = Office.context.mailbox.item.itemClass;

    console.log("Item class: " + itemClass);

    ```
  name: itemClass
  fullName: itemClass
  langs:
  - typeScript
  type: property
  syntax:
    content: 'itemClass: string;'
    return:
      type:
      - string
- uid: Outlook_1_7.Office.MessageRead.itemId
  summary: >-
    Obtient l’identificateur de l’élément des services web Exchange pour l’élément actif.


    La propriété itemId n'est pas disponible en mode composition. Si un identificateur d'élément est requis, la méthode saveAsync peut être utilisée pour enregistrer l'élément dans le magasin, qui renverra l'identificateur d'élément dans le paramètre asyncResult. value dans la fonction de rappel.


    **Remarque**: l'identificateur renvoyé par la propriété ItemId est identique à l'identificateur d'élément des services Web Exchange. La propriété itemId n'est pas identique à l'ID d'entrée Outlook ou à l'ID utilisé par l'API REST Outlook. Avant que vous ne puissiez effectuer des appels d’API REST avec cette valeur, elle doit être convertie à l’aide de la commande Office.context.mailbox.convertToRestId. Pour plus d'informations, consultez [la rubrique utiliser les API REST Outlook à partir d'un complément Outlook](https://docs.microsoft.com/outlook/add-ins/use-rest-api#get-the-item-id)<!-- -->.


    \[[Ensemble d'API: boîte aux lettres 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Lecture de message</td></tr></table>

    ####Voici


    ```javascript

    // The following code checks for the presence of an item

    // identifier. If the `itemId` property returns `null` or

    // `undefined`, it saves the item to the store and gets the

    // item identifier from the asynchronous result.

    var itemId = Office.context.mailbox.item.itemId;

    if (itemId === null || itemId == undefined) {
        Office.context.mailbox.item.saveAsync(function(result) {
            itemId = result.value;
        });
    }

    ```
  name: itemId
  fullName: itemId
  langs:
  - typeScript
  type: property
  syntax:
    content: 'itemId: string;'
    return:
      type:
      - string
- uid: Outlook_1_7.Office.MessageRead.itemType
  summary: >-
    Obtient le type d’élément représenté par une instance.


    La propriété itemType renvoie une des valeurs d’énumération ItemType indiquant si l’instance d’objet item est un message ou un rendez-vous.


    \[[Ensemble d'API: boîte aux lettres 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Lecture de message</td></tr></table>

    ####Voici


    ```javascript

    if (Office.context.mailbox.item.itemType === Office.MailboxEnums.ItemType.Message) {
        // Do something.
    } else {
        // Do something else.
    }

    ```
  name: itemType
  fullName: itemType
  langs:
  - typeScript
  type: property
  syntax:
    content: 'itemType: MailboxEnums.ItemType;'
    return:
      type:
      - MailboxEnums.ItemType
- uid: Outlook_1_7.Office.MessageRead.normalizedSubject
  summary: >-
    Obtient l'objet d'un élément, avec tous les préfixes supprimés (notamment RE: et FWD:).


    La propriété normalizedSubject obtient l’objet de l’élément, sans les préfixes standard (par exemple, RE: et FW:) qui sont ajoutés par les programmes de messagerie électronique. Pour obtenir l’objet de l’élément avec les préfixes intacts, utilisez la propriété subject.


    \[[Ensemble d'API: boîte aux lettres 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Lecture de message</td></tr></table>

    ####Voici


    ```javascript

    var normalizedSubject = Office.context.mailbox.item.normalizedSubject;

    console.log("Normalized subject: " + normalizedSubject);

    ```
  name: normalizedSubject
  fullName: normalizedSubject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'normalizedSubject: string;'
    return:
      type:
      - string
- uid: Outlook_1_7.Office.MessageRead.notificationMessages
  summary: >-
    Obtient les messages de notification pour un élément.


    \[[Ensemble d'API: boîte aux lettres 1,3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Composition ou lecture</td></tr></table>

    ####Voici


    ```javascript

    // Get all notifications.

    Office.context.mailbox.item.notificationMessages.getAllAsync(
        function (asyncResult) {
            console.log(JSON.stringify(asyncResult));
        }
    );

    ```
  name: notificationMessages
  fullName: notificationMessages
  langs:
  - typeScript
  type: property
  syntax:
    content: 'notificationMessages: NotificationMessages;'
    return:
      type:
      - NotificationMessages
- uid: Outlook_1_7.Office.MessageRead.recurrence
  summary: >-
    Obtient la périodicité d'un rendez-vous. Permet d’obtenir la périodicité d’une demande de réunion. Modes lecture et composition pour les éléments de rendez-vous. Mode lecture pour les éléments de demande de réunion.


    La propriété Recurrence renvoie un objet Recurrence pour les demandes de réunion ou de rendez-vous périodiques si un élément est une série ou une instance dans une série. La valeur `null` est renvoyée pour les rendez-vous uniques et les demandes de réunion de rendez-vous uniques. La valeur `undefined` est renvoyée pour les messages qui ne sont pas des demandes de réunion.


    **Remarque**: les demandes de réunion ont une valeur itemClass IPM. Schedule. Meeting. Request.


    **Remarque**: si l'objet Recurrence est null, cela indique que l'objet est un rendez-vous unique ou une demande de réunion d'un seul rendez-vous et non d'une série.


    \[[Ensemble d'API: boîte aux lettres 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Lecture de message</td></tr></table>

    ####Voici


    ```javascript

    var recurrence = Office.context.mailbox.item.recurrence;

    console.log("Recurrence: " + JSON.stringify(recurrence));

    ```
  name: recurrence
  fullName: recurrence
  langs:
  - typeScript
  type: property
  syntax:
    content: 'recurrence: Recurrence;'
    return:
      type:
      - Recurrence
- uid: Outlook_1_7.Office.MessageRead.sender
  summary: >-
    Obtient l’adresse de messagerie de l’expéditeur d’un e-mail.


    Les propriétés from et sender représentent la même personne, sauf si le message est envoyé par un délégué. Dans ce cas, la propriété from représente le délégant et la propriété sender représente le délégué.


    **Remarque**: la propriété recipientType de l'objet EmailAddressDetails dans la propriété sender n'est pas définie.


    \[[Ensemble d'API: boîte aux lettres 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Lecture de message</td></tr></table>

    ####Voici


    ```javascript

    var senderName = Office.context.mailbox.item.sender.displayName;

    var senderAddress = Office.context.mailbox.item.sender.emailAddress;

    console.log("Sender: " + senderName + " (" + senderAddress + ")");

    ```
  name: sender
  fullName: sender
  langs:
  - typeScript
  type: property
  syntax:
    content: 'sender: EmailAddressDetails;'
    return:
      type:
      - EmailAddressDetails
- uid: Outlook_1_7.Office.MessageRead.seriesId
  summary: >-
    Permet d’obtenir l’ID de la série à laquelle une instance appartient.


    Dans OWA et Outlook, seriesId renvoie l'ID des services Web Exchange (EWS) de l'élément parent (série) auquel cet élément appartient. Toutefois, dans iOS et Android, l'seriesId renvoie l'ID REST de l'élément parent.


    **Remarque**: l'identificateur renvoyé par la propriété seriesId est identique à l'identificateur d'élément des services Web Exchange. La propriété seriesId n'est pas identique aux ID Outlook utilisés par l'API REST Outlook. Avant que vous ne puissiez effectuer des appels d’API REST avec cette valeur, elle doit être convertie à l’aide de la commande Office.context.mailbox.convertToRestId. Pour plus d'informations, consultez [la rubrique utiliser les API REST Outlook à partir d'un complément Outlook](https://docs.microsoft.com/outlook/add-ins/use-rest-api)<!-- -->.


    La propriété seriesId renvoie la valeur null pour les éléments qui n'ont pas d'éléments parents comme des rendez-vous uniques, des éléments de série ou des demandes de réunion, et renvoie undefined pour tous les autres éléments qui ne sont pas des demandes de réunion.


    \[[Ensemble d'API: boîte aux lettres 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: "<table><tr><td>[Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>\n\n<tr><td>[Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Lecture de message</td></tr></table>\n####Voici\n\n```javascript\nvar seriesId = Office.context.mailbox.item.seriesId;\n\n// The seriesId property returns null for items that do\n// not have parent items (such as single appointments,\n// series items, or meeting requests) and returns\n// undefined for messages that are not meeting requests.\nvar isSeriesInstance = (seriesId != null);\nconsole.log(\"SeriesId is \" + seriesId \n    + \" and isSeriesInstance is \" + isSeriesInstance);\n```"
  name: seriesId
  fullName: seriesId
  langs:
  - typeScript
  type: property
  syntax:
    content: 'seriesId: string;'
    return:
      type:
      - string
- uid: Outlook_1_7.Office.MessageRead.subject
  summary: >-
    Obtient la description qui apparaît dans le champ objet d'un élément.


    La propriété subject obtient ou définit l’intégralité de l’objet de l’élément, tel qu’il est envoyé par le serveur de messagerie.


    La propriété subject renvoie une chaîne. Utilisez la propriété normalizedSubject pour obtenir l’objet sans les préfixes tels que RE: et FW:.


    \[[Ensemble d'API: boîte aux lettres 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Lecture de message</td></tr></table>

    ####Voici


    ```javascript

    // The following JavaScript code example shows how to access the

    // `subject` property of the current item in Outlook.


    // The initialize function is required for all apps.

    Office.initialize = function () {
        // Checks for the DOM to load using the jQuery ready function.
        $(document).ready(function () {
            // After the DOM is loaded, app-specific code can run.
            var item = Office.context.mailbox.item;
            var subject = item.subject;
            // Continue with processing the subject of the current item,
            // which can be a message or appointment.
        });
    };

    ```
  name: subject
  fullName: subject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'subject: string;'
    return:
      type:
      - string
- uid: Outlook_1_7.Office.MessageRead.to
  summary: >-
    Permet d’accéder aux destinataires figurant sur la ligne À d’un message. Le type d’objet et le niveau d’accès varient selon le mode de l’élément actif.


    La propriété to renvoie un tableau contenant un objet EmailAddressDetails pour chaque destinataire répertorié sur la ligne To du message. La collection est limitée à 100 membres.


    \[[Ensemble d'API: boîte aux lettres 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Lecture de message</td></tr></table>

    ####Voici


    ```javascript

    console.log(JSON.stringify(Office.context.mailbox.item.to));

    ```
  name: to
  fullName: to
  langs:
  - typeScript
  type: property
  syntax:
    content: 'to: EmailAddressDetails[];'
    return:
      type:
      - EmailAddressDetails[]
