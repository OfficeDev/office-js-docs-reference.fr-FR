### YamlMime:TSType
name: PowerPoint.Presentation
uid: powerpoint!PowerPoint.Presentation:class
package: powerpoint!
fullName: PowerPoint.Presentation
summary: '\[[Ensemble d’API : PowerPointApi 1,0](/office/dev/add-ins/reference/requirement-sets/powerpoint-api-requirement-sets)\]'
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: context
  uid: powerpoint!PowerPoint.Presentation#context:member
  package: powerpoint!
  fullName: context
  summary: Contexte de demande associé à l’objet. Cette opération connecte le processus du complément au processus de l’application hôte Office.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="powerpoint!PowerPoint.RequestContext:class" />
- name: title
  uid: powerpoint!PowerPoint.Presentation#title:member
  package: powerpoint!
  fullName: title
  summary: ''
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly title: string;'
    return:
      type: string
methods:
- name: load(options)
  uid: powerpoint!PowerPoint.Presentation#load:member(1)
  package: powerpoint!
  fullName: load(options)
  summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(options?: PowerPoint.Interfaces.PresentationLoadOptions): PowerPoint.Presentation;'
    parameters:
    - id: options
      description: Fournit des options pour les propriétés de l’objet à charger.
      type: <xref uid="powerpoint!PowerPoint.Interfaces.PresentationLoadOptions:interface" />
    return:
      type: <xref uid="powerpoint!PowerPoint.Presentation:class" />
      description: ''
- name: load(propertyNames)
  uid: powerpoint!PowerPoint.Presentation#load:member(2)
  package: powerpoint!
  fullName: load(propertyNames)
  summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): PowerPoint.Presentation;'
    parameters:
    - id: propertyNames
      description: Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.
      type: string | string[]
    return:
      type: <xref uid="powerpoint!PowerPoint.Presentation:class" />
      description: ''
- name: load(propertyNamesAndPaths)
  uid: powerpoint!PowerPoint.Presentation#load:member(3)
  package: powerpoint!
  fullName: load(propertyNamesAndPaths)
  summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(propertyNamesAndPaths?: {
                  select?: string;
                  expand?: string;
              }): PowerPoint.Presentation;
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et `propertyNamesAndPaths.expand` une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.'
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="powerpoint!PowerPoint.Presentation:class" />
      description: ''
- name: toJSON()
  uid: powerpoint!PowerPoint.Presentation#toJSON:member(1)
  package: powerpoint!
  fullName: toJSON()
  summary: Remplace la méthode JavaScript afin `toJSON()` de fournir une sortie plus utile lorsqu’un objet d’API est transmis à `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, à son tour, appelle la `toJSON` méthode de l’objet qui lui est passé.) Tandis que l’objet PowerPoint. Presentation d’origine est un objet API, la `toJSON` méthode renvoie un objet JavaScript simple (tapé comme `PowerPoint.Interfaces.PresentationData`<!-- -->) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l’objet d’origine.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): PowerPoint.Interfaces.PresentationData;'
    return:
      type: <xref uid="powerpoint!PowerPoint.Interfaces.PresentationData:interface" />
      description: ''
extends: <xref uid="powerpoint!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: 86d6bb48663ab9c3b49f0a6668fff06eed338c44
  ms.sourcegitcommit: 3bab97ab3b91da7cca497f6fc895408a76bd8b46
  ms.translationtype: MT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 11/18/2020
  ms.locfileid: "49150315"
