### YamlMime:UniversalReference
ms.openlocfilehash: 42fe97363078120d9715b3091764fcd5626d2c6e
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 02/13/2019
ms.locfileid: "29980064"
items:
- uid: outlook.Office.AttachmentContent
  summary: >-
    Représente le contenu d’une pièce jointe sur un élément de message ou un rendez-vous.


    \[[Du jeu d’API : aperçu de la boîte aux lettres](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Composition ou lecture</td></tr></table>
  isPreview: true
  name: Office.AttachmentContent
  fullName: Office.AttachmentContent
  langs:
  - typeScript
  type: interface
  package: outlook
  children:
  - outlook.Office.AttachmentContent.content
  - outlook.Office.AttachmentContent.format
- uid: outlook.Office.AttachmentContent.content
  summary: Le contenu d’une pièce jointe en tant que chaîne.
  isPreview: true
  name: content
  fullName: content
  langs:
  - typeScript
  type: property
  syntax:
    content: 'content: string;'
    return:
      type:
      - string
- uid: outlook.Office.AttachmentContent.format
  summary: >-
    Le format de chaîne à utiliser pour le contenu d’une pièce jointe.


    Pour les pièces jointes, la mise en forme est une chaîne codée en base64.


    Pour les pièces jointes d’élément qui représentent les messages, la mise en forme est une chaîne qui représente un fichier de mise en forme .eml.


    Pour les pièces jointes d’élément qui représentent les éléments de calendrier, la mise en forme est une chaîne qui représente un fichier Assurez-vous iCalendar.


    Les pièces jointes dans le nuage, la mise en forme est une chaîne d’URL.
  isPreview: true
  name: format
  fullName: format
  langs:
  - typeScript
  type: property
  syntax:
    content: 'format: MailboxEnums.AttachmentContentFormat;'
    return:
      type:
      - MailboxEnums.AttachmentContentFormat
      description: "\n#### <a name=\"examples\"></a>範例\n\n```javascript\nvar item = Office.context.mailbox.item;\nvar listOfAttachments = [];\nitem.getAttachmentsAsync(callback);\n\nfunction callback(result) {\n    if (result.value.length > 0) {\n        for (i = 0 ; i < result.value.length ; i++) {\n            var options = {asyncContext: {type: result.value[i].attachmentType}};\n            getAttachmentContentAsync(result.value[i].id, options, handleAttachmentsCallback);\n        }\n    }\n}\n\nfunction handleAttachmentsCallback(result) {\n    // parse string to be a url, an .eml file, a base64-encoded string, or an .icalendar file\n    if (result.format === Office.MailboxEnums.AttachmentContentFormat.Base64) {\n        // handle file attachment\n    } else if (result.format === Office.MailboxEnums.AttachmentContentFormat.Eml) {\n        // handle email item attachment\n    } else if (result.format === Office.MailboxEnums.AttachmentContentFormat.ICalendar) {\n        // handle .icalender attachment\n    } else if (result.format === Office.MailboxEnums.AttachmentContentFormat.Url) {\n        // handle cloud attachment\n    } else {\n        // handle attachment formats that are not supported\n    }\n}\n```"
