### YamlMime:UniversalReference
items:
  - uid: 'outlook!Office.IsAllDayEvent:interface'
    summary: "Fournit des méthodes pour obtenir et définir l’état de l’événement sur une journée entière d’une réunion dans un complément Outlook.\n\n\\[[Ensemble d’API\_: aperçu de boîte aux lettres](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\\]"
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)**:`ReadItem`

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)**: composition
    isPreview: true
    name: Office.IsAllDayEvent
    fullName: Office.IsAllDayEvent
    langs:
      - typeScript
    type: interface
    package: outlook!
    children:
      - 'outlook!Office.IsAllDayEvent#getAsync:member(1)'
      - 'outlook!Office.IsAllDayEvent#getAsync:member(2)'
      - 'outlook!Office.IsAllDayEvent#setAsync:member(1)'
      - 'outlook!Office.IsAllDayEvent#setAsync:member(2)'
  - uid: 'outlook!Office.IsAllDayEvent#getAsync:member(1)'
    summary: "Obtient la valeur booléenne indiquant si l’événement est tous les jours ou non.\n\n\\[[Ensemble d’API\_: aperçu de boîte aux lettres](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\\]"
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)**:`ReadItem`

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)**: composition
    isPreview: true
    name: 'getAsync(options, callback)'
    fullName: 'getAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAsync(options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<boolean>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: 'Littéral d’objet contenant une ou plusieurs des propriétés suivantes. `asyncContext`<!-- -->: Les développeurs peuvent fournir n’importe quel objet auquel ils souhaitent accéder dans la méthode de rappel.'
          type:
            - 'outlook!Office.AsyncContextOptions:interface'
        - id: callback
          description: 'Une fois la méthode exécutée, la fonction transmise `callback` au paramètre est appelée avec un seul paramètre de type`Office.AsyncResult`<!-- -->.'
          type:
            - 'outlook!Office.IsAllDayEvent#getAsync~0:complex'
  - uid: 'outlook!Office.IsAllDayEvent#getAsync:member(2)'
    summary: "Obtient la valeur booléenne indiquant si l’événement est tous les jours ou non.\n\n\\[[Ensemble d’API\_: aperçu de boîte aux lettres](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\\]"
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)**:`ReadItem`

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)**: composition

      #### <a name="examples"></a>Exemples

      ```javascript
      Office.context.mailbox.item.isAllDayEvent.getAsync(function(asyncResult) {
        if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
          console.log("Is this an all-day event? " + asyncResult.value);
        } else {
          console.log("Failed to get if this is an all-day event. Error: " + JSON.stringify(asyncResult.error));
        }
      });
      ```
    isPreview: true
    name: getAsync(callback)
    fullName: getAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAsync(callback: (asyncResult: Office.AsyncResult<boolean>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: 'Une fois la méthode exécutée, la fonction transmise `callback` au paramètre est appelée avec un seul paramètre de type`Office.AsyncResult`<!-- -->.'
          type:
            - 'outlook!Office.IsAllDayEvent#getAsync~1:complex'
  - uid: 'outlook!Office.IsAllDayEvent#setAsync:member(1)'
    summary: "Définit l’état d’événement sur une journée entière d’un rendez-vous.\n\n\\[[Ensemble d’API\_: aperçu de boîte aux lettres](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\\]"
    remarks: "Si un rendez-vous est marqué comme un événement d’une journée entière\_:-l’heure de début et de fin sera marquée comme suit\_: 12:00 AM (tout comme dans l’interface utilisateur d’Outlook). L’heure de début renverra 12:00 AM et l’heure de fin sera de 12:00 AM le jour suivant.\n\n**<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)**:`ReadWriteItem`\n\n**<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)**: composition"
    isPreview: true
    name: 'setAsync(isAllDayEvent, options, callback)'
    fullName: 'setAsync(isAllDayEvent, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setAsync(isAllDayEvent: boolean, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: isAllDayEvent
          description: valeur booléenne pour définir l’état de l’événement d’une journée entière.
          type:
            - boolean
        - id: options
          description: 'Facultatif. Littéral d’objet contenant une ou plusieurs des propriétés suivantes. `asyncContext`<!-- -->: Les développeurs peuvent fournir n’importe quel objet auquel ils souhaitent accéder dans la méthode de rappel.'
          type:
            - 'outlook!Office.AsyncContextOptions:interface'
        - id: callback
          description: 'Facultatif. Une fois la méthode exécutée, la fonction transmise `callback` au paramètre est appelée avec un seul paramètre,`asyncResult`<!-- -->, qui est un `Office.AsyncResult` objet.'
          type:
            - 'outlook!Office.IsAllDayEvent#setAsync~0:complex'
  - uid: 'outlook!Office.IsAllDayEvent#setAsync:member(2)'
    summary: "Définit l’état d’événement sur une journée entière d’un rendez-vous.\n\n\\[[Ensemble d’API\_: aperçu de boîte aux lettres](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\\]"
    remarks: "Si un rendez-vous est marqué comme un événement d’une journée entière\_:-l’heure de début et de fin sera marquée comme suit\_: 12:00 AM (tout comme dans l’interface utilisateur d’Outlook). L’heure de début renverra 12:00 AM et l’heure de fin sera de 12:00 AM le jour suivant.\n\n**<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)**:`ReadWriteItem`\n\n**<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)**: composition\n\n#### <a name=\"examples\"></a>Exemples\n\n```javascript\nOffice.context.mailbox.item.isAllDayEvent.setAsync(true, function(asyncResult) {\n  if (asyncResult.status === Office.AsyncResultStatus.Failed) {\n    console.log(\"Failed to set all-day event: \" + JSON.stringify(asyncResult.error));\n  } else {\n    console.log(\"Appointment set to all-day event.\");\n  }\n});\n```"
    isPreview: true
    name: 'setAsync(isAllDayEvent, callback)'
    fullName: 'setAsync(isAllDayEvent, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setAsync(isAllDayEvent: boolean, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: isAllDayEvent
          description: valeur booléenne pour définir l’état de l’événement d’une journée entière.
          type:
            - boolean
        - id: callback
          description: 'Facultatif. Une fois la méthode exécutée, la fonction transmise `callback` au paramètre est appelée avec un seul paramètre,`asyncResult`<!-- -->, qui est un `Office.AsyncResult` objet.'
          type:
            - 'outlook!Office.IsAllDayEvent#setAsync~1:complex'
references:
  - uid: 'outlook!Office.AsyncContextOptions:interface'
    name: Office.AsyncContextOptions
  - uid: 'outlook!Office.IsAllDayEvent#getAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<boolean>) => void'
    fullName: '(asyncResult: Office.AsyncResult<boolean>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <boolean>) => void
        fullName: <boolean>) => void
  - uid: 'outlook!Office.IsAllDayEvent#getAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<boolean>) => void'
    fullName: '(asyncResult: Office.AsyncResult<boolean>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <boolean>) => void
        fullName: <boolean>) => void
  - uid: 'outlook!Office.IsAllDayEvent#setAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.IsAllDayEvent#setAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void