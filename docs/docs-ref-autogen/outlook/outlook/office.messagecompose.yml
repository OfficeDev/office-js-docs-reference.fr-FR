### YamlMime:UniversalReference
items:
  - uid: outlook.Office.MessageCompose
    summary: |-
      Mode de composition de message d' [Office. Context. Mailbox. Item](xref:outlook.Office.Item)<!-- -->.

      **Important**: il s’agit d’un objet Outlook interne, qui n’est pas directement exposé via les interfaces existantes. Vous devez traiter ceci comme un mode d’Office. Context. Mailbox. Item. Pour plus d’informations, reportez-vous à la page [modèle objet](https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/preview-requirement-set/office.context.mailbox.item) .
    name: Office.MessageCompose
    fullName: Office.MessageCompose
    langs:
      - typeScript
    type: interface
    extends:
      - outlook.Office.Message
      - outlook.Office.ItemCompose
    package: outlook
    children:
      - outlook.Office.MessageCompose.addFileAttachmentAsync
      - outlook.Office.MessageCompose.addFileAttachmentAsync_1
      - outlook.Office.MessageCompose.addFileAttachmentFromBase64Async
      - outlook.Office.MessageCompose.addFileAttachmentFromBase64Async_1
      - outlook.Office.MessageCompose.addHandlerAsync
      - outlook.Office.MessageCompose.addHandlerAsync_1
      - outlook.Office.MessageCompose.addItemAttachmentAsync
      - outlook.Office.MessageCompose.addItemAttachmentAsync_1
      - outlook.Office.MessageCompose.close
      - outlook.Office.MessageCompose.getAttachmentsAsync
      - outlook.Office.MessageCompose.getAttachmentsAsync_1
      - outlook.Office.MessageCompose.getInitializationContextAsync
      - outlook.Office.MessageCompose.getInitializationContextAsync_1
      - outlook.Office.MessageCompose.getItemIdAsync
      - outlook.Office.MessageCompose.getItemIdAsync_1
      - outlook.Office.MessageCompose.getSelectedDataAsync
      - outlook.Office.MessageCompose.getSelectedDataAsync_1
      - outlook.Office.MessageCompose.loadCustomPropertiesAsync
      - outlook.Office.MessageCompose.removeAttachmentAsync
      - outlook.Office.MessageCompose.removeAttachmentAsync_1
      - outlook.Office.MessageCompose.removeHandlerAsync
      - outlook.Office.MessageCompose.removeHandlerAsync_1
      - outlook.Office.MessageCompose.saveAsync
      - outlook.Office.MessageCompose.saveAsync_1
      - outlook.Office.MessageCompose.setSelectedDataAsync
      - outlook.Office.MessageCompose.setSelectedDataAsync_1
      - outlook.Office.MessageCompose.bcc
      - outlook.Office.MessageCompose.body
      - outlook.Office.MessageCompose.categories
      - outlook.Office.MessageCompose.cc
      - outlook.Office.MessageCompose.conversationId
      - outlook.Office.MessageCompose.from
      - outlook.Office.MessageCompose.internetHeaders
      - outlook.Office.MessageCompose.itemType
      - outlook.Office.MessageCompose.notificationMessages
      - outlook.Office.MessageCompose.seriesId
      - outlook.Office.MessageCompose.subject
      - outlook.Office.MessageCompose.to
  - uid: outlook.Office.MessageCompose.addFileAttachmentAsync
    summary: |-
      Ajoute un fichier à un message ou un rendez-vous en pièce jointe.

      La méthode addFileAttachmentAsync télécharge le fichier à l’URI spécifié et le joint à l’élément dans le formulaire de composition.

      L’identificateur peut être utilisé avec la méthode removeAttachmentAsync pour supprimer la pièce jointe dans la même session.

      \[[Ensemble d’API: boîte aux lettres 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadWriteItem

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition de message

      **Erreurs**:

      - AttachmentSizeExceeded: la pièce jointe est plus grande que autorisée.

      - FileTypeNotSupported: la pièce jointe a une extension qui n’est pas autorisée.

      - NumberOfAttachmentsExceeded: le message ou le rendez-vous contient trop de pièces jointes.

      #### <a name="examples"></a>Exemples

      ```javascript
      function callback(result) {
          if (result.error) {
              console.log(result.error);
          } else {
              console.log("Attachment added");
          }
      }

      function addAttachment() {
          // The values in asyncContext can be accessed in the callback.
          var options = { 'asyncContext': { var1: 1, var2: 2 } };

          var attachmentURL = "https://contoso.com/rtm/icon.png";
          Office.context.mailbox.item.addFileAttachmentAsync(attachmentURL, attachmentURL, options, callback);
      }
      ```
      ```javascript
      // The following example adds an image file as an inline attachment and
      // references the attachment in the message body.
      Office.context.mailbox.item.addFileAttachmentAsync(
          "http://i.imgur.com/WJXklif.png",
          "cute_bird.png",
          {
              isInline: true
          },
          function (asyncResult) {
              Office.context.mailbox.item.body.setAsync(
                  "<p>Here's a cute bird!</p><img src='cid:cute_bird.png'>",
                  {
                      "coercionType": "html"
                  },
                  function (asyncResult) {
                      // Do something here.
                  });
          });
      ```
    name: 'addFileAttachmentAsync(uri, attachmentName, options, callback)'
    fullName: 'addFileAttachmentAsync(uri, attachmentName, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFileAttachmentAsync(uri: string, attachmentName: string, options?: Office.AsyncContextOptions & { isInline: boolean }, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: uri
          description: "URI indiquant l’emplacement du fichier à joindre au message ou au rendez-vous. La longueur maximale est de 2\_048\_caractères."
          type:
            - string
        - id: attachmentName
          description: "Nom de la pièce jointe affiché lors de son chargement. La longueur maximale est de 255\_caractères."
          type:
            - string
        - id: options
          description: 'Facultatif. Littéral d’objet contenant une ou plusieurs des propriétés suivantes. asyncContext: les développeurs peuvent fournir n’importe quel objet auquel ils souhaitent accéder dans la méthode de rappel. isInline: si la valeur est définie sur true, indique que la pièce jointe s’affichera en ligne dans le corps du message et ne doit pas être affichée dans la liste des pièces jointes.'
          type:
            - 'Office.AsyncContextOptions & { isInline: boolean }'
        - id: callback
          description: 'Facultatif. Une fois la méthode exécutée, la fonction transmise au paramètre callback est appelée avec un seul paramètre de type Office. AsyncResult. En cas de réussite, l’identificateur de pièce jointe est fourni dans la propriété asyncResult. Value. En cas d’échec de téléchargement de la pièce jointe, l’objet asyncResult contient un objet Error qui fournit une description de l’erreur.'
          type:
            - '(asyncResult: Office.AsyncResult<string>) => void'
  - uid: outlook.Office.MessageCompose.addFileAttachmentAsync_1
    summary: |-
      Ajoute un fichier à un message ou un rendez-vous en pièce jointe.

      La méthode addFileAttachmentAsync télécharge le fichier à l’URI spécifié et le joint à l’élément dans le formulaire de composition.

      L’identificateur peut être utilisé avec la méthode removeAttachmentAsync pour supprimer la pièce jointe dans la même session.

      \[[Ensemble d’API: boîte aux lettres 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadWriteItem

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition de message

      **Erreurs**:

      - AttachmentSizeExceeded: la pièce jointe est plus grande que autorisée.

      - FileTypeNotSupported: la pièce jointe a une extension qui n’est pas autorisée.

      - NumberOfAttachmentsExceeded: le message ou le rendez-vous contient trop de pièces jointes.
    name: 'addFileAttachmentAsync(uri, attachmentName, callback)'
    fullName: 'addFileAttachmentAsync(uri, attachmentName, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFileAttachmentAsync(uri: string, attachmentName: string, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: uri
          description: "URI indiquant l’emplacement du fichier à joindre au message ou au rendez-vous. La longueur maximale est de 2\_048\_caractères."
          type:
            - string
        - id: attachmentName
          description: "Nom de la pièce jointe affiché lors de son chargement. La longueur maximale est de 255\_caractères."
          type:
            - string
        - id: callback
          description: 'Facultatif. Une fois la méthode exécutée, la fonction transmise au paramètre callback est appelée avec un seul paramètre de type Office. AsyncResult. En cas de réussite, l’identificateur de pièce jointe est fourni dans la propriété asyncResult. Value. En cas d’échec de téléchargement de la pièce jointe, l’objet asyncResult contient un objet Error qui fournit une description de l’erreur.'
          type:
            - '(asyncResult: Office.AsyncResult<string>) => void'
  - uid: outlook.Office.MessageCompose.addFileAttachmentFromBase64Async
    summary: |-
      Ajoute un fichier à un message ou un rendez-vous en pièce jointe.

      La méthode addFileAttachmentFromBase64Async télécharge le fichier à partir du codage Base64 et le joint à l’élément dans le formulaire de composition. Cette méthode renvoie l’identificateur de pièce jointe dans l’objet asyncResult. Value.

      L’identificateur peut être utilisé avec la méthode removeAttachmentAsync pour supprimer la pièce jointe dans la même session.

      \[[Ensemble d’API: aperçu de boîte aux lettres](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadWriteItem

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition de message

      **Erreurs**:

      - AttachmentSizeExceeded: la pièce jointe est plus grande que autorisée.

      - FileTypeNotSupported: la pièce jointe a une extension qui n’est pas autorisée.

      - NumberOfAttachmentsExceeded: le message ou le rendez-vous contient trop de pièces jointes.

      #### <a name="examples"></a>Exemples

      ```javascript
      Office.context.mailbox.item.addFileAttachmentFromBase64Async(
          base64String,
          "cute_bird.png",
          {
              isInline: true
          },
          function (asyncResult) {
              Office.context.mailbox.item.body.setAsync(
                  "<p>Here's a cute bird!</p><img src='cid:cute_bird.png'>",
                  {
                      "coercionType": "html"
                  },
                  function (asyncResult) {
                      // Do something here.
                  });
          });
      ```
    isPreview: true
    name: 'addFileAttachmentFromBase64Async(base64File, attachmentName, options, callback)'
    fullName: 'addFileAttachmentFromBase64Async(base64File, attachmentName, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFileAttachmentFromBase64Async(base64File: string, attachmentName: string, options?: Office.AsyncContextOptions & { isInline: boolean }, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: base64File
          description: Contenu encodé en base64 d’une image ou d’un fichier à ajouter à un message électronique ou à un événement.
          type:
            - string
        - id: attachmentName
          description: "Nom de la pièce jointe affiché lors de son chargement. La longueur maximale est de 255\_caractères."
          type:
            - string
        - id: options
          description: 'Facultatif. Littéral d’objet contenant une ou plusieurs des propriétés suivantes. asyncContext: les développeurs peuvent fournir n’importe quel objet auquel ils souhaitent accéder dans la méthode de rappel. isInline: si la valeur est définie sur true, indique que la pièce jointe est affichée en ligne dans le corps du message et qu’elle ne doit pas être affichée dans la liste des pièces jointes.'
          type:
            - 'Office.AsyncContextOptions & { isInline: boolean }'
        - id: callback
          description: 'Facultatif. Une fois la méthode exécutée, la fonction transmise au paramètre callback est appelée avec un seul paramètre de type Office. AsyncResult. En cas de réussite, l’identificateur de pièce jointe est fourni dans la propriété asyncResult. Value. En cas d’échec de téléchargement de la pièce jointe, l’objet asyncResult contient un objet Error qui fournit une description de l’erreur.'
          type:
            - '(asyncResult: Office.AsyncResult<string>) => void'
  - uid: outlook.Office.MessageCompose.addFileAttachmentFromBase64Async_1
    summary: |-
      Ajoute un fichier à un message ou un rendez-vous en pièce jointe.

      La méthode addFileAttachmentFromBase64Async télécharge le fichier à partir du codage Base64 et le joint à l’élément dans le formulaire de composition. Cette méthode renvoie l’identificateur de pièce jointe dans l’objet asyncResult. Value.

      L’identificateur peut être utilisé avec la méthode removeAttachmentAsync pour supprimer la pièce jointe dans la même session.

      \[[Ensemble d’API: aperçu de boîte aux lettres](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadWriteItem

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition de message

      **Erreurs**:

      - AttachmentSizeExceeded: la pièce jointe est plus grande que autorisée.

      - FileTypeNotSupported: la pièce jointe a une extension qui n’est pas autorisée.

      - NumberOfAttachmentsExceeded: le message ou le rendez-vous contient trop de pièces jointes.
    isPreview: true
    name: 'addFileAttachmentFromBase64Async(base64File, attachmentName, callback)'
    fullName: 'addFileAttachmentFromBase64Async(base64File, attachmentName, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFileAttachmentFromBase64Async(base64File: string, attachmentName: string, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: base64File
          description: Contenu encodé en base64 d’une image ou d’un fichier à ajouter à un message électronique ou à un événement.
          type:
            - string
        - id: attachmentName
          description: "Nom de la pièce jointe affiché lors de son chargement. La longueur maximale est de 255\_caractères."
          type:
            - string
        - id: callback
          description: 'Facultatif. Une fois la méthode exécutée, la fonction transmise au paramètre callback est appelée avec un seul paramètre de type Office. AsyncResult. En cas de réussite, l’identificateur de pièce jointe est fourni dans la propriété asyncResult. Value. En cas d’échec de téléchargement de la pièce jointe, l’objet asyncResult contient un objet Error qui fournit une description de l’erreur.'
          type:
            - '(asyncResult: Office.AsyncResult<string>) => void'
  - uid: outlook.Office.MessageCompose.addHandlerAsync
    summary: |-
      ajoute un gestionnaire d’événements pour un événement pris en charge. **Remarque**: les événements ne sont disponibles qu’avec le volet Office.

      Actuellement, les types d’événement pris en charge sont`Office.EventType.AppointmentTimeChanged`<!-- -->, `Office.EventType.RecipientsChanged`<!-- -->, et`Office.EventType.RecurrenceChanged`<!-- -->. En mode Aperçu `Office.EventType.AttachmentsChanged` , `Office.EventType.EnhancedLocationsChanged` et sont également pris en charge.

      \[[Ensemble d’API: boîte aux lettres 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadItem

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition de message
    name: 'addHandlerAsync(eventType, handler, options, callback)'
    fullName: 'addHandlerAsync(eventType, handler, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addHandlerAsync(eventType: Office.EventType | string, handler: any, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: Événement qui doit appeler le gestionnaire.
          type:
            - Office.EventType | string
        - id: handler
          description: 'Fonction qui gère l’événement. Cette fonction doit accepter un seul paramètre, qui est un littéral d’objet. La propriété type sur le paramètre correspond au paramètre eventType transmis à addHandlerAsync.'
          type:
            - any
        - id: options
          description: 'Facultatif. Littéral d’objet contenant une ou plusieurs des propriétés suivantes. asyncContext: les développeurs peuvent fournir n’importe quel objet auquel ils souhaitent accéder dans la méthode de rappel.'
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: 'Facultatif. Une fois la méthode exécutée, la fonction transmise au paramètre callback est appelée avec un seul paramètre, asyncResult, qui est un objet Office. AsyncResult.'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: outlook.Office.MessageCompose.addHandlerAsync_1
    summary: |-
      ajoute un gestionnaire d’événements pour un événement pris en charge. **Remarque**: les événements ne sont disponibles qu’avec le volet Office.

      Actuellement, les types d’événement pris en charge sont`Office.EventType.AppointmentTimeChanged`<!-- -->, `Office.EventType.RecipientsChanged`<!-- -->, et`Office.EventType.RecurrenceChanged`<!-- -->. En mode Aperçu `Office.EventType.AttachmentsChanged` , `Office.EventType.EnhancedLocationsChanged` et sont également pris en charge.

      \[[Ensemble d’API: boîte aux lettres 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadItem

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition de message
    name: 'addHandlerAsync(eventType, handler, callback)'
    fullName: 'addHandlerAsync(eventType, handler, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addHandlerAsync(eventType: Office.EventType | string, handler: any, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: Événement qui doit appeler le gestionnaire.
          type:
            - Office.EventType | string
        - id: handler
          description: 'Fonction qui gère l’événement. Cette fonction doit accepter un seul paramètre, qui est un littéral d’objet. La propriété type sur le paramètre correspond au paramètre eventType transmis à addHandlerAsync.'
          type:
            - any
        - id: callback
          description: 'Facultatif. Une fois la méthode exécutée, la fonction transmise au paramètre callback est appelée avec un seul paramètre, asyncResult, qui est un objet Office. AsyncResult.'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: outlook.Office.MessageCompose.addItemAttachmentAsync
    summary: |-
      Ajoute un élément Exchange, comme un message, en pièce jointe au message ou au rendez-vous.

      La méthode addItemAttachmentAsync attache l’élément avec l’identificateur Exchange spécifié à l’élément dans le formulaire de composition. Si vous spécifiez une méthode de rappel, la méthode est appelée avec un paramètre, asyncResult, qui contient l’identificateur de pièce jointe ou un code indiquant toute erreur survenue lors de l’ajout de l’élément en tant que pièce jointe. Vous pouvez utiliser le paramètre options pour transmettre des informations d’État à la méthode de rappel, si nécessaire.

      L’identificateur peut être utilisé avec la méthode removeAttachmentAsync pour supprimer la pièce jointe dans la même session.

      Si votre complément Office est en cours d’exécution dans Outlook sur le Web, la méthode addItemAttachmentAsync peut joindre des éléments à des éléments autres que l’élément que vous modifiez; Toutefois, cette option n’est pas prise en charge et n’est pas recommandée.

      \[[Ensemble d’API: boîte aux lettres 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadWriteItem

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition de message

      **Erreurs**:

      - NumberOfAttachmentsExceeded: le message ou le rendez-vous contient trop de pièces jointes.

      #### <a name="examples"></a>Exemples

      ```javascript
      // The following example adds an existing Outlook item as an attachment
      // with the name `My Attachment`.
      function callback(result) {
          if (result.error) {
              console.log(result.error);
          } else {
              console.log("Attachment added");
          }
      }

      function addAttachment() {
          // EWS ID of item to attach (shortened for readability).
          var itemId = "AAMkADI1...AAA=";

          // The values in asyncContext can be accessed in the callback.
          var options = { 'asyncContext': { var1: 1, var2: 2 } };

          Office.context.mailbox.item.addItemAttachmentAsync(itemId, "My Attachment", options, callback);
      }
      ```
    name: 'addItemAttachmentAsync(itemId, attachmentName, options, callback)'
    fullName: 'addItemAttachmentAsync(itemId, attachmentName, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addItemAttachmentAsync(itemId: any, attachmentName: string, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: itemId
          description: "Identificateur Exchange de l’élément à joindre. La taille maximale est de 100\_caractères."
          type:
            - any
        - id: attachmentName
          description: "Nom de la pièce jointe affiché lors de son chargement. La longueur maximale est de 255\_caractères."
          type:
            - string
        - id: options
          description: 'Facultatif. Littéral d’objet contenant une ou plusieurs des propriétés suivantes. asyncContext: les développeurs peuvent fournir n’importe quel objet auquel ils souhaitent accéder dans la méthode de rappel.'
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: 'Facultatif. Une fois la méthode exécutée, la fonction transmise au paramètre callback est appelée avec un seul paramètre de type Office. AsyncResult. En cas de réussite, l’identificateur de pièce jointe est fourni dans la propriété asyncResult. Value. En cas d’échec de l’ajout de la pièce jointe, l’objet asyncResult contient un objet Error qui fournit une description de l’erreur.'
          type:
            - '(asyncResult: Office.AsyncResult<string>) => void'
  - uid: outlook.Office.MessageCompose.addItemAttachmentAsync_1
    summary: |-
      Ajoute un élément Exchange, comme un message, en pièce jointe au message ou au rendez-vous.

      La méthode addItemAttachmentAsync attache l’élément avec l’identificateur Exchange spécifié à l’élément dans le formulaire de composition. Si vous spécifiez une méthode de rappel, la méthode est appelée avec un paramètre, asyncResult, qui contient l’identificateur de pièce jointe ou un code indiquant toute erreur survenue lors de l’ajout de l’élément en tant que pièce jointe. Vous pouvez utiliser le paramètre options pour transmettre des informations d’État à la méthode de rappel, si nécessaire.

      L’identificateur peut être utilisé avec la méthode removeAttachmentAsync pour supprimer la pièce jointe dans la même session.

      Si votre complément Office est en cours d’exécution dans Outlook sur le Web, la méthode addItemAttachmentAsync peut joindre des éléments à des éléments autres que l’élément que vous modifiez; Toutefois, cette option n’est pas prise en charge et n’est pas recommandée.

      \[[Ensemble d’API: boîte aux lettres 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadWriteItem

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition de message

      **Erreurs**:

      - NumberOfAttachmentsExceeded: le message ou le rendez-vous contient trop de pièces jointes.
    name: 'addItemAttachmentAsync(itemId, attachmentName, callback)'
    fullName: 'addItemAttachmentAsync(itemId, attachmentName, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addItemAttachmentAsync(itemId: any, attachmentName: string, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: itemId
          description: "Identificateur Exchange de l’élément à joindre. La taille maximale est de 100\_caractères."
          type:
            - any
        - id: attachmentName
          description: "Nom de la pièce jointe affiché lors de son chargement. La longueur maximale est de 255\_caractères."
          type:
            - string
        - id: callback
          description: 'Facultatif. Une fois la méthode exécutée, la fonction transmise au paramètre callback est appelée avec un seul paramètre de type Office. AsyncResult. En cas de réussite, l’identificateur de pièce jointe est fourni dans la propriété asyncResult. Value. En cas d’échec de l’ajout de la pièce jointe, l’objet asyncResult contient un objet Error qui fournit une description de l’erreur.'
          type:
            - '(asyncResult: Office.AsyncResult<string>) => void'
  - uid: outlook.Office.MessageCompose.close
    summary: |-
      Ferme l’élément en cours composé.

      Les comportements de la méthode Close dépendent de l’état actuel de l’élément composé. Si l’élément comporte des modifications non enregistrées, le client invite l’utilisateur à enregistrer, ignorer ou fermer l’action.

      Dans le client de bureau Outlook, si le message est une réponse incorporée, la méthode Close n’a aucun effet.

      **Remarque**: dans Outlook sur le Web, si l’élément est un rendez-vous et qu’il a été précédemment enregistré à l’aide de saveAsync, l’utilisateur est invité à enregistrer, ignorer ou annuler même si aucune modification n’a eu lieu depuis le dernier enregistrement de l’élément.

      \[[Ensemble d’API: boîte aux lettres 1,3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: restreint

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition de message
    name: close()
    fullName: close()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'close(): void;'
      return:
        type:
          - void
        description: ''
  - uid: outlook.Office.MessageCompose.getAttachmentsAsync
    summary: |-
      Obtient les pièces jointes de l’élément sous la forme d’un tableau.

      \[[Ensemble d’API: aperçu de boîte aux lettres](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadItem

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition de message
    isPreview: true
    name: 'getAttachmentsAsync(options, callback)'
    fullName: 'getAttachmentsAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAttachmentsAsync(options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<AttachmentDetails[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: 'Facultatif. Littéral d’objet contenant une ou plusieurs des propriétés suivantes. asyncContext: les développeurs peuvent fournir n’importe quel objet auquel ils souhaitent accéder dans la méthode de rappel.'
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: 'Facultatif. Une fois la méthode exécutée, la fonction transmise au paramètre callback est appelée avec un seul paramètre de type Office. AsyncResult. En cas d’échec de l’appel, la propriété asyncResult. Error contient le code d’erreur et la raison de l’échec.'
          type:
            - '(asyncResult: Office.AsyncResult<AttachmentDetails[]>) => void'
  - uid: outlook.Office.MessageCompose.getAttachmentsAsync_1
    summary: |-
      Obtient les pièces jointes de l’élément sous la forme d’un tableau.

      \[[Ensemble d’API: aperçu de boîte aux lettres](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadItem

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition de message

      #### <a name="examples"></a>Exemples

      ```javascript
      var item = Office.context.mailbox.item;
      var outputString = "";
      item.getAttachmentsAsync(callback);

      function callback(result) {
          if (result.value.length > 0) {
              for (i = 0 ; i < result.value.length ; i++) {
                  var attachment = result.value [i];
                  outputString += "<BR>" + i + ". Name: ";
                  outputString += attachment.name;
                  outputString += "<BR>ID: " + attachment.id;
                  outputString += "<BR>contentType: " + attachment.contentType;
                  outputString += "<BR>size: " + attachment.size;
                  outputString += "<BR>attachmentType: " + attachment.attachmentType;
                  outputString += "<BR>isInline: " + attachment.isInline;
              }
          }
      }
      ```
    isPreview: true
    name: getAttachmentsAsync(callback)
    fullName: getAttachmentsAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAttachmentsAsync(callback?: (asyncResult: Office.AsyncResult<AttachmentDetails[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: 'Facultatif. Une fois la méthode exécutée, la fonction transmise au paramètre callback est appelée avec un seul paramètre de type Office. AsyncResult. En cas d’échec de l’appel, la propriété asyncResult. Error contient le code d’erreur et la raison de l’échec.'
          type:
            - '(asyncResult: Office.AsyncResult<AttachmentDetails[]>) => void'
  - uid: outlook.Office.MessageCompose.getInitializationContextAsync
    summary: |-
      Obtient les données d’initialisation transmises lorsque le complément est activé par un message actionnable.

      **Remarque**: cette méthode est uniquement prise en charge par Outlook 2016 ou une version ultérieure sur Windows (versions «démarrer en un clic» supérieures à 16.0.8413.1000) et Outlook sur le Web pour Office 365.

      \[[Ensemble d’API: aperçu de boîte aux lettres](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadItem

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition de message

      Plus d’informations sur [les messages actionnables](https://docs.microsoft.com/outlook/actionable-messages/invoke-add-in-from-actionable-message)<!-- -->.
    isPreview: true
    name: 'getInitializationContextAsync(options, callback)'
    fullName: 'getInitializationContextAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getInitializationContextAsync(options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: 'Facultatif. Littéral d’objet contenant une ou plusieurs des propriétés suivantes. asyncContext: les développeurs peuvent fournir n’importe quel objet auquel ils souhaitent accéder dans la méthode de rappel.'
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: 'Facultatif. Une fois la méthode exécutée, la fonction transmise au paramètre callback est appelée avec un seul paramètre de type Office. AsyncResult. En cas de réussite, les données d’initialisation sont fournies dans la propriété asyncResult. Value sous forme de chaîne. S’il n’existe pas de contexte d’initialisation, l’objet asyncResult contient un objet Error dont la propriété code a la valeur 9020 et sa propriété Name a la valeur GenericResponseError.'
          type:
            - '(asyncResult: Office.AsyncResult<string>) => void'
  - uid: outlook.Office.MessageCompose.getInitializationContextAsync_1
    summary: |-
      Obtient les données d’initialisation transmises lorsque le complément est activé par un message actionnable.

      **Remarque**: cette méthode est uniquement prise en charge par Outlook 2016 ou une version ultérieure sur Windows (versions «démarrer en un clic» supérieures à 16.0.8413.1000) et Outlook sur le Web pour Office 365.

      \[[Ensemble d’API: aperçu de boîte aux lettres](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadItem

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition de message

      Plus d’informations sur [les messages actionnables](https://docs.microsoft.com/outlook/actionable-messages/invoke-add-in-from-actionable-message)<!-- -->.
    isPreview: true
    name: getInitializationContextAsync(callback)
    fullName: getInitializationContextAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getInitializationContextAsync(callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: 'Facultatif. Une fois la méthode exécutée, la fonction transmise au paramètre callback est appelée avec un seul paramètre de type Office. AsyncResult. En cas de réussite, les données d’initialisation sont fournies dans la propriété asyncResult. Value sous forme de chaîne. S’il n’existe pas de contexte d’initialisation, l’objet asyncResult contient un objet Error dont la propriété code a la valeur 9020 et sa propriété Name a la valeur GenericResponseError.'
          type:
            - '(asyncResult: Office.AsyncResult<string>) => void'
  - uid: outlook.Office.MessageCompose.getItemIdAsync
    summary: |-
      Obtient de manière asynchrone l’ID d’un élément enregistré.

      Lorsqu’elle est appelée, cette méthode renvoie l’ID de l’élément par le biais de la méthode de rappel.

      **Remarque**: Si votre complément appelle `getItemIdAsync` sur un élément en mode composition (par exemple, pour obtenir un à utiliser avec `itemId` EWS ou l’API REST), sachez que lorsqu’Outlook est en mode mis en cache, l’élément peut prendre un certain temps avant la synchronisation de l’élément avec le serveur. Tant que l’élément n’est pas synchronisé `itemId` , le n’est pas reconnu et son utilisation renvoie une erreur.

      \[[Ensemble d’API: aperçu de boîte aux lettres](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadItem

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition de message

      **Erreurs**:

      - `ItemNotSaved`<!-- -->: L’ID ne peut pas être récupéré tant que l’élément n’est pas enregistré.
    isPreview: true
    name: 'getItemIdAsync(options, callback)'
    fullName: 'getItemIdAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemIdAsync(options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: 'Littéral d’objet contenant une ou plusieurs des propriétés suivantes. asyncContext: les développeurs peuvent fournir n’importe quel objet auquel ils souhaitent accéder dans la méthode de rappel.'
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: 'Une fois la méthode exécutée, la fonction transmise au paramètre callback est appelée avec un seul paramètre de type Office. AsyncResult.'
          type:
            - '(asyncResult: Office.AsyncResult<string>) => void'
  - uid: outlook.Office.MessageCompose.getItemIdAsync_1
    summary: |-
      Obtient de manière asynchrone l’ID d’un élément enregistré.

      Lorsqu’elle est appelée, cette méthode renvoie l’ID de l’élément par le biais de la méthode de rappel.

      **Remarque**: Si votre complément appelle `getItemIdAsync` sur un élément en mode composition (par exemple, pour obtenir un à utiliser avec `itemId` EWS ou l’API REST), sachez que lorsqu’Outlook est en mode mis en cache, l’élément peut prendre un certain temps avant la synchronisation de l’élément avec le serveur. Tant que l’élément n’est pas synchronisé `itemId` , le n’est pas reconnu et son utilisation renvoie une erreur.

      \[[Ensemble d’API: aperçu de boîte aux lettres](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadItem

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition de message

      **Erreurs**:

      - `ItemNotSaved`<!-- -->: L’ID ne peut pas être récupéré tant que l’élément n’est pas enregistré.
    isPreview: true
    name: getItemIdAsync(callback)
    fullName: getItemIdAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemIdAsync(callback: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: 'Une fois la méthode exécutée, la fonction transmise au paramètre callback est appelée avec un seul paramètre de type Office. AsyncResult.'
          type:
            - '(asyncResult: Office.AsyncResult<string>) => void'
  - uid: outlook.Office.MessageCompose.getSelectedDataAsync
    summary: |-
      Renvoie de manière asynchrone les données sélectionnées à partir de l’objet ou du corps d’un message.

      Si aucune sélection n’est effectuée, mais que le curseur est placé dans le corps ou l’objet, la méthode renvoie la valeur null pour les données sélectionnées. Si un champ autre que le corps ou l’objet est sélectionné, la méthode renvoie l’erreur InvalidSelection.

      Pour accéder aux données sélectionnées via la méthode de rappel, appelez la méthode asyncResult.value.data. Pour accéder à la propriété source d’origine de la sélection, appelez asyncResult. Value. sourceProperty, qui sera le corps ou l’objet.

      \[[Ensemble d’API: boîte aux lettres 1,2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadWriteItem

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition de message

      #### <a name="examples"></a>Exemples

      ```javascript
      // Get selected data.
      Office.initialize = function () {
          Office.context.mailbox.item.getSelectedDataAsync(Office.CoercionType.Text, {}, getCallback);
      };

      function getCallback(asyncResult) {
          var text = asyncResult.value.data;
          var prop = asyncResult.value.sourceProperty;

          Office.context.mailbox.item.setSelectedDataAsync('Setting ' + prop + ': ' + text, {}, setCallback);
      }

      function setCallback(asyncResult) {
          // Check for errors.
      }
      ```
    name: 'getSelectedDataAsync(coercionType, options, callback)'
    fullName: 'getSelectedDataAsync(coercionType, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedDataAsync(coercionType: Office.CoercionType | string, options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<any>) => void): void;'
      return:
        type:
          - void
        description: Données sélectionnées en tant que chaîne dont le format est déterminé par coercionType.
      parameters:
        - id: coercionType
          description: 'Demande un format à attribuer aux données. Si le texte est, la méthode renvoie le texte brut sous la forme d’une chaîne, supprimant toutes les balises HTML présentes. S’il s’agit de langage HTML, la méthode renvoie le texte sélectionné, qu’il s’agisse de texte brut ou de langage HTML.'
          type:
            - Office.CoercionType | string
        - id: options
          description: 'Littéral d’objet contenant une ou plusieurs des propriétés suivantes. asyncContext: les développeurs peuvent fournir n’importe quel objet auquel ils souhaitent accéder dans la méthode de rappel.'
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: 'Une fois la méthode exécutée, la fonction transmise au paramètre callback est appelée avec un seul paramètre de type Office. AsyncResult.'
          type:
            - '(asyncResult: Office.AsyncResult<any>) => void'
  - uid: outlook.Office.MessageCompose.getSelectedDataAsync_1
    summary: |-
      Renvoie de manière asynchrone les données sélectionnées à partir de l’objet ou du corps d’un message.

      Si aucune sélection n’est effectuée, mais que le curseur est placé dans le corps ou l’objet, la méthode renvoie la valeur null pour les données sélectionnées. Si un champ autre que le corps ou l’objet est sélectionné, la méthode renvoie l’erreur InvalidSelection.

      Pour accéder aux données sélectionnées via la méthode de rappel, appelez la méthode asyncResult.value.data. Pour accéder à la propriété source d’origine de la sélection, appelez asyncResult. Value. sourceProperty, qui sera le corps ou l’objet.

      \[[Ensemble d’API: boîte aux lettres 1,2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadWriteItem

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition de message
    name: 'getSelectedDataAsync(coercionType, callback)'
    fullName: 'getSelectedDataAsync(coercionType, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedDataAsync(coercionType: Office.CoercionType | string, callback: (asyncResult: Office.AsyncResult<any>) => void): void;'
      return:
        type:
          - void
        description: Données sélectionnées en tant que chaîne dont le format est déterminé par coercionType.
      parameters:
        - id: coercionType
          description: 'Demande un format à attribuer aux données. Si le texte est, la méthode renvoie le texte brut sous la forme d’une chaîne, supprimant toutes les balises HTML présentes. S’il s’agit de langage HTML, la méthode renvoie le texte sélectionné, qu’il s’agisse de texte brut ou de langage HTML.'
          type:
            - Office.CoercionType | string
        - id: callback
          description: 'Une fois la méthode exécutée, la fonction transmise au paramètre callback est appelée avec un seul paramètre de type Office. AsyncResult.'
          type:
            - '(asyncResult: Office.AsyncResult<any>) => void'
  - uid: outlook.Office.MessageCompose.loadCustomPropertiesAsync
    summary: |-
      Charge de manière asynchrone les propriétés personnalisées de ce complément vers l’élément sélectionné.

      Les propriétés personnalisées sont stockées sous la forme de paires clé/valeur qui s’appliquent à une application ou un élément. Cette méthode renvoie un objet CustomProperties dans le rappel, qui fournit des méthodes pour accéder aux propriétés personnalisées spécifiques de l’élément actuel et du complément actuel. Les propriétés personnalisées ne sont pas chiffrées dans l’élément, par conséquent elles ne doivent pas servir d’espace de stockage sécurisé.

      Les propriétés personnalisées sont fournies sous la forme d’un objet CustomProperties dans la propriété asyncResult. Value. Cet objet peut être utilisé pour obtenir, définir et supprimer des propriétés personnalisées à partir de l’élément et réenregistrer les modifications apportées au jeu de propriétés personnalisées sur le serveur.

      \[[Ensemble d’API: boîte aux lettres 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadItem

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition de message
    name: 'loadCustomPropertiesAsync(callback, userContext)'
    fullName: 'loadCustomPropertiesAsync(callback, userContext)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'loadCustomPropertiesAsync(callback: (asyncResult: Office.AsyncResult<CustomProperties>) => void, userContext?: any): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: 'Une fois la méthode exécutée, la fonction transmise au paramètre callback est appelée avec un seul paramètre de type Office. AsyncResult.'
          type:
            - '(asyncResult: Office.AsyncResult<CustomProperties>) => void'
        - id: userContext
          description: Facultatif. Les développeurs peuvent fournir un objet auquel ils souhaitent accéder dans la fonction de rappel. Cet objet est accessible à l’aide de la propriété asyncResult. asyncContext dans la fonction de rappel.
          type:
            - any
  - uid: outlook.Office.MessageCompose.removeAttachmentAsync
    summary: |-
      Supprime une pièce jointe d’un message ou d’un rendez-vous.

      La méthode removeAttachmentAsync supprime la pièce jointe avec l’identificateur spécifié de l’élément. Nous vous recommandons vivement de supprimer une pièce jointe à l’aide de son identificateur uniquement si la même application de messagerie a ajouté cette pièce jointe au cours de la même session. Dans Outlook sur le Web et les appareils mobiles, l’identificateur de pièce jointe est valide uniquement au sein de la même session. Une session est terminée lorsque l’utilisateur ferme l’application, ou si l’utilisateur commence à composer un formulaire inséré, puis détoure ensuite le formulaire pour continuer dans une fenêtre distincte.

      \[[Ensemble d’API: boîte aux lettres 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadWriteItem

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition de message

      **Erreurs**:

      - InvalidAttachmentId: l’identificateur de pièce jointe n’existe pas.

      #### <a name="examples"></a>Exemples

      ```javascript
      // The following code removes an attachment with an identifier of '0'.
      Office.context.mailbox.item.removeAttachmentAsync(
          '0',
          { asyncContext : null },
          function (asyncResult)
          {
              console.log(asyncResult.status);
          }
      );
      ```
    name: 'removeAttachmentAsync(attachmentId, options, callback)'
    fullName: 'removeAttachmentAsync(attachmentId, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeAttachmentAsync(attachmentId: string, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: attachmentId
          description: Identificateur de la pièce jointe à supprimer.
          type:
            - string
        - id: options
          description: 'Facultatif. Littéral d’objet contenant une ou plusieurs des propriétés suivantes. asyncContext: les développeurs peuvent fournir n’importe quel objet auquel ils souhaitent accéder dans la méthode de rappel.'
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: 'Facultatif. Une fois la méthode exécutée, la fonction transmise au paramètre callback est appelée avec un seul paramètre de type Office. AsyncResult. En cas d’échec de la suppression de la pièce jointe, la propriété asyncResult. Error contient un code d’erreur correspondant à la raison de l’échec.'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: outlook.Office.MessageCompose.removeAttachmentAsync_1
    summary: |-
      Supprime une pièce jointe d’un message ou d’un rendez-vous.

      La méthode removeAttachmentAsync supprime la pièce jointe avec l’identificateur spécifié de l’élément. Nous vous recommandons vivement de supprimer une pièce jointe à l’aide de son identificateur uniquement si la même application de messagerie a ajouté cette pièce jointe au cours de la même session. Dans Outlook sur le Web et les appareils mobiles, l’identificateur de pièce jointe est valide uniquement au sein de la même session. Une session est terminée lorsque l’utilisateur ferme l’application, ou si l’utilisateur commence à composer un formulaire inséré, puis détoure ensuite le formulaire pour continuer dans une fenêtre distincte.

      \[[Ensemble d’API: boîte aux lettres 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadWriteItem

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition de message

      **Erreurs**:

      - InvalidAttachmentId: l’identificateur de pièce jointe n’existe pas.
    name: 'removeAttachmentAsync(attachmentId, callback)'
    fullName: 'removeAttachmentAsync(attachmentId, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeAttachmentAsync(attachmentId: string, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: attachmentId
          description: Identificateur de la pièce jointe à supprimer.
          type:
            - string
        - id: callback
          description: 'Facultatif. Une fois la méthode exécutée, la fonction transmise au paramètre callback est appelée avec un seul paramètre de type Office. AsyncResult. En cas d’échec de la suppression de la pièce jointe, la propriété asyncResult. Error contient un code d’erreur correspondant à la raison de l’échec.'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: outlook.Office.MessageCompose.removeHandlerAsync
    summary: |-
      Supprime les gestionnaires d’événements pour un type d’événement pris en charge. **Remarque**: les événements ne sont disponibles qu’avec le volet Office.

      Actuellement, les types d’événement pris en charge sont`Office.EventType.AppointmentTimeChanged`<!-- -->, `Office.EventType.RecipientsChanged`<!-- -->, et`Office.EventType.RecurrenceChanged`<!-- -->. En mode Aperçu `Office.EventType.AttachmentsChanged` , `Office.EventType.EnhancedLocationsChanged` et sont également pris en charge.

      \[[Ensemble d’API: boîte aux lettres 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadItem

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition de message
    name: 'removeHandlerAsync(eventType, options, callback)'
    fullName: 'removeHandlerAsync(eventType, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeHandlerAsync(eventType: Office.EventType | string, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: Événement qui doit révoquer le gestionnaire.
          type:
            - Office.EventType | string
        - id: options
          description: 'Facultatif. Littéral d’objet contenant une ou plusieurs des propriétés suivantes. asyncContext: les développeurs peuvent fournir n’importe quel objet auquel ils souhaitent accéder dans la méthode de rappel.'
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: 'Facultatif. Une fois la méthode exécutée, la fonction transmise au paramètre callback est appelée avec un seul paramètre, asyncResult, qui est un objet Office. AsyncResult.'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: outlook.Office.MessageCompose.removeHandlerAsync_1
    summary: |-
      Supprime les gestionnaires d’événements pour un type d’événement pris en charge. **Remarque**: les événements ne sont disponibles qu’avec le volet Office.

      Actuellement, les types d’événement pris en charge sont`Office.EventType.AppointmentTimeChanged`<!-- -->, `Office.EventType.RecipientsChanged`<!-- -->, et`Office.EventType.RecurrenceChanged`<!-- -->. En mode Aperçu `Office.EventType.AttachmentsChanged` , `Office.EventType.EnhancedLocationsChanged` et sont également pris en charge.

      \[[Ensemble d’API: boîte aux lettres 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadItem

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition de message
    name: 'removeHandlerAsync(eventType, callback)'
    fullName: 'removeHandlerAsync(eventType, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeHandlerAsync(eventType: Office.EventType | string, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: Événement qui doit révoquer le gestionnaire.
          type:
            - Office.EventType | string
        - id: callback
          description: 'Facultatif. Une fois la méthode exécutée, la fonction transmise au paramètre callback est appelée avec un seul paramètre, asyncResult, qui est un objet Office. AsyncResult.'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: outlook.Office.MessageCompose.saveAsync
    summary: |-
      Enregistre un élément de manière asynchrone.

      Lorsqu’elle est appelée, cette méthode enregistre le message en cours en tant que brouillon et renvoie l’ID de l’élément via la méthode de rappel. Dans Outlook sur le Web ou Outlook en mode en ligne, l’élément est enregistré sur le serveur. Dans Outlook en mode mis en cache, l’élément est enregistré dans le cache local.

      Étant donné que les rendez-vous n’ont pas d’état Brouillon, si saveAsync est appelé sur un rendez-vous en mode composition, l’élément sera enregistré en tant que rendez-vous normal sur le calendrier de l’utilisateur. Pour les nouveaux rendez-vous qui n’ont pas encore été enregistrés, aucune invitation n’est envoyée. L’enregistrement d’un rendez-vous existant enverra une mise à jour pour ajouter ou supprimer des participants.

      **Remarque**: Si votre complément appelle saveAsync sur un élément en mode composition pour qu’un ItemId puisse être utilisé avec EWS ou l’API REST, sachez que lorsque Outlook est en mode mis en cache, il peut prendre un peu de temps avant la synchronisation effective de l’élément avec le serveur. Tant que l’élément n’est pas synchronisé, l’ID itemId renverra une erreur.

      **Remarque**: les clients suivants ont un comportement différent pour saveAsync sur les rendez-vous en mode composition:

      - Outlook sur Mac ne prend pas en charge l’enregistrement d’une réunion. La méthode saveAsync échoue lorsqu’elle est appelée à partir d’une réunion en mode composition. Consultez la rubrique [Impossible d’enregistrer une réunion en tant que brouillon dans Outlook pour Mac à l’aide de l’API Office js](https://support.microsoft.com/help/4505745) pour obtenir une solution de contournement.

      - Outlook sur le Web envoie toujours une invitation ou une mise à jour lorsque saveAsync est appelé sur un rendez-vous en mode composition.

      \[[Ensemble d’API: boîte aux lettres 1,3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadWriteItem

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition de message

      **Erreurs**:

      - InvalidAttachmentId: l’identificateur de pièce jointe n’existe pas.
    name: 'saveAsync(options, callback)'
    fullName: 'saveAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'saveAsync(options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: 'Littéral d’objet contenant une ou plusieurs des propriétés suivantes. asyncContext: les développeurs peuvent fournir n’importe quel objet auquel ils souhaitent accéder dans la méthode de rappel.'
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: 'Une fois la méthode exécutée, la fonction transmise au paramètre callback est appelée avec un seul paramètre de type Office. AsyncResult.'
          type:
            - '(asyncResult: Office.AsyncResult<string>) => void'
  - uid: outlook.Office.MessageCompose.saveAsync_1
    summary: |-
      Enregistre un élément de manière asynchrone.

      Lorsqu’elle est appelée, cette méthode enregistre le message en cours en tant que brouillon et renvoie l’ID de l’élément via la méthode de rappel. Dans Outlook sur le Web ou Outlook en mode en ligne, l’élément est enregistré sur le serveur. Dans Outlook en mode mis en cache, l’élément est enregistré dans le cache local.

      Étant donné que les rendez-vous n’ont pas d’état Brouillon, si saveAsync est appelé sur un rendez-vous en mode composition, l’élément sera enregistré en tant que rendez-vous normal sur le calendrier de l’utilisateur. Pour les nouveaux rendez-vous qui n’ont pas encore été enregistrés, aucune invitation n’est envoyée. L’enregistrement d’un rendez-vous existant enverra une mise à jour pour ajouter ou supprimer des participants.

      **Remarque**: Si votre complément appelle saveAsync sur un élément en mode composition pour qu’un ItemId puisse être utilisé avec EWS ou l’API REST, sachez que lorsque Outlook est en mode mis en cache, il peut prendre un peu de temps avant la synchronisation effective de l’élément avec le serveur. Tant que l’élément n’est pas synchronisé, l’ID itemId renverra une erreur.

      **Remarque**: les clients suivants ont un comportement différent pour saveAsync sur les rendez-vous en mode composition:

      - Outlook sur Mac ne prend pas en charge l’enregistrement d’une réunion. La méthode saveAsync échoue lorsqu’elle est appelée à partir d’une réunion en mode composition. Consultez la rubrique [Impossible d’enregistrer une réunion en tant que brouillon dans Outlook pour Mac à l’aide de l’API Office js](https://support.microsoft.com/help/4505745) pour obtenir une solution de contournement.

      - Outlook sur le Web envoie toujours une invitation ou une mise à jour lorsque saveAsync est appelé sur un rendez-vous en mode composition.

      \[[Ensemble d’API: boîte aux lettres 1,3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadWriteItem

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition de message

      **Erreurs**:

      - InvalidAttachmentId: l’identificateur de pièce jointe n’existe pas.

      #### <a name="examples"></a>Exemples

      ```javascript
      Office.context.mailbox.item.saveAsync(
          function callback(result) {
              // Process the result.
          });

      // The following is an example of the
      // `result` parameter passed to the
      // callback function. The `value`
      // property contains the item ID of
      // the item.
      {
          "value": "AAMkADI5...AAA=",
          "status": "succeeded"
      }
      ```
    name: saveAsync(callback)
    fullName: saveAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'saveAsync(callback: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: 'Une fois la méthode exécutée, la fonction transmise au paramètre callback est appelée avec un seul paramètre de type Office. AsyncResult.'
          type:
            - '(asyncResult: Office.AsyncResult<string>) => void'
  - uid: outlook.Office.MessageCompose.setSelectedDataAsync
    summary: |-
      Insère les données dans le corps ou l’objet d’un message de manière asynchrone.

      La méthode setSelectedDataAsync insère la chaîne spécifiée à l’emplacement du curseur dans l’objet ou le corps de l’élément, ou si du texte est sélectionné dans l’éditeur, il remplace le texte sélectionné. Si le curseur ne se trouve pas dans le champ Body ou Subject, une erreur est renvoyée. Après l’insertion, le curseur est placé à la fin du contenu inséré.

      \[[Ensemble d’API: boîte aux lettres 1,2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadWriteItem

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition de message

      **Erreurs**:

      - InvalidAttachmentId: l’identificateur de pièce jointe n’existe pas.

      #### <a name="examples"></a>Exemples

      ```javascript
      Office.context.mailbox.item.setSelectedDataAsync("<b>Hello World!</b>", { coercionType : "html" });
      ```
    name: 'setSelectedDataAsync(data, options, callback)'
    fullName: 'setSelectedDataAsync(data, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setSelectedDataAsync(data: string, options?: Office.AsyncContextOptions & CoercionTypeOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: data
          description: "Données à insérer. Les données ne doivent pas dépasser 1\_000\_000\_caractères. Si elles contiennent plus de 1\_000\_000\_caractères, une exception ArgumentOutOfRange est générée."
          type:
            - string
        - id: options
          description: "Facultatif. Littéral d’objet contenant une ou plusieurs des propriétés suivantes. asyncContext: les développeurs peuvent fournir n’importe quel objet auquel ils souhaitent accéder dans la méthode de rappel. coercionType: si le texte est présent, le style actuel est appliqué dans Outlook sur le Web et les clients de bureau. Si le champ est un éditeur HTML, seules les données de texte sont insérées, même si les données sont au format HTML. Si le code HTML et le champ prennent en charge le format HTML (l’objet ne l’est pas), le style actuel est appliqué dans Outlook sur le Web et le style par défaut est appliqué dans Outlook sur les clients de bureau. Si le champ est un champ de texte, une erreur InvalidDataFormat est renvoyée. Si coercionType n’est pas défini, le résultat dépend du champ\_: si le champ est HTML, du langage HTML est utilisé\_; si le champ est un champ de texte, du texte brut est utilisé."
          type:
            - Office.AsyncContextOptions & CoercionTypeOptions
        - id: callback
          description: 'Facultatif. Une fois la méthode exécutée, la fonction transmise au paramètre callback est appelée avec un seul paramètre de type Office. AsyncResult.'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: outlook.Office.MessageCompose.setSelectedDataAsync_1
    summary: |-
      Insère les données dans le corps ou l’objet d’un message de manière asynchrone.

      La méthode setSelectedDataAsync insère la chaîne spécifiée à l’emplacement du curseur dans l’objet ou le corps de l’élément, ou si du texte est sélectionné dans l’éditeur, il remplace le texte sélectionné. Si le curseur ne se trouve pas dans le champ Body ou Subject, une erreur est renvoyée. Après l’insertion, le curseur est placé à la fin du contenu inséré.

      \[[Ensemble d’API: boîte aux lettres 1,2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadWriteItem

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition de message

      **Erreurs**:

      - InvalidAttachmentId: l’identificateur de pièce jointe n’existe pas.

      #### <a name="examples"></a>Exemples

      ```javascript
      Office.context.mailbox.item.setSelectedDataAsync("Hello World!");
      ```
    name: 'setSelectedDataAsync(data, callback)'
    fullName: 'setSelectedDataAsync(data, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setSelectedDataAsync(data: string, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: data
          description: "Données à insérer. Les données ne doivent pas dépasser 1\_000\_000\_caractères. Si elles contiennent plus de 1\_000\_000\_caractères, une exception ArgumentOutOfRange est générée."
          type:
            - string
        - id: callback
          description: 'Facultatif. Une fois la méthode exécutée, la fonction transmise au paramètre callback est appelée avec un seul paramètre de type Office. AsyncResult.'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: outlook.Office.MessageCompose.bcc
    summary: |-
      Permet d’obtenir un objet qui fournit des méthodes permettant d’obtenir ou de mettre à jour les destinataires figurant sur la ligne Cci (copie carbone invisible) d’un message.

      \[[Ensemble d’API: boîte aux lettres 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadItem

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition de message

      #### <a name="examples"></a>Exemples

      ```javascript
      Office.context.mailbox.item.bcc.setAsync( ['alice@contoso.com', 'bob@contoso.com'] );
      Office.context.mailbox.item.bcc.addAsync( ['jason@contoso.com'] );
      Office.context.mailbox.item.bcc.getAsync(callback);

      function callback(asyncResult) {
          var arrayOfBccRecipients = asyncResult.value;
      }
      ```
    name: bcc
    fullName: bcc
    langs:
      - typeScript
    type: property
    syntax:
      content: 'bcc: Recipients;'
      return:
        type:
          - outlook.Office.Recipients
  - uid: outlook.Office.MessageCompose.body
    summary: |-
      Obtient un objet qui fournit des méthodes permettant de manipuler le corps d’un élément.

      \[[Ensemble d’API: boîte aux lettres 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadItem

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition de message

      #### <a name="examples"></a>Exemples

      ```javascript
      // This example gets the body of the item as plain text.
      Office.context.mailbox.item.body.getAsync(
          "text",
          { asyncContext: "This is passed to the callback" },
          function callback(result) {
              // Do something with the result.
          });

      // The following is an example of the result parameter passed to the callback function.
      {
          "value": "TEXT of whole body (including threads below)",
          "status": "succeeded",
          "asyncContext": "This is passed to the callback"
      }
      ```
    name: body
    fullName: body
    langs:
      - typeScript
    type: property
    syntax:
      content: 'body: Body;'
      return:
        type:
          - outlook.Office.Body
  - uid: outlook.Office.MessageCompose.categories
    summary: |-
      Obtient un objet qui fournit des méthodes pour la gestion des catégories de l’élément.

      \[[Ensemble d’API: aperçu de boîte aux lettres](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadItem

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition de message

      #### <a name="examples"></a>Exemples

      ```javascript
      Office.context.mailbox.item.categories.getAsync(function (asyncResult) {
          if (asyncResult.status === Office.AsyncResultStatus.Failed) {
              console.log("Action failed with error: " + asyncResult.error.message);
          } else {
              console.log("Categories: " + JSON.stringify(asyncResult.value));
          }
      });
      ```
    isPreview: true
    name: categories
    fullName: categories
    langs:
      - typeScript
    type: property
    syntax:
      content: 'categories: Categories;'
      return:
        type:
          - outlook.Office.Categories
  - uid: outlook.Office.MessageCompose.cc
    summary: |-
      Permet d’accéder aux destinataires en copie carbone (Cc) d’un message. Le type d’objet et le niveau d’accès varient selon le mode de l’élément actif.

      La propriété CC renvoie un objet [Office. Recipients](xref:outlook.Office.Recipients) qui fournit des méthodes permettant d’obtenir ou de mettre à jour les destinataires sur la ligne CC du message.

      \[[Ensemble d’API: boîte aux lettres 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadItem

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition de message

      #### <a name="examples"></a>Exemples

      ```javascript
      Office.context.mailbox.item.cc.setAsync( ['alice@contoso.com', 'bob@contoso.com'] );
      Office.context.mailbox.item.cc.addAsync( ['jason@contoso.com'] );
      Office.context.mailbox.item.cc.getAsync(callback);

      function callback(asyncResult) {
          var arrayOfCcRecipients = asyncResult.value;
      }
      ```
    name: cc
    fullName: cc
    langs:
      - typeScript
    type: property
    syntax:
      content: 'cc: Recipients;'
      return:
        type:
          - outlook.Office.Recipients
  - uid: outlook.Office.MessageCompose.conversationId
    summary: |-
      Obtient l’identificateur de la conversation qui contient un message particulier.

      Vous pouvez obtenir un nombre entier de cette propriété si votre application de messagerie est activée dans les formulaires de lecture ou les réponses des formulaires de composition. Si, par la suite, l’utilisateur modifie l’objet du message de réponse, lors de l’envoi de la réponse, l’ID de conversation de ce message va changer et la valeur que vous avez obtenue plus tôt ne sera plus applicable.

      Cette propriété obtient une valeur null lorsqu’un élément est ajouté à un formulaire de composition. Si l’utilisateur définit un objet et enregistre l’élément, la propriété conversationId renvoie une valeur.

      \[[Ensemble d’API: boîte aux lettres 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadItem

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition de message

      #### <a name="examples"></a>Exemples

      ```javascript
      var conversationId = Office.context.mailbox.item.conversationId;
      console.log("conversationId: " + conversationId);
      ```
    name: conversationId
    fullName: conversationId
    langs:
      - typeScript
    type: property
    syntax:
      content: 'conversationId: string;'
      return:
        type:
          - string
  - uid: outlook.Office.MessageCompose.from
    summary: |-
      Obtient l’adresse de messagerie de l’expéditeur d’un message.

      Les propriétés from et sender représentent la même personne, sauf si le message est envoyé par un délégué. Dans ce cas, la propriété from représente le propriétaire et la propriété sender représente le délégué.

      La propriété from renvoie un objet from qui fournit une méthode pour obtenir la valeur from.

      \[[Ensemble d’API: boîte aux lettres 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadItem

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition de message

      #### <a name="examples"></a>Exemples

      ```javascript
      Office.context.mailbox.item.from.getAsync(callback);

      function callback(asyncResult) {
          var from = asyncResult.value;
      }
      ```
    name: from
    fullName: from
    langs:
      - typeScript
    type: property
    syntax:
      content: 'from: From;'
      return:
        type:
          - outlook.Office.From
  - uid: outlook.Office.MessageCompose.internetHeaders
    summary: |-
      Obtient ou définit les en-têtes Internet personnalisés d’un message.

      La propriété internetHeaders renvoie un objet InternetHeaders qui fournit des méthodes pour gérer les en-têtes Internet sur le message.

      \[[Ensemble d’API: aperçu de boîte aux lettres](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadItem

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition de message

      #### <a name="examples"></a>Exemples

      ```javascript
      Office.context.mailbox.item.internetHeaders.getAsync(["header1", "header2"], callback);

      function callback(asyncResult) {
          var dictionary = asyncResult.value;
          var header1_value = dictionary["header1"];
      }
      ```
    isPreview: true
    name: internetHeaders
    fullName: internetHeaders
    langs:
      - typeScript
    type: property
    syntax:
      content: 'internetHeaders: InternetHeaders;'
      return:
        type:
          - outlook.Office.InternetHeaders
  - uid: outlook.Office.MessageCompose.itemType
    summary: |-
      Obtient le type d’élément représenté par une instance.

      La propriété itemType renvoie l’une des valeurs d’énumération ItemType, indiquant si l’instance de l’objet Item est un message ou un rendez-vous.

      \[[Ensemble d’API: boîte aux lettres 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadItem

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition de message

      #### <a name="examples"></a>Exemples

      ```javascript
      if (Office.context.mailbox.item.itemType === Office.MailboxEnums.ItemType.Message) {
          // Do something.
      } else {
          // Do something else.
      }
      ```
    name: itemType
    fullName: itemType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'itemType: MailboxEnums.ItemType | string;'
      return:
        type:
          - MailboxEnums.ItemType | string
  - uid: outlook.Office.MessageCompose.notificationMessages
    summary: |-
      Obtient les messages de notification pour un élément.

      \[[Ensemble d’API: boîte aux lettres 1,3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadItem

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition de message

      #### <a name="examples"></a>Exemples

      ```javascript
      // Get all notifications.
      Office.context.mailbox.item.notificationMessages.getAllAsync(
          function (asyncResult) {
              console.log(JSON.stringify(asyncResult));
          }
      );
      ```
    name: notificationMessages
    fullName: notificationMessages
    langs:
      - typeScript
    type: property
    syntax:
      content: 'notificationMessages: NotificationMessages;'
      return:
        type:
          - outlook.Office.NotificationMessages
  - uid: outlook.Office.MessageCompose.seriesId
    summary: |-
      Obtient l’ID de la série à laquelle une instance appartient.

      Dans Outlook sur le Web et les clients de bureau, le seriesId renvoie l’ID des services Web Exchange (EWS) de l’élément parent (série) auquel cet élément appartient. Toutefois, sur iOS et Android, l’seriesId renvoie l’ID REST de l’élément parent.

      **Remarque**: l’identificateur renvoyé par la propriété seriesId est identique à l’identificateur d’élément des services Web Exchange. La propriété seriesId n’est pas identique aux ID Outlook utilisés par l’API REST Outlook. Avant que vous ne puissiez effectuer des appels d’API REST avec cette valeur, elle doit être convertie à l’aide de la commande Office.context.mailbox.convertToRestId. Pour plus d’informations, consultez [la rubrique utiliser les API REST Outlook à partir d’un complément Outlook](https://docs.microsoft.com/outlook/add-ins/use-rest-api) .<!-- -->.

      La propriété seriesId renvoie la valeur null pour les éléments qui n’ont pas d’éléments parents comme des rendez-vous uniques, des éléments de série ou des demandes de réunion, et renvoie undefined pour tous les autres éléments qui ne sont pas des demandes de réunion.

      \[[Ensemble d’API: boîte aux lettres 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadItem

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition de message

      #### <a name="examples"></a>Exemples

      ```javascript
      var seriesId = Office.context.mailbox.item.seriesId;

      // The seriesId property returns null for items that do
      // not have parent items (such as single appointments,
      // series items, or meeting requests) and returns
      // undefined for messages that are not meeting requests.
      var isSeriesInstance = (seriesId != null);
      console.log("SeriesId is " + seriesId 
          + " and isSeriesInstance is " + isSeriesInstance);
      ```
    name: seriesId
    fullName: seriesId
    langs:
      - typeScript
    type: property
    syntax:
      content: 'seriesId: string;'
      return:
        type:
          - string
  - uid: outlook.Office.MessageCompose.subject
    summary: |-
      Obtient ou définit la description qui apparaît dans le champ d’objet d’un élément.

      La propriété Subject obtient ou définit l’intégralité de l’objet de l’élément, tel qu’il est envoyé par le serveur de messagerie.

      La propriété Subject renvoie un objet subject qui fournit des méthodes permettant d’obtenir et de définir l’objet.

      \[[Ensemble d’API: boîte aux lettres 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadItem

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition de message

      #### <a name="examples"></a>Exemples

      ```javascript
      Office.context.mailbox.item.subject.getAsync(callback);

      function callback(asyncResult) {
          var subject = asyncResult.value;
      }
      ```
    name: subject
    fullName: subject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'subject: Subject;'
      return:
        type:
          - outlook.Office.Subject
  - uid: outlook.Office.MessageCompose.to
    summary: |-
      Permet d’accéder aux destinataires figurant sur la ligne À d’un message. Le type d’objet et le niveau d’accès varient selon le mode de l’élément actif.

      La propriété to renvoie un objet recipients qui fournit des méthodes permettant d’obtenir ou de mettre à jour les destinataires figurant sur la ligne à du message.

      \[[Ensemble d’API: boîte aux lettres 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadItem

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition de message

      #### <a name="examples"></a>範例

      ```javascript
      Office.context.mailbox.item.to.setAsync( ['alice@contoso.com', 'bob@contoso.com'] );
      Office.context.mailbox.item.to.addAsync( ['jason@contoso.com'] );
      Office.context.mailbox.item.to.getAsync(callback);

      function callback(asyncResult) {
          var arrayOfToRecipients = asyncResult.value;
      }
      ```
    name: to
    fullName: to
    langs:
      - typeScript
    type: property
    syntax:
      content: 'to: Recipients;'
      return:
        type:
          - outlook.Office.Recipients