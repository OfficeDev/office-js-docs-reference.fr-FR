### YamlMime:TSType
name: Excel.Chart
uid: excel!Excel.Chart:class
package: excel!
fullName: Excel.Chart
summary: >-
  Représente un objet de graphique dans un classeur. Pour en savoir plus sur le modèle objet graphique, voir Utiliser des graphiques à l’aide de [Excel API JavaScript](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-charts)<!-- -->.


  \[[Ensemble d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: axes
  uid: excel!Excel.Chart#axes:member
  package: excel!
  fullName: axes
  summary: >-
    Représente les axes du graphique.


    \[[Ensemble d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly axes: Excel.ChartAxes;'
    return:
      type: <xref uid="excel!Excel.ChartAxes:class" />
- name: categoryLabelLevel
  uid: excel!Excel.Chart#categoryLabelLevel:member
  package: excel!
  fullName: categoryLabelLevel
  summary: >-
    Spécifie une constante d’éumération au niveau des étiquettes de catégorie de graphique, faisant référence au niveau des étiquettes de catégorie source.


    \[[Ensemble d’API : ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'categoryLabelLevel: number;'
    return:
      type: number
- name: chartType
  uid: excel!Excel.Chart#chartType:member
  package: excel!
  fullName: chartType
  summary: >-
    Spécifie le type du graphique. Pour `Excel.ChartType` plus d’informations, voir.


    \[[Ensemble d’API : ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'chartType: Excel.ChartType | "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel";'
    return:
      type: <xref uid="excel!Excel.ChartType:enum" /> | "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel"
- name: context
  uid: excel!Excel.Chart#context:member
  package: excel!
  fullName: context
  summary: Contexte de demande associé à l’objet. Cette opération connecte le processus du Office processus de l’application hôte.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="excel!Excel.RequestContext:class" />
- name: dataLabels
  uid: excel!Excel.Chart#dataLabels:member
  package: excel!
  fullName: dataLabels
  summary: >-
    Représente les étiquettes des données sur le graphique.


    \[[Ensemble d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly dataLabels: Excel.ChartDataLabels;'
    return:
      type: <xref uid="excel!Excel.ChartDataLabels:class" />
- name: displayBlanksAs
  uid: excel!Excel.Chart#displayBlanksAs:member
  package: excel!
  fullName: displayBlanksAs
  summary: >-
    Spécifie la façon dont les cellules vides sont tracées sur un graphique.


    \[[Ensemble d’API : ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'displayBlanksAs: Excel.ChartDisplayBlanksAs | "NotPlotted" | "Zero" | "Interplotted";'
    return:
      type: <xref uid="excel!Excel.ChartDisplayBlanksAs:enum" /> | "NotPlotted" | "Zero" | "Interplotted"
- name: format
  uid: excel!Excel.Chart#format:member
  package: excel!
  fullName: format
  summary: >-
    Regroupe les propriétés de format de la zone de graphique.


    \[[Ensemble d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly format: Excel.ChartAreaFormat;'
    return:
      type: <xref uid="excel!Excel.ChartAreaFormat:class" />
- name: height
  uid: excel!Excel.Chart#height:member
  package: excel!
  fullName: height
  summary: >-
    Spécifie la hauteur, en points, de l’objet graphique.


    \[[Ensemble d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'height: number;'
    return:
      type: number
- name: id
  uid: excel!Excel.Chart#id:member
  package: excel!
  fullName: id
  summary: >-
    L’ID unique du graphique.


    \[[Ensemble d’API : ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly id: string;'
    return:
      type: string
- name: left
  uid: excel!Excel.Chart#left:member
  package: excel!
  fullName: left
  summary: >-
    La distance, en points, entre le côté gauche du graphique et l’origine de la feuille de calcul.


    \[[Ensemble d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'left: number;'
    return:
      type: number
- name: legend
  uid: excel!Excel.Chart#legend:member
  package: excel!
  fullName: legend
  summary: >-
    Représente la légende du graphique.


    \[[Ensemble d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly legend: Excel.ChartLegend;'
    return:
      type: <xref uid="excel!Excel.ChartLegend:class" />
      description: "\n\n#### <a name=\"examples\"></a>Exemples\n\n```javascript\n// Set to show legend of Chart1 and make it on top of the chart.\nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n    chart.legend.visible = true;\n    chart.legend.position = \"top\"; \n    chart.legend.overlay = false; \n    return ctx.sync().then(function() {\n            console.log(\"Legend Shown \");\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: name
  uid: excel!Excel.Chart#name:member
  package: excel!
  fullName: name
  summary: >-
    Spécifie le nom d’un objet graphique.


    \[[Ensemble d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'name: string;'
    return:
      type: string
      description: "\n\n#### <a name=\"examples\"></a>Exemples\n\n```javascript\n// Rename the chart to new name, resize the chart to 200 points in both height and weight. \n// Move Chart1 to 100 points to the top and left. \nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n    chart.name = \"New Name\";\n    chart.top = 100;\n    chart.left = 100;\n    chart.height = 200;\n    chart.width = 200;\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: pivotOptions
  uid: excel!Excel.Chart#pivotOptions:member
  package: excel!
  fullName: pivotOptions
  summary: >-
    Encapsule les options pour le graphique croisé dynamique.


    \[[Ensemble d’API : ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly pivotOptions: Excel.ChartPivotOptions;'
    return:
      type: <xref uid="excel!Excel.ChartPivotOptions:class" />
- name: plotArea
  uid: excel!Excel.Chart#plotArea:member
  package: excel!
  fullName: plotArea
  summary: >-
    Représente la zone de traçage du graphique.


    \[[Ensemble d’API : ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly plotArea: Excel.ChartPlotArea;'
    return:
      type: <xref uid="excel!Excel.ChartPlotArea:class" />
- name: plotBy
  uid: excel!Excel.Chart#plotBy:member
  package: excel!
  fullName: plotBy
  summary: >-
    Spécifie la façon dont les colonnes ou les lignes sont utilisées comme séries de données sur le graphique.


    \[[Ensemble d’API : ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'plotBy: Excel.ChartPlotBy | "Rows" | "Columns";'
    return:
      type: <xref uid="excel!Excel.ChartPlotBy:enum" /> | "Rows" | "Columns"
- name: plotVisibleOnly
  uid: excel!Excel.Chart#plotVisibleOnly:member
  package: excel!
  fullName: plotVisibleOnly
  summary: >-
    Vrai si seules les cellules visibles sont tracées. Faux si les deux cellules visibles et masquées sont tracées.


    \[[Ensemble d’API : ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'plotVisibleOnly: boolean;'
    return:
      type: boolean
- name: series
  uid: excel!Excel.Chart#series:member
  package: excel!
  fullName: series
  summary: >-
    Représente une série ou une collection de séries dans le graphique.


    \[[Ensemble d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly series: Excel.ChartSeriesCollection;'
    return:
      type: <xref uid="excel!Excel.ChartSeriesCollection:class" />
- name: seriesNameLevel
  uid: excel!Excel.Chart#seriesNameLevel:member
  package: excel!
  fullName: seriesNameLevel
  summary: >-
    Spécifie une constante d’éumération de niveau de nom de série de graphique, faisant référence au niveau des noms de série source.


    \[[Ensemble d’API : ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'seriesNameLevel: number;'
    return:
      type: number
- name: showAllFieldButtons
  uid: excel!Excel.Chart#showAllFieldButtons:member
  package: excel!
  fullName: showAllFieldButtons
  summary: >-
    Spécifie s’il faut afficher tous les boutons de champ sur une PivotChart.


    \[[Ensemble d’API : ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'showAllFieldButtons: boolean;'
    return:
      type: boolean
- name: showDataLabelsOverMaximum
  uid: excel!Excel.Chart#showDataLabelsOverMaximum:member
  package: excel!
  fullName: showDataLabelsOverMaximum
  summary: >-
    Spécifie s’il faut afficher les étiquettes de données lorsque la valeur est supérieure à la valeur maximale sur l’axe des valeurs. Si l’axe des valeurs devient plus petit que la taille des points de données, vous pouvez utiliser cette propriété pour définir s’il faut afficher les étiquettes de données. Cette propriété s'applique uniquement aux graphiques 2D.


    \[[Ensemble d’API : ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'showDataLabelsOverMaximum: boolean;'
    return:
      type: boolean
- name: style
  uid: excel!Excel.Chart#style:member
  package: excel!
  fullName: style
  summary: >-
    Spécifie le style de graphique pour le graphique.


    \[[Ensemble d’API : ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'style: number;'
    return:
      type: number
- name: title
  uid: excel!Excel.Chart#title:member
  package: excel!
  fullName: title
  summary: >-
    Représente le titre du graphique indiqué et comprend le texte, la visibilité, la position et la mise en forme du titre.


    \[[Ensemble d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly title: Excel.ChartTitle;'
    return:
      type: <xref uid="excel!Excel.ChartTitle:class" />
- name: top
  uid: excel!Excel.Chart#top:member
  package: excel!
  fullName: top
  summary: >-
    Spécifie la distance, en points, entre le bord supérieur de l’objet et le haut de la ligne 1 (dans une feuille de calcul) ou le haut de la zone de graphique (sur un graphique).


    \[[Ensemble d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'top: number;'
    return:
      type: number
- name: width
  uid: excel!Excel.Chart#width:member
  package: excel!
  fullName: width
  summary: >-
    Spécifie la largeur, en points, de l’objet graphique.


    \[[Ensemble d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'width: number;'
    return:
      type: number
- name: worksheet
  uid: excel!Excel.Chart#worksheet:member
  package: excel!
  fullName: worksheet
  summary: >-
    Feuille de calcul contenant le graphique actuel.


    \[[Ensemble d’API : ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly worksheet: Excel.Worksheet;'
    return:
      type: <xref uid="excel!Excel.Worksheet:class" />
methods:
- name: activate()
  uid: excel!Excel.Chart#activate:member(1)
  package: excel!
  fullName: activate()
  summary: >-
    Active le graphique dans l’interface utilisateur Excel.


    \[[Ensemble d’API : ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'activate(): void;'
    return:
      type: void
      description: ''
- name: delete()
  uid: excel!Excel.Chart#delete:member(1)
  package: excel!
  fullName: delete()
  summary: >-
    Supprime l’objet de graphique.


    \[[Ensemble d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'delete(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Exemples\n\n```javascript\nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n    chart.delete();\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: getImage(width, height, fittingMode)
  uid: excel!Excel.Chart#getImage:member(1)
  package: excel!
  fullName: getImage(width, height, fittingMode)
  summary: >-
    Affiche le graphique sous forme d’image codée en Base64 ajustée aux dimensions spécifiées. Les proportions sont conservées dans le cadre du re dimensionnement.


    \[[Ensemble d’API : ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getImage(width?: number, height?: number, fittingMode?: Excel.ImageFittingMode): OfficeExtension.ClientResult<string>;'
    parameters:
    - id: width
      description: Facultatif. Largeur souhaitée de l’image produite.
      type: number
    - id: height
      description: Facultatif. Hauteur souhaitée de l’image produite.
      type: number
    - id: fittingMode
      description: Facultatif. Méthode utilisée pour mettre à l’échelle le graphique aux dimensions spécifiées (si la hauteur et la largeur sont définies).
      type: <xref uid="excel!Excel.ImageFittingMode:enum" />
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;string&gt;
      description: "\n\n#### <a name=\"examples\"></a>Exemples\n\n```javascript\nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n    var image = chart.getImage();\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: getImage(width, height, fittingModeString)
  uid: excel!Excel.Chart#getImage:member(2)
  package: excel!
  fullName: getImage(width, height, fittingModeString)
  summary: >-
    Affiche le graphique sous forme d’image codée en Base64 ajustée aux dimensions spécifiées. Les proportions sont conservées dans le cadre du re dimensionnement.


    \[[Ensemble d’API : ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getImage(width?: number, height?: number, fittingModeString?: "Fit" | "FitAndCenter" | "Fill"): OfficeExtension.ClientResult<string>;'
    parameters:
    - id: width
      description: Facultatif. Largeur souhaitée de l’image produite.
      type: number
    - id: height
      description: Facultatif. Hauteur souhaitée de l’image produite.
      type: number
    - id: fittingModeString
      description: Facultatif. Méthode utilisée pour mettre à l’échelle le graphique aux dimensions spécifiées (si la hauteur et la largeur sont définies).
      type: "\"Fit\" | \"FitAndCenter\" | \"Fill\""
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;string&gt;
      description: ''
- name: load(options)
  uid: excel!Excel.Chart#load:member(1)
  package: excel!
  fullName: load(options)
  summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(options?: Excel.Interfaces.ChartLoadOptions): Excel.Chart;'
    parameters:
    - id: options
      description: Fournit des options pour lesquelles les propriétés de l’objet à charger.
      type: <xref uid="excel!Excel.Interfaces.ChartLoadOptions:interface" />
    return:
      type: <xref uid="excel!Excel.Chart:class" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.Chart#load:member(2)
  package: excel!
  fullName: load(propertyNames)
  summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.Chart;'
    parameters:
    - id: propertyNames
      description: Chaîne délimitée par des virgules ou tableau de chaînes spécifiant les propriétés à charger.
      type: string | string[]
    return:
      type: <xref uid="excel!Excel.Chart:class" />
      description: "\n\n#### <a name=\"examples\"></a>Exemples\n\n```javascript\n// Get a chart named \"Chart1\"\nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n    chart.load('name');\n    return ctx.sync().then(function() {\n            console.log(chart.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: load(propertyNamesAndPaths)
  uid: excel!Excel.Chart#load:member(3)
  package: excel!
  fullName: load(propertyNamesAndPaths)
  summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(propertyNamesAndPaths?: {
                  select?: string;
                  expand?: string;
              }): Excel.Chart;
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` est une chaîne délimitée par des virgules qui spécifie les propriétés à charger, et est une chaîne délimitée par des virgules qui spécifie les propriétés de `propertyNamesAndPaths.expand` navigation à charger.'
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="excel!Excel.Chart:class" />
      description: ''
- name: set(properties, options)
  uid: excel!Excel.Chart#set:member(1)
  package: excel!
  fullName: set(properties, options)
  summary: Définit plusieurs propriétés d’un objet en même temps. Vous pouvez transmettre un objet simple avec les propriétés appropriées ou un autre objet API du même type.
  remarks: >-
    Cette méthode possède la signature supplémentaire suivante :


    `set(properties: Excel.Chart): void`
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Interfaces.ChartUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    parameters:
    - id: properties
      description: Objet JavaScript avec des propriétés structurées de manière isomorphe aux propriétés de l’objet sur lequel la méthode est appelée.
      type: <xref uid="excel!Excel.Interfaces.ChartUpdateData:interface" />
    - id: options
      description: Fournit une option pour supprimer les erreurs si l’objet propriétés tente de définir des propriétés en lecture seule.
      type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
    return:
      type: void
      description: ''
- name: set(properties)
  uid: excel!Excel.Chart#set:member(2)
  package: excel!
  fullName: set(properties)
  summary: Définit plusieurs propriétés de l’objet en même temps, en fonction d’un objet chargé existant.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Excel.Chart): void;'
    parameters:
    - id: properties
      description: ''
      type: <xref uid="excel!Excel.Chart:class" />
    return:
      type: void
      description: ''
- name: setData(sourceData, seriesBy)
  uid: excel!Excel.Chart#setData:member(1)
  package: excel!
  fullName: setData(sourceData, seriesBy)
  summary: >-
    Redéfinit les données sources du graphique.


    \[[Ensemble d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setData(sourceData: Range, seriesBy?: Excel.ChartSeriesBy): void;'
    parameters:
    - id: sourceData
      description: Objet de plage correspondant aux données sources.
      type: <xref uid="excel!Excel.Range:class" />
    - id: seriesBy
      description: 'Spécifie la façon dont les colonnes ou les lignes sont utilisées comme séries de données sur le graphique. Il peut s’obtenir l’une des valeurs suivantes : Auto (par défaut), Rows et Columns. Pour `Excel.ChartSeriesBy` plus d’informations, voir.'
      type: <xref uid="excel!Excel.ChartSeriesBy:enum" />
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Exemples\n\n```javascript\n// Set the sourceData to be \"A1:B4\" and seriesBy to be \"Columns\"\nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n    var sourceData = \"A1:B4\";\n    chart.setData(sourceData, \"Columns\");\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: setData(sourceData, seriesByString)
  uid: excel!Excel.Chart#setData:member(2)
  package: excel!
  fullName: setData(sourceData, seriesByString)
  summary: >-
    Redéfinit les données sources du graphique.


    \[[Ensemble d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setData(sourceData: Range, seriesByString?: "Auto" | "Columns" | "Rows"): void;'
    parameters:
    - id: sourceData
      description: Objet de plage correspondant aux données sources.
      type: <xref uid="excel!Excel.Range:class" />
    - id: seriesByString
      description: 'Spécifie la façon dont les colonnes ou les lignes sont utilisées comme séries de données sur le graphique. Il peut s’obtenir l’une des valeurs suivantes : Auto (par défaut), Rows et Columns. Pour `Excel.ChartSeriesBy` plus d’informations, voir.'
      type: "\"Auto\" | \"Columns\" | \"Rows\""
    return:
      type: void
      description: ''
- name: setPosition(startCell, endCell)
  uid: excel!Excel.Chart#setPosition:member(1)
  package: excel!
  fullName: setPosition(startCell, endCell)
  summary: >-
    Positionne le graphique par rapport aux cellules dans la feuille de calcul.


    \[[Ensemble d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setPosition(startCell: Range | string, endCell?: Range | string): void;'
    parameters:
    - id: startCell
      description: Cellule de début. Il s’agit de l’emplacement où le graphique sera déplacé. La cellule de début est la cellule supérieure gauche ou supérieure droite, selon les paramètres d’affichage droite-gauche définis par l’utilisateur.
      type: <xref uid="excel!Excel.Range:class" /> | string
    - id: endCell
      description: Facultatif. Cellule de fin. Si une valeur est indiquée, la largeur et la hauteur du graphique seront définies de manière à couvrir entièrement cette cellule/plage.
      type: <xref uid="excel!Excel.Range:class" /> | string
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Exemples\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Charts\";\n    var rangeSelection = \"A1:B4\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeSelection);\n    var sourceData = sheetName + \"!\" + \"A1:B4\";\n    var chart = ctx.workbook.worksheets.getItem(sheetName).charts.add(\"pie\", range, \"auto\");\n    chart.width = 500;\n    chart.height = 300;\n    chart.setPosition(\"C2\", null);\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: toJSON()
  uid: excel!Excel.Chart#toJSON:member(1)
  package: excel!
  fullName: toJSON()
  summary: Remplace la méthode JavaScript afin de fournir une sortie plus utile lorsqu’un objet `toJSON()` API est transmis à `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, à son tour, appelle `toJSON` la méthode de l’objet qui lui est transmis.) Tandis que l’Excel. Objet Chart est un objet API, la `toJSON` méthode renvoie un objet JavaScript simple (tapé sous la forme`Excel.Interfaces.ChartData`<!-- -->) qui contient des copies superficiels de toutes les propriétés enfants chargées à partir de l’objet d’origine.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Excel.Interfaces.ChartData;'
    return:
      type: <xref uid="excel!Excel.Interfaces.ChartData:interface" />
      description: ''
events:
- name: onActivated
  uid: excel!Excel.Chart#onActivated:member
  package: excel!
  fullName: onActivated
  summary: >-
    Se produit lorsque le graphique est activé.


    \[[Ensemble d’API : ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly onActivated: OfficeExtension.EventHandlers<Excel.ChartActivatedEventArgs>;'
    return:
      type: <xref uid="office!OfficeExtension.EventHandlers:class" />&lt;<xref uid="excel!Excel.ChartActivatedEventArgs:interface" />&gt;
      description: "\n\n#### <a name=\"examples\"></a>Exemples\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/30-events/events-chart-activated.yaml\nawait Excel.run(async (context) => {\n\n    const pieChart = context.workbook.worksheets.getActiveWorksheet().charts.getItem(\"Pie\");\n\n    // Register the onActivated and onDeactivated event handlers.\n    pieChart.onActivated.add(chartActivated);\n    pieChart.onDeactivated.add(chartDeactivated);\n\n    await context.sync();\n\n    console.log(\"Added handlers for Chart onActivated and onDeactivated events.\");\n});\n```\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/30-events/events-chart-activated.yaml\nasync function chartActivated(event) {\n    await Excel.run(async (context) => {\n        // Retrieve the worksheet.\n        const sheet = context.workbook.worksheets.getActiveWorksheet();\n\n        // Retrieve the activated chart by ID and load the name of the chart. \n        const activatedChart = sheet.charts.getItem(event.chartId);\n        activatedChart.load([\"name\"]);\n        await context.sync();\n\n        // Print out the activated chart's data.\n        console.log(`A chart was activated. ID: ${event.chartId}. Chart name: ${activatedChart.name}.`);\n    });\n}\n```"
- name: onDeactivated
  uid: excel!Excel.Chart#onDeactivated:member
  package: excel!
  fullName: onDeactivated
  summary: >-
    Se produit lorsque le graphique est désactivé.


    \[[Ensemble d’API : ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly onDeactivated: OfficeExtension.EventHandlers<Excel.ChartDeactivatedEventArgs>;'
    return:
      type: <xref uid="office!OfficeExtension.EventHandlers:class" />&lt;<xref uid="excel!Excel.ChartDeactivatedEventArgs:interface" />&gt;
      description: "\n\n#### <a name=\"examples\"></a>範例\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/30-events/events-chart-activated.yaml\nawait Excel.run(async (context) => {\n\n    const pieChart = context.workbook.worksheets.getActiveWorksheet().charts.getItem(\"Pie\");\n\n    // Register the onActivated and onDeactivated event handlers.\n    pieChart.onActivated.add(chartActivated);\n    pieChart.onDeactivated.add(chartDeactivated);\n\n    await context.sync();\n\n    console.log(\"Added handlers for Chart onActivated and onDeactivated events.\");\n});\n```\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/30-events/events-chart-activated.yaml\nasync function chartDeactivated(event) {\n    await Excel.run(async (context) => {\n        // Callback function for when the chart is deactivated.\n        console.log(\"The pie chart is NOT active.\");\n    });\n}\n```"
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: aad791e41085a83ed13bb14b2824e536df7b82d2
  ms.sourcegitcommit: 254c121bb627b0cf1f6bfa4cfd0a1b38e5de6ed9
  ms.translationtype: MT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 06/23/2021
  ms.locfileid: "53077480"
