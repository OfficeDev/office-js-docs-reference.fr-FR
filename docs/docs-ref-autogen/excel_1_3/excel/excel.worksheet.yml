### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.Worksheet:class'
    summary: "<span data-ttu-id=\"362ab-101\">Une feuille de calcul Excel est une grille de cellules.</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-101\">An Excel worksheet is a grid of cells.</span></span> <span data-ttu-id=\"362ab-102\">Il peut contenir des données, des tableaux, des graphiques, etc. Pour en savoir plus sur le modèle objet de feuille de calcul, consultez [travailler avec des feuilles de calcul à l’aide de l’API JavaScript pour Excel](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-worksheets) .</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-102\">It can contain data, tables, charts, etc. To learn more about the worksheet object model, read [Work with worksheets using the Excel JavaScript API](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-worksheets)</span></span><!-- --><span data-ttu-id=\"362ab-103\">.</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-103\"></span></span>\n\n<span data-ttu-id=\"362ab-104\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-104\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: Excel.Worksheet
    fullName: Excel.Worksheet
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.Worksheet#activate:member(1)'
      - 'excel!Excel.Worksheet#charts:member'
      - 'excel!Excel.Worksheet#context:member'
      - 'excel!Excel.Worksheet#delete:member(1)'
      - 'excel!Excel.Worksheet#getCell:member(1)'
      - 'excel!Excel.Worksheet#getRange:member(1)'
      - 'excel!Excel.Worksheet#getUsedRange:member(1)'
      - 'excel!Excel.Worksheet#id:member'
      - 'excel!Excel.Worksheet#load:member(1)'
      - 'excel!Excel.Worksheet#load:member(2)'
      - 'excel!Excel.Worksheet#load:member(3)'
      - 'excel!Excel.Worksheet#name:member'
      - 'excel!Excel.Worksheet#pivotTables:member'
      - 'excel!Excel.Worksheet#position:member'
      - 'excel!Excel.Worksheet#protection:member'
      - 'excel!Excel.Worksheet#set:member(1)'
      - 'excel!Excel.Worksheet#set:member(2)'
      - 'excel!Excel.Worksheet#tables:member'
      - 'excel!Excel.Worksheet#toJSON:member(1)'
      - 'excel!Excel.Worksheet#visibility:member'
  - uid: 'excel!Excel.Worksheet#activate:member(1)'
    summary: "<span data-ttu-id=\"362ab-105\">Active la feuille de calcul dans l’interface utilisateur Excel.</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-105\">Activate the worksheet in the Excel UI.</span></span>\n\n<span data-ttu-id=\"362ab-106\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-106\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: activate()
    fullName: activate()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'activate(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="362ab-107">Exemples</span><span class="sxs-lookup"><span data-stu-id="362ab-107">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var wSheetName = 'Sheet1';
              var worksheet = ctx.workbook.worksheets.getItem(wSheetName);
              worksheet.activate();
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.Worksheet#charts:member'
    summary: "<span data-ttu-id=\"362ab-108\">Renvoie une collection de graphiques qui font partie de la feuille de calcul.</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-108\">Returns collection of charts that are part of the worksheet.</span></span> <span data-ttu-id=\"362ab-109\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-109\">Read-only.</span></span>\n\n<span data-ttu-id=\"362ab-110\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-110\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: charts
    fullName: charts
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly charts: Excel.ChartCollection;'
      return:
        type:
          - 'excel!Excel.ChartCollection:class'
  - uid: 'excel!Excel.Worksheet#context:member'
    summary: <span data-ttu-id="362ab-111">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="362ab-111">The request context associated with the object.</span></span> <span data-ttu-id="362ab-112">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="362ab-112">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.Worksheet#delete:member(1)'
    summary: "<span data-ttu-id=\"362ab-113\">Supprime la feuille de calcul du classeur.</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-113\">Deletes the worksheet from the workbook.</span></span> <span data-ttu-id=\"362ab-114\">Notez que si la visibilité de la feuille de calcul est définie sur «\_VeryHidden\_», l’opération de suppression `InvalidOperation` échoue avec une exception.</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-114\">Note that if the worksheet's visibility is set to \"VeryHidden\", the delete operation will fail with an `InvalidOperation` exception.</span></span> <span data-ttu-id=\"362ab-115\">Vous devez d’abord modifier sa visibilité sur masquée ou visible avant de la supprimer.</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-115\">You should first change its visibility to hidden or visible before deleting it.</span></span>\n\n<span data-ttu-id=\"362ab-116\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-116\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="362ab-117">Exemples</span><span class="sxs-lookup"><span data-stu-id="362ab-117">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var wSheetName = 'Sheet1';
              var worksheet = ctx.workbook.worksheets.getItem(wSheetName);
              worksheet.delete();
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.Worksheet#getCell:member(1)'
    summary: "<span data-ttu-id=\"362ab-118\">Renvoie l’objet de plage qui contient une cellule donnée sur la base des numéros de ligne et de colonne.</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-118\">Gets the range object containing the single cell based on row and column numbers.</span></span> <span data-ttu-id=\"362ab-119\">La cellule peut être située en dehors des limites de sa plage parente, tant qu’elle reste dans la grille de la feuille de calcul.</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-119\">The cell can be outside the bounds of its parent range, so long as it stays within the worksheet grid.</span></span>\n\n<span data-ttu-id=\"362ab-120\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-120\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: 'getCell(row, column)'
    fullName: 'getCell(row, column)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCell(row: number, column: number): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="362ab-121">Exemples</span><span class="sxs-lookup"><span data-stu-id="362ab-121">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "A1:F8";
              var worksheet = ctx.workbook.worksheets.getItem(sheetName);
              var cell = worksheet.getCell(0,0);
              cell.load('address');
              return ctx.sync().then(function() {
                  console.log(cell.address);
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: row
          description: <span data-ttu-id="362ab-122">Numéro de ligne de la cellule à récupérer.</span><span class="sxs-lookup"><span data-stu-id="362ab-122">The row number of the cell to be retrieved.</span></span> <span data-ttu-id="362ab-123">Avec indice zéro.</span><span class="sxs-lookup"><span data-stu-id="362ab-123">Zero-indexed.</span></span>
          type:
            - number
        - id: column
          description: <span data-ttu-id="362ab-124">Numéro de colonne de la cellule à récupérer.</span><span class="sxs-lookup"><span data-stu-id="362ab-124">the column number of the cell to be retrieved.</span></span> <span data-ttu-id="362ab-125">Avec indice zéro.</span><span class="sxs-lookup"><span data-stu-id="362ab-125">Zero-indexed.</span></span>
          type:
            - number
  - uid: 'excel!Excel.Worksheet#getRange:member(1)'
    summary: "<span data-ttu-id=\"362ab-126\">Obtient l’objet de plage, représentant un seul bloc de cellules rectangulaires, spécifié par l’adresse ou le nom.</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-126\">Gets the range object, representing a single rectangular block of cells, specified by the address or name.</span></span>\n\n<span data-ttu-id=\"362ab-127\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-127\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: getRange(address)
    fullName: getRange(address)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(address?: string): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="362ab-128">Exemples</span><span class="sxs-lookup"><span data-stu-id="362ab-128">Examples</span></span>

          ```javascript
          // Below example uses range address to get the range object.
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "A1:F8";
              var worksheet = ctx.workbook.worksheets.getItem(sheetName);
              var range = worksheet.getRange(rangeAddress);
              range.load('cellCount');
              return ctx.sync().then(function() {
                  console.log(range.cellCount);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Below example uses a named-range to get the range object.
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeName = 'MyRange';
              var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeName);
              range.load('address');
              return ctx.sync().then(function() {
                  console.log(range.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: address
          description: "<span data-ttu-id=\"362ab-129\">Facultatif.</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-129\">Optional.</span></span> <span data-ttu-id=\"362ab-130\">La chaîne représentant l’adresse ou le nom de la plage.</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-130\">The string representing the address or name of the range.</span></span> <span data-ttu-id=\"362ab-131\">Par exemple, «\_a1\_: B2\_».</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-131\">For example, \"A1:B2\".</span></span> <span data-ttu-id=\"362ab-132\">Si cette propriété n’est pas définie, la plage de la feuille de calcul toute entière est renvoyée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-132\">If not specified, the entire worksheet range is returned.</span></span>"
          type:
            - string
  - uid: 'excel!Excel.Worksheet#getUsedRange:member(1)'
    summary: "<span data-ttu-id=\"362ab-133\">La plage utilisée est la plus petite plage qui englobe toutes les cellules auxquelles une valeur ou un format est affecté.</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-133\">The used range is the smallest range that encompasses any cells that have a value or formatting assigned to them.</span></span> <span data-ttu-id=\"362ab-134\">Si la feuille de calcul entière est vide, cette fonction renvoie la cellule supérieure gauche (autrement dit, elle ne génère *pas* d’erreur).</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-134\">If the entire worksheet is blank, this function will return the top left cell (i.e. it will *not* throw an error).</span></span>\n\n<span data-ttu-id=\"362ab-135\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-135\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: getUsedRange(valuesOnly)
    fullName: getUsedRange(valuesOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getUsedRange(valuesOnly?: boolean): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="362ab-136">Exemples</span><span class="sxs-lookup"><span data-stu-id="362ab-136">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var wSheetName = 'Sheet1';
              var worksheet = ctx.workbook.worksheets.getItem(wSheetName);
              var usedRange = worksheet.getUsedRange();
              usedRange.load('address');
              return ctx.sync().then(function() {
                      console.log(usedRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: valuesOnly
          description: "<span data-ttu-id=\"362ab-137\">Facultatif.</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-137\">Optional.</span></span> <span data-ttu-id=\"362ab-138\">Si la valeur est true, ne prend en compte que les cellules contenant des valeurs comme cellules utilisées (en ignorant la mise en forme).</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-138\">If true, considers only cells with values as used cells (ignoring formatting).</span></span> <span data-ttu-id=\"362ab-139\">\\[Ensemble d’API\_: ExcelApi 1,2\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-139\">\\[Api set: ExcelApi 1.2\\]</span></span>"
          type:
            - boolean
  - uid: 'excel!Excel.Worksheet#id:member'
    summary: "<span data-ttu-id=\"362ab-p111\">Renvoie une valeur qui permet d’identifier la feuille de calcul de façon unique dans un classeur donné. La valeur de l’identificateur reste identique, même lorsque la feuille de calcul est renommée ou déplacée. En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-p111\">Returns a value that uniquely identifies the worksheet in a given workbook. The value of the identifier remains the same even when the worksheet is renamed or moved. Read-only.</span></span>\n\n<span data-ttu-id=\"362ab-143\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-143\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Worksheet#load:member(1)'
    summary: "<span data-ttu-id=\"362ab-144\">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-144\">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id=\"362ab-145\">Vous devez appeler «\_context.sync()\_» avant de lire les propriétés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-145\">You must call \"context.sync()\" before reading the properties.</span></span>"
    remarks: "<span data-ttu-id=\"362ab-146\">En plus de cette signature, cette méthode possède les signatures suivantes\_:</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-146\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"362ab-147\">`load(option?: string | string[]): Excel.Worksheet`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-147\">`load(option?: string | string[]): Excel.Worksheet` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>\n\n<span data-ttu-id=\"362ab-148\">`load(option?: { select?: string; expand?: string; }): Excel.Worksheet`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-148\">`load(option?: { select?: string; expand?: string; }): Excel.Worksheet` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"362ab-149\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Worksheet`-Uniquement disponible sur les types de collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-149\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Worksheet` - Only available on collection types.</span></span> <span data-ttu-id=\"362ab-150\">Elle est similaire à la signature précédente.</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-150\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"362ab-151\">Option. Top indique le nombre maximal d’éléments de collection qui peuvent être inclus dans le résultat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-151\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"362ab-152\">Option. Skip indique le nombre d’éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-152\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"362ab-153\">Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d’éléments.</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-153\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>"
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.WorksheetLoadOptions): Excel.Worksheet;'
      return:
        type:
          - 'excel!Excel.Worksheet:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.Interfaces.WorksheetLoadOptions:interface'
  - uid: 'excel!Excel.Worksheet#load:member(2)'
    summary: <span data-ttu-id="362ab-154">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="362ab-154">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="362ab-155">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="362ab-155">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Worksheet;'
      return:
        type:
          - 'excel!Excel.Worksheet:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="362ab-156">Exemples</span><span class="sxs-lookup"><span data-stu-id="362ab-156">Examples</span></span>

          ```javascript
          // Get worksheet properties based on sheet name.
          Excel.run(function (ctx) { 
              var wSheetName = 'Sheet1';
              var worksheet = ctx.workbook.worksheets.getItem(wSheetName);
              worksheet.load('position')
              return ctx.sync().then(function() {
                      console.log(worksheet.position);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Set worksheet position. 
          Excel.run(function (ctx) { 
              var wSheetName = 'Sheet1';
              var worksheet = ctx.workbook.worksheets.getItem(wSheetName);
              worksheet.position = 2;
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="362ab-157">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="362ab-157">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.Worksheet#load:member(3)'
    summary: <span data-ttu-id="362ab-158">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="362ab-158">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="362ab-159">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="362ab-159">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Worksheet;'
      return:
        type:
          - 'excel!Excel.Worksheet:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="362ab-160">Où propertyNamesAndPaths. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et propertyNamesAndPaths. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="362ab-160">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'excel!Excel.Worksheet#name:member'
    summary: "<span data-ttu-id=\"362ab-161\">Nom complet de la feuille de calcul.</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-161\">The display name of the worksheet.</span></span>\n\n<span data-ttu-id=\"362ab-162\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-162\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Worksheet#pivotTables:member'
    summary: "<span data-ttu-id=\"362ab-163\">Collection de tableaux croisés dynamiques qui font partie de la feuille de calcul.</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-163\">Collection of PivotTables that are part of the worksheet.</span></span> <span data-ttu-id=\"362ab-164\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-164\">Read-only.</span></span>\n\n<span data-ttu-id=\"362ab-165\">\\[[Ensemble d’API\_: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-165\">\\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: pivotTables
    fullName: pivotTables
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly pivotTables: Excel.PivotTableCollection;'
      return:
        type:
          - 'excel!Excel.PivotTableCollection:class'
  - uid: 'excel!Excel.Worksheet#position:member'
    summary: "<span data-ttu-id=\"362ab-166\">Position de la feuille de calcul au sein du classeur (sur une base zéro).</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-166\">The zero-based position of the worksheet within the workbook.</span></span>\n\n<span data-ttu-id=\"362ab-167\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-167\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: position
    fullName: position
    langs:
      - typeScript
    type: property
    syntax:
      content: 'position: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.Worksheet#protection:member'
    summary: "<span data-ttu-id=\"362ab-168\">Renvoie un objet de protection de feuille pour une feuille de calcul.</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-168\">Returns sheet protection object for a worksheet.</span></span> <span data-ttu-id=\"362ab-169\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-169\">Read-only.</span></span>\n\n<span data-ttu-id=\"362ab-170\">\\[[Ensemble d’API\_: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-170\">\\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: protection
    fullName: protection
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly protection: Excel.WorksheetProtection;'
      return:
        type:
          - 'excel!Excel.WorksheetProtection:class'
  - uid: 'excel!Excel.Worksheet#set:member(1)'
    summary: '<span data-ttu-id="362ab-171">Définit plusieurs propriétés d’un objet en même temps.</span><span class="sxs-lookup"><span data-stu-id="362ab-171">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="362ab-172">Vous pouvez transmettre un objet plain avec les propriétés appropriées, ou un autre objet API du même type.</span><span class="sxs-lookup"><span data-stu-id="362ab-172">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: "<span data-ttu-id=\"362ab-173\">Cette méthode est dotée de la signature supplémentaire suivante\_:</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-173\">This method has the following additional signature:</span></span>\n\n`set(properties: Excel.Worksheet): void`"
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.WorksheetUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="362ab-174">Objet JavaScript avec des propriétés qui sont structurées isomorphically vers les propriétés de l’objet sur lequel la méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="362ab-174">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'excel!Excel.Interfaces.WorksheetUpdateData:interface'
        - id: options
          description: <span data-ttu-id="362ab-175">Fournit une option permettant de supprimer les erreurs si l’objet Properties tente de définir des propriétés en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="362ab-175">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.Worksheet#set:member(2)'
    summary: '<span data-ttu-id="362ab-176">Définit plusieurs propriétés de l’objet en même temps, en fonction d’un objet chargé existant.</span><span class="sxs-lookup"><span data-stu-id="362ab-176">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Worksheet): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.Worksheet:class'
  - uid: 'excel!Excel.Worksheet#tables:member'
    summary: "<span data-ttu-id=\"362ab-177\">Collection de tableaux qui font partie de la feuille de calcul.</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-177\">Collection of tables that are part of the worksheet.</span></span> <span data-ttu-id=\"362ab-178\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-178\">Read-only.</span></span>\n\n<span data-ttu-id=\"362ab-179\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-179\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: tables
    fullName: tables
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly tables: Excel.TableCollection;'
      return:
        type:
          - 'excel!Excel.TableCollection:class'
  - uid: 'excel!Excel.Worksheet#toJSON:member(1)'
    summary: '<span data-ttu-id="362ab-180">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="362ab-180">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="362ab-181">.</span><span class="sxs-lookup"><span data-stu-id="362ab-181"></span></span> <span data-ttu-id="362ab-182">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="362ab-182"></span></span><!-- --><span data-ttu-id="362ab-183">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que l’objet Excel. Worksheet d’origine est un objet `toJSON` API, la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.WorksheetData`</span><span class="sxs-lookup"><span data-stu-id="362ab-183">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Worksheet object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.WorksheetData`</span></span><!-- --><span data-ttu-id="362ab-184">) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l’objet d’origine.</span><span class="sxs-lookup"><span data-stu-id="362ab-184">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.WorksheetData;'
      return:
        type:
          - 'excel!Excel.Interfaces.WorksheetData:interface'
        description: ''
  - uid: 'excel!Excel.Worksheet#visibility:member'
    summary: "<span data-ttu-id=\"362ab-185\">Visibilité de la feuille de calcul.</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-185\">The Visibility of the worksheet.</span></span>\n\n<span data-ttu-id=\"362ab-186\">\\[[Ensemble d’API\_: ExcelApi 1,1 pour la lecture de la visibilité\_; 1,2 pour le définir.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-186\">\\[ [API set: ExcelApi 1.1 for reading visibility; 1.2 for setting it.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span></span> <span data-ttu-id=\"362ab-187\">\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"362ab-187\"></span></span>"
    name: visibility
    fullName: visibility
    langs:
      - typeScript
    type: property
    syntax:
      content: 'visibility: Excel.SheetVisibility | "Visible" | "Hidden" | "VeryHidden";'
      return:
        type:
          - 'excel!Excel.Worksheet#visibility~0:complex'
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.ChartCollection:class'
    name: Excel.ChartCollection
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.Range:class'
    name: Excel.Range
  - uid: 'excel!Excel.Worksheet:class'
    name: Excel.Worksheet
  - uid: 'excel!Excel.Interfaces.WorksheetLoadOptions:interface'
    name: Excel.Interfaces.WorksheetLoadOptions
  - uid: 'excel!Excel.PivotTableCollection:class'
    name: Excel.PivotTableCollection
  - uid: 'excel!Excel.WorksheetProtection:class'
    name: Excel.WorksheetProtection
  - uid: 'excel!Excel.Interfaces.WorksheetUpdateData:interface'
    name: Interfaces.WorksheetUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.TableCollection:class'
    name: Excel.TableCollection
  - uid: 'excel!Excel.Interfaces.WorksheetData:interface'
    name: Excel.Interfaces.WorksheetData
  - uid: 'excel!Excel.Worksheet#visibility~0:complex'
    name: Excel.SheetVisibility | "Visible" | "Hidden" | "VeryHidden"
    fullName: Excel.SheetVisibility | "Visible" | "Hidden" | "VeryHidden"
    spec.typeScript:
      - uid: 'excel!Excel.SheetVisibility:enum'
        name: Excel.SheetVisibility
        fullName: Excel.SheetVisibility
      - name: ' | "Visible" | "Hidden" | "VeryHidden"'
        fullName: ' | "Visible" | "Hidden" | "VeryHidden"'