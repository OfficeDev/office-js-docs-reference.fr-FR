### YamlMime:UniversalReference
items:
  - uid: excel.Excel.WorksheetCollection
    summary: |-
      <span data-ttu-id="2428d-101">Représente une collection d’objets de feuille de calcul qui font partie du classeur.</span><span class="sxs-lookup"><span data-stu-id="2428d-101">Represents a collection of worksheet objects that are part of the workbook.</span></span>

      <span data-ttu-id="2428d-102">\[[Ensemble d'API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2428d-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.WorksheetCollection
    fullName: Excel.WorksheetCollection
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.WorksheetCollection.add
      - excel.Excel.WorksheetCollection.addFromBase64
      - excel.Excel.WorksheetCollection.addFromBase64_1
      - excel.Excel.WorksheetCollection.context
      - excel.Excel.WorksheetCollection.getActiveWorksheet
      - excel.Excel.WorksheetCollection.getCount
      - excel.Excel.WorksheetCollection.getFirst
      - excel.Excel.WorksheetCollection.getItem
      - excel.Excel.WorksheetCollection.getItemOrNullObject
      - excel.Excel.WorksheetCollection.getLast
      - excel.Excel.WorksheetCollection.items
      - excel.Excel.WorksheetCollection.load
      - excel.Excel.WorksheetCollection.load_1
      - excel.Excel.WorksheetCollection.load_2
      - excel.Excel.WorksheetCollection.onActivated
      - excel.Excel.WorksheetCollection.onAdded
      - excel.Excel.WorksheetCollection.onCalculated
      - excel.Excel.WorksheetCollection.onChanged
      - excel.Excel.WorksheetCollection.onColumnSorted
      - excel.Excel.WorksheetCollection.onDeactivated
      - excel.Excel.WorksheetCollection.onDeleted
      - excel.Excel.WorksheetCollection.onFiltered
      - excel.Excel.WorksheetCollection.onFormatChanged
      - excel.Excel.WorksheetCollection.onRowSorted
      - excel.Excel.WorksheetCollection.onSelectionChanged
      - excel.Excel.WorksheetCollection.toJSON
  - uid: excel.Excel.WorksheetCollection.add
    summary: |-
      <span data-ttu-id="2428d-p101">Ajoute une nouvelle feuille de calcul au classeur. La feuille de calcul est ajoutée à la fin des feuilles de calcul existantes. Si vous souhaitez activer la feuille de calcul nouvellement ajoutée, appelez la méthode .activate() pour cette feuille.</span><span class="sxs-lookup"><span data-stu-id="2428d-p101">Adds a new worksheet to the workbook. The worksheet will be added at the end of existing worksheets. If you wish to activate the newly added worksheet, call ".activate() on it.</span></span>

      <span data-ttu-id="2428d-106">\[[Ensemble d'API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2428d-106">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: add(name)
    fullName: add(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(name?: string): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2428d-107">Exemples</span><span class="sxs-lookup"><span data-stu-id="2428d-107">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var wSheetName = 'Sample Name';
              var worksheet = ctx.workbook.worksheets.add(wSheetName);
              worksheet.load('name');
              return ctx.sync().then(function() {
                  console.log(worksheet.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: name
          description: '<span data-ttu-id="2428d-p102">Facultatif. Nom de la feuille de calcul à ajouter. Si cette propriété est définie, le nom doit être unique. Si cette propriété n’est pas définie, Excel détermine le nom de la nouvelle feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="2428d-p102">Optional. The name of the worksheet to be added. If specified, name should be unqiue. If not specified, Excel determines the name of the new worksheet.</span></span>'
          type:
            - string
  - uid: excel.Excel.WorksheetCollection.addFromBase64
    summary: |-
      <span data-ttu-id="2428d-112">Insère les feuilles de calcul spécifiées d’un classeur dans le classeur actif.</span><span class="sxs-lookup"><span data-stu-id="2428d-112">Inserts the specified worksheets of a workbook into the current workbook.</span></span>

      <span data-ttu-id="2428d-113">\[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2428d-113">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: 'addFromBase64(base64File, sheetNamesToInsert, positionType, relativeTo)'
    fullName: 'addFromBase64(base64File, sheetNamesToInsert, positionType, relativeTo)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromBase64(base64File: string, sheetNamesToInsert?: string[], positionType?: Excel.WorksheetPositionType, relativeTo?: Worksheet | string): OfficeExtension.ClientResult<string[]>;'
      return:
        type:
          - 'OfficeExtension.ClientResult<string[]>'
        description: |-
          <span data-ttu-id="2428d-114">Tableau d'ID correspondant à chaque feuille de calcul nouvellement insérée.</span><span class="sxs-lookup"><span data-stu-id="2428d-114">An array of ids corresponding to each newly inserted worksheet.</span></span>

          #### <a name="examples"></a><span data-ttu-id="2428d-115">Exemples</span><span class="sxs-lookup"><span data-stu-id="2428d-115">Examples</span></span>

          ```javascript
          const myFile = <HTMLInputElement>document.getElementById("file");
          const reader = new FileReader();

          reader.onload = (event) => {
              Excel.run((context) => {
                  // strip off the metadata before the base64-encoded string
                  const startIndex = (<string>(<FileReader>event.target).result).indexOf("base64,");
                  const workbookContents = (<string>(<FileReader>event.target).result).substr(startIndex + 7);

                  const sheets = context.workbook.worksheets;
                  sheets.addFromBase64(
                      workbookContents,
                      null, // get all the worksheets 
                      Excel.WorksheetPositionType.end // insert them after the current workbook's worksheets
                      );
                  return context.sync();
              });
          };

          // read in the file as a data URL so we can parse the base64-encoded string
          reader.readAsDataURL(myFile.files[0]);
          ```
      parameters:
        - id: base64File
          description: <span data-ttu-id="2428d-116">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="2428d-116">Required.</span></span> <span data-ttu-id="2428d-117">Chaîne codée en base64 représentant le fichier de classeur source.</span><span class="sxs-lookup"><span data-stu-id="2428d-117">The base64-encoded string representing the source workbook file.</span></span>
          type:
            - string
        - id: sheetNamesToInsert
          description: '<span data-ttu-id="2428d-118">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="2428d-118">Optional.</span></span> <span data-ttu-id="2428d-119">Noms des feuilles individuelles à insérer.</span><span class="sxs-lookup"><span data-stu-id="2428d-119">The names of individual worksheets to insert.</span></span> <span data-ttu-id="2428d-120">Par défaut, toutes les feuilles de calcul du classeur source sont insérées.</span><span class="sxs-lookup"><span data-stu-id="2428d-120">By default, all the worksheets from the source workbook are inserted.</span></span>'
          type:
            - 'string[]'
        - id: positionType
          description: '<span data-ttu-id="2428d-121">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="2428d-121">Optional.</span></span> <span data-ttu-id="2428d-122">Où les nouvelles feuilles de calcul seront insérées dans le classeur actif.</span><span class="sxs-lookup"><span data-stu-id="2428d-122">Where in the current workbook the new worksheets will be inserted.</span></span> <span data-ttu-id="2428d-123">Pour plus d''informations, voir Excel. WorksheetPositionType.</span><span class="sxs-lookup"><span data-stu-id="2428d-123">See Excel.WorksheetPositionType for details.</span></span> <span data-ttu-id="2428d-124">La valeur par défaut est «démarrer».</span><span class="sxs-lookup"><span data-stu-id="2428d-124">Default is "Start".</span></span>'
          type:
            - excel.Excel.WorksheetPositionType
        - id: relativeTo
          description: '<span data-ttu-id="2428d-125">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="2428d-125">Optional.</span></span> <span data-ttu-id="2428d-126">Feuille de calcul du classeur actif référencée pour le paramètre positionType.</span><span class="sxs-lookup"><span data-stu-id="2428d-126">The worksheet in the current workbook that is referenced for the positionType parameter.</span></span> <span data-ttu-id="2428d-127">La valeur par défaut est null et, en fonction de positionType, des feuilles de calcul sont insérées au début ou à la fin du classeur actif.</span><span class="sxs-lookup"><span data-stu-id="2428d-127">Default is null and, based on positionType, it will insert worksheets at the start or end of the current workbook.</span></span>'
          type:
            - Worksheet | string
  - uid: excel.Excel.WorksheetCollection.addFromBase64_1
    summary: |-
      <span data-ttu-id="2428d-128">Insère les feuilles de calcul spécifiées d’un classeur dans le classeur actif.</span><span class="sxs-lookup"><span data-stu-id="2428d-128">Inserts the specified worksheets of a workbook into the current workbook.</span></span>

      <span data-ttu-id="2428d-129">\[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2428d-129">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: 'addFromBase64(base64File, sheetNamesToInsert, positionTypeString, relativeTo)'
    fullName: 'addFromBase64(base64File, sheetNamesToInsert, positionTypeString, relativeTo)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromBase64(base64File: string, sheetNamesToInsert?: string[], positionTypeString?: "None" | "Before" | "After" | "Beginning" | "End", relativeTo?: Worksheet | string): OfficeExtension.ClientResult<string[]>;'
      return:
        type:
          - 'OfficeExtension.ClientResult<string[]>'
        description: <span data-ttu-id="2428d-130">Tableau d'ID correspondant à chaque feuille de calcul nouvellement insérée.</span><span class="sxs-lookup"><span data-stu-id="2428d-130">An array of ids corresponding to each newly inserted worksheet.</span></span>
      parameters:
        - id: base64File
          description: <span data-ttu-id="2428d-131">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="2428d-131">Required.</span></span> <span data-ttu-id="2428d-132">Chaîne codée en base64 représentant le fichier de classeur source.</span><span class="sxs-lookup"><span data-stu-id="2428d-132">The base64-encoded string representing the source workbook file.</span></span>
          type:
            - string
        - id: sheetNamesToInsert
          description: '<span data-ttu-id="2428d-133">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="2428d-133">Optional.</span></span> <span data-ttu-id="2428d-134">Noms des feuilles individuelles à insérer.</span><span class="sxs-lookup"><span data-stu-id="2428d-134">The names of individual worksheets to insert.</span></span> <span data-ttu-id="2428d-135">Par défaut, toutes les feuilles de calcul du classeur source sont insérées.</span><span class="sxs-lookup"><span data-stu-id="2428d-135">By default, all the worksheets from the source workbook are inserted.</span></span>'
          type:
            - 'string[]'
        - id: positionTypeString
          description: '<span data-ttu-id="2428d-136">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="2428d-136">Optional.</span></span> <span data-ttu-id="2428d-137">Où les nouvelles feuilles de calcul seront insérées dans le classeur actif.</span><span class="sxs-lookup"><span data-stu-id="2428d-137">Where in the current workbook the new worksheets will be inserted.</span></span> <span data-ttu-id="2428d-138">Pour plus d''informations, voir Excel. WorksheetPositionType.</span><span class="sxs-lookup"><span data-stu-id="2428d-138">See Excel.WorksheetPositionType for details.</span></span> <span data-ttu-id="2428d-139">La valeur par défaut est «démarrer».</span><span class="sxs-lookup"><span data-stu-id="2428d-139">Default is "Start".</span></span>'
          type:
            - '"None" | "Before" | "After" | "Beginning" | "End"'
        - id: relativeTo
          description: '<span data-ttu-id="2428d-140">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="2428d-140">Optional.</span></span> <span data-ttu-id="2428d-141">Feuille de calcul du classeur actif référencée pour le paramètre positionType.</span><span class="sxs-lookup"><span data-stu-id="2428d-141">The worksheet in the current workbook that is referenced for the positionType parameter.</span></span> <span data-ttu-id="2428d-142">La valeur par défaut est null et, en fonction de positionType, des feuilles de calcul sont insérées au début ou à la fin du classeur actif.</span><span class="sxs-lookup"><span data-stu-id="2428d-142">Default is null and, based on positionType, it will insert worksheets at the start or end of the current workbook.</span></span>'
          type:
            - Worksheet | string
  - uid: excel.Excel.WorksheetCollection.context
    summary: <span data-ttu-id="2428d-143">Contexte de demande associé à l'objet.</span><span class="sxs-lookup"><span data-stu-id="2428d-143">The request context associated with the object.</span></span> <span data-ttu-id="2428d-144">Cette opération connecte le processus du complément au processus de l'application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="2428d-144">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.WorksheetCollection.getActiveWorksheet
    summary: |-
      <span data-ttu-id="2428d-145">Obtient la feuille de calcul active du classeur.</span><span class="sxs-lookup"><span data-stu-id="2428d-145">Gets the currently active worksheet in the workbook.</span></span>

      <span data-ttu-id="2428d-146">\[[Ensemble d'API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2428d-146">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getActiveWorksheet()
    fullName: getActiveWorksheet()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveWorksheet(): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2428d-147">Exemples</span><span class="sxs-lookup"><span data-stu-id="2428d-147">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) {  
              var activeWorksheet = ctx.workbook.worksheets.getActiveWorksheet();
              activeWorksheet.load('name');
              return ctx.sync().then(function() {
                      console.log(activeWorksheet.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.WorksheetCollection.getCount
    summary: |-
      <span data-ttu-id="2428d-148">Obtient le nombre de feuilles de calcul dans la collection.</span><span class="sxs-lookup"><span data-stu-id="2428d-148">Gets the number of worksheets in the collection.</span></span>

      <span data-ttu-id="2428d-149">\[[Ensemble d'API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2428d-149">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCount(visibleOnly)
    fullName: getCount(visibleOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(visibleOnly?: boolean): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
      parameters:
        - id: visibleOnly
          description: '<span data-ttu-id="2428d-150">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="2428d-150">Optional.</span></span> <span data-ttu-id="2428d-151">Si la valeur est true, ne prend en compte que les feuilles de calcul visibles, en ignorant celles qui sont masquées.</span><span class="sxs-lookup"><span data-stu-id="2428d-151">If true, considers only visible worksheets, skipping over any hidden ones.</span></span>'
          type:
            - boolean
  - uid: excel.Excel.WorksheetCollection.getFirst
    summary: |-
      <span data-ttu-id="2428d-152">Obtient la première feuille de calcul dans la collection.</span><span class="sxs-lookup"><span data-stu-id="2428d-152">Gets the first worksheet in the collection.</span></span>

      <span data-ttu-id="2428d-153">\[[Ensemble d'API: ExcelApi 1,5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2428d-153">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getFirst(visibleOnly)
    fullName: getFirst(visibleOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFirst(visibleOnly?: boolean): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2428d-154">Exemples</span><span class="sxs-lookup"><span data-stu-id="2428d-154">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheets = context.workbook.worksheets;

              // We don't want to include the default worksheet that was created
              // when the workbook was created, so our "firstSheet" will be the one
              // after the literal first. Note chaining of navigation methods.
              const firstSheet = sheets.getFirst().getNext();
              const lastSheet = sheets.getLast();
              const firstTaxRateRange = firstSheet.getRange("B2");
              const lastTaxRateRange = lastSheet.getRange("B2");

              firstSheet.load("name");
              lastSheet.load("name");
              firstTaxRateRange.load("text");
              lastTaxRateRange.load("text");

              await context.sync();

              let firstYear = firstSheet.name.substr(5, 4);
              let lastYear = lastSheet.name.substr(5, 4);
              console.log(`Tax Rate change from ${firstYear} to ${lastYear}`, `Tax rate for ${firstYear}: ${firstTaxRateRange.text[0][0]}\nTax rate for ${lastYear}: ${lastTaxRateRange.text[0][0]}`)

              await context.sync();
          });
          ```
      parameters:
        - id: visibleOnly
          description: '<span data-ttu-id="2428d-155">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="2428d-155">Optional.</span></span> <span data-ttu-id="2428d-156">Si la valeur est true, ne prend en compte que les feuilles de calcul visibles, en ignorant celles qui sont masquées.</span><span class="sxs-lookup"><span data-stu-id="2428d-156">If true, considers only visible worksheets, skipping over any hidden ones.</span></span>'
          type:
            - boolean
  - uid: excel.Excel.WorksheetCollection.getItem
    summary: |-
      <span data-ttu-id="2428d-157">Obtient un objet de feuille de calcul à l’aide de son nom ou de son ID.</span><span class="sxs-lookup"><span data-stu-id="2428d-157">Gets a worksheet object using its Name or ID.</span></span>

      <span data-ttu-id="2428d-158">\[[Ensemble d'API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2428d-158">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="2428d-159">Nom ou ID de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="2428d-159">The Name or ID of the worksheet.</span></span>
          type:
            - string
  - uid: excel.Excel.WorksheetCollection.getItemOrNullObject
    summary: |-
      <span data-ttu-id="2428d-160">Obtient un objet de feuille de calcul à l’aide de son nom ou de son ID.</span><span class="sxs-lookup"><span data-stu-id="2428d-160">Gets a worksheet object using its Name or ID.</span></span> <span data-ttu-id="2428d-161">Si la feuille de calcul n’existe pas, renvoie un objet null.</span><span class="sxs-lookup"><span data-stu-id="2428d-161">If the worksheet does not exist, will return a null object.</span></span>

      <span data-ttu-id="2428d-162">\[[Ensemble d'API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2428d-162">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemOrNullObject(key)
    fullName: getItemOrNullObject(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(key: string): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="2428d-163">Nom ou ID de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="2428d-163">The Name or ID of the worksheet.</span></span>
          type:
            - string
  - uid: excel.Excel.WorksheetCollection.getLast
    summary: |-
      <span data-ttu-id="2428d-164">Obtient la dernière feuille de calcul dans la collection.</span><span class="sxs-lookup"><span data-stu-id="2428d-164">Gets the last worksheet in the collection.</span></span>

      <span data-ttu-id="2428d-165">\[[Ensemble d'API: ExcelApi 1,5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2428d-165">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getLast(visibleOnly)
    fullName: getLast(visibleOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getLast(visibleOnly?: boolean): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2428d-166">Exemples</span><span class="sxs-lookup"><span data-stu-id="2428d-166">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheets = context.workbook.worksheets;

              // We don't want to include the default worksheet that was created
              // when the workbook was created, so our "firstSheet" will be the one
              // after the literal first. Note chaining of navigation methods.
              const firstSheet = sheets.getFirst().getNext();
              const lastSheet = sheets.getLast();
              const firstTaxRateRange = firstSheet.getRange("B2");
              const lastTaxRateRange = lastSheet.getRange("B2");

              firstSheet.load("name");
              lastSheet.load("name");
              firstTaxRateRange.load("text");
              lastTaxRateRange.load("text");

              await context.sync();

              let firstYear = firstSheet.name.substr(5, 4);
              let lastYear = lastSheet.name.substr(5, 4);
              console.log(`Tax Rate change from ${firstYear} to ${lastYear}`, `Tax rate for ${firstYear}: ${firstTaxRateRange.text[0][0]}\nTax rate for ${lastYear}: ${lastTaxRateRange.text[0][0]}`)

              await context.sync();
          });
          ```
      parameters:
        - id: visibleOnly
          description: '<span data-ttu-id="2428d-167">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="2428d-167">Optional.</span></span> <span data-ttu-id="2428d-168">Si la valeur est true, ne prend en compte que les feuilles de calcul visibles, en ignorant celles qui sont masquées.</span><span class="sxs-lookup"><span data-stu-id="2428d-168">If true, considers only visible worksheets, skipping over any hidden ones.</span></span>'
          type:
            - boolean
  - uid: excel.Excel.WorksheetCollection.items
    summary: <span data-ttu-id="2428d-169">Obtient l’élément enfant chargé dans cette collection de sites.</span><span class="sxs-lookup"><span data-stu-id="2428d-169">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Worksheet[];'
      return:
        type:
          - 'Excel.Worksheet[]'
  - uid: excel.Excel.WorksheetCollection.load
    summary: "<span data-ttu-id=\"2428d-170\">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"2428d-170\">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id=\"2428d-171\">Vous devez appeler «\_context.sync()\_» avant de lire les propriétés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"2428d-171\">You must call \"context.sync()\" before reading the properties.</span></span>"
    remarks: |-
      <span data-ttu-id="2428d-172">En plus de cette signature, cette méthode possède les signatures suivantes:</span><span class="sxs-lookup"><span data-stu-id="2428d-172">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="2428d-173">`load(option?: string | string[]): Excel.WorksheetCollection`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="2428d-173">`load(option?: string | string[]): Excel.WorksheetCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="2428d-174">`load(option?: { select?: string; expand?: string; }): Excel.WorksheetCollection`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="2428d-174">`load(option?: { select?: string; expand?: string; }): Excel.WorksheetCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="2428d-175">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.WorksheetCollection`-Uniquement disponible sur les types de collection.</span><span class="sxs-lookup"><span data-stu-id="2428d-175">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.WorksheetCollection` - Only available on collection types.</span></span> <span data-ttu-id="2428d-176">Elle est similaire à la signature précédente.</span><span class="sxs-lookup"><span data-stu-id="2428d-176">It is similar to the preceding signature.</span></span> <span data-ttu-id="2428d-177">Option. Top indique le nombre maximal d'éléments de collection qui peuvent être inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="2428d-177">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="2428d-178">Option. Skip indique le nombre d'éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="2428d-178">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="2428d-179">Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d'éléments.</span><span class="sxs-lookup"><span data-stu-id="2428d-179">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.WorksheetCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.WorksheetCollection;'
      return:
        type:
          - excel.Excel.WorksheetCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.WorksheetCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel.Excel.WorksheetCollection.load_1
    summary: <span data-ttu-id="2428d-180">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="2428d-180">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="2428d-181">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="2428d-181">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.WorksheetCollection;'
      return:
        type:
          - excel.Excel.WorksheetCollection
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2428d-182">Exemples</span><span class="sxs-lookup"><span data-stu-id="2428d-182">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var worksheets = ctx.workbook.worksheets;
              worksheets.load('items');
              return ctx.sync().then(function() {
                  for (var i = 0; i < worksheets.items.length; i++)
                  {
                      console.log(worksheets.items[i].name);
                      console.log(worksheets.items[i].index);
                  }
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="2428d-183">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="2428d-183">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.WorksheetCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.WorksheetCollection;'
      return:
        type:
          - excel.Excel.WorksheetCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - office.OfficeExtension.LoadOption
  - uid: excel.Excel.WorksheetCollection.onActivated
    summary: |-
      <span data-ttu-id="2428d-184">Cet événement se produit lorsqu'une feuille de calcul du classeur est activée.</span><span class="sxs-lookup"><span data-stu-id="2428d-184">Occurs when any worksheet in the workbook is activated.</span></span>

      <span data-ttu-id="2428d-185">\[[Ensemble d'API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2428d-185">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onActivated
    fullName: onActivated
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onActivated: OfficeExtension.EventHandlers<Excel.WorksheetActivatedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetActivatedEventArgs>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2428d-186">Exemples</span><span class="sxs-lookup"><span data-stu-id="2428d-186">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let sheets = context.workbook.worksheets;
              sheets.onActivated.add(onActivate);

              await context.sync();
              console.log("A handler has been registered for the OnActivate event.");
          });
          ```
  - uid: excel.Excel.WorksheetCollection.onAdded
    summary: |-
      <span data-ttu-id="2428d-187">SurVient lors de l'ajout d'une nouvelle feuille de calcul au classeur.</span><span class="sxs-lookup"><span data-stu-id="2428d-187">Occurs when a new worksheet is added to the workbook.</span></span>

      <span data-ttu-id="2428d-188">\[[Ensemble d'API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2428d-188">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onAdded
    fullName: onAdded
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onAdded: OfficeExtension.EventHandlers<Excel.WorksheetAddedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetAddedEventArgs>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2428d-189">Exemples</span><span class="sxs-lookup"><span data-stu-id="2428d-189">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let sheet = context.workbook.worksheets;
              sheet.onAdded.add(onWorksheetAdd);

              await context.sync();
              console.log("A handler has been registered for the OnAdded event.");
          });
          ```
  - uid: excel.Excel.WorksheetCollection.onCalculated
    summary: |-
      <span data-ttu-id="2428d-190">Cet événement se produit lorsqu'une feuille de calcul du classeur est calculée.</span><span class="sxs-lookup"><span data-stu-id="2428d-190">Occurs when any worksheet in the workbook is calculated.</span></span>

      <span data-ttu-id="2428d-191">\[[Ensemble d'API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2428d-191">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onCalculated
    fullName: onCalculated
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onCalculated: OfficeExtension.EventHandlers<Excel.WorksheetCalculatedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetCalculatedEventArgs>
  - uid: excel.Excel.WorksheetCollection.onChanged
    summary: |-
      <span data-ttu-id="2428d-192">Se produit lorsqu’une feuille de calcul dans le classeur est modifiée.</span><span class="sxs-lookup"><span data-stu-id="2428d-192">Occurs when any worksheet in the workbook is changed.</span></span>

      <span data-ttu-id="2428d-193">\[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2428d-193">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: onChanged
    fullName: onChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onChanged: OfficeExtension.EventHandlers<Excel.WorksheetChangedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetChangedEventArgs>
  - uid: excel.Excel.WorksheetCollection.onColumnSorted
    summary: |-
      <span data-ttu-id="2428d-194">Se produit lors du tri sur les colonnes.</span><span class="sxs-lookup"><span data-stu-id="2428d-194">Occurs when sorting on columns.</span></span>

      <span data-ttu-id="2428d-195">\[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2428d-195">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: onColumnSorted
    fullName: onColumnSorted
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onColumnSorted: OfficeExtension.EventHandlers<Excel.WorksheetColumnSortedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetColumnSortedEventArgs>
  - uid: excel.Excel.WorksheetCollection.onDeactivated
    summary: |-
      <span data-ttu-id="2428d-196">Cet événement se produit lorsqu'une feuille de calcul du classeur est désactivée.</span><span class="sxs-lookup"><span data-stu-id="2428d-196">Occurs when any worksheet in the workbook is deactivated.</span></span>

      <span data-ttu-id="2428d-197">\[[Ensemble d'API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2428d-197">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onDeactivated
    fullName: onDeactivated
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onDeactivated: OfficeExtension.EventHandlers<Excel.WorksheetDeactivatedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetDeactivatedEventArgs>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2428d-198">Exemples</span><span class="sxs-lookup"><span data-stu-id="2428d-198">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let sheets = context.workbook.worksheets;
              sheets.onDeactivated.add(onDeactivate);

              await context.sync();
              console.log("A handler has been registered for the OnDeactivate event.");
          });
          ```
  - uid: excel.Excel.WorksheetCollection.onDeleted
    summary: |-
      <span data-ttu-id="2428d-199">SurVient lors de la suppression d'une feuille de calcul du classeur.</span><span class="sxs-lookup"><span data-stu-id="2428d-199">Occurs when a worksheet is deleted from the workbook.</span></span>

      <span data-ttu-id="2428d-200">\[[Ensemble d'API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2428d-200">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onDeleted
    fullName: onDeleted
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onDeleted: OfficeExtension.EventHandlers<Excel.WorksheetDeletedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetDeletedEventArgs>
  - uid: excel.Excel.WorksheetCollection.onFiltered
    summary: |-
      <span data-ttu-id="2428d-201">Se produit lorsqu’un filtre de la feuille de calcul est appliqué dans le classeur.</span><span class="sxs-lookup"><span data-stu-id="2428d-201">Occurs when any worksheet's filter is applied in the workbook.</span></span>

      <span data-ttu-id="2428d-202">\[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2428d-202">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: onFiltered
    fullName: onFiltered
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onFiltered: OfficeExtension.EventHandlers<Excel.WorksheetFilteredEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetFilteredEventArgs>
  - uid: excel.Excel.WorksheetCollection.onFormatChanged
    summary: |-
      <span data-ttu-id="2428d-203">Se produit lorsqu’une feuille de calcul dans le classeur a un format modifié.</span><span class="sxs-lookup"><span data-stu-id="2428d-203">Occurs when any worksheet in the workbook has format changed.</span></span>

      <span data-ttu-id="2428d-204">\[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2428d-204">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: onFormatChanged
    fullName: onFormatChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onFormatChanged: OfficeExtension.EventHandlers<Excel.WorksheetFormatChangedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetFormatChangedEventArgs>
  - uid: excel.Excel.WorksheetCollection.onRowSorted
    summary: |-
      <span data-ttu-id="2428d-205">Se produit lors du tri de lignes.</span><span class="sxs-lookup"><span data-stu-id="2428d-205">Occurs when sorting on rows.</span></span>

      <span data-ttu-id="2428d-206">\[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2428d-206">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: onRowSorted
    fullName: onRowSorted
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onRowSorted: OfficeExtension.EventHandlers<Excel.WorksheetRowSortedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetRowSortedEventArgs>
  - uid: excel.Excel.WorksheetCollection.onSelectionChanged
    summary: |-
      <span data-ttu-id="2428d-207">Se produit lorsque la sélection change sur n’importe quelle feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="2428d-207">Occurs when the selection changes on any worksheet.</span></span>

      <span data-ttu-id="2428d-208">\[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2428d-208">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: onSelectionChanged
    fullName: onSelectionChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Excel.WorksheetSelectionChangedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetSelectionChangedEventArgs>
  - uid: excel.Excel.WorksheetCollection.toJSON
    summary: '<span data-ttu-id="2428d-209">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu''un objet d''API est transmis à`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="2428d-209">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="2428d-210">.</span><span class="sxs-lookup"><span data-stu-id="2428d-210"></span></span> <span data-ttu-id="2428d-211">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="2428d-211"></span></span><!-- --><span data-ttu-id="2428d-212">, à son tour, appelle `toJSON` la méthode de l''objet qui lui est passé.) Tandis que `Excel.WorksheetCollection` l''objet d''origine est un objet `toJSON` d''API, la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.WorksheetCollectionData`</span><span class="sxs-lookup"><span data-stu-id="2428d-212">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.WorksheetCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.WorksheetCollectionData`</span></span><!-- --><span data-ttu-id="2428d-213">) qui contient un tableau «éléments» avec des copies superficielles de toutes les propriétés chargées des éléments de la collection.</span><span class="sxs-lookup"><span data-stu-id="2428d-213">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.WorksheetCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.WorksheetCollectionData
        description: ''