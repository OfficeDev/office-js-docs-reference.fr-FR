### YamlMime:UniversalReference
ms.openlocfilehash: d5da1c39163213c97575ff41916e26d685cbaafa
ms.sourcegitcommit: beffe9455dace422e85b92f0105c54ff7b594cbf
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 09/20/2018
ms.locfileid: "24043657"
items:
- uid: excel.Excel.Workbook
  summary: >-
    Le classeur est l’objet de niveau supérieur qui contient des objets connexes tels que des feuilles de calcul, des tableaux, des plages, etc.


    \[[Du jeu d’API : ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: Excel.Workbook
  fullName: excel.Excel.Workbook
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.Workbook.application
  - excel.Excel.Workbook.bindings
  - excel.Excel.Workbook.customXmlParts
  - excel.Excel.Workbook.dataConnections
  - excel.Excel.Workbook.functions
  - excel.Excel.Workbook.getActiveCell
  - excel.Excel.Workbook.getSelectedRange
  - excel.Excel.Workbook.load
  - excel.Excel.Workbook.name
  - excel.Excel.Workbook.names
  - excel.Excel.Workbook.onSelectionChanged
  - excel.Excel.Workbook.pivotTables
  - excel.Excel.Workbook.properties
  - excel.Excel.Workbook.protection
  - excel.Excel.Workbook.settings
  - excel.Excel.Workbook.styles
  - excel.Excel.Workbook.tables
  - excel.Excel.Workbook.toJSON
  - excel.Excel.Workbook.worksheets
- uid: excel.Excel.Workbook.application
  summary: >-
    Représente l’instance d’application Excel qui contient ce classeur. En lecture seule.


    \[[Du jeu d’API : ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: application
  fullName: excel.Excel.Workbook.application
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly application: Excel.Application;'
    return:
      type:
      - excel.Excel.Application
- uid: excel.Excel.Workbook.bindings
  summary: >-
    Représente une collection de liaisons appartenant au classeur. En lecture seule.


    \[[Du jeu d’API : ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: bindings
  fullName: excel.Excel.Workbook.bindings
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly bindings: Excel.BindingCollection;'
    return:
      type:
      - excel.Excel.BindingCollection
- uid: excel.Excel.Workbook.customXmlParts
  summary: >-
    Représente la collection de parties XML personnalisées contenues dans ce classeur. En lecture seule.


    \[[Du jeu d’API : ExcelApi 1,5](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: customXmlParts
  fullName: excel.Excel.Workbook.customXmlParts
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly customXmlParts: Excel.CustomXmlPartCollection;'
    return:
      type:
      - excel.Excel.CustomXmlPartCollection
- uid: excel.Excel.Workbook.dataConnections
  summary: >-
    Représente toutes les connexions de données dans le classeur. En lecture seule.


    \[[Du jeu d’API : ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: dataConnections
  fullName: excel.Excel.Workbook.dataConnections
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly dataConnections: Excel.DataConnectionCollection;'
    return:
      type:
      - excel.Excel.DataConnectionCollection
- uid: excel.Excel.Workbook.functions
  summary: >-
    Représente une collection de fonctions de feuille de calcul qui peut être utilisé pour le calcul. En lecture seule.


    \[[Du jeu d’API : ExcelApi 1.2](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: functions
  fullName: excel.Excel.Workbook.functions
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly functions: Excel.Functions;'
    return:
      type:
      - excel.Excel.Functions
- uid: excel.Excel.Workbook.getActiveCell
  summary: >-
    Obtient la cellule active du classeur.


    \[[Du jeu d’API : ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: getActiveCell()
  fullName: excel.Excel.Workbook.getActiveCell
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getActiveCell(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a>Exemples\n\n```typescript\nawait Excel.run(async (context) => {\n\n    let myWorkbook = context.workbook;\n    let activeCell = myWorkbook.getActiveCell();\n    activeCell.load(\"address\");\n\n    await context.sync();\n    \n    console.log(\"The active cell is \" + activeCell.address);\n});\n```"
- uid: excel.Excel.Workbook.getSelectedRange
  summary: >-
    Obtient la plage sélectionnée unique du classeur. S’il existe plusieurs plages sélectionnés, cette méthode génère une erreur.


    \[[Du jeu d’API : ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: getSelectedRange()
  fullName: excel.Excel.Workbook.getSelectedRange
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSelectedRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a>Exemples\n\n```javascript\nExcel.run(function (ctx) { \n    var selectedRange = ctx.workbook.getSelectedRange();\n    selectedRange.load('address');\n    return ctx.sync().then(function() {\n            console.log(selectedRange.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Workbook.load
  summary: Files d’attente d’une commande pour charger les propriétés de l’objet spécifiées. Vous devez appeler « context.sync() » avant de lire les propriétés.
  remarks: >-
    Outre cette signature, cette méthode présente les signatures suivantes :


    `load(option?: { select?: string; expand?: string; }): Excel.Workbook`-Où option.select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options.expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Workbook`-Uniquement disponible sur les types de la collection. Il est similaire à la signature précédente. Option.Top Spécifie le nombre maximal d’éléments pouvant être inclus dans le résultat de la collection. Option.Skip Spécifie le nombre d’éléments qui doivent être ignoré et non inclus dans le résultat. Si option.top est spécifié, le jeu de résultats démarre après l’ignorer le nombre spécifié d’éléments.
  name: load(option)
  fullName: excel.Excel.Workbook.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.Workbook;'
    return:
      type:
      - excel.Excel.Workbook
      description: ''
    parameters:
    - id: option
      description: Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.
      type:
      - string | string[]
- uid: excel.Excel.Workbook.name
  summary: >-
    Obtient le nom du classeur. En lecture seule.


    \[[Du jeu d’API : ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: name
  fullName: excel.Excel.Workbook.name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly name: string;'
    return:
      type:
      - string
- uid: excel.Excel.Workbook.names
  summary: >-
    Représente une collection d’éléments nommés portant sur le classeur (appelés plages et constantes). En lecture seule.


    \[[Du jeu d’API : ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: names
  fullName: excel.Excel.Workbook.names
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly names: Excel.NamedItemCollection;'
    return:
      type:
      - excel.Excel.NamedItemCollection
- uid: excel.Excel.Workbook.onSelectionChanged
  summary: >-
    Se produit quand la sélection change dans le document.


    \[[Du jeu d’API : ExcelApi 1.2](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: onSelectionChanged
  fullName: excel.Excel.Workbook.onSelectionChanged
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Excel.SelectionChangedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.SelectionChangedEventArgs>
- uid: excel.Excel.Workbook.pivotTables
  summary: >-
    Représente une collection de tableaux croisés dynamiques associés au classeur. En lecture seule.


    \[[Du jeu d’API : ExcelApi 1.3](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: pivotTables
  fullName: excel.Excel.Workbook.pivotTables
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly pivotTables: Excel.PivotTableCollection;'
    return:
      type:
      - excel.Excel.PivotTableCollection
- uid: excel.Excel.Workbook.properties
  summary: >-
    Obtient les propriétés du classeur. En lecture seule.


    \[[Du jeu d’API : ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: properties
  fullName: excel.Excel.Workbook.properties
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly properties: Excel.DocumentProperties;'
    return:
      type:
      - excel.Excel.DocumentProperties
      description: "\n#### <a name=\"examples\"></a>Exemples\n\n```typescript\nawait Excel.run(async (context) => {\n    let titleValue = \"Excel document properties API\";\n    let subjectValue = \"Set and get document properties\";\n    let keywordsValue = \"Set and get operations\";\n    let commentsValue = \"This is an Excel document properties API code sample\";\n    let categoryValue = \"Office Add-ins\";\n    let managerValue = \"John\";\n    let companyValue = \"Microsoft\";\n\n    let docProperties = context.workbook.properties;\n\n    // Set the writeable document properties.\n    docProperties.title = titleValue;\n    docProperties.subject = subjectValue;\n    docProperties.keywords = keywordsValue;\n    docProperties.comments = commentsValue;\n    docProperties.category = categoryValue;\n    docProperties.manager = managerValue;\n    docProperties.company = companyValue;\n\n    await context.sync();\n\n    OfficeHelpers.UI.notify(\"Set the following document properties: title, subject, keywords, comments, category, manager, company.\");\n});\n```"
- uid: excel.Excel.Workbook.protection
  summary: >-
    Renvoie un objet classeur protection d’un classeur. En lecture seule.


    \[[Du jeu d’API : ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: protection
  fullName: excel.Excel.Workbook.protection
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly protection: Excel.WorkbookProtection;'
    return:
      type:
      - excel.Excel.WorkbookProtection
- uid: excel.Excel.Workbook.settings
  summary: >-
    Représente une collection d’objets Settings associés au classeur. En lecture seule.


    \[[Du jeu d’API : ExcelApi 1.4](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: settings
  fullName: excel.Excel.Workbook.settings
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly settings: Excel.SettingCollection;'
    return:
      type:
      - excel.Excel.SettingCollection
- uid: excel.Excel.Workbook.styles
  summary: >-
    Représente une collection de styles associée au classeur. En lecture seule.


    \[[Du jeu d’API : ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: styles
  fullName: excel.Excel.Workbook.styles
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly styles: Excel.StyleCollection;'
    return:
      type:
      - excel.Excel.StyleCollection
- uid: excel.Excel.Workbook.tables
  summary: >-
    Représente une collection de tableaux associés au classeur. En lecture seule.


    \[[Du jeu d’API : ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: tables
  fullName: excel.Excel.Workbook.tables
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly tables: Excel.TableCollection;'
    return:
      type:
      - excel.Excel.TableCollection
- uid: excel.Excel.Workbook.toJSON
  name: toJSON()
  fullName: excel.Excel.Workbook.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.WorkbookData;'
    return:
      type:
      - excel.Excel.Interfaces.WorkbookData
      description: ''
- uid: excel.Excel.Workbook.worksheets
  summary: >-
    Représente une collection de feuilles de calcul associées au classeur. En lecture seule.


    \[[Du jeu d’API : ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: worksheets
  fullName: excel.Excel.Workbook.worksheets
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly worksheets: Excel.WorksheetCollection;'
    return:
      type:
      - excel.Excel.WorksheetCollection
