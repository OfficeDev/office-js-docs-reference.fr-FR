### YamlMime:UniversalReference
ms.openlocfilehash: 5f90f75be2ffbeaf9b264bd6e8ac7fdc24863753
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 02/13/2019
ms.locfileid: "29978825"
items:
- uid: excel.Excel.ConditionalRangeBorder
  summary: >-
    <span data-ttu-id="ee2e1-101">Cet objet représente la bordure d’un objet.</span><span class="sxs-lookup"><span data-stu-id="ee2e1-101">Represents the border of an object.</span></span>


    <span data-ttu-id="ee2e1-102">\[[Du jeu d’API : ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ee2e1-102">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.ConditionalRangeBorder
  fullName: Excel.ConditionalRangeBorder
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.ConditionalRangeBorder.color
  - excel.Excel.ConditionalRangeBorder.context
  - excel.Excel.ConditionalRangeBorder.load
  - excel.Excel.ConditionalRangeBorder.load_1
  - excel.Excel.ConditionalRangeBorder.load_2
  - excel.Excel.ConditionalRangeBorder.set
  - excel.Excel.ConditionalRangeBorder.set_1
  - excel.Excel.ConditionalRangeBorder.sideIndex
  - excel.Excel.ConditionalRangeBorder.style
  - excel.Excel.ConditionalRangeBorder.toJSON
- uid: excel.Excel.ConditionalRangeBorder.color
  summary: >-
    <span data-ttu-id="ee2e1-103">Code de couleur HTML qui représente la couleur de ligne de la bordure du formulaire \#RRGGBB (par exemple, « FFA500 ») ou une couleur HTML nommée (par exemple, « orange »).</span><span class="sxs-lookup"><span data-stu-id="ee2e1-103">HTML color code representing the color of the border line, of the form \#RRGGBB (e.g. "FFA500") or as a named HTML color (e.g. "orange").</span></span>


    <span data-ttu-id="ee2e1-104">\[[Du jeu d’API : ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ee2e1-104">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: color
  fullName: color
  langs:
  - typeScript
  type: property
  syntax:
    content: 'color: string;'
    return:
      type:
      - string
- uid: excel.Excel.ConditionalRangeBorder.context
  summary: <span data-ttu-id="ee2e1-105">Contexte de la requête associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="ee2e1-105">The request context associated with the object.</span></span> <span data-ttu-id="ee2e1-106">Il connecte processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="ee2e1-106">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.ConditionalRangeBorder.load
  summary: <span data-ttu-id="ee2e1-107">Files d’attente d’une commande pour charger les propriétés de l’objet spécifiées.</span><span class="sxs-lookup"><span data-stu-id="ee2e1-107">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="ee2e1-108">Vous devez appeler « context.sync() » avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="ee2e1-108">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="ee2e1-109">Outre cette signature, cette méthode présente les signatures suivantes :</span><span class="sxs-lookup"><span data-stu-id="ee2e1-109">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="ee2e1-110">`load(option?: string | string[]): Excel.ConditionalRangeBorder`-Où option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="ee2e1-110">`load(option?: string | string[]): Excel.ConditionalRangeBorder` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="ee2e1-111">`load(option?: { select?: string; expand?: string; }): Excel.ConditionalRangeBorder`-Où option.select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options.expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="ee2e1-111">`load(option?: { select?: string; expand?: string; }): Excel.ConditionalRangeBorder` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="ee2e1-112">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ConditionalRangeBorder`-Uniquement disponible sur les types de la collection.</span><span class="sxs-lookup"><span data-stu-id="ee2e1-112">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ConditionalRangeBorder` - Only available on collection types.</span></span> <span data-ttu-id="ee2e1-113">Il est similaire à la signature précédente.</span><span class="sxs-lookup"><span data-stu-id="ee2e1-113">It is similar to the preceding signature.</span></span> <span data-ttu-id="ee2e1-114">Option.Top Spécifie le nombre maximal d’éléments pouvant être inclus dans le résultat de la collection.</span><span class="sxs-lookup"><span data-stu-id="ee2e1-114">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="ee2e1-115">Option.Skip Spécifie le nombre d’éléments qui doivent être ignoré et non inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="ee2e1-115">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="ee2e1-116">Si option.top est spécifié, le jeu de résultats démarre après l’ignorer le nombre spécifié d’éléments.</span><span class="sxs-lookup"><span data-stu-id="ee2e1-116">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.ConditionalRangeBorderLoadOptions): Excel.ConditionalRangeBorder;'
    return:
      type:
      - excel.Excel.ConditionalRangeBorder
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.ConditionalRangeBorderLoadOptions
- uid: excel.Excel.ConditionalRangeBorder.load_1
  summary: <span data-ttu-id="ee2e1-117">Files d’attente d’une commande pour charger les propriétés de l’objet spécifiées.</span><span class="sxs-lookup"><span data-stu-id="ee2e1-117">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="ee2e1-118">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="ee2e1-118">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.ConditionalRangeBorder;'
    return:
      type:
      - excel.Excel.ConditionalRangeBorder
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="ee2e1-119">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="ee2e1-119">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.ConditionalRangeBorder.load_2
  summary: <span data-ttu-id="ee2e1-120">Files d’attente d’une commande pour charger les propriétés de l’objet spécifiées.</span><span class="sxs-lookup"><span data-stu-id="ee2e1-120">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="ee2e1-121">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="ee2e1-121">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.ConditionalRangeBorder;'
    return:
      type:
      - excel.Excel.ConditionalRangeBorder
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="ee2e1-122">Où propertyNamesAndPaths.select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et propertyNamesAndPaths.expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="ee2e1-122">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.ConditionalRangeBorder.set
  summary: <span data-ttu-id="ee2e1-123">Définir plusieurs propriétés d’un objet en même temps.</span><span class="sxs-lookup"><span data-stu-id="ee2e1-123">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="ee2e1-124">Vous pouvez passer un objet brut avec les propriétés appropriées, ou un autre objet API du même type.</span><span class="sxs-lookup"><span data-stu-id="ee2e1-124">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="ee2e1-125">Cette méthode a la signature supplémentaire suivante :</span><span class="sxs-lookup"><span data-stu-id="ee2e1-125">This method has the following additional signature:</span></span>


    `set(properties: Excel.ConditionalRangeBorder): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.ConditionalRangeBorderUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="ee2e1-126">Un objet JavaScript avec des propriétés qui sont structurés isomorphically pour les propriétés de l’objet sur lequel la méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="ee2e1-126">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.ConditionalRangeBorderUpdateData
    - id: options
      description: <span data-ttu-id="ee2e1-127">Fournit une option permettant de supprimer des erreurs si l’objet propriétés tente de définir des propriétés en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="ee2e1-127">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.ConditionalRangeBorder.set_1
  summary: <span data-ttu-id="ee2e1-128">Définit plusieurs propriétés de l’objet en même temps, basé sur un objet chargé existant.</span><span class="sxs-lookup"><span data-stu-id="ee2e1-128">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.ConditionalRangeBorder): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.ConditionalRangeBorder
- uid: excel.Excel.ConditionalRangeBorder.sideIndex
  summary: >-
    <span data-ttu-id="ee2e1-129">Valeur de constante qui indique le côté de la bordure spécifique.</span><span class="sxs-lookup"><span data-stu-id="ee2e1-129">Constant value that indicates the specific side of the border.</span></span> <span data-ttu-id="ee2e1-130">Pour plus d’informations, voir Excel.ConditionalRangeBorderIndex.</span><span class="sxs-lookup"><span data-stu-id="ee2e1-130">See Excel.ConditionalRangeBorderIndex for details.</span></span> <span data-ttu-id="ee2e1-131">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="ee2e1-131">Read-only.</span></span>


    <span data-ttu-id="ee2e1-132">\[[Du jeu d’API : ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ee2e1-132">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: sideIndex
  fullName: sideIndex
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly sideIndex: Excel.ConditionalRangeBorderIndex | "EdgeTop" | "EdgeBottom" | "EdgeLeft" | "EdgeRight";'
    return:
      type:
      - Excel.ConditionalRangeBorderIndex | "EdgeTop" | "EdgeBottom" | "EdgeLeft" | "EdgeRight"
- uid: excel.Excel.ConditionalRangeBorder.style
  summary: >-
    <span data-ttu-id="ee2e1-133">Une des constantes de style de trait spécifiant le style de trait pour la bordure.</span><span class="sxs-lookup"><span data-stu-id="ee2e1-133">One of the constants of line style specifying the line style for the border.</span></span> <span data-ttu-id="ee2e1-134">Pour plus d’informations, voir Excel.BorderLineStyle.</span><span class="sxs-lookup"><span data-stu-id="ee2e1-134">See Excel.BorderLineStyle for details.</span></span>


    <span data-ttu-id="ee2e1-135">\[[Du jeu d’API : ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ee2e1-135">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: style
  fullName: style
  langs:
  - typeScript
  type: property
  syntax:
    content: 'style: Excel.ConditionalRangeBorderLineStyle | "None" | "Continuous" | "Dash" | "DashDot" | "DashDotDot" | "Dot";'
    return:
      type:
      - Excel.ConditionalRangeBorderLineStyle | "None" | "Continuous" | "Dash" | "DashDot" | "DashDotDot" | "Dot"
- uid: excel.Excel.ConditionalRangeBorder.toJSON
  summary: <span data-ttu-id="ee2e1-136">Remplace le code JavaScript `toJSON()` méthode afin de fournir une sortie plus utile lorsqu’un objet API est passé à `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="ee2e1-136">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="ee2e1-137">(`JSON.stringify`<!-- -->, à son tour, appelle le `toJSON` méthode de l’objet qui lui est passé.) Tandis que l’objet Excel.ConditionalRangeBorder d’origine est un objet d’API, la `toJSON` méthode renvoie un objet JavaScript brut (typée en tant que `Excel.Interfaces.ConditionalRangeBorderData` <!-- -->) qui contient des copies superficielles de toutes les propriétés enfant chargé à partir de l’objet d’origine.</span><span class="sxs-lookup"><span data-stu-id="ee2e1-137">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ConditionalRangeBorder object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ConditionalRangeBorderData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ConditionalRangeBorderData;'
    return:
      type:
      - excel.Excel.Interfaces.ConditionalRangeBorderData
      description: ''
