### YamlMime:UniversalReference
items:
  - uid: excel.Excel.SlicerStyleCollection
    summary: |-
      <span data-ttu-id="1c8f0-101">Représente une collection d'objets SlicerStyle.</span><span class="sxs-lookup"><span data-stu-id="1c8f0-101">Represents a collection of SlicerStyle objects.</span></span>

      <span data-ttu-id="1c8f0-102">\[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1c8f0-102">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: Excel.SlicerStyleCollection
    fullName: Excel.SlicerStyleCollection
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.SlicerStyleCollection.add
      - excel.Excel.SlicerStyleCollection.context
      - excel.Excel.SlicerStyleCollection.getCount
      - excel.Excel.SlicerStyleCollection.getDefault
      - excel.Excel.SlicerStyleCollection.getItem
      - excel.Excel.SlicerStyleCollection.getItemOrNullObject
      - excel.Excel.SlicerStyleCollection.items
      - excel.Excel.SlicerStyleCollection.load
      - excel.Excel.SlicerStyleCollection.load_1
      - excel.Excel.SlicerStyleCollection.load_2
      - excel.Excel.SlicerStyleCollection.setDefault
      - excel.Excel.SlicerStyleCollection.toJSON
  - uid: excel.Excel.SlicerStyleCollection.add
    summary: |-
      <span data-ttu-id="1c8f0-103">Crée un SlicerStyle vide avec le nom spécifié.</span><span class="sxs-lookup"><span data-stu-id="1c8f0-103">Creates a blank SlicerStyle with the specified name.</span></span>

      <span data-ttu-id="1c8f0-104">\[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1c8f0-104">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: 'add(name, makeUniqueName)'
    fullName: 'add(name, makeUniqueName)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(name: string, makeUniqueName?: boolean): Excel.SlicerStyle;'
      return:
        type:
          - excel.Excel.SlicerStyle
        description: <span data-ttu-id="1c8f0-105">SlicerStyle nouvellement créé.</span><span class="sxs-lookup"><span data-stu-id="1c8f0-105">The newly created SlicerStyle.</span></span>
      parameters:
        - id: name
          description: <span data-ttu-id="1c8f0-106">Nom unique de la nouvelle SlicerStyle.</span><span class="sxs-lookup"><span data-stu-id="1c8f0-106">The unique name for the new SlicerStyle.</span></span> <span data-ttu-id="1c8f0-107">Génère une exception d'argument non valide si le nom est déjà utilisé.</span><span class="sxs-lookup"><span data-stu-id="1c8f0-107">Will throw an invalid argument exception if the name is already in use.</span></span>
          type:
            - string
        - id: makeUniqueName
          description: '<span data-ttu-id="1c8f0-108">Facultatif, la valeur par défaut est false.</span><span class="sxs-lookup"><span data-stu-id="1c8f0-108">Optional, defaults to false.</span></span> <span data-ttu-id="1c8f0-109">Si la valeur est true, ajoute des numéros au nom afin de le définir comme étant unique, le cas échéant.</span><span class="sxs-lookup"><span data-stu-id="1c8f0-109">If true, will append numbers to the name in order to make it unique, if needed.</span></span>'
          type:
            - boolean
  - uid: excel.Excel.SlicerStyleCollection.context
    summary: <span data-ttu-id="1c8f0-110">Contexte de demande associé à l'objet.</span><span class="sxs-lookup"><span data-stu-id="1c8f0-110">The request context associated with the object.</span></span> <span data-ttu-id="1c8f0-111">Cette opération connecte le processus du complément au processus de l'application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="1c8f0-111">This connects the add-in's process to the Office host application's process.</span></span>
    isPreview: true
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.SlicerStyleCollection.getCount
    summary: |-
      <span data-ttu-id="1c8f0-112">Obtient le nombre de styles de slicer de la collection.</span><span class="sxs-lookup"><span data-stu-id="1c8f0-112">Gets the number of slicer styles in the collection.</span></span>

      <span data-ttu-id="1c8f0-113">\[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1c8f0-113">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: excel.Excel.SlicerStyleCollection.getDefault
    summary: |-
      <span data-ttu-id="1c8f0-114">Obtient SlicerStyle par défaut pour la portée de l’objet parent portée.</span><span class="sxs-lookup"><span data-stu-id="1c8f0-114">Gets the default SlicerStyle for the parent object's scope.</span></span>

      <span data-ttu-id="1c8f0-115">\[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1c8f0-115">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getDefault()
    fullName: getDefault()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDefault(): Excel.SlicerStyle;'
      return:
        type:
          - excel.Excel.SlicerStyle
        description: <span data-ttu-id="1c8f0-116">Objet SlicerStyle qui est le SlicerStyle par défaut actuel.</span><span class="sxs-lookup"><span data-stu-id="1c8f0-116">The SlicerStyle object that is the current default SlicerStyle.</span></span>
  - uid: excel.Excel.SlicerStyleCollection.getItem
    summary: |-
      <span data-ttu-id="1c8f0-117">Obtient un SlicerStyle par nom.</span><span class="sxs-lookup"><span data-stu-id="1c8f0-117">Gets a SlicerStyle by name.</span></span>

      <span data-ttu-id="1c8f0-118">\[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1c8f0-118">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getItem(name)
    fullName: getItem(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(name: string): Excel.SlicerStyle;'
      return:
        type:
          - excel.Excel.SlicerStyle
        description: <span data-ttu-id="1c8f0-119">Objet SlicerStyle dont le nom correspond à l'entrée.</span><span class="sxs-lookup"><span data-stu-id="1c8f0-119">The SlicerStyle object whose name matches the input.</span></span>
      parameters:
        - id: name
          description: <span data-ttu-id="1c8f0-120">Nom du SlicerStyle à récupérer.</span><span class="sxs-lookup"><span data-stu-id="1c8f0-120">Name of the SlicerStyle to be retrieved.</span></span>
          type:
            - string
  - uid: excel.Excel.SlicerStyleCollection.getItemOrNullObject
    summary: |-
      <span data-ttu-id="1c8f0-121">Obtient un SlicerStyle par nom.</span><span class="sxs-lookup"><span data-stu-id="1c8f0-121">Gets a SlicerStyle by name.</span></span> <span data-ttu-id="1c8f0-122">Si le SlicerStyle n’existe pas, il renvoie un objet null.</span><span class="sxs-lookup"><span data-stu-id="1c8f0-122">If the SlicerStyle does not exist, will return a null object.</span></span>

      <span data-ttu-id="1c8f0-123">\[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1c8f0-123">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getItemOrNullObject(name)
    fullName: getItemOrNullObject(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(name: string): Excel.SlicerStyle;'
      return:
        type:
          - excel.Excel.SlicerStyle
        description: <span data-ttu-id="1c8f0-124">Objet SlicerStyle dont le nom correspond à l'entrée.</span><span class="sxs-lookup"><span data-stu-id="1c8f0-124">The SlicerStyle object whose name matches the input.</span></span>
      parameters:
        - id: name
          description: <span data-ttu-id="1c8f0-125">Nom du SlicerStyle à récupérer.</span><span class="sxs-lookup"><span data-stu-id="1c8f0-125">Name of the SlicerStyle to be retrieved.</span></span>
          type:
            - string
  - uid: excel.Excel.SlicerStyleCollection.items
    summary: <span data-ttu-id="1c8f0-126">Obtient l’élément enfant chargé dans cette collection de sites.</span><span class="sxs-lookup"><span data-stu-id="1c8f0-126">Gets the loaded child items in this collection.</span></span>
    isPreview: true
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.SlicerStyle[];'
      return:
        type:
          - 'Excel.SlicerStyle[]'
  - uid: excel.Excel.SlicerStyleCollection.load
    summary: "<span data-ttu-id=\"1c8f0-127\">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1c8f0-127\">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id=\"1c8f0-128\">Vous devez appeler «\_context.sync()\_» avant de lire les propriétés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1c8f0-128\">You must call \"context.sync()\" before reading the properties.</span></span>"
    remarks: |-
      <span data-ttu-id="1c8f0-129">En plus de cette signature, cette méthode possède les signatures suivantes:</span><span class="sxs-lookup"><span data-stu-id="1c8f0-129">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="1c8f0-130">`load(option?: string | string[]): Excel.SlicerStyleCollection`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="1c8f0-130">`load(option?: string | string[]): Excel.SlicerStyleCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="1c8f0-131">`load(option?: { select?: string; expand?: string; }): Excel.SlicerStyleCollection`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="1c8f0-131">`load(option?: { select?: string; expand?: string; }): Excel.SlicerStyleCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="1c8f0-132">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SlicerStyleCollection`-Uniquement disponible sur les types de collection.</span><span class="sxs-lookup"><span data-stu-id="1c8f0-132">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SlicerStyleCollection` - Only available on collection types.</span></span> <span data-ttu-id="1c8f0-133">Elle est similaire à la signature précédente.</span><span class="sxs-lookup"><span data-stu-id="1c8f0-133">It is similar to the preceding signature.</span></span> <span data-ttu-id="1c8f0-134">Option. Top indique le nombre maximal d'éléments de collection qui peuvent être inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="1c8f0-134">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="1c8f0-135">Option. Skip indique le nombre d'éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="1c8f0-135">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="1c8f0-136">Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d'éléments.</span><span class="sxs-lookup"><span data-stu-id="1c8f0-136">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    isPreview: true
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.SlicerStyleCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.SlicerStyleCollection;'
      return:
        type:
          - excel.Excel.SlicerStyleCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.SlicerStyleCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel.Excel.SlicerStyleCollection.load_1
    summary: <span data-ttu-id="1c8f0-137">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="1c8f0-137">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1c8f0-138">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="1c8f0-138">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.SlicerStyleCollection;'
      return:
        type:
          - excel.Excel.SlicerStyleCollection
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="1c8f0-139">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="1c8f0-139">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.SlicerStyleCollection.load_2
    isPreview: true
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.SlicerStyleCollection;'
      return:
        type:
          - excel.Excel.SlicerStyleCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - office.OfficeExtension.LoadOption
  - uid: excel.Excel.SlicerStyleCollection.setDefault
    summary: |-
      <span data-ttu-id="1c8f0-140">Obtient le SlicerStyle par défaut pour la portée de l’objet parent portée.</span><span class="sxs-lookup"><span data-stu-id="1c8f0-140">Sets the default SlicerStyle for use in the parent object's scope.</span></span>

      <span data-ttu-id="1c8f0-141">\[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1c8f0-141">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: setDefault(newDefaultStyle)
    fullName: setDefault(newDefaultStyle)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setDefault(newDefaultStyle: SlicerStyle | string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: newDefaultStyle
          description: <span data-ttu-id="1c8f0-142">Objet SlicerStyle ou nom de l'objet SlicerStyle qui doit être la nouvelle valeur par défaut.</span><span class="sxs-lookup"><span data-stu-id="1c8f0-142">The SlicerStyle object or name of the SlicerStyle object that should be the new default.</span></span>
          type:
            - SlicerStyle | string
  - uid: excel.Excel.SlicerStyleCollection.toJSON
    summary: '<span data-ttu-id="1c8f0-143">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu''un objet d''API est transmis à`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="1c8f0-143">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="1c8f0-144">.</span><span class="sxs-lookup"><span data-stu-id="1c8f0-144"></span></span> <span data-ttu-id="1c8f0-145">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="1c8f0-145"></span></span><!-- --><span data-ttu-id="1c8f0-146">, à son tour, appelle `toJSON` la méthode de l''objet qui lui est passé.) Tandis que `Excel.SlicerStyleCollection` l''objet d''origine est un objet `toJSON` d''API, la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.SlicerStyleCollectionData`</span><span class="sxs-lookup"><span data-stu-id="1c8f0-146">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.SlicerStyleCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.SlicerStyleCollectionData`</span></span><!-- --><span data-ttu-id="1c8f0-147">) qui contient un tableau «éléments» avec des copies superficielles de toutes les propriétés chargées des éléments de la collection.</span><span class="sxs-lookup"><span data-stu-id="1c8f0-147">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    isPreview: true
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.SlicerStyleCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.SlicerStyleCollectionData
        description: ''