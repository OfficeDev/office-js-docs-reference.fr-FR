### YamlMime:UniversalReference
ms.openlocfilehash: 3f1eb34fd6274b5bcbf9e3a7700cbe5671c17331
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 02/20/2019
ms.locfileid: "30110990"
items:
- uid: excel.Excel.SlicerCollection
  summary: >-
    <span data-ttu-id="11212-101">Représente une collection de tous les objets Slicer du classeur ou d'une feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="11212-101">Represents a collection of all the slicer objects on the workbook or a worksheet.</span></span>


    <span data-ttu-id="11212-102">\[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11212-102">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: Excel.SlicerCollection
  fullName: Excel.SlicerCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.SlicerCollection.add
  - excel.Excel.SlicerCollection.context
  - excel.Excel.SlicerCollection.getCount
  - excel.Excel.SlicerCollection.getItem
  - excel.Excel.SlicerCollection.getItemAt
  - excel.Excel.SlicerCollection.getItemOrNullObject
  - excel.Excel.SlicerCollection.items
  - excel.Excel.SlicerCollection.load
  - excel.Excel.SlicerCollection.load_1
  - excel.Excel.SlicerCollection.load_2
  - excel.Excel.SlicerCollection.toJSON
- uid: excel.Excel.SlicerCollection.add
  summary: >-
    <span data-ttu-id="11212-103">Ajoute un nouveau Slicer au classeur.</span><span class="sxs-lookup"><span data-stu-id="11212-103">Adds a new slicer to the workbook.</span></span>


    <span data-ttu-id="11212-104">\[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11212-104">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: add(slicerSource, sourceField, slicerDestination)
  fullName: add(slicerSource, sourceField, slicerDestination)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(slicerSource: string | PivotTable | Table, sourceField: string | PivotField | number | TableColumn, slicerDestination?: string | Worksheet): Excel.Slicer;'
    return:
      type:
      - excel.Excel.Slicer
      description: <span data-ttu-id="11212-105">Le nouveau segment.</span><span class="sxs-lookup"><span data-stu-id="11212-105">The new slicer.</span></span>
    parameters:
    - id: slicerSource
      description: <span data-ttu-id="11212-106">Source de données sur laquelle le nouveau segment sera basé.</span><span class="sxs-lookup"><span data-stu-id="11212-106">The data source that the new slicer will be based on.</span></span> <span data-ttu-id="11212-107">Il peut s'agir d'un objet PivotTable, d'un objet table ou d'une chaîne.</span><span class="sxs-lookup"><span data-stu-id="11212-107">It can be a PivotTable object, a Table object or a string.</span></span> <span data-ttu-id="11212-108">Lorsqu'un objet PivotTable est transmis, la source de données est la source de l'objet PivotTable.</span><span class="sxs-lookup"><span data-stu-id="11212-108">When a PivotTable object is passed, the data source is the source of the PivotTable object.</span></span> <span data-ttu-id="11212-109">Lorsqu'un objet table est transmis, la source de données est l'objet table.</span><span class="sxs-lookup"><span data-stu-id="11212-109">When a Table object is passed, the data source is the Table object.</span></span> <span data-ttu-id="11212-110">Lorsqu'une chaîne est transmise, elle est interprétée comme le nom/l'ID d'un tableau croisé dynamique/tableau.</span><span class="sxs-lookup"><span data-stu-id="11212-110">When a string is passed, it is interpreted as the name/id of a PivotTable/Table.</span></span>
      type:
      - string | PivotTable | Table
    - id: sourceField
      description: <span data-ttu-id="11212-111">Champ de la source de données à filtrer.</span><span class="sxs-lookup"><span data-stu-id="11212-111">The field in the data source to filter by.</span></span> <span data-ttu-id="11212-112">Il peut s'agir d'un objet PivotField, d'un objet TableColumn, de l'ID d'un champ de tableau croisé dynamique ou de l'ID/nom de TableColumn.</span><span class="sxs-lookup"><span data-stu-id="11212-112">It can be a PivotField object, a TableColumn object, the id of a PivotField or the id/name of TableColumn.</span></span>
      type:
      - string | PivotField | number | TableColumn
    - id: slicerDestination
      description: <span data-ttu-id="11212-113">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="11212-113">Optional.</span></span> <span data-ttu-id="11212-114">Feuille de calcul dans laquelle le nouveau segment sera créé.</span><span class="sxs-lookup"><span data-stu-id="11212-114">The worksheet where the new slicer will be created in.</span></span> <span data-ttu-id="11212-115">Il peut s'agir d'un objet Worksheet ou du nom/ID d'une feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="11212-115">It can be a Worksheet object or the name/id of a worksheet.</span></span> <span data-ttu-id="11212-116">Ce paramètre peut être omis si la collection de segments est extraite de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="11212-116">This parameter can be omitted if the slicer collection is retrieved from worksheet.</span></span>
      type:
      - string | Worksheet
- uid: excel.Excel.SlicerCollection.context
  summary: <span data-ttu-id="11212-117">Contexte de demande associé à l'objet.</span><span class="sxs-lookup"><span data-stu-id="11212-117">The request context associated with the object.</span></span> <span data-ttu-id="11212-118">Cette opération connecte le processus du complément au processus de l'application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="11212-118">This connects the add-in's process to the Office host application's process.</span></span>
  isPreview: true
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.SlicerCollection.getCount
  summary: >-
    <span data-ttu-id="11212-119">Renvoie le nombre de segments dans la collection.</span><span class="sxs-lookup"><span data-stu-id="11212-119">Returns the number of slicers in the collection.</span></span>


    <span data-ttu-id="11212-120">\[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11212-120">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel.Excel.SlicerCollection.getItem
  summary: >-
    <span data-ttu-id="11212-121">Obtient un objet Slicer à l'aide de son nom ou de son ID.</span><span class="sxs-lookup"><span data-stu-id="11212-121">Gets a slicer object using its name or id.</span></span>


    <span data-ttu-id="11212-122">\[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11212-122">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getItem(key)
  fullName: getItem(key)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(key: string): Excel.Slicer;'
    return:
      type:
      - excel.Excel.Slicer
      description: ''
    parameters:
    - id: key
      description: <span data-ttu-id="11212-123">Nom ou ID du segment.</span><span class="sxs-lookup"><span data-stu-id="11212-123">The name or id of the slicer.</span></span>
      type:
      - string
- uid: excel.Excel.SlicerCollection.getItemAt
  summary: >-
    <span data-ttu-id="11212-124">Obtient un Slicer en fonction de sa position dans la collection.</span><span class="sxs-lookup"><span data-stu-id="11212-124">Gets a slicer based on its position in the collection.</span></span>


    <span data-ttu-id="11212-125">\[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11212-125">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getItemAt(index)
  fullName: getItemAt(index)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): Excel.Slicer;'
    return:
      type:
      - excel.Excel.Slicer
      description: ''
    parameters:
    - id: index
      description: <span data-ttu-id="11212-p105">Valeur d’indice de l’objet à récupérer. Avec indice zéro.</span><span class="sxs-lookup"><span data-stu-id="11212-p105">Index value of the object to be retrieved. Zero-indexed.</span></span>
      type:
      - number
- uid: excel.Excel.SlicerCollection.getItemOrNullObject
  summary: >-
    <span data-ttu-id="11212-128">Obtient un Slicer à l'aide de son nom ou de son ID. Si le Slicer n'existe pas, renverra un objet null.</span><span class="sxs-lookup"><span data-stu-id="11212-128">Gets a slicer using its name or id. If the slicer does not exist, will return a null object.</span></span>


    <span data-ttu-id="11212-129">\[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11212-129">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getItemOrNullObject(key)
  fullName: getItemOrNullObject(key)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemOrNullObject(key: string): Excel.Slicer;'
    return:
      type:
      - excel.Excel.Slicer
      description: ''
    parameters:
    - id: key
      description: <span data-ttu-id="11212-130">Nom ou ID du segment à récupérer.</span><span class="sxs-lookup"><span data-stu-id="11212-130">Name or Id of the slicer to be retrieved.</span></span>
      type:
      - string
- uid: excel.Excel.SlicerCollection.items
  summary: <span data-ttu-id="11212-131">Obtient les éléments enfants chargés dans cette collection.</span><span class="sxs-lookup"><span data-stu-id="11212-131">Gets the loaded child items in this collection.</span></span>
  isPreview: true
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.Slicer[];'
    return:
      type:
      - Excel.Slicer[]
- uid: excel.Excel.SlicerCollection.load
  summary: <span data-ttu-id="11212-132">Met en file d'attente une commande pour charger les propriétés spécifiées de l'objet.</span><span class="sxs-lookup"><span data-stu-id="11212-132">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="11212-133">Vous devez appeler «Context. Sync ()» avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="11212-133">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="11212-134">En plus de cette signature, cette méthode possède les signatures suivantes:</span><span class="sxs-lookup"><span data-stu-id="11212-134">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="11212-135">`load(option?: string | string[]): Excel.SlicerCollection`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="11212-135">`load(option?: string | string[]): Excel.SlicerCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="11212-136">`load(option?: { select?: string; expand?: string; }): Excel.SlicerCollection`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="11212-136">`load(option?: { select?: string; expand?: string; }): Excel.SlicerCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="11212-137">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SlicerCollection`-Uniquement disponible sur les types de collection.</span><span class="sxs-lookup"><span data-stu-id="11212-137">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SlicerCollection` - Only available on collection types.</span></span> <span data-ttu-id="11212-138">Elle est similaire à la signature précédente.</span><span class="sxs-lookup"><span data-stu-id="11212-138">It is similar to the preceding signature.</span></span> <span data-ttu-id="11212-139">Option. Top indique le nombre maximal d'éléments de collection qui peuvent être inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="11212-139">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="11212-140">Option. Skip indique le nombre d'éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="11212-140">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="11212-141">Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d'éléments.</span><span class="sxs-lookup"><span data-stu-id="11212-141">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  isPreview: true
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.SlicerCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.SlicerCollection;'
    return:
      type:
      - excel.Excel.SlicerCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Excel.Interfaces.SlicerCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
- uid: excel.Excel.SlicerCollection.load_1
  summary: <span data-ttu-id="11212-142">Met en file d'attente une commande pour charger les propriétés spécifiées de l'objet.</span><span class="sxs-lookup"><span data-stu-id="11212-142">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="11212-143">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="11212-143">You must call `context.sync()` before reading the properties.</span></span>
  isPreview: true
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.SlicerCollection;'
    return:
      type:
      - excel.Excel.SlicerCollection
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="11212-144">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="11212-144">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.SlicerCollection.load_2
  isPreview: true
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Excel.SlicerCollection;'
    return:
      type:
      - excel.Excel.SlicerCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: excel.Excel.SlicerCollection.toJSON
  summary: <span data-ttu-id="11212-145">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu'un objet d'API est transmis à. `JSON.stringify()` <!-- --></span><span class="sxs-lookup"><span data-stu-id="11212-145">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="11212-146">(`JSON.stringify`<!-- -->, à son tour, appelle `toJSON` la méthode de l'objet qui lui est passé.) Tandis que `Excel.SlicerCollection` l'objet d'origine est un objet `toJSON` d'API, la méthode renvoie un objet JavaScript `Excel.Interfaces.SlicerCollectionData` <!-- -->simple (tapé sous la forme) qui contient un tableau d'éléments avec des copies superficielles de toutes les propriétés chargées des éléments de la collection.</span><span class="sxs-lookup"><span data-stu-id="11212-146">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.SlicerCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.SlicerCollectionData`<!-- -->) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  isPreview: true
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.SlicerCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.SlicerCollectionData
      description: ''
