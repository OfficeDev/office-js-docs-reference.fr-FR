### YamlMime:UniversalReference
ms.openlocfilehash: ccfdf73d1fc28144bb0ddd14401d9171e6de70e2
ms.sourcegitcommit: 016e17422cf62dc9f1de1809666e9244e41cc1a9
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 11/09/2018
ms.locfileid: "26229430"
items:
- uid: excel.Excel.BindingCollection
  summary: >-
    <span data-ttu-id="4c09f-101">Représente la collection de l’ensemble des objets de liaison qui font partie du classeur.</span><span class="sxs-lookup"><span data-stu-id="4c09f-101">Represents the collection of all the binding objects that are part of the workbook.</span></span>


    <span data-ttu-id="4c09f-102">\[[Du jeu d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4c09f-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.BindingCollection
  fullName: Excel.BindingCollection
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.BindingCollection.add
  - excel.Excel.BindingCollection.addFromNamedItem
  - excel.Excel.BindingCollection.addFromSelection
  - excel.Excel.BindingCollection.count
  - excel.Excel.BindingCollection.getCount
  - excel.Excel.BindingCollection.getItem
  - excel.Excel.BindingCollection.getItemAt
  - excel.Excel.BindingCollection.getItemOrNullObject
  - excel.Excel.BindingCollection.items
  - excel.Excel.BindingCollection.load
  - excel.Excel.BindingCollection.toJSON
- uid: excel.Excel.BindingCollection.add
  summary: >-
    <span data-ttu-id="4c09f-103">Ajouter une nouvelle liaison à une plage spécifique.</span><span class="sxs-lookup"><span data-stu-id="4c09f-103">Add a new binding to a particular Range.</span></span>


    <span data-ttu-id="4c09f-104">\[[Du jeu d’API : ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4c09f-104">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: add(range, bindingType, id)
  fullName: add
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(range: Range | string, bindingType: Excel.BindingType, id: string): Excel.Binding;'
    return:
      type:
      - excel.Excel.Binding
      description: ''
    parameters:
    - id: range
      description: <span data-ttu-id="4c09f-p101">Plage à laquelle lier la liaison. Peut être un objet de plage Excel ou une chaîne. Si c’est une chaîne, elle doit contenir l’adresse complète, y compris le nom de la feuille.</span><span class="sxs-lookup"><span data-stu-id="4c09f-p101">Range to bind the binding to. May be an Excel Range object, or a string. If string, must contain the full address, including the sheet name</span></span>
      type:
      - Range | string
    - id: bindingType
      description: <span data-ttu-id="4c09f-108">Type de liaison.</span><span class="sxs-lookup"><span data-stu-id="4c09f-108">Type of binding.</span></span> <span data-ttu-id="4c09f-109">Voir Excel.BindingType.</span><span class="sxs-lookup"><span data-stu-id="4c09f-109">See Excel.BindingType.</span></span>
      type:
      - excel.Excel.BindingType
    - id: id
      description: <span data-ttu-id="4c09f-110">Nom de la liaison.</span><span class="sxs-lookup"><span data-stu-id="4c09f-110">Name of binding.</span></span>
      type:
      - string
- uid: excel.Excel.BindingCollection.addFromNamedItem
  summary: >-
    <span data-ttu-id="4c09f-111">Ajouter une nouvelle liaison basée sur un élément nommé dans le classeur.</span><span class="sxs-lookup"><span data-stu-id="4c09f-111">Add a new binding based on a named item in the workbook.</span></span> <span data-ttu-id="4c09f-112">Si l’élément nommé fait référence à plusieurs zones, l’erreur « InvalidReference » est renvoyée.</span><span class="sxs-lookup"><span data-stu-id="4c09f-112">If the named item references to multiple areas, the "InvalidReference" error will be returned.</span></span>


    <span data-ttu-id="4c09f-113">\[[Du jeu d’API : ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4c09f-113">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: addFromNamedItem(name, bindingType, id)
  fullName: addFromNamedItem
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addFromNamedItem(name: string, bindingType: Excel.BindingType, id: string): Excel.Binding;'
    return:
      type:
      - excel.Excel.Binding
      description: ''
    parameters:
    - id: name
      description: <span data-ttu-id="4c09f-114">Nom à partir duquel créer la liaison.</span><span class="sxs-lookup"><span data-stu-id="4c09f-114">Name from which to create binding.</span></span>
      type:
      - string
    - id: bindingType
      description: <span data-ttu-id="4c09f-115">Type de liaison.</span><span class="sxs-lookup"><span data-stu-id="4c09f-115">Type of binding.</span></span> <span data-ttu-id="4c09f-116">Voir Excel.BindingType.</span><span class="sxs-lookup"><span data-stu-id="4c09f-116">See Excel.BindingType.</span></span>
      type:
      - excel.Excel.BindingType
    - id: id
      description: <span data-ttu-id="4c09f-117">Nom de la liaison.</span><span class="sxs-lookup"><span data-stu-id="4c09f-117">Name of binding.</span></span>
      type:
      - string
- uid: excel.Excel.BindingCollection.addFromSelection
  summary: >-
    <span data-ttu-id="4c09f-118">Ajouter un nouvelle liaison basée sur la sélection en cours.</span><span class="sxs-lookup"><span data-stu-id="4c09f-118">Add a new binding based on the current selection.</span></span> <span data-ttu-id="4c09f-119">Si la sélection comporte plusieurs zones, l’erreur « InvalidReference » est renvoyée.</span><span class="sxs-lookup"><span data-stu-id="4c09f-119">If the selection has multiple areas, the "InvalidReference" error will be returned.</span></span>


    <span data-ttu-id="4c09f-120">\[[Du jeu d’API : ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4c09f-120">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: addFromSelection(bindingType, id)
  fullName: addFromSelection
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addFromSelection(bindingType: Excel.BindingType, id: string): Excel.Binding;'
    return:
      type:
      - excel.Excel.Binding
      description: ''
    parameters:
    - id: bindingType
      description: <span data-ttu-id="4c09f-121">Type de liaison.</span><span class="sxs-lookup"><span data-stu-id="4c09f-121">Type of binding.</span></span> <span data-ttu-id="4c09f-122">Voir Excel.BindingType.</span><span class="sxs-lookup"><span data-stu-id="4c09f-122">See Excel.BindingType.</span></span>
      type:
      - excel.Excel.BindingType
    - id: id
      description: <span data-ttu-id="4c09f-123">Nom de la liaison.</span><span class="sxs-lookup"><span data-stu-id="4c09f-123">Name of binding.</span></span>
      type:
      - string
- uid: excel.Excel.BindingCollection.count
  summary: >-
    <span data-ttu-id="4c09f-p107">Renvoie le nombre de liaisons de la collection. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="4c09f-p107">Returns the number of bindings in the collection. Read-only.</span></span>


    <span data-ttu-id="4c09f-126">\[[Du jeu d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4c09f-126">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: count
  fullName: count
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly count: number;'
    return:
      type:
      - number
- uid: excel.Excel.BindingCollection.getCount
  summary: >-
    <span data-ttu-id="4c09f-127">Obtient le nombre de liaisons de la collection.</span><span class="sxs-lookup"><span data-stu-id="4c09f-127">Gets the number of bindings in the collection.</span></span>


    <span data-ttu-id="4c09f-128">\[[Du jeu d’API : ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4c09f-128">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getCount()
  fullName: getCount
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel.Excel.BindingCollection.getItem
  summary: >-
    <span data-ttu-id="4c09f-129">Obtient un objet de liaison par ID.</span><span class="sxs-lookup"><span data-stu-id="4c09f-129">Gets a binding object by ID.</span></span>


    <span data-ttu-id="4c09f-130">\[[Du jeu d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4c09f-130">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItem(id)
  fullName: getItem
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(id: string): Excel.Binding;'
    return:
      type:
      - excel.Excel.Binding
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4c09f-131\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"4c09f-131\">Examples</span></span>\n\n```javascript\n// Create a table binding to monitor data changes in the table. \n// When data is changed, the background color of the table will be changed to orange.\nfunction addEventHandler() {\n    //Create Table1\nExcel.run(function (ctx) { \n    ctx.workbook.tables.add(\"Sheet1!A1:C4\", true);\n    return ctx.sync().then(function() {\n             console.log(\"My Diet Data Inserted!\");\n    })\n    .catch(function (error) {\n             console.log(JSON.stringify(error));\n    });\n});\n    //Create a new table binding for Table1\nOffice.context.document.bindings.addFromNamedItemAsync(\n    \"Table1\", Office.CoercionType.Table, { id: \"myBinding\" }, function (asyncResult) {\n    if (asyncResult.status == \"failed\") {\n        console.log(\"Action failed with error: \" + asyncResult.error.message);\n    }\n    else {\n        // If succeeded, then add event handler to the table binding.\n        Office.select(\"bindings#myBinding\").addHandlerAsync(\n            Office.EventType.BindingDataChanged, onBindingDataChanged);\n    }\n});\n}\n    \n// when data in the table is changed, this event will be triggered.\nfunction onBindingDataChanged(eventArgs) {\nExcel.run(function (ctx) { \n    // highlight the table in orange to indicate data has been changed.\n    ctx.workbook.bindings.getItem(eventArgs.binding.id).getTable().getDataBodyRange().format.fill.color = \"Orange\";\n    return ctx.sync().then(function() {\n            console.log(\"The value in this table got changed!\");\n    })\n    .catch(function (error) {\n            console.log(JSON.stringify(error));\n    });\n});\n}\n```\n```javascript\nExcel.run(function (ctx) { \n    var lastPosition = ctx.workbook.bindings.count - 1;\n    var binding = ctx.workbook.bindings.getItemAt(lastPosition);\n    binding.load('type')\n    return ctx.sync().then(function() {\n            console.log(binding.type); \n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: id
      description: <span data-ttu-id="4c09f-132">ID de l’objet de liaison à récupérer.</span><span class="sxs-lookup"><span data-stu-id="4c09f-132">Id of the binding object to be retrieved.</span></span>
      type:
      - string
- uid: excel.Excel.BindingCollection.getItemAt
  summary: >-
    <span data-ttu-id="4c09f-133">Obtient un objet de liaison en fonction de sa position dans le tableau d’éléments.</span><span class="sxs-lookup"><span data-stu-id="4c09f-133">Gets a binding object based on its position in the items array.</span></span>


    <span data-ttu-id="4c09f-134">\[[Du jeu d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4c09f-134">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemAt(index)
  fullName: getItemAt
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): Excel.Binding;'
    return:
      type:
      - excel.Excel.Binding
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4c09f-135\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"4c09f-135\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var lastPosition = ctx.workbook.bindings.count - 1;\n    var binding = ctx.workbook.bindings.getItemAt(lastPosition);\n    binding.load('type')\n    return ctx.sync().then(function() {\n            console.log(binding.type); \n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="4c09f-p108">Valeur d’indice de l’objet à récupérer. Avec indice zéro.</span><span class="sxs-lookup"><span data-stu-id="4c09f-p108">Index value of the object to be retrieved. Zero-indexed.</span></span>
      type:
      - number
- uid: excel.Excel.BindingCollection.getItemOrNullObject
  summary: >-
    <span data-ttu-id="4c09f-p109">Obtient un objet de liaison par ID. Si l’objet de liaison n’existe pas, renvoie un objet null.</span><span class="sxs-lookup"><span data-stu-id="4c09f-p109">Gets a binding object by ID. If the binding object does not exist, will return a null object.</span></span>


    <span data-ttu-id="4c09f-140">\[[Du jeu d’API : ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4c09f-140">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemOrNullObject(id)
  fullName: getItemOrNullObject
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemOrNullObject(id: string): Excel.Binding;'
    return:
      type:
      - excel.Excel.Binding
      description: ''
    parameters:
    - id: id
      description: <span data-ttu-id="4c09f-141">ID de l’objet de liaison à récupérer.</span><span class="sxs-lookup"><span data-stu-id="4c09f-141">Id of the binding object to be retrieved.</span></span>
      type:
      - string
- uid: excel.Excel.BindingCollection.items
  summary: <span data-ttu-id="4c09f-142">Obtient l’enfant chargé éléments dans cette collection.</span><span class="sxs-lookup"><span data-stu-id="4c09f-142">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.Binding[];'
    return:
      type:
      - Excel.Binding[]
- uid: excel.Excel.BindingCollection.load
  summary: <span data-ttu-id="4c09f-143">Files d’attente d’une commande pour charger les propriétés de l’objet spécifiées.</span><span class="sxs-lookup"><span data-stu-id="4c09f-143">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="4c09f-144">Vous devez appeler « context.sync() » avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="4c09f-144">You must call "context.sync()" before reading the properties.</span></span>
  remarks: "<span data-ttu-id=\"4c09f-145\">Outre cette signature, cette méthode présente les signatures suivantes :</span><span class=\"sxs-lookup\"><span data-stu-id=\"4c09f-145\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"4c09f-146\">`load(option?: { select?: string; expand?: string; }): Excel.BindingCollection`-Où option.select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options.expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class=\"sxs-lookup\"><span data-stu-id=\"4c09f-146\">`load(option?: { select?: string; expand?: string; }): Excel.BindingCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"4c09f-147\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.BindingCollection`-Uniquement disponible sur les types de la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"4c09f-147\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.BindingCollection` - Only available on collection types.</span></span> <span data-ttu-id=\"4c09f-148\">Il est similaire à la signature précédente.</span><span class=\"sxs-lookup\"><span data-stu-id=\"4c09f-148\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"4c09f-149\">Option.Top Spécifie le nombre maximal d’éléments pouvant être inclus dans le résultat de la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"4c09f-149\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"4c09f-150\">Option.Skip Spécifie le nombre d’éléments qui doivent être ignoré et non inclus dans le résultat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"4c09f-150\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"4c09f-151\">Si option.top est spécifié, le jeu de résultats démarre après l’ignorer le nombre spécifié d’éléments.</span><span class=\"sxs-lookup\"><span data-stu-id=\"4c09f-151\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"4c09f-152\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"4c09f-152\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var bindings = ctx.workbook.bindings;\n    bindings.load('items');\n    return ctx.sync().then(function() {\n        for (var i = 0; i < bindings.items.length; i++)\n        {\n            console.log(bindings.items[i].id);\n        }\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// Get the number of bindings\nExcel.run(function (ctx) { \n    var bindings = ctx.workbook.bindings;\n    bindings.load('count');\n    return ctx.sync().then(function() {\n        console.log(\"Bindings: Count= \" + bindings.count);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.BindingCollection;'
    return:
      type:
      - excel.Excel.BindingCollection
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="4c09f-153">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="4c09f-153">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.BindingCollection.toJSON
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.BindingCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.BindingCollectionData
      description: ''
