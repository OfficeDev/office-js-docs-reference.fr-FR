### YamlMime:UniversalReference
ms.openlocfilehash: 504dca4a356bad9bab6d8d1c823d96d8c04c6bb2
ms.sourcegitcommit: 262b7c417245b7b61a57d53eee33a477a722ca6e
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 09/28/2018
ms.locfileid: "24044660"
items:
- uid: excel.Excel.CustomXmlPart
  summary: >-
    <span data-ttu-id="6c2d7-101">Représente un objet de partie XML personnalisée dans un classeur.</span><span class="sxs-lookup"><span data-stu-id="6c2d7-101">Represents a custom XML part object in a workbook.</span></span>


    <span data-ttu-id="6c2d7-102">\[[Du jeu d’API : ExcelApi 1,5](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6c2d7-102">\[ [API set: ExcelApi 1.5](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.CustomXmlPart
  fullName: excel.Excel.CustomXmlPart
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.CustomXmlPart.delete
  - excel.Excel.CustomXmlPart.getXml
  - excel.Excel.CustomXmlPart.id
  - excel.Excel.CustomXmlPart.load
  - excel.Excel.CustomXmlPart.namespaceUri
  - excel.Excel.CustomXmlPart.setXml
  - excel.Excel.CustomXmlPart.toJSON
- uid: excel.Excel.CustomXmlPart.delete
  summary: >-
    <span data-ttu-id="6c2d7-103">Supprime la partie XML personnalisée.</span><span class="sxs-lookup"><span data-stu-id="6c2d7-103">Deletes the custom XML part.</span></span>


    <span data-ttu-id="6c2d7-104">\[[Du jeu d’API : ExcelApi 1,5](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6c2d7-104">\[ [API set: ExcelApi 1.5](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: delete()
  fullName: excel.Excel.CustomXmlPart.delete
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"6c2d7-105\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"6c2d7-105\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const settings = context.workbook.settings;\n    const xmlPartIDSetting = settings.getItem(\"ContosoReviewXmlPartId\").load(\"value\");\n\n    await context.sync();\n    \n    let customXmlPart = context.workbook.customXmlParts.getItem(xmlPartIDSetting.value);\n    const xmlBlob = customXmlPart.getXml();\n    customXmlPart.delete();\n    customXmlPart = context.workbook.customXmlParts.getItemOrNullObject(xmlPartIDSetting.value);\n\n    await context.sync();\n\n    if (customXmlPart.isNullObject) {\n        $(\"#display-xml\").text(`The XML part with the id ${xmlPartIDSetting.value} has been deleted.`);\n\n        // Delete the unneeded setting too.\n        xmlPartIDSetting.delete();            \n    } else {\n        const readableXml = addLineBreaksToXML(xmlBlob.value);\n        const strangeMessage = `This is strange. The XML part with the id ${xmlPartIDSetting.value} has not been deleted:\\n${readableXml}`\n        $(\"#display-xml\").text(strangeMessage);\n    }\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.CustomXmlPart.getXml
  summary: >-
    <span data-ttu-id="6c2d7-106">Obtient l’intégralité du contenu XML de la partie XML personnalisée.</span><span class="sxs-lookup"><span data-stu-id="6c2d7-106">Gets the custom XML part's full XML content.</span></span>


    <span data-ttu-id="6c2d7-107">\[[Du jeu d’API : ExcelApi 1,5](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6c2d7-107">\[ [API set: ExcelApi 1.5](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getXml()
  fullName: excel.Excel.CustomXmlPart.getXml
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getXml(): OfficeExtension.ClientResult<string>;'
    return:
      type:
      - OfficeExtension.ClientResult<string>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"6c2d7-108\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"6c2d7-108\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n\n    // You must have the xmlns attribute to populate the \n    // CustomXml.namespaceUri property.\n    const originalXml = \"<Reviewers xmlns='http://schemas.contoso.com/review/1.0'><Reviewer>Juan</Reviewer><Reviewer>Hong</Reviewer><Reviewer>Sally</Reviewer></Reviewers>\";\n    const customXmlPart = context.workbook.customXmlParts.add(originalXml);\n    customXmlPart.load(\"id\");\n    const xmlBlob = customXmlPart.getXml();\n\n    await context.sync();\n\n    const readableXml = addLineBreaksToXML(xmlBlob.value);\n    $(\"#display-xml\").text(readableXml);\n\n    // Store the XML part's ID in a setting.\n    const settings = context.workbook.settings;\n    settings.add(\"ContosoReviewXmlPartId\", customXmlPart.id);\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.CustomXmlPart.id
  summary: >-
    <span data-ttu-id="6c2d7-p101">ID de la partie XML personnalisée. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="6c2d7-p101">The custom XML part's ID. Read-only.</span></span>


    <span data-ttu-id="6c2d7-111">\[[Du jeu d’API : ExcelApi 1,5](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6c2d7-111">\[ [API set: ExcelApi 1.5](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: id
  fullName: excel.Excel.CustomXmlPart.id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"6c2d7-112\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"6c2d7-112\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n\n    // You must have the xmlns attribute to populate the \n    // CustomXml.namespaceUri property.\n    const originalXml = \"<Reviewers xmlns='http://schemas.contoso.com/review/1.0'><Reviewer>Juan</Reviewer><Reviewer>Hong</Reviewer><Reviewer>Sally</Reviewer></Reviewers>\";\n    const customXmlPart = context.workbook.customXmlParts.add(originalXml);\n    customXmlPart.load(\"id\");\n    const xmlBlob = customXmlPart.getXml();\n\n    await context.sync();\n\n    const readableXml = addLineBreaksToXML(xmlBlob.value);\n    $(\"#display-xml\").text(readableXml);\n\n    // Store the XML part's ID in a setting.\n    const settings = context.workbook.settings;\n    settings.add(\"ContosoReviewXmlPartId\", customXmlPart.id);\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.CustomXmlPart.load
  summary: <span data-ttu-id="6c2d7-113">Files d’attente d’une commande pour charger les propriétés de l’objet spécifiées.</span><span class="sxs-lookup"><span data-stu-id="6c2d7-113">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="6c2d7-114">Vous devez appeler « context.sync() » avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="6c2d7-114">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="6c2d7-115">Outre cette signature, cette méthode présente les signatures suivantes :</span><span class="sxs-lookup"><span data-stu-id="6c2d7-115">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="6c2d7-116">`load(option?: { select?: string; expand?: string; }): Excel.CustomXmlPart`-Où option.select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options.expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="6c2d7-116">`load(option?: { select?: string; expand?: string; }): Excel.CustomXmlPart` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="6c2d7-117">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.CustomXmlPart`-Uniquement disponible sur les types de la collection.</span><span class="sxs-lookup"><span data-stu-id="6c2d7-117">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.CustomXmlPart` - Only available on collection types.</span></span> <span data-ttu-id="6c2d7-118">Il est similaire à la signature précédente.</span><span class="sxs-lookup"><span data-stu-id="6c2d7-118">It is similar to the preceding signature.</span></span> <span data-ttu-id="6c2d7-119">Option.Top Spécifie le nombre maximal d’éléments pouvant être inclus dans le résultat de la collection.</span><span class="sxs-lookup"><span data-stu-id="6c2d7-119">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="6c2d7-120">Option.Skip Spécifie le nombre d’éléments qui doivent être ignoré et non inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="6c2d7-120">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="6c2d7-121">Si option.top est spécifié, le jeu de résultats démarre après l’ignorer le nombre spécifié d’éléments.</span><span class="sxs-lookup"><span data-stu-id="6c2d7-121">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: excel.Excel.CustomXmlPart.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.CustomXmlPart;'
    return:
      type:
      - excel.Excel.CustomXmlPart
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="6c2d7-122">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="6c2d7-122">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.CustomXmlPart.namespaceUri
  summary: >-
    <span data-ttu-id="6c2d7-p104">URI de l’espace de noms de la partie XML personnalisée. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="6c2d7-p104">The custom XML part's namespace URI. Read-only.</span></span>


    <span data-ttu-id="6c2d7-125">\[[Du jeu d’API : ExcelApi 1,5](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6c2d7-125">\[ [API set: ExcelApi 1.5](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: namespaceUri
  fullName: excel.Excel.CustomXmlPart.namespaceUri
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly namespaceUri: string;'
    return:
      type:
      - string
- uid: excel.Excel.CustomXmlPart.setXml
  summary: >-
    <span data-ttu-id="6c2d7-126">Définit l’intégralité du contenu XML de la partie XML personnalisée.</span><span class="sxs-lookup"><span data-stu-id="6c2d7-126">Sets the custom XML part's full XML content.</span></span>


    <span data-ttu-id="6c2d7-127">\[[Du jeu d’API : ExcelApi 1,5](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6c2d7-127">\[ [API set: ExcelApi 1.5](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: setXml(xml)
  fullName: excel.Excel.CustomXmlPart.setXml
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setXml(xml: string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"6c2d7-128\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"6c2d7-128\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const settings = context.workbook.settings;\n    const xmlPartIDSetting = settings.getItem(\"ContosoReviewXmlPartId\").load(\"value\");\n\n    await context.sync();\n    \n    const customXmlPart = context.workbook.customXmlParts.getItem(xmlPartIDSetting.value);\n\n    // The setXml method does a whole-for-whole replacement \n    // of the entire XML.\n    customXmlPart.setXml(\"<Reviewers xmlns='http://schemas.contoso.com/review/1.0'><Reviewer>John</Reviewer><Reviewer>Hitomi</Reviewer></Reviewers>\");\n    const xmlBlob = customXmlPart.getXml();\n\n    await context.sync();\n\n    const readableXml = addLineBreaksToXML(xmlBlob.value);\n    $(\"#display-xml\").text(readableXml);\n\n    await context.sync();\n});\n```"
    parameters:
    - id: xml
      description: <span data-ttu-id="6c2d7-129">Contenu XML de la partie.</span><span class="sxs-lookup"><span data-stu-id="6c2d7-129">XML content for the part.</span></span>
      type:
      - string
- uid: excel.Excel.CustomXmlPart.toJSON
  name: toJSON()
  fullName: excel.Excel.CustomXmlPart.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.CustomXmlPartData;'
    return:
      type:
      - excel.Excel.Interfaces.CustomXmlPartData
      description: ''
