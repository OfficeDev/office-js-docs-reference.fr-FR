### YamlMime:UniversalReference
ms.openlocfilehash: 4ef0814141a999a8720f5986389f7f7d077e8706
ms.sourcegitcommit: beffe9455dace422e85b92f0105c54ff7b594cbf
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 09/20/2018
ms.locfileid: "24042842"
items:
- uid: excel.Excel.IconSetConditionalFormat
  summary: >-
    <span data-ttu-id="d2942-101">Représente un critère IconSet pour la mise en forme conditionnelle.</span><span class="sxs-lookup"><span data-stu-id="d2942-101">Represents an IconSet criteria for conditional formatting.</span></span>


    <span data-ttu-id="d2942-102">\[[Du jeu d’API : ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d2942-102">\[ [API set: ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.IconSetConditionalFormat
  fullName: excel.Excel.IconSetConditionalFormat
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.IconSetConditionalFormat.criteria
  - excel.Excel.IconSetConditionalFormat.load
  - excel.Excel.IconSetConditionalFormat.reverseIconOrder
  - excel.Excel.IconSetConditionalFormat.showIconOnly
  - excel.Excel.IconSetConditionalFormat.style
  - excel.Excel.IconSetConditionalFormat.toJSON
- uid: excel.Excel.IconSetConditionalFormat.criteria
  summary: >-
    <span data-ttu-id="d2942-103">Tableau des critères IconSets potentiels icônes personnalisées pour les icônes conditionnelle et des règles.</span><span class="sxs-lookup"><span data-stu-id="d2942-103">An array of Criteria and IconSets for the rules and potential custom icons for conditional icons.</span></span> <span data-ttu-id="d2942-104">Notez que le premier critère uniquement l’icône personnalisée peut être modifiée, type, lors de la formule, et opérateur sera ignorée si la valeur.</span><span class="sxs-lookup"><span data-stu-id="d2942-104">Note that for the first criterion only the custom icon can be modified, while type, formula, and operator will be ignored when set.</span></span>


    <span data-ttu-id="d2942-105">\[[Du jeu d’API : ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d2942-105">\[ [API set: ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: criteria
  fullName: excel.Excel.IconSetConditionalFormat.criteria
  langs:
  - typeScript
  type: property
  syntax:
    content: 'criteria: Excel.ConditionalIconCriterion[];'
    return:
      type:
      - Excel.ConditionalIconCriterion[]
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"d2942-106\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"d2942-106\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B8:E13\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.iconSet);\n    const iconSetCF = conditionalFormat.iconSet;\n    iconSetCF.style = Excel.IconSet.threeTriangles;\n\n    /*\n        The iconSetCF.criteria array is automatically prepopulated with\n        criterion elements whose properties have been given default settings.\n        You can't write to each property of a criterion directly. Instead,\n        replace the whole criteria object.\n\n        With a \"three*\" icon set style, such as \"threeTriangles\", the third\n        element in the criteria array (criteria[2]) defines the \"top\" icon;\n        e.g., a green triangle. The second (criteria[1]) defines the \"middle\"\n        icon, The first (criteria[0]) defines the \"low\" icon, but it\n        can often be left empty as this method does below, because every\n        cell that does not match the other two criteria always gets the low\n        icon.            \n    */\n    iconSetCF.criteria = [\n        {} as any,\n        {\n            type: Excel.ConditionalFormatIconRuleType.number,\n            operator: Excel.ConditionalIconCriterionOperator.greaterThanOrEqual,\n            formula: \"=700\"\n        },\n        {\n            type: Excel.ConditionalFormatIconRuleType.number,\n            operator: Excel.ConditionalIconCriterionOperator.greaterThanOrEqual,\n            formula: \"=1000\",\n        }\n    ];\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.IconSetConditionalFormat.load
  summary: <span data-ttu-id="d2942-107">Files d’attente d’une commande pour charger les propriétés de l’objet spécifiées.</span><span class="sxs-lookup"><span data-stu-id="d2942-107">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d2942-108">Vous devez appeler « context.sync() » avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="d2942-108">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="d2942-109">Outre cette signature, cette méthode présente les signatures suivantes :</span><span class="sxs-lookup"><span data-stu-id="d2942-109">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="d2942-110">`load(option?: { select?: string; expand?: string; }): Excel.IconSetConditionalFormat`-Où option.select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options.expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="d2942-110">`load(option?: { select?: string; expand?: string; }): Excel.IconSetConditionalFormat` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="d2942-111">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.IconSetConditionalFormat`-Uniquement disponible sur les types de la collection.</span><span class="sxs-lookup"><span data-stu-id="d2942-111">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.IconSetConditionalFormat` - Only available on collection types.</span></span> <span data-ttu-id="d2942-112">Il est similaire à la signature précédente.</span><span class="sxs-lookup"><span data-stu-id="d2942-112">It is similar to the preceding signature.</span></span> <span data-ttu-id="d2942-113">Option.Top Spécifie le nombre maximal d’éléments pouvant être inclus dans le résultat de la collection.</span><span class="sxs-lookup"><span data-stu-id="d2942-113">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="d2942-114">Option.Skip Spécifie le nombre d’éléments qui doivent être ignoré et non inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="d2942-114">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="d2942-115">Si option.top est spécifié, le jeu de résultats démarre après l’ignorer le nombre spécifié d’éléments.</span><span class="sxs-lookup"><span data-stu-id="d2942-115">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: excel.Excel.IconSetConditionalFormat.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.IconSetConditionalFormat;'
    return:
      type:
      - excel.Excel.IconSetConditionalFormat
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="d2942-116">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="d2942-116">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.IconSetConditionalFormat.reverseIconOrder
  summary: >-
    <span data-ttu-id="d2942-p104">Si la valeur est True, change l’ordre des icônes pour IconSet. Notez que ce paramètre ne peut pas être défini si vous utilisez des icônes personnalisées.</span><span class="sxs-lookup"><span data-stu-id="d2942-p104">If true, reverses the icon orders for the IconSet. Note that this cannot be set if custom icons are used.</span></span>


    <span data-ttu-id="d2942-119">\[[Du jeu d’API : ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d2942-119">\[ [API set: ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: reverseIconOrder
  fullName: excel.Excel.IconSetConditionalFormat.reverseIconOrder
  langs:
  - typeScript
  type: property
  syntax:
    content: 'reverseIconOrder: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.IconSetConditionalFormat.showIconOnly
  summary: >-
    <span data-ttu-id="d2942-120">Si la valeur est True, masque les valeurs et affiche uniquement les icônes.</span><span class="sxs-lookup"><span data-stu-id="d2942-120">If true, hides the values and only shows icons.</span></span>


    <span data-ttu-id="d2942-121">\[[Du jeu d’API : ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d2942-121">\[ [API set: ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: showIconOnly
  fullName: excel.Excel.IconSetConditionalFormat.showIconOnly
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showIconOnly: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.IconSetConditionalFormat.style
  summary: >-
    <span data-ttu-id="d2942-122">Si défini, affiche l’option IconSet pour le format conditionnel.</span><span class="sxs-lookup"><span data-stu-id="d2942-122">If set, displays the IconSet option for the conditional format.</span></span>


    <span data-ttu-id="d2942-123">\[[Du jeu d’API : ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d2942-123">\[ [API set: ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: style
  fullName: excel.Excel.IconSetConditionalFormat.style
  langs:
  - typeScript
  type: property
  syntax:
    content: 'style: Excel.IconSet | "Invalid" | "ThreeArrows" | "ThreeArrowsGray" | "ThreeFlags" | "ThreeTrafficLights1" | "ThreeTrafficLights2" | "ThreeSigns" | "ThreeSymbols" | "ThreeSymbols2" | "FourArrows" | "FourArrowsGray" | "FourRedToBlack" | "FourRating" | "FourTrafficLights" | "FiveArrows" | "FiveArrowsGray" | "FiveRating" | "FiveQuarters" | "ThreeStars" | "ThreeTriangles" | "FiveBoxes";'
    return:
      type:
      - Excel.IconSet | "Invalid" | "ThreeArrows" | "ThreeArrowsGray" | "ThreeFlags" | "ThreeTrafficLights1" | "ThreeTrafficLights2" | "ThreeSigns" | "ThreeSymbols" | "ThreeSymbols2" | "FourArrows" | "FourArrowsGray" | "FourRedToBlack" | "FourRating" | "FourTrafficLights" | "FiveArrows" | "FiveArrowsGray" | "FiveRating" | "FiveQuarters" | "ThreeStars" | "ThreeTriangles" | "FiveBoxes"
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"d2942-124\">範例</span><span class=\"sxs-lookup\"><span data-stu-id=\"d2942-124\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B8:E13\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.iconSet);\n    const iconSetCF = conditionalFormat.iconSet;\n    iconSetCF.style = Excel.IconSet.threeTriangles;\n\n    /*\n        The iconSetCF.criteria array is automatically prepopulated with\n        criterion elements whose properties have been given default settings.\n        You can't write to each property of a criterion directly. Instead,\n        replace the whole criteria object.\n\n        With a \"three*\" icon set style, such as \"threeTriangles\", the third\n        element in the criteria array (criteria[2]) defines the \"top\" icon;\n        e.g., a green triangle. The second (criteria[1]) defines the \"middle\"\n        icon, The first (criteria[0]) defines the \"low\" icon, but it\n        can often be left empty as this method does below, because every\n        cell that does not match the other two criteria always gets the low\n        icon.            \n    */\n    iconSetCF.criteria = [\n        {} as any,\n        {\n            type: Excel.ConditionalFormatIconRuleType.number,\n            operator: Excel.ConditionalIconCriterionOperator.greaterThanOrEqual,\n            formula: \"=700\"\n        },\n        {\n            type: Excel.ConditionalFormatIconRuleType.number,\n            operator: Excel.ConditionalIconCriterionOperator.greaterThanOrEqual,\n            formula: \"=1000\",\n        }\n    ];\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.IconSetConditionalFormat.toJSON
  name: toJSON()
  fullName: excel.Excel.IconSetConditionalFormat.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.IconSetConditionalFormatData;'
    return:
      type:
      - excel.Excel.Interfaces.IconSetConditionalFormatData
      description: ''
