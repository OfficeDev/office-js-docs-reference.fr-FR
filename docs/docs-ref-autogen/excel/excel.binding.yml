### YamlMime:UniversalReference
ms.openlocfilehash: f174b554db349e4351c7151dc4bf36b1e342a341
ms.sourcegitcommit: c1149d24b38f20daf9ce690cd0761ec1ceb7333d
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 10/17/2018
ms.locfileid: "25592491"
items:
- uid: excel.Excel.Binding
  summary: >-
    <span data-ttu-id="6cbb3-101">Représente une liaison Office.js définie dans le classeur.</span><span class="sxs-lookup"><span data-stu-id="6cbb3-101">Represents an Office.js binding that is defined in the workbook.</span></span>


    <span data-ttu-id="6cbb3-102">\[[Du jeu d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6cbb3-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.Binding
  fullName: excel.Excel.Binding
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.Binding.delete
  - excel.Excel.Binding.getRange
  - excel.Excel.Binding.getTable
  - excel.Excel.Binding.getText
  - excel.Excel.Binding.id
  - excel.Excel.Binding.load
  - excel.Excel.Binding.onDataChanged
  - excel.Excel.Binding.onSelectionChanged
  - excel.Excel.Binding.toJSON
  - excel.Excel.Binding.type
- uid: excel.Excel.Binding.delete
  summary: >-
    <span data-ttu-id="6cbb3-103">Supprime la liaison.</span><span class="sxs-lookup"><span data-stu-id="6cbb3-103">Deletes the binding.</span></span>


    <span data-ttu-id="6cbb3-104">\[[Du jeu d’API : ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6cbb3-104">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: delete()
  fullName: excel.Excel.Binding.delete
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.Binding.getRange
  summary: >-
    <span data-ttu-id="6cbb3-p101">Renvoie la plage représentée par la liaison. Génère une erreur si la liaison n’est pas du type approprié.</span><span class="sxs-lookup"><span data-stu-id="6cbb3-p101">Returns the range represented by the binding. Will throw an error if binding is not of the correct type.</span></span>


    <span data-ttu-id="6cbb3-107">\[[Du jeu d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6cbb3-107">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRange()
  fullName: excel.Excel.Binding.getRange
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"6cbb3-108\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"6cbb3-108\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var binding = ctx.workbook.bindings.getItemAt(0);\n    var range = binding.getRange();\n    range.load('cellCount');\n    return ctx.sync().then(function() {\n        console.log(range.cellCount);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Binding.getTable
  summary: >-
    <span data-ttu-id="6cbb3-p102">Renvoie le tableau représenté par la liaison. Génère une erreur si la liaison n’est pas du type approprié.</span><span class="sxs-lookup"><span data-stu-id="6cbb3-p102">Returns the table represented by the binding. Will throw an error if binding is not of the correct type.</span></span>


    <span data-ttu-id="6cbb3-111">\[[Du jeu d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6cbb3-111">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getTable()
  fullName: excel.Excel.Binding.getTable
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getTable(): Excel.Table;'
    return:
      type:
      - excel.Excel.Table
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"6cbb3-112\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"6cbb3-112\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var binding = ctx.workbook.bindings.getItemAt(0);\n    var table = binding.getTable();\n    table.load('name');\n    return ctx.sync().then(function() {\n            console.log(table.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Binding.getText
  summary: >-
    <span data-ttu-id="6cbb3-p103">Renvoie le texte représenté par la liaison. Génère une erreur si la liaison n’est pas du type approprié.</span><span class="sxs-lookup"><span data-stu-id="6cbb3-p103">Returns the text represented by the binding. Will throw an error if binding is not of the correct type.</span></span>


    <span data-ttu-id="6cbb3-115">\[[Du jeu d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6cbb3-115">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getText()
  fullName: excel.Excel.Binding.getText
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getText(): OfficeExtension.ClientResult<string>;'
    return:
      type:
      - OfficeExtension.ClientResult<string>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"6cbb3-116\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"6cbb3-116\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var binding = ctx.workbook.bindings.getItemAt(0);\n    var text = binding.getText();\n    binding.load('text');\n    return ctx.sync().then(function() {\n        console.log(text);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Binding.id
  summary: >-
    <span data-ttu-id="6cbb3-p104">Représente l’identificateur de liaison. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="6cbb3-p104">Represents binding identifier. Read-only.</span></span>


    <span data-ttu-id="6cbb3-119">\[[Du jeu d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6cbb3-119">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: id
  fullName: excel.Excel.Binding.id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
- uid: excel.Excel.Binding.load
  summary: <span data-ttu-id="6cbb3-120">Files d’attente d’une commande pour charger les propriétés de l’objet spécifiées.</span><span class="sxs-lookup"><span data-stu-id="6cbb3-120">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="6cbb3-121">Vous devez appeler « context.sync() » avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="6cbb3-121">You must call "context.sync()" before reading the properties.</span></span>
  remarks: "<span data-ttu-id=\"6cbb3-122\">Outre cette signature, cette méthode présente les signatures suivantes :</span><span class=\"sxs-lookup\"><span data-stu-id=\"6cbb3-122\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"6cbb3-123\">`load(option?: { select?: string; expand?: string; }): Excel.Binding`-Où option.select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options.expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class=\"sxs-lookup\"><span data-stu-id=\"6cbb3-123\">`load(option?: { select?: string; expand?: string; }): Excel.Binding` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"6cbb3-124\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Binding`-Uniquement disponible sur les types de la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"6cbb3-124\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Binding` - Only available on collection types.</span></span> <span data-ttu-id=\"6cbb3-125\">Il est similaire à la signature précédente.</span><span class=\"sxs-lookup\"><span data-stu-id=\"6cbb3-125\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"6cbb3-126\">Option.Top Spécifie le nombre maximal d’éléments pouvant être inclus dans le résultat de la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"6cbb3-126\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"6cbb3-127\">Option.Skip Spécifie le nombre d’éléments qui doivent être ignoré et non inclus dans le résultat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"6cbb3-127\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"6cbb3-128\">Si option.top est spécifié, le jeu de résultats démarre après l’ignorer le nombre spécifié d’éléments.</span><span class=\"sxs-lookup\"><span data-stu-id=\"6cbb3-128\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"6cbb3-129\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"6cbb3-129\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var binding = ctx.workbook.bindings.getItemAt(0);\n    binding.load('type');\n    return ctx.sync().then(function() {\n        console.log(binding.type);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  name: load(option)
  fullName: excel.Excel.Binding.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.Binding;'
    return:
      type:
      - excel.Excel.Binding
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="6cbb3-130">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="6cbb3-130">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.Binding.onDataChanged
  summary: >-
    <span data-ttu-id="6cbb3-131">Se produit lors de la modification des données ou de la mise en forme dans la liaison.</span><span class="sxs-lookup"><span data-stu-id="6cbb3-131">Occurs when data or formatting within the binding is changed.</span></span>


    <span data-ttu-id="6cbb3-132">\[[Du jeu d’API : ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6cbb3-132">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onDataChanged
  fullName: excel.Excel.Binding.onDataChanged
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onDataChanged: OfficeExtension.EventHandlers<Excel.BindingDataChangedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.BindingDataChangedEventArgs>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"6cbb3-133\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"6cbb3-133\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");    \n    const salesTable = sheet.tables.getItem(\"SalesTable\");\n    const salesByQuarterBinding = context.workbook.bindings.add(salesTable.getRange(), \"Table\", \"SalesByQuarter\");\n    salesByQuarterBinding.onDataChanged.add(onSalesDataChanged);\n\n    OfficeHelpers.UI.notify(\"The handler is registered.\", \"Change the value in one of the data cells and watch this message banner. (Be sure to complete the edit by pressing Enter or clicking in another cell.)\");\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.Binding.onSelectionChanged
  summary: >-
    <span data-ttu-id="6cbb3-134">Se produit lorsque le contenu sélectionné dans la liaison est modifié.</span><span class="sxs-lookup"><span data-stu-id="6cbb3-134">Occurs when the selected content in the binding is changed.</span></span>


    <span data-ttu-id="6cbb3-135">\[[Du jeu d’API : ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6cbb3-135">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onSelectionChanged
  fullName: excel.Excel.Binding.onSelectionChanged
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Excel.BindingSelectionChangedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.BindingSelectionChangedEventArgs>
- uid: excel.Excel.Binding.toJSON
  name: toJSON()
  fullName: excel.Excel.Binding.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.BindingData;'
    return:
      type:
      - excel.Excel.Interfaces.BindingData
      description: ''
- uid: excel.Excel.Binding.type
  summary: >-
    <span data-ttu-id="6cbb3-136">Renvoie le type de la liaison.</span><span class="sxs-lookup"><span data-stu-id="6cbb3-136">Returns the type of the binding.</span></span> <span data-ttu-id="6cbb3-137">Pour plus d’informations, voir Excel.BindingType.</span><span class="sxs-lookup"><span data-stu-id="6cbb3-137">See Excel.BindingType for details.</span></span> <span data-ttu-id="6cbb3-138">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="6cbb3-138">Read-only.</span></span>


    <span data-ttu-id="6cbb3-139">\[[Du jeu d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6cbb3-139">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: type
  fullName: excel.Excel.Binding.type
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly type: Excel.BindingType | "Range" | "Table" | "Text";'
    return:
      type:
      - Excel.BindingType | "Range" | "Table" | "Text"
