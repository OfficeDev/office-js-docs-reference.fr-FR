### YamlMime:UniversalReference
items:
  - uid: excel.Excel.RangeAreas
    summary: |-
      RangeAreas représente une collection d’une ou plusieurs plages rectangulaires dans la même feuille de calcul.

      \[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.RangeAreas
    fullName: Excel.RangeAreas
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.RangeAreas.address
      - excel.Excel.RangeAreas.addressLocal
      - excel.Excel.RangeAreas.areaCount
      - excel.Excel.RangeAreas.areas
      - excel.Excel.RangeAreas.calculate
      - excel.Excel.RangeAreas.cellCount
      - excel.Excel.RangeAreas.clear
      - excel.Excel.RangeAreas.clear_1
      - excel.Excel.RangeAreas.conditionalFormats
      - excel.Excel.RangeAreas.context
      - excel.Excel.RangeAreas.convertDataTypeToText
      - excel.Excel.RangeAreas.convertToLinkedDataType
      - excel.Excel.RangeAreas.copyFrom
      - excel.Excel.RangeAreas.copyFrom_1
      - excel.Excel.RangeAreas.dataValidation
      - excel.Excel.RangeAreas.format
      - excel.Excel.RangeAreas.getEntireColumn
      - excel.Excel.RangeAreas.getEntireRow
      - excel.Excel.RangeAreas.getIntersection
      - excel.Excel.RangeAreas.getIntersectionOrNullObject
      - excel.Excel.RangeAreas.getOffsetRangeAreas
      - excel.Excel.RangeAreas.getSpecialCells
      - excel.Excel.RangeAreas.getSpecialCells_1
      - excel.Excel.RangeAreas.getSpecialCellsOrNullObject
      - excel.Excel.RangeAreas.getSpecialCellsOrNullObject_1
      - excel.Excel.RangeAreas.getTables
      - excel.Excel.RangeAreas.getUsedRangeAreas
      - excel.Excel.RangeAreas.getUsedRangeAreasOrNullObject
      - excel.Excel.RangeAreas.isEntireColumn
      - excel.Excel.RangeAreas.isEntireRow
      - excel.Excel.RangeAreas.load
      - excel.Excel.RangeAreas.load_1
      - excel.Excel.RangeAreas.load_2
      - excel.Excel.RangeAreas.set
      - excel.Excel.RangeAreas.set_1
      - excel.Excel.RangeAreas.setDirty
      - excel.Excel.RangeAreas.style
      - excel.Excel.RangeAreas.toJSON
      - excel.Excel.RangeAreas.track
      - excel.Excel.RangeAreas.untrack
      - excel.Excel.RangeAreas.worksheet
  - uid: excel.Excel.RangeAreas.address
    summary: "Renvoie la référence RageAreas dans le style A1. La valeur de l’adresse contient le nom de feuille de calcul pour chaque bloc rectangulaire de cellules (par exemple, «\_Feuil1\_! A1\_: B4, Feuil1\_! D1:D4\_»). En lecture seule.\n\n\\[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: address
    fullName: address
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly address: string;'
      return:
        type:
          - string
  - uid: excel.Excel.RangeAreas.addressLocal
    summary: |-
      Renvoie la référence RageAreas dans l’utilisateur local. En lecture seule.

      \[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: addressLocal
    fullName: addressLocal
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly addressLocal: string;'
      return:
        type:
          - string
  - uid: excel.Excel.RangeAreas.areaCount
    summary: |-
      Renvoie le nombre de plages rectangulaires qui composent cet objet RangeArea.

      \[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: areaCount
    fullName: areaCount
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly areaCount: number;'
      return:
        type:
          - number
  - uid: excel.Excel.RangeAreas.areas
    summary: |-
      Renvoie une collection de plages rectangulaires qui composent cet objet RangeAreas.

      \[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: areas
    fullName: areas
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly areas: Excel.RangeCollection;'
      return:
        type:
          - excel.Excel.RangeCollection
  - uid: excel.Excel.RangeAreas.calculate
    summary: |-
      Calcule toutes les cellules de la RangeAreas.

      \[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: calculate()
    fullName: calculate()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'calculate(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel.Excel.RangeAreas.cellCount
    summary: |-
      Renvoie le nombre de cellules dans l’objet RangeAreas récapitulatif du nombre de cellule de toutes les plages individuelles rectangulaires. Renvoie -1 si le nombre de cellules est supérieure à 2 ^ 31-1 (2 147 483 647). En lecture seule.

      \[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: cellCount
    fullName: cellCount
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly cellCount: number;'
      return:
        type:
          - number
  - uid: excel.Excel.RangeAreas.clear
    summary: |-
      Efface les valeurs, format, remplissage, bordure, etc. sur chacune des zones qui composent cet objet RangeAreas.

      \[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: clear(applyTo)
    fullName: clear(applyTo)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(applyTo?: Excel.ClearApplyTo): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: applyTo
          description: 'Facultatif. Détermine le type d’action de suppression. Pour plus d’informations, voir Excel. ClearApplyTo. La valeur par défaut est «All».'
          type:
            - excel.Excel.ClearApplyTo
  - uid: excel.Excel.RangeAreas.clear_1
    summary: |-
      Efface les valeurs, format, remplissage, bordure, etc. sur chacune des zones qui composent cet objet RangeAreas.

      \[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: clear(applyToString)
    fullName: clear(applyToString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(applyToString?: "All" | "Formats" | "Contents" | "Hyperlinks" | "RemoveHyperlinks"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: applyToString
          description: 'Facultatif. Détermine le type d’action de suppression. Pour plus d’informations, voir Excel. ClearApplyTo. La valeur par défaut est «All».'
          type:
            - '"All" | "Formats" | "Contents" | "Hyperlinks" | "RemoveHyperlinks"'
  - uid: excel.Excel.RangeAreas.conditionalFormats
    summary: |-
      Renvoie un ensemble de ConditionalFormats qui se coupent pas avec cet objet RangeAreas toutes les cellules. En lecture seule.

      \[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: conditionalFormats
    fullName: conditionalFormats
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly conditionalFormats: Excel.ConditionalFormatCollection;'
      return:
        type:
          - excel.Excel.ConditionalFormatCollection
  - uid: excel.Excel.RangeAreas.context
    summary: Contexte de demande associé à l’objet. Cette opération connecte le processus du complément au processus de l’application hôte Office.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.RangeAreas.convertDataTypeToText
    summary: |-
      Convertit toutes les cellules de RangeAreas avec des types de données en texte.

      \[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: convertDataTypeToText()
    fullName: convertDataTypeToText()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'convertDataTypeToText(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel.Excel.RangeAreas.convertToLinkedDataType
    summary: |-
      Convertit toutes les cellules de RangeAreas avec des types de données en texte.

      \[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'convertToLinkedDataType(serviceID, languageCulture)'
    fullName: 'convertToLinkedDataType(serviceID, languageCulture)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'convertToLinkedDataType(serviceID: number, languageCulture: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: serviceID
          description: ID de service qui sera utilisé pour interroger les données.
          type:
            - number
        - id: languageCulture
          description: Culture de langue pour laquelle interroger le service.
          type:
            - string
  - uid: excel.Excel.RangeAreas.copyFrom
    summary: |-
      Copie les cellules de données ou de mise en forme à partir de la plage source ou RangeAreas à la plage active. La taille de la rangeAreas de destination peut être différente de celle de la plage source ou de la RangeAreas. La destination est étendue automatiquement si elle est plus petite que la source.

      \[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'copyFrom(sourceRange, copyType, skipBlanks, transpose)'
    fullName: 'copyFrom(sourceRange, copyType, skipBlanks, transpose)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'copyFrom(sourceRange: Range | RangeAreas | string, copyType?: Excel.RangeCopyType, skipBlanks?: boolean, transpose?: boolean): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sourceRange
          description: 'Plage source ou RangeAreas à partir de laquelle effectuer la copie. Lorsque le RangeAreas source est doté de plusieurs plages, il doit se présenter sous la forme hiérarchique qui peut être créée en supprimant des lignes ou des colonnes entières d’une plage rectangulaire.'
          type:
            - Range | RangeAreas | string
        - id: copyType
          description: Type de données de cellule ou de mise en forme à copier. La valeur par défaut est «All».
          type:
            - excel.Excel.RangeCopyType
        - id: skipBlanks
          description: True si pour ignorer les cellules vides dans la plage source ou RangeAreas. La valeur par défaut est False.
          type:
            - boolean
        - id: transpose
          description: True pour transposer les cellules dans la RangeAreas de destination. La valeur par défaut est False.
          type:
            - boolean
  - uid: excel.Excel.RangeAreas.copyFrom_1
    summary: |-
      Copie les cellules de données ou de mise en forme à partir de la plage source ou RangeAreas à la plage active. La taille de la rangeAreas de destination peut être différente de celle de la plage source ou de la RangeAreas. La destination est étendue automatiquement si elle est plus petite que la source.

      \[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'copyFrom(sourceRange, copyTypeString, skipBlanks, transpose)'
    fullName: 'copyFrom(sourceRange, copyTypeString, skipBlanks, transpose)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'copyFrom(sourceRange: Range | RangeAreas | string, copyTypeString?: "All" | "Formulas" | "Values" | "Formats", skipBlanks?: boolean, transpose?: boolean): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sourceRange
          description: 'Plage source ou RangeAreas à partir de laquelle effectuer la copie. Lorsque le RangeAreas source est doté de plusieurs plages, il doit se présenter sous la forme hiérarchique qui peut être créée en supprimant des lignes ou des colonnes entières d’une plage rectangulaire.'
          type:
            - Range | RangeAreas | string
        - id: copyTypeString
          description: Type de données de cellule ou de mise en forme à copier. La valeur par défaut est «All».
          type:
            - '"All" | "Formulas" | "Values" | "Formats"'
        - id: skipBlanks
          description: True si pour ignorer les cellules vides dans la plage source ou RangeAreas. La valeur par défaut est False.
          type:
            - boolean
        - id: transpose
          description: True pour transposer les cellules dans la RangeAreas de destination. La valeur par défaut est False.
          type:
            - boolean
  - uid: excel.Excel.RangeAreas.dataValidation
    summary: |-
      Renvoie un objet dataValidation pour toutes les plages dans la RangeAreas.

      \[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: dataValidation
    fullName: dataValidation
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly dataValidation: Excel.DataValidation;'
      return:
        type:
          - excel.Excel.DataValidation
  - uid: excel.Excel.RangeAreas.format
    summary: |-
      Renvoie un objet de format rangeFormat, qui comprend les propriétés de police, de remplissage, de bordures, d’alignement, et autres propriétés de toutes les plages dans l’objet RangeAreas. En lecture seule.

      \[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly format: Excel.RangeFormat;'
      return:
        type:
          - excel.Excel.RangeFormat
  - uid: excel.Excel.RangeAreas.getEntireColumn
    summary: "Renvoie un objet qui représente la colonne entière de la RangeAreas (par exemple, si la RangeAreas actuelle représente les cellules «B4:E11, H2\_», elle renvoie une plage RangeAreas qui représente les colonnes «\_B:E, H:H»).\n\n\\[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: getEntireColumn()
    fullName: getEntireColumn()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getEntireColumn(): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
  - uid: excel.Excel.RangeAreas.getEntireRow
    summary: "Renvoie un objet RangeAreas qui représente la colonne entière de la RangeAreas (par exemple, si la RangeAreas actuelle représente les cellules «B4:E11\_», elle renvoie une RangeAreas qui représente les rangées «\_4:11»).\n\n\\[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: getEntireRow()
    fullName: getEntireRow()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getEntireRow(): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
  - uid: excel.Excel.RangeAreas.getIntersection
    summary: |-
      Obtient l’objet de plage qui représente l’intersection des plages données ou RangeAreas. Si aucune intersection n’est trouvée, une erreur ItemNotFound sera levée.

      \[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getIntersection(anotherRange)
    fullName: getIntersection(anotherRange)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getIntersection(anotherRange: Range | RangeAreas | string): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
      parameters:
        - id: anotherRange
          description: 'La plage, l’objet RangeAreas ou l’adresse de plage qui sera utilisé pour déterminer l’intersection.'
          type:
            - Range | RangeAreas | string
  - uid: excel.Excel.RangeAreas.getIntersectionOrNullObject
    summary: |-
      Obtient l’objet de plage qui représente l’intersection des plages données ou RangeAreas. Si aucune intersection n’est trouvée, renvoie un objet null.

      \[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getIntersectionOrNullObject(anotherRange)
    fullName: getIntersectionOrNullObject(anotherRange)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getIntersectionOrNullObject(anotherRange: Range | RangeAreas | string): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
      parameters:
        - id: anotherRange
          description: 'Plage, RangeAreas ou adresse qui sera utilisée pour déterminer l’intersection.'
          type:
            - Range | RangeAreas | string
  - uid: excel.Excel.RangeAreas.getOffsetRangeAreas
    summary: |-
      Renvoie un objet RangeAreas est décalé vers le décalage de lignes et des colonnes spécifiques. Les dimensions de la plage renvoyée correspondent à cette plage. Si la plage obtenue se retrouve en dehors des limites de grille de la feuille de calcul, une erreur est déclenchée.

      \[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'getOffsetRangeAreas(rowOffset, columnOffset)'
    fullName: 'getOffsetRangeAreas(rowOffset, columnOffset)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getOffsetRangeAreas(rowOffset: number, columnOffset: number): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
      parameters:
        - id: rowOffset
          description: 'Nombre de lignes (positif, négatif ou 0) par lesquelles le RangeAreas doit être décalé. Les valeurs positives représentent un décalage vers le bas, et les valeurs négatives un décalage vers le haut.'
          type:
            - number
        - id: columnOffset
          description: 'Nombre de colonnes (positives, négatives ou 0) pour lesquelles le RangeAreas doit être décalé. Les valeurs positives représentent un décalage vers la droite, et les valeurs négatives un décalage vers la gauche.'
          type:
            - number
  - uid: excel.Excel.RangeAreas.getSpecialCells
    summary: |-
      Renvoie un objet RangeAreas qui représente toutes les cellules correspondant au type et à la valeur spécifiés. Lève une erreur si aucune cellule spéciale n’est trouvée qui corresponde au critère.

      \[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'getSpecialCells(cellType, cellValueType)'
    fullName: 'getSpecialCells(cellType, cellValueType)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSpecialCells(cellType: Excel.SpecialCellType, cellValueType?: Excel.SpecialCellValueType): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
      parameters:
        - id: cellType
          description: Type de cellules à inclure.
          type:
            - excel.Excel.SpecialCellType
        - id: cellValueType
          description: 'Si cellType est une constante ou une formule, cet argument est utilisé pour déterminer les types de cellules à inclure dans le résultat. Ces valeurs peuvent être combinées pour renvoyer plusieurs types. Par défaut, toutes les constantes ou formules sont sélectionnées, quel qu''en soit le type.'
          type:
            - excel.Excel.SpecialCellValueType
  - uid: excel.Excel.RangeAreas.getSpecialCells_1
    summary: |-
      Renvoie un objet RangeAreas qui représente toutes les cellules correspondant au type et à la valeur spécifiés. Lève une erreur si aucune cellule spéciale n’est trouvée qui corresponde au critère.

      \[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'getSpecialCells(cellTypeString, cellValueType)'
    fullName: 'getSpecialCells(cellTypeString, cellValueType)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSpecialCells(cellTypeString: "ConditionalFormats" | "DataValidations" | "Blanks" | "Constants" | "Formulas" | "SameConditionalFormat" | "SameDataValidation" | "Visible", cellValueType?: "All" | "Errors" | "ErrorsLogical" | "ErrorsNumbers" | "ErrorsText" | "ErrorsLogicalNumber" | "ErrorsLogicalText" | "ErrorsNumberText" | "Logical" | "LogicalNumbers" | "LogicalText" | "LogicalNumbersText" | "Numbers" | "NumbersText" | "Text"): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
      parameters:
        - id: cellTypeString
          description: Type de cellules à inclure.
          type:
            - '"ConditionalFormats" | "DataValidations" | "Blanks" | "Constants" | "Formulas" | "SameConditionalFormat" | "SameDataValidation" | "Visible"'
        - id: cellValueType
          description: 'Si cellType est une constante ou une formule, cet argument est utilisé pour déterminer les types de cellules à inclure dans le résultat. Ces valeurs peuvent être combinées pour renvoyer plusieurs types. Par défaut, toutes les constantes ou formules sont sélectionnées, quel qu''en soit le type.'
          type:
            - '"All" | "Errors" | "ErrorsLogical" | "ErrorsNumbers" | "ErrorsText" | "ErrorsLogicalNumber" | "ErrorsLogicalText" | "ErrorsNumberText" | "Logical" | "LogicalNumbers" | "LogicalText" | "LogicalNumbersText" | "Numbers" | "NumbersText" | "Text"'
  - uid: excel.Excel.RangeAreas.getSpecialCellsOrNullObject
    summary: |-
      Renvoie un objet RangeAreas qui représente toutes les cellules correspondant au type et à la valeur spécifiés. Lève un objet null si aucune cellule spéciale n’est trouvée qui corresponde au critère.

      \[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'getSpecialCellsOrNullObject(cellType, cellValueType)'
    fullName: 'getSpecialCellsOrNullObject(cellType, cellValueType)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSpecialCellsOrNullObject(cellType: Excel.SpecialCellType, cellValueType?: Excel.SpecialCellValueType): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
      parameters:
        - id: cellType
          description: Type de cellules à inclure.
          type:
            - excel.Excel.SpecialCellType
        - id: cellValueType
          description: 'Si cellType est une constante ou une formule, cet argument est utilisé pour déterminer les types de cellules à inclure dans le résultat. Ces valeurs peuvent être combinées pour renvoyer plusieurs types. Par défaut, toutes les constantes ou formules sont sélectionnées, quel qu''en soit le type.'
          type:
            - excel.Excel.SpecialCellValueType
  - uid: excel.Excel.RangeAreas.getSpecialCellsOrNullObject_1
    summary: |-
      Renvoie un objet RangeAreas qui représente toutes les cellules correspondant au type et à la valeur spécifiés. Lève un objet null si aucune cellule spéciale n’est trouvée qui corresponde au critère.

      \[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'getSpecialCellsOrNullObject(cellTypeString, cellValueType)'
    fullName: 'getSpecialCellsOrNullObject(cellTypeString, cellValueType)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSpecialCellsOrNullObject(cellTypeString: "ConditionalFormats" | "DataValidations" | "Blanks" | "Constants" | "Formulas" | "SameConditionalFormat" | "SameDataValidation" | "Visible", cellValueType?: "All" | "Errors" | "ErrorsLogical" | "ErrorsNumbers" | "ErrorsText" | "ErrorsLogicalNumber" | "ErrorsLogicalText" | "ErrorsNumberText" | "Logical" | "LogicalNumbers" | "LogicalText" | "LogicalNumbersText" | "Numbers" | "NumbersText" | "Text"): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
      parameters:
        - id: cellTypeString
          description: Type de cellules à inclure.
          type:
            - '"ConditionalFormats" | "DataValidations" | "Blanks" | "Constants" | "Formulas" | "SameConditionalFormat" | "SameDataValidation" | "Visible"'
        - id: cellValueType
          description: 'Si cellType est une constante ou une formule, cet argument est utilisé pour déterminer les types de cellules à inclure dans le résultat. Ces valeurs peuvent être combinées pour renvoyer plusieurs types. Par défaut, toutes les constantes ou formules sont sélectionnées, quel qu''en soit le type.'
          type:
            - '"All" | "Errors" | "ErrorsLogical" | "ErrorsNumbers" | "ErrorsText" | "ErrorsLogicalNumber" | "ErrorsLogicalText" | "ErrorsNumberText" | "Logical" | "LogicalNumbers" | "LogicalText" | "LogicalNumbersText" | "Numbers" | "NumbersText" | "Text"'
  - uid: excel.Excel.RangeAreas.getTables
    summary: |-
      Renvoie une collection de tableaux qui se chevauchent avec n’importe quelle plage dans cet objet RangeAreas dans l’étendue.

      \[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getTables(fullyContained)
    fullName: getTables(fullyContained)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTables(fullyContained?: boolean): Excel.TableScopedCollection;'
      return:
        type:
          - excel.Excel.TableScopedCollection
        description: ''
      parameters:
        - id: fullyContained
          description: 'Si la valeur est true, renvoie uniquement les tables qui sont entièrement contenues dans les limites de la plage. La valeur par défaut est False.'
          type:
            - boolean
  - uid: excel.Excel.RangeAreas.getUsedRangeAreas
    summary: |-
      Renvoie les RangeAreas utilisés comprenant tous les domaines utilisés du individuelles et des plages dans l’objet RangeAreas rectangulaires. S’il n’y a pas de cellules utilisées dans le RangeAreas, l’erreur ItemNotFound est générée.

      \[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getUsedRangeAreas(valuesOnly)
    fullName: getUsedRangeAreas(valuesOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getUsedRangeAreas(valuesOnly?: boolean): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
      parameters:
        - id: valuesOnly
          description: S’il faut seulement considérer les cellules avec des valeurs comme des cellules utilisées. La valeur par défaut est False.
          type:
            - boolean
  - uid: excel.Excel.RangeAreas.getUsedRangeAreasOrNullObject
    summary: |-
      Renvoie les RangeAreas utilisés comprenant tous les domaines utilisés du individuelles et des plages dans l’objet RangeAreas rectangulaires. S’il n’y a pas de cellules utilisées dans le RangeAreas, un objet null est renvoyé.

      \[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getUsedRangeAreasOrNullObject(valuesOnly)
    fullName: getUsedRangeAreasOrNullObject(valuesOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getUsedRangeAreasOrNullObject(valuesOnly?: boolean): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
      parameters:
        - id: valuesOnly
          description: S’il faut seulement considérer les cellules avec des valeurs comme des cellules utilisées.
          type:
            - boolean
  - uid: excel.Excel.RangeAreas.isEntireColumn
    summary: "Indique si toutes les plages cet objet RangeAreas représentent des colonnes entières (par exemple, «\_A:C, Q:Z\_»). En lecture seule.\n\n\\[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: isEntireColumn
    fullName: isEntireColumn
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isEntireColumn: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.RangeAreas.isEntireRow
    summary: "Indique si toutes les plages cet objet RangeAreas représentent des colonnes entières (par exemple, «\_1:3, 5:7\_»). En lecture seule.\n\n\\[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: isEntireRow
    fullName: isEntireRow
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isEntireRow: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.RangeAreas.load
    summary: "Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez appeler «\_context.sync()\_» avant de lire les propriétés."
    remarks: |-
      En plus de cette signature, cette méthode possède les signatures suivantes:

      `load(option?: string | string[]): Excel.RangeAreas`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.

      `load(option?: { select?: string; expand?: string; }): Excel.RangeAreas`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeAreas`-Uniquement disponible sur les types de collection. Elle est similaire à la signature précédente. Option. Top indique le nombre maximal d’éléments de collection qui peuvent être inclus dans le résultat. Option. Skip indique le nombre d’éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat. Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d’éléments.
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.RangeAreasLoadOptions): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.RangeAreasLoadOptions
  - uid: excel.Excel.RangeAreas.load_1
    summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez appeler `context.sync()` avant de lire les propriétés.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
      parameters:
        - id: propertyNames
          description: Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.
          type:
            - 'string | string[]'
  - uid: excel.Excel.RangeAreas.load_2
    summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez appeler `context.sync()` avant de lire les propriétés.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: Où propertyNamesAndPaths. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et propertyNamesAndPaths. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.RangeAreas.set
    summary: 'Définit plusieurs propriétés d’un objet en même temps. Vous pouvez transmettre un objet plain avec les propriétés appropriées, ou un autre objet API du même type.'
    remarks: |-
      Cette méthode est dotée de la signature supplémentaire suivante:

      `set(properties: Excel.RangeAreas): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.RangeAreasUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: Objet JavaScript avec des propriétés qui sont structurées isomorphically vers les propriétés de l’objet sur lequel la méthode est appelée.
          type:
            - Interfaces.RangeAreasUpdateData
        - id: options
          description: Fournit une option permettant de supprimer les erreurs si l’objet Properties tente de définir des propriétés en lecture seule.
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: excel.Excel.RangeAreas.set_1
    summary: 'Définit plusieurs propriétés de l’objet en même temps, en fonction d’un objet chargé existant.'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.RangeAreas): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.RangeAreas
  - uid: excel.Excel.RangeAreas.setDirty
    summary: |-
      Cette méthode désigne une plage RangeAreas qui doit être recalculée lorsque le recalcul suivant se produit.

      \[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: setDirty()
    fullName: setDirty()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setDirty(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel.Excel.RangeAreas.style
    summary: |-
      Représente le style pour toutes les plages dans cet objet RangeAreas. Si les styles des cellules sont incohérents, la valeur null est renvoyée. Pour les styles personnalisés, le nom du style est renvoyé. Pour les styles intégrés, une chaîne représentant une valeur dans l’énumération BuiltInStyle est retournée.

      \[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: string;'
      return:
        type:
          - string
  - uid: excel.Excel.RangeAreas.toJSON
    summary: 'Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que l’objet Excel. RangeAreas d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.RangeAreasData`<!-- -->) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l’objet d’origine.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.RangeAreasData;'
      return:
        type:
          - excel.Excel.Interfaces.RangeAreasData
        description: ''
  - uid: excel.Excel.RangeAreas.track
    summary: "Effectuer le suivi de l’objet pour l’ajustement automatique en fonction environnant des modifications dans le document. Cet appel est abréviations context.trackedObjects.add(thisObject). Si vous utilisez cet objet au sein de «\_.sync\_» appels et en dehors de l’exécution séquentielle d’un lot de «\_.run\_» et rencontrez un message d’erreur «\_InvalidObjectPath\_» lors de la définition d’une propriété ou appeler une méthode sur l’objet, vous devez ajouter l’objet à l’objet de suivi collection de sites lors de l’objet a été créé."
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
  - uid: excel.Excel.RangeAreas.untrack
    summary: "Publication mémoire associée à cet objet si elle a été précédemment suivie. Cet appel est abréviations context.trackedObjects.add(thisObject). Vous rencontrez de nombreux objets suivies ralentit l’application hôte, donc n’oubliez pas de libérer les objets que l'on ajoute, une fois que vous avez terminé à les utiliser. Vous devez appeler «\_context.sync()\_» avant la publication de mémoire prend effet."
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
  - uid: excel.Excel.RangeAreas.worksheet
    summary: |-
      Renvoie la feuille de calcul RangeAreas actuelle. En lecture seule.

      \[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: worksheet
    fullName: worksheet
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheet: Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet