### YamlMime:UniversalReference
ms.openlocfilehash: 6d773ea9e5c95940a233201188bfae70679bfaa9
ms.sourcegitcommit: fd03ef72d6a546b0e4dbe0cc9e75d2a7cf9341a1
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 02/27/2019
ms.locfileid: "30303269"
items:
- uid: excel.Excel.RangeAreas
  summary: >-
    RangeAreas représente une collection d'une ou plusieurs plages rectangulaires dans la même feuille de calcul.


    \[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: Excel.RangeAreas
  fullName: Excel.RangeAreas
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.RangeAreas.address
  - excel.Excel.RangeAreas.addressLocal
  - excel.Excel.RangeAreas.areaCount
  - excel.Excel.RangeAreas.areas
  - excel.Excel.RangeAreas.calculate
  - excel.Excel.RangeAreas.cellCount
  - excel.Excel.RangeAreas.clear
  - excel.Excel.RangeAreas.clear_1
  - excel.Excel.RangeAreas.conditionalFormats
  - excel.Excel.RangeAreas.context
  - excel.Excel.RangeAreas.convertDataTypeToText
  - excel.Excel.RangeAreas.convertToLinkedDataType
  - excel.Excel.RangeAreas.copyFrom
  - excel.Excel.RangeAreas.copyFrom_1
  - excel.Excel.RangeAreas.dataValidation
  - excel.Excel.RangeAreas.format
  - excel.Excel.RangeAreas.getEntireColumn
  - excel.Excel.RangeAreas.getEntireRow
  - excel.Excel.RangeAreas.getIntersection
  - excel.Excel.RangeAreas.getIntersectionOrNullObject
  - excel.Excel.RangeAreas.getOffsetRangeAreas
  - excel.Excel.RangeAreas.getSpecialCells
  - excel.Excel.RangeAreas.getSpecialCells_1
  - excel.Excel.RangeAreas.getSpecialCellsOrNullObject
  - excel.Excel.RangeAreas.getSpecialCellsOrNullObject_1
  - excel.Excel.RangeAreas.getTables
  - excel.Excel.RangeAreas.getUsedRangeAreas
  - excel.Excel.RangeAreas.getUsedRangeAreasOrNullObject
  - excel.Excel.RangeAreas.isEntireColumn
  - excel.Excel.RangeAreas.isEntireRow
  - excel.Excel.RangeAreas.load
  - excel.Excel.RangeAreas.load_1
  - excel.Excel.RangeAreas.load_2
  - excel.Excel.RangeAreas.set
  - excel.Excel.RangeAreas.set_1
  - excel.Excel.RangeAreas.setDirty
  - excel.Excel.RangeAreas.style
  - excel.Excel.RangeAreas.toJSON
  - excel.Excel.RangeAreas.track
  - excel.Excel.RangeAreas.untrack
  - excel.Excel.RangeAreas.worksheet
- uid: excel.Excel.RangeAreas.address
  summary: >-
    Renvoie la référence RageAreas en style a1. La valeur Address contient le nom de la feuille de calcul pour chaque bloc de cellules rectangulaire (par exemple, «Sheet1! A1: B4, Sheet1! D1: D4 "). En lecture seule.


    \[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: address
  fullName: address
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly address: string;'
    return:
      type:
      - string
- uid: excel.Excel.RangeAreas.addressLocal
  summary: >-
    Renvoie la référence RageAreas dans les paramètres régionaux de l'utilisateur. En lecture seule.


    \[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: addressLocal
  fullName: addressLocal
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly addressLocal: string;'
    return:
      type:
      - string
- uid: excel.Excel.RangeAreas.areaCount
  summary: >-
    Renvoie le nombre de plages rectangulaires qui composent cet objet RangeAreas.


    \[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: areaCount
  fullName: areaCount
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly areaCount: number;'
    return:
      type:
      - number
- uid: excel.Excel.RangeAreas.areas
  summary: >-
    Renvoie une collection de plages rectangulaires qui composent cet objet RangeAreas.


    \[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: areas
  fullName: areas
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly areas: Excel.RangeCollection;'
    return:
      type:
      - excel.Excel.RangeCollection
- uid: excel.Excel.RangeAreas.calculate
  summary: >-
    Calcule toutes les cellules du RangeAreas.


    \[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: calculate()
  fullName: calculate()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'calculate(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.RangeAreas.cellCount
  summary: >-
    Renvoie le nombre de cellules dans l'objet RangeAreas, en additionnant le nombre de cellules de toutes les plages rectangulaires individuelles. Renvoie-1 si le nombre de cellules dépasse 2 ^ 31-1 (2 147 483 647). En lecture seule.


    \[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: cellCount
  fullName: cellCount
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly cellCount: number;'
    return:
      type:
      - number
- uid: excel.Excel.RangeAreas.clear
  summary: >-
    Efface les valeurs, le format, le remplissage, la bordure, etc., sur chacune des zones qui composent cet objet RangeAreas.


    \[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: clear(applyTo)
  fullName: clear(applyTo)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clear(applyTo?: Excel.ClearApplyTo): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: applyTo
      description: Facultatif. Détermine le type d'action d'effacement. Pour plus d'informations, voir Excel. ClearApplyTo. La valeur par défaut est «All».
      type:
      - excel.Excel.ClearApplyTo
- uid: excel.Excel.RangeAreas.clear_1
  summary: >-
    Efface les valeurs, le format, le remplissage, la bordure, etc., sur chacune des zones qui composent cet objet RangeAreas.


    \[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: clear(applyToString)
  fullName: clear(applyToString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clear(applyToString?: "All" | "Formats" | "Contents" | "Hyperlinks" | "RemoveHyperlinks"): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: applyToString
      description: Facultatif. Détermine le type d'action d'effacement. Pour plus d'informations, voir Excel. ClearApplyTo. La valeur par défaut est «All».
      type:
      - "\"All\" | \"Formats\" | \"Contents\" | \"Hyperlinks\" | \"RemoveHyperlinks\""
- uid: excel.Excel.RangeAreas.conditionalFormats
  summary: >-
    Renvoie une collection de ConditionalFormats qui se croisent avec toutes les cellules de cet objet RangeAreas. En lecture seule.


    \[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: conditionalFormats
  fullName: conditionalFormats
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly conditionalFormats: Excel.ConditionalFormatCollection;'
    return:
      type:
      - excel.Excel.ConditionalFormatCollection
- uid: excel.Excel.RangeAreas.context
  summary: Contexte de demande associé à l'objet. Cette opération connecte le processus du complément au processus de l'application hôte Office.
  isPreview: true
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.RangeAreas.convertDataTypeToText
  summary: >-
    ConVertit toutes les cellules du RangeAreas avec des types de données en texte.


    \[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: convertDataTypeToText()
  fullName: convertDataTypeToText()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'convertDataTypeToText(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.RangeAreas.convertToLinkedDataType
  summary: >-
    ConVertit toutes les cellules du RangeAreas en type de données lié.


    \[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: convertToLinkedDataType(serviceID, languageCulture)
  fullName: convertToLinkedDataType(serviceID, languageCulture)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'convertToLinkedDataType(serviceID: number, languageCulture: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: serviceID
      description: ID de service qui sera utilisé pour interroger les données.
      type:
      - number
    - id: languageCulture
      description: Culture de langue pour laquelle interroger le service.
      type:
      - string
- uid: excel.Excel.RangeAreas.copyFrom
  summary: >-
    Copie les données de cellule ou la mise en forme de la plage source ou RangeAreas vers le RangeAreas actuel. La taille de la rangeAreas de destination peut être différente de celle de la plage source ou de la RangeAreas. La destination est étendue automatiquement si elle est plus petite que la source.


    \[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: copyFrom(sourceRange, copyType, skipBlanks, transpose)
  fullName: copyFrom(sourceRange, copyType, skipBlanks, transpose)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'copyFrom(sourceRange: Range | RangeAreas | string, copyType?: Excel.RangeCopyType, skipBlanks?: boolean, transpose?: boolean): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: sourceRange
      description: Plage source ou RangeAreas à partir de laquelle effectuer la copie. Lorsque le RangeAreas source est doté de plusieurs plages, il doit se présenter sous la forme hiérarchique qui peut être créée en supprimant des lignes ou des colonnes entières d'une plage rectangulaire.
      type:
      - Range | RangeAreas | string
    - id: copyType
      description: Type de données de cellule ou de mise en forme à copier. La valeur par défaut est «All».
      type:
      - excel.Excel.RangeCopyType
    - id: skipBlanks
      description: True si pour ignorer les cellules vides dans la plage source ou RangeAreas. La valeur par défaut est false.
      type:
      - boolean
    - id: transpose
      description: True pour transposer les cellules dans la RangeAreas de destination. La valeur par défaut est false.
      type:
      - boolean
- uid: excel.Excel.RangeAreas.copyFrom_1
  summary: >-
    Copie les données de cellule ou la mise en forme de la plage source ou RangeAreas vers le RangeAreas actuel. La taille de la rangeAreas de destination peut être différente de celle de la plage source ou de la RangeAreas. La destination est étendue automatiquement si elle est plus petite que la source.


    \[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: copyFrom(sourceRange, copyTypeString, skipBlanks, transpose)
  fullName: copyFrom(sourceRange, copyTypeString, skipBlanks, transpose)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'copyFrom(sourceRange: Range | RangeAreas | string, copyTypeString?: "All" | "Formulas" | "Values" | "Formats", skipBlanks?: boolean, transpose?: boolean): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: sourceRange
      description: Plage source ou RangeAreas à partir de laquelle effectuer la copie. Lorsque le RangeAreas source est doté de plusieurs plages, il doit se présenter sous la forme hiérarchique qui peut être créée en supprimant des lignes ou des colonnes entières d'une plage rectangulaire.
      type:
      - Range | RangeAreas | string
    - id: copyTypeString
      description: Type de données de cellule ou de mise en forme à copier. La valeur par défaut est «All».
      type:
      - "\"All\" | \"Formulas\" | \"Values\" | \"Formats\""
    - id: skipBlanks
      description: True si pour ignorer les cellules vides dans la plage source ou RangeAreas. La valeur par défaut est false.
      type:
      - boolean
    - id: transpose
      description: True pour transposer les cellules dans la RangeAreas de destination. La valeur par défaut est false.
      type:
      - boolean
- uid: excel.Excel.RangeAreas.dataValidation
  summary: >-
    Renvoie un objet dataValidation pour toutes les plages de RangeAreas.


    \[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: dataValidation
  fullName: dataValidation
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly dataValidation: Excel.DataValidation;'
    return:
      type:
      - excel.Excel.DataValidation
- uid: excel.Excel.RangeAreas.format
  summary: >-
    Renvoie un objet rangeFormat, qui encapsule la police, le remplissage, les bordures, l'alignement et d'autres propriétés pour toutes les plages de l'objet RangeAreas. En lecture seule.


    \[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: format
  fullName: format
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly format: Excel.RangeFormat;'
    return:
      type:
      - excel.Excel.RangeFormat
- uid: excel.Excel.RangeAreas.getEntireColumn
  summary: >-
    Renvoie un objet RangeAreas qui représente la totalité des colonnes de l'RangeAreas (par exemple, si l'RangeAreas actuel représente les cellules «B4: E11, H2», elle renvoie une RangeAreas qui représente les colonnes «B:E, H:H»).


    \[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: getEntireColumn()
  fullName: getEntireColumn()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getEntireColumn(): Excel.RangeAreas;'
    return:
      type:
      - excel.Excel.RangeAreas
      description: ''
- uid: excel.Excel.RangeAreas.getEntireRow
  summary: >-
    Renvoie un objet RangeAreas qui représente la totalité des lignes du RangeAreas (par exemple, si l'RangeAreas actuel représente les cellules «B4: E11», elle renvoie une RangeAreas qui représente les lignes «4:11»).


    \[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: getEntireRow()
  fullName: getEntireRow()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getEntireRow(): Excel.RangeAreas;'
    return:
      type:
      - excel.Excel.RangeAreas
      description: ''
- uid: excel.Excel.RangeAreas.getIntersection
  summary: >-
    Renvoie l'objet RangeAreas qui représente l'intersection des plages ou RangeAreas donné. Si aucune intersection n'est trouvée, une erreur ItemNotFound est générée.


    \[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: getIntersection(anotherRange)
  fullName: getIntersection(anotherRange)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getIntersection(anotherRange: Range | RangeAreas | string): Excel.RangeAreas;'
    return:
      type:
      - excel.Excel.RangeAreas
      description: ''
    parameters:
    - id: anotherRange
      description: La plage, l'objet RangeAreas ou l'adresse de plage qui sera utilisé pour déterminer l'intersection.
      type:
      - Range | RangeAreas | string
- uid: excel.Excel.RangeAreas.getIntersectionOrNullObject
  summary: >-
    Renvoie l'objet RangeAreas qui représente l'intersection des plages ou RangeAreas donné. Si aucune intersection n'est trouvée, un objet null est renvoyé.


    \[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: getIntersectionOrNullObject(anotherRange)
  fullName: getIntersectionOrNullObject(anotherRange)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getIntersectionOrNullObject(anotherRange: Range | RangeAreas | string): Excel.RangeAreas;'
    return:
      type:
      - excel.Excel.RangeAreas
      description: ''
    parameters:
    - id: anotherRange
      description: Plage, RangeAreas ou adresse qui sera utilisée pour déterminer l'intersection.
      type:
      - Range | RangeAreas | string
- uid: excel.Excel.RangeAreas.getOffsetRangeAreas
  summary: >-
    Renvoie un objet RangeAreas qui est déplacé en fonction de l'offset de ligne et de colonne spécifique. La dimension de l'RangeAreas renvoyé correspondra à l'objet d'origine. Si la RangeAreas résultante est forcée en dehors des limites de la grille de la feuille de calcul, une erreur est générée.


    \[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: getOffsetRangeAreas(rowOffset, columnOffset)
  fullName: getOffsetRangeAreas(rowOffset, columnOffset)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getOffsetRangeAreas(rowOffset: number, columnOffset: number): Excel.RangeAreas;'
    return:
      type:
      - excel.Excel.RangeAreas
      description: ''
    parameters:
    - id: rowOffset
      description: Nombre de lignes (positif, négatif ou 0) par lesquelles le RangeAreas doit être décalé. Les valeurs positives sont décalées vers le bas et les valeurs négatives sont décalées vers le haut.
      type:
      - number
    - id: columnOffset
      description: Nombre de colonnes (positives, négatives ou 0) pour lesquelles le RangeAreas doit être décalé. Les valeurs positives sont décalées vers la droite et les valeurs négatives vers la gauche.
      type:
      - number
- uid: excel.Excel.RangeAreas.getSpecialCells
  summary: >-
    Renvoie un objet RangeAreas qui représente toutes les cellules correspondant au type et à la valeur spécifiés. Renvoie une erreur si aucune cellule spéciale correspondant aux critères n'est trouvée.


    \[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: getSpecialCells(cellType, cellValueType)
  fullName: getSpecialCells(cellType, cellValueType)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSpecialCells(cellType: Excel.SpecialCellType, cellValueType?: Excel.SpecialCellValueType): Excel.RangeAreas;'
    return:
      type:
      - excel.Excel.RangeAreas
      description: ''
    parameters:
    - id: cellType
      description: Type de cellules à inclure.
      type:
      - excel.Excel.SpecialCellType
    - id: cellValueType
      description: Si cellType est une constante ou une formule, cet argument est utilisé pour déterminer les types de cellules à inclure dans le résultat. Ces valeurs peuvent être combinées pour renvoyer plusieurs types. Par défaut, vous sélectionnez toutes les constantes ou formules, quel que soit le type.
      type:
      - excel.Excel.SpecialCellValueType
- uid: excel.Excel.RangeAreas.getSpecialCells_1
  summary: >-
    Renvoie un objet RangeAreas qui représente toutes les cellules correspondant au type et à la valeur spécifiés. Renvoie une erreur si aucune cellule spéciale correspondant aux critères n'est trouvée.


    \[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: getSpecialCells(cellTypeString, cellValueType)
  fullName: getSpecialCells(cellTypeString, cellValueType)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSpecialCells(cellTypeString: "ConditionalFormats" | "DataValidations" | "Blanks" | "Constants" | "Formulas" | "SameConditionalFormat" | "SameDataValidation" | "Visible", cellValueType?: "All" | "Errors" | "ErrorsLogical" | "ErrorsNumbers" | "ErrorsText" | "ErrorsLogicalNumber" | "ErrorsLogicalText" | "ErrorsNumberText" | "Logical" | "LogicalNumbers" | "LogicalText" | "LogicalNumbersText" | "Numbers" | "NumbersText" | "Text"): Excel.RangeAreas;'
    return:
      type:
      - excel.Excel.RangeAreas
      description: ''
    parameters:
    - id: cellTypeString
      description: Type de cellules à inclure.
      type:
      - "\"ConditionalFormats\" | \"DataValidations\" | \"Blanks\" | \"Constants\" | \"Formulas\" | \"SameConditionalFormat\" | \"SameDataValidation\" | \"Visible\""
    - id: cellValueType
      description: Si cellType est une constante ou une formule, cet argument est utilisé pour déterminer les types de cellules à inclure dans le résultat. Ces valeurs peuvent être combinées pour renvoyer plusieurs types. Par défaut, vous sélectionnez toutes les constantes ou formules, quel que soit le type.
      type:
      - "\"All\" | \"Errors\" | \"ErrorsLogical\" | \"ErrorsNumbers\" | \"ErrorsText\" | \"ErrorsLogicalNumber\" | \"ErrorsLogicalText\" | \"ErrorsNumberText\" | \"Logical\" | \"LogicalNumbers\" | \"LogicalText\" | \"LogicalNumbersText\" | \"Numbers\" | \"NumbersText\" | \"Text\""
- uid: excel.Excel.RangeAreas.getSpecialCellsOrNullObject
  summary: >-
    Renvoie un objet RangeAreas qui représente toutes les cellules correspondant au type et à la valeur spécifiés. Renvoie un objet null si aucune cellule spéciale correspondant aux critères n'est trouvée.


    \[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: getSpecialCellsOrNullObject(cellType, cellValueType)
  fullName: getSpecialCellsOrNullObject(cellType, cellValueType)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSpecialCellsOrNullObject(cellType: Excel.SpecialCellType, cellValueType?: Excel.SpecialCellValueType): Excel.RangeAreas;'
    return:
      type:
      - excel.Excel.RangeAreas
      description: ''
    parameters:
    - id: cellType
      description: Type de cellules à inclure.
      type:
      - excel.Excel.SpecialCellType
    - id: cellValueType
      description: Si cellType est une constante ou une formule, cet argument est utilisé pour déterminer les types de cellules à inclure dans le résultat. Ces valeurs peuvent être combinées pour renvoyer plusieurs types. Par défaut, vous sélectionnez toutes les constantes ou formules, quel que soit le type.
      type:
      - excel.Excel.SpecialCellValueType
- uid: excel.Excel.RangeAreas.getSpecialCellsOrNullObject_1
  summary: >-
    Renvoie un objet RangeAreas qui représente toutes les cellules correspondant au type et à la valeur spécifiés. Renvoie un objet null si aucune cellule spéciale correspondant aux critères n'est trouvée.


    \[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: getSpecialCellsOrNullObject(cellTypeString, cellValueType)
  fullName: getSpecialCellsOrNullObject(cellTypeString, cellValueType)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSpecialCellsOrNullObject(cellTypeString: "ConditionalFormats" | "DataValidations" | "Blanks" | "Constants" | "Formulas" | "SameConditionalFormat" | "SameDataValidation" | "Visible", cellValueType?: "All" | "Errors" | "ErrorsLogical" | "ErrorsNumbers" | "ErrorsText" | "ErrorsLogicalNumber" | "ErrorsLogicalText" | "ErrorsNumberText" | "Logical" | "LogicalNumbers" | "LogicalText" | "LogicalNumbersText" | "Numbers" | "NumbersText" | "Text"): Excel.RangeAreas;'
    return:
      type:
      - excel.Excel.RangeAreas
      description: ''
    parameters:
    - id: cellTypeString
      description: Type de cellules à inclure.
      type:
      - "\"ConditionalFormats\" | \"DataValidations\" | \"Blanks\" | \"Constants\" | \"Formulas\" | \"SameConditionalFormat\" | \"SameDataValidation\" | \"Visible\""
    - id: cellValueType
      description: Si cellType est une constante ou une formule, cet argument est utilisé pour déterminer les types de cellules à inclure dans le résultat. Ces valeurs peuvent être combinées pour renvoyer plusieurs types. Par défaut, vous sélectionnez toutes les constantes ou formules, quel que soit le type.
      type:
      - "\"All\" | \"Errors\" | \"ErrorsLogical\" | \"ErrorsNumbers\" | \"ErrorsText\" | \"ErrorsLogicalNumber\" | \"ErrorsLogicalText\" | \"ErrorsNumberText\" | \"Logical\" | \"LogicalNumbers\" | \"LogicalText\" | \"LogicalNumbersText\" | \"Numbers\" | \"NumbersText\" | \"Text\""
- uid: excel.Excel.RangeAreas.getTables
  summary: >-
    Renvoie une collection étendue de tables qui se chevauchent avec n'importe quelle plage de cet objet RangeAreas.


    \[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: getTables(fullyContained)
  fullName: getTables(fullyContained)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getTables(fullyContained?: boolean): Excel.TableScopedCollection;'
    return:
      type:
      - excel.Excel.TableScopedCollection
      description: ''
    parameters:
    - id: fullyContained
      description: Si la valeur est true, renvoie uniquement les tables qui sont entièrement contenues dans les limites de la plage. La valeur par défaut est false.
      type:
      - boolean
- uid: excel.Excel.RangeAreas.getUsedRangeAreas
  summary: >-
    Renvoie le RangeAreas utilisé qui comprend toutes les zones utilisées de plages rectangulaires individuelles dans l'objet RangeAreas. S'il n'y a pas de cellules utilisées dans le RangeAreas, l'erreur ItemNotFound est générée.


    \[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: getUsedRangeAreas(valuesOnly)
  fullName: getUsedRangeAreas(valuesOnly)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getUsedRangeAreas(valuesOnly?: boolean): Excel.RangeAreas;'
    return:
      type:
      - excel.Excel.RangeAreas
      description: ''
    parameters:
    - id: valuesOnly
      description: S'il faut seulement considérer les cellules avec des valeurs comme des cellules utilisées. La valeur par défaut est false.
      type:
      - boolean
- uid: excel.Excel.RangeAreas.getUsedRangeAreasOrNullObject
  summary: >-
    Renvoie le RangeAreas utilisé qui comprend toutes les zones utilisées de plages rectangulaires individuelles dans l'objet RangeAreas. S'il n'y a pas de cellules utilisées dans le RangeAreas, un objet null est renvoyé.


    \[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: getUsedRangeAreasOrNullObject(valuesOnly)
  fullName: getUsedRangeAreasOrNullObject(valuesOnly)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getUsedRangeAreasOrNullObject(valuesOnly?: boolean): Excel.RangeAreas;'
    return:
      type:
      - excel.Excel.RangeAreas
      description: ''
    parameters:
    - id: valuesOnly
      description: S'il faut seulement considérer les cellules avec des valeurs comme des cellules utilisées.
      type:
      - boolean
- uid: excel.Excel.RangeAreas.isEntireColumn
  summary: >-
    Indique si toutes les plages de cet objet RangeAreas représentent des colonnes entières (par exemple, «A:C», «Q:Z»). En lecture seule.


    \[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: isEntireColumn
  fullName: isEntireColumn
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly isEntireColumn: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.RangeAreas.isEntireRow
  summary: >-
    Indique si toutes les plages de cet objet RangeAreas représentent des lignes entières (par exemple, «1:3, 5:7»). En lecture seule.


    \[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: isEntireRow
  fullName: isEntireRow
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly isEntireRow: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.RangeAreas.load
  summary: Met en file d'attente une commande pour charger les propriétés spécifiées de l'objet. Vous devez appeler «Context. Sync ()» avant de lire les propriétés.
  remarks: >-
    En plus de cette signature, cette méthode possède les signatures suivantes:


    `load(option?: string | string[]): Excel.RangeAreas`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.


    `load(option?: { select?: string; expand?: string; }): Excel.RangeAreas`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeAreas`-Uniquement disponible sur les types de collection. Elle est similaire à la signature précédente. Option. Top indique le nombre maximal d'éléments de collection qui peuvent être inclus dans le résultat. Option. Skip indique le nombre d'éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat. Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d'éléments.
  isPreview: true
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.RangeAreasLoadOptions): Excel.RangeAreas;'
    return:
      type:
      - excel.Excel.RangeAreas
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.RangeAreasLoadOptions
- uid: excel.Excel.RangeAreas.load_1
  summary: Met en file d'attente une commande pour charger les propriétés spécifiées de l'objet. Vous devez appeler `context.sync()` avant de lire les propriétés.
  isPreview: true
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.RangeAreas;'
    return:
      type:
      - excel.Excel.RangeAreas
      description: ''
    parameters:
    - id: propertyNames
      description: Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.
      type:
      - string | string[]
- uid: excel.Excel.RangeAreas.load_2
  summary: Met en file d'attente une commande pour charger les propriétés spécifiées de l'objet. Vous devez appeler `context.sync()` avant de lire les propriétés.
  isPreview: true
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.RangeAreas;'
    return:
      type:
      - excel.Excel.RangeAreas
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: Où propertyNamesAndPaths. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et propertyNamesAndPaths. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.RangeAreas.set
  summary: Définit plusieurs propriétés d'un objet en même temps. Vous pouvez transmettre un objet plain avec les propriétés appropriées, ou un autre objet API du même type.
  remarks: >-
    Cette méthode est dotée de la signature supplémentaire suivante:


    `set(properties: Excel.RangeAreas): void`
  isPreview: true
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.RangeAreasUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: Objet JavaScript avec des propriétés qui sont structurées isomorphically vers les propriétés de l'objet sur lequel la méthode est appelée.
      type:
      - Interfaces.RangeAreasUpdateData
    - id: options
      description: Fournit une option permettant de supprimer les erreurs si l'objet Properties tente de définir des propriétés en lecture seule.
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.RangeAreas.set_1
  summary: Définit plusieurs propriétés de l'objet en même temps, en fonction d'un objet chargé existant.
  isPreview: true
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.RangeAreas): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.RangeAreas
- uid: excel.Excel.RangeAreas.setDirty
  summary: >-
    Définit l'RangeAreas à recalculer lorsque le recalcul suivant se produit.


    \[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: setDirty()
  fullName: setDirty()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setDirty(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.RangeAreas.style
  summary: >-
    Représente le style de toutes les plages de cet objet RangeAreas. Si les styles des cellules sont incohérents, la valeur null est renvoyée. Pour les styles personnalisés, le nom du style est renvoyé. Pour les styles intégrés, une chaîne représentant une valeur dans l'énumération BuiltInStyle est retournée.


    \[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: style
  fullName: style
  langs:
  - typeScript
  type: property
  syntax:
    content: 'style: string;'
    return:
      type:
      - string
- uid: excel.Excel.RangeAreas.toJSON
  summary: Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu'un objet d'API est transmis à. `JSON.stringify()` <!-- --> (`JSON.stringify`<!-- -->, à son tour, appelle `toJSON` la méthode de l'objet qui lui est passé.) Tandis que l'objet Excel. RangeAreas d'origine est un objet `toJSON` d'API, la méthode renvoie un objet JavaScript `Excel.Interfaces.RangeAreasData` <!-- -->simple (tapé sous la forme) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l'objet d'origine.
  isPreview: true
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.RangeAreasData;'
    return:
      type:
      - excel.Excel.Interfaces.RangeAreasData
      description: ''
- uid: excel.Excel.RangeAreas.track
  summary: Effectuer le suivi de l'objet pour un ajustement automatique en fonction des modifications apportées au document. Cet appel est un raccourci pour Context. trackedObjects. Add (thisObject). Si vous utilisez cet objet dans les appels «. Sync» et en dehors de l'exécution séquentielle d'un lot «. Run», et si vous obtenez une erreur «InvalidObjectPath» lors de la définition d'une propriété ou de l'appel d'une méthode sur l'objet, vous deviez ajouter l'objet à l'objet suivi. collection lors de la création initiale de l'objet.
  isPreview: true
  name: track()
  fullName: track()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'track(): Excel.RangeAreas;'
    return:
      type:
      - excel.Excel.RangeAreas
      description: ''
- uid: excel.Excel.RangeAreas.untrack
  summary: Libère la mémoire associée à cet objet, si elle a déjà été suivie. Cet appel est un raccourci pour Context. trackedObjects. Remove (thisObject). Étant donné que de nombreux objets suivis ralentissent l'application hôte, n'oubliez pas de libérer les objets que vous ajoutez, une fois que vous les utilisez. Vous devrez appeler «Context. Sync ()» avant que la version de mémoire ne prenne effet.
  isPreview: true
  name: untrack()
  fullName: untrack()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'untrack(): Excel.RangeAreas;'
    return:
      type:
      - excel.Excel.RangeAreas
      description: ''
- uid: excel.Excel.RangeAreas.worksheet
  summary: >-
    Renvoie la feuille de calcul pour l'RangeAreas en cours. En lecture seule.


    \[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: worksheet
  fullName: worksheet
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly worksheet: Excel.Worksheet;'
    return:
      type:
      - excel.Excel.Worksheet
