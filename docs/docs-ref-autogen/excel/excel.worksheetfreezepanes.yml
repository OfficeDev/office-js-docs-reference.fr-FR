### YamlMime:UniversalReference
items:
  - uid: excel.Excel.WorksheetFreezePanes
    summary: '<span data-ttu-id="d9223-101">\[[Ensemble d''API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d9223-101">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>'
    name: Excel.WorksheetFreezePanes
    fullName: Excel.WorksheetFreezePanes
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.WorksheetFreezePanes.context
      - excel.Excel.WorksheetFreezePanes.freezeAt
      - excel.Excel.WorksheetFreezePanes.freezeColumns
      - excel.Excel.WorksheetFreezePanes.freezeRows
      - excel.Excel.WorksheetFreezePanes.getLocation
      - excel.Excel.WorksheetFreezePanes.getLocationOrNullObject
      - excel.Excel.WorksheetFreezePanes.toJSON
      - excel.Excel.WorksheetFreezePanes.unfreeze
  - uid: excel.Excel.WorksheetFreezePanes.context
    summary: <span data-ttu-id="d9223-102">Contexte de demande associé à l'objet.</span><span class="sxs-lookup"><span data-stu-id="d9223-102">The request context associated with the object.</span></span> <span data-ttu-id="d9223-103">Cette opération connecte le processus du complément au processus de l'application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="d9223-103">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.WorksheetFreezePanes.freezeAt
    summary: |-
      <span data-ttu-id="d9223-104">Définit les cellules figées dans l’affichage de la feuille de calcul active.</span><span class="sxs-lookup"><span data-stu-id="d9223-104">Sets the frozen cells in the active worksheet view.</span></span> <span data-ttu-id="d9223-105">La plage fournie correspond aux cellules qui seront figées dans le volet supérieur et le volet de gauche.</span><span class="sxs-lookup"><span data-stu-id="d9223-105">The range provided corresponds to cells that will be frozen in the top- and left-most pane.</span></span>

      <span data-ttu-id="d9223-106">\[[Ensemble d'API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d9223-106">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: freezeAt(frozenRange)
    fullName: freezeAt(frozenRange)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'freezeAt(frozenRange: Range | string): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="d9223-107">Exemples</span><span class="sxs-lookup"><span data-stu-id="d9223-107">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");

              // Freeze the specified range in top-and-left-most pane of the worksheet.
              sheet.freezePanes.freezeAt(sheet.getRange("H2:K5"));

              await context.sync();
          });
          ```
      parameters:
        - id: frozenRange
          description: '<span data-ttu-id="d9223-108">Plage qui représente les cellules à figer ou null pour supprimer tous les volets figés.</span><span class="sxs-lookup"><span data-stu-id="d9223-108">A range that represents the cells to be frozen, or null to remove all frozen panes.</span></span>'
          type:
            - Range | string
  - uid: excel.Excel.WorksheetFreezePanes.freezeColumns
    summary: |-
      <span data-ttu-id="d9223-109">Figer la/les première(s) colonne(s) de la feuille de calcul en place.</span><span class="sxs-lookup"><span data-stu-id="d9223-109">Freeze the first column(s) of the worksheet in place.</span></span>

      <span data-ttu-id="d9223-110">\[[Ensemble d'API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d9223-110">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: freezeColumns(count)
    fullName: freezeColumns(count)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'freezeColumns(count?: number): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="d9223-111">Exemples</span><span class="sxs-lookup"><span data-stu-id="d9223-111">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");

              // Freeze the first two columns in the worksheet.
              sheet.freezePanes.freezeColumns(2);

              await context.sync();
          });
          ```
      parameters:
        - id: count
          description: '<span data-ttu-id="d9223-112">Nombre facultatif de colonnes à geler, ou zéro pour libérer toutes les colonnes</span><span class="sxs-lookup"><span data-stu-id="d9223-112">Optional number of columns to freeze, or zero to unfreeze all columns</span></span>'
          type:
            - number
  - uid: excel.Excel.WorksheetFreezePanes.freezeRows
    summary: |-
      <span data-ttu-id="d9223-113">Figer la/les première(s) ligne(s) de la feuille de calcul en place.</span><span class="sxs-lookup"><span data-stu-id="d9223-113">Freeze the top row(s) of the worksheet in place.</span></span>

      <span data-ttu-id="d9223-114">\[[Ensemble d'API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d9223-114">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: freezeRows(count)
    fullName: freezeRows(count)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'freezeRows(count?: number): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="d9223-115">Exemples</span><span class="sxs-lookup"><span data-stu-id="d9223-115">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");

              // Freeze the top two rows in the worksheet.
              sheet.freezePanes.freezeRows(2);

              await context.sync();
          });
          ```
      parameters:
        - id: count
          description: '<span data-ttu-id="d9223-116">Nombre facultatif de lignes à geler, ou zéro pour libérer toutes les lignes</span><span class="sxs-lookup"><span data-stu-id="d9223-116">Optional number of rows to freeze, or zero to unfreeze all rows</span></span>'
          type:
            - number
  - uid: excel.Excel.WorksheetFreezePanes.getLocation
    summary: |-
      <span data-ttu-id="d9223-117">Obtient une plage qui définit les cellules figées dans l’affichage de la feuille de calcul active.</span><span class="sxs-lookup"><span data-stu-id="d9223-117">Gets a range that describes the frozen cells in the active worksheet view.</span></span> <span data-ttu-id="d9223-118">La plage figée correspond aux cellules qui sont figées dans le volet supérieur et le volet de gauche.</span><span class="sxs-lookup"><span data-stu-id="d9223-118">The frozen range is corresponds to cells that are frozen in the top- and left-most pane.</span></span>

      <span data-ttu-id="d9223-119">\[[Ensemble d'API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d9223-119">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getLocation()
    fullName: getLocation()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getLocation(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
  - uid: excel.Excel.WorksheetFreezePanes.getLocationOrNullObject
    summary: |-
      <span data-ttu-id="d9223-120">Obtient une plage qui définit les cellules figées dans l’affichage de la feuille de calcul active.</span><span class="sxs-lookup"><span data-stu-id="d9223-120">Gets a range that describes the frozen cells in the active worksheet view.</span></span> <span data-ttu-id="d9223-121">La plage figée correspond aux cellules qui sont figées dans le volet supérieur et le volet de gauche.</span><span class="sxs-lookup"><span data-stu-id="d9223-121">The frozen range is corresponds to cells that are frozen in the top- and left-most pane.</span></span> <span data-ttu-id="d9223-122">S'il n'y a pas de volet figé, renvoie un objet null.</span><span class="sxs-lookup"><span data-stu-id="d9223-122">If there is no frozen pane, returns a null object.</span></span>

      <span data-ttu-id="d9223-123">\[[Ensemble d'API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d9223-123">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getLocationOrNullObject()
    fullName: getLocationOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getLocationOrNullObject(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="d9223-124">Exemples</span><span class="sxs-lookup"><span data-stu-id="d9223-124">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const frozenRange = sheet.freezePanes.getLocationOrNullObject();
              frozenRange.load("address");

              await context.sync();

              if (frozenRange.isNullObject) {
                  console.log(`The worksheet does not contain a frozen pane.`);
              } else {
                  console.log(`The address of the frozen range (cells that are frozen in the top-and-left-most pane) is "${frozenRange.address}"`);
              }
          });
          ```
  - uid: excel.Excel.WorksheetFreezePanes.toJSON
    summary: '<span data-ttu-id="d9223-125">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu''un objet d''API est transmis à`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="d9223-125">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="d9223-126">.</span><span class="sxs-lookup"><span data-stu-id="d9223-126"></span></span> <span data-ttu-id="d9223-127">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="d9223-127"></span></span><!-- --><span data-ttu-id="d9223-128">, à son tour, appelle `toJSON` la méthode de l''objet qui lui est passé.) Tandis que l''objet Excel. WorksheetFreezePanes d''origine est un objet `toJSON` d''API, la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.WorksheetFreezePanesData`</span><span class="sxs-lookup"><span data-stu-id="d9223-128">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.WorksheetFreezePanes object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.WorksheetFreezePanesData`</span></span><!-- --><span data-ttu-id="d9223-129">) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l''objet d''origine.</span><span class="sxs-lookup"><span data-stu-id="d9223-129">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        toJSON(): {
                    [key: string]: string;
                };
      return:
        type:
          - |-
            {
                        [key: string]: string;
                    }
        description: ''
  - uid: excel.Excel.WorksheetFreezePanes.unfreeze
    summary: |-
      <span data-ttu-id="d9223-130">Supprime tous les volets figés dans la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="d9223-130">Removes all frozen panes in the worksheet.</span></span>

      <span data-ttu-id="d9223-131">\[[Ensemble d'API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d9223-131">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: unfreeze()
    fullName: unfreeze()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'unfreeze(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="d9223-132">範例</span><span class="sxs-lookup"><span data-stu-id="d9223-132">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              sheet.freezePanes.unfreeze();

              await context.sync();
          });
          ```