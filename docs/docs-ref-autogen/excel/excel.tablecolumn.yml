### YamlMime:UniversalReference
ms.openlocfilehash: 349d30eecd68a1a82995ac63f8264884ef80c6ff
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 02/13/2019
ms.locfileid: "29973232"
items:
- uid: excel.Excel.TableColumn
  summary: >-
    <span data-ttu-id="479af-101">Cet objet représente une colonne dans un tableau.</span><span class="sxs-lookup"><span data-stu-id="479af-101">Represents a column in a table.</span></span>


    <span data-ttu-id="479af-102">\[[Du jeu d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="479af-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.TableColumn
  fullName: Excel.TableColumn
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.TableColumn.context
  - excel.Excel.TableColumn.delete
  - excel.Excel.TableColumn.filter
  - excel.Excel.TableColumn.getDataBodyRange
  - excel.Excel.TableColumn.getHeaderRowRange
  - excel.Excel.TableColumn.getRange
  - excel.Excel.TableColumn.getTotalRowRange
  - excel.Excel.TableColumn.id
  - excel.Excel.TableColumn.index
  - excel.Excel.TableColumn.load
  - excel.Excel.TableColumn.load_1
  - excel.Excel.TableColumn.load_2
  - excel.Excel.TableColumn.name
  - excel.Excel.TableColumn.set
  - excel.Excel.TableColumn.set_1
  - excel.Excel.TableColumn.toJSON
  - excel.Excel.TableColumn.values
- uid: excel.Excel.TableColumn.context
  summary: <span data-ttu-id="479af-103">Contexte de la requête associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="479af-103">The request context associated with the object.</span></span> <span data-ttu-id="479af-104">Il connecte processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="479af-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.TableColumn.delete
  summary: >-
    <span data-ttu-id="479af-105">Supprime la colonne du tableau.</span><span class="sxs-lookup"><span data-stu-id="479af-105">Deletes the column from the table.</span></span>


    <span data-ttu-id="479af-106">\[[Du jeu d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="479af-106">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: delete()
  fullName: delete()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"479af-107\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"479af-107\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var column = ctx.workbook.tables.getItem(tableName).columns.getItemAt(2);\n    column.delete();\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.TableColumn.filter
  summary: >-
    <span data-ttu-id="479af-p102">Extrait le filtre appliqué à la colonne. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="479af-p102">Retrieve the filter applied to the column. Read-only.</span></span>


    <span data-ttu-id="479af-110">\[[Du jeu d’API : ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="479af-110">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: filter
  fullName: filter
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly filter: Excel.Filter;'
    return:
      type:
      - excel.Excel.Filter
- uid: excel.Excel.TableColumn.getDataBodyRange
  summary: >-
    <span data-ttu-id="479af-111">Obtient l’objet de plage associé au corps de données de la colonne.</span><span class="sxs-lookup"><span data-stu-id="479af-111">Gets the range object associated with the data body of the column.</span></span>


    <span data-ttu-id="479af-112">\[[Du jeu d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="479af-112">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getDataBodyRange()
  fullName: getDataBodyRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getDataBodyRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"479af-113\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"479af-113\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var column = ctx.workbook.tables.getItem(tableName).columns.getItemAt(0);\n    var dataBodyRange = column.getDataBodyRange();\n    dataBodyRange.load('address');\n    return ctx.sync().then(function() {\n        console.log(dataBodyRange.address);\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.TableColumn.getHeaderRowRange
  summary: >-
    <span data-ttu-id="479af-114">Obtient l’objet de plage associé à la ligne d’en-tête de la colonne.</span><span class="sxs-lookup"><span data-stu-id="479af-114">Gets the range object associated with the header row of the column.</span></span>


    <span data-ttu-id="479af-115">\[[Du jeu d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="479af-115">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getHeaderRowRange()
  fullName: getHeaderRowRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getHeaderRowRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"479af-116\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"479af-116\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var columns = ctx.workbook.tables.getItem(tableName).columns.getItemAt(0);\n    var headerRowRange = columns.getHeaderRowRange();\n    headerRowRange.load('address');\n    return ctx.sync().then(function() {\n        console.log(headerRowRange.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.TableColumn.getRange
  summary: >-
    <span data-ttu-id="479af-117">Renvoie l’objet de plage associé à l’intégralité de la colonne.</span><span class="sxs-lookup"><span data-stu-id="479af-117">Gets the range object associated with the entire column.</span></span>


    <span data-ttu-id="479af-118">\[[Du jeu d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="479af-118">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRange()
  fullName: getRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"479af-119\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"479af-119\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var columns = ctx.workbook.tables.getItem(tableName).columns.getItemAt(0);\n    var columnRange = columns.getRange();\n    columnRange.load('address');\n    return ctx.sync().then(function() {\n        console.log(columnRange.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.TableColumn.getTotalRowRange
  summary: >-
    <span data-ttu-id="479af-120">Obtient l’objet de plage associé à la ligne de total de la colonne.</span><span class="sxs-lookup"><span data-stu-id="479af-120">Gets the range object associated with the totals row of the column.</span></span>


    <span data-ttu-id="479af-121">\[[Du jeu d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="479af-121">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getTotalRowRange()
  fullName: getTotalRowRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getTotalRowRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"479af-122\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"479af-122\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var columns = ctx.workbook.tables.getItem(tableName).columns.getItemAt(0);\n    var totalRowRange = columns.getTotalRowRange();\n    totalRowRange.load('address');\n    return ctx.sync().then(function() {\n        console.log(totalRowRange.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.TableColumn.id
  summary: >-
    <span data-ttu-id="479af-p103">Renvoie une clé unique qui identifie la colonne du tableau. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="479af-p103">Returns a unique key that identifies the column within the table. Read-only.</span></span>


    <span data-ttu-id="479af-125">\[[Du jeu d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="479af-125">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: number;'
    return:
      type:
      - number
- uid: excel.Excel.TableColumn.index
  summary: >-
    <span data-ttu-id="479af-p104">Renvoie le numéro d’indice de la colonne dans la collection de colonnes du tableau. Avec indice zéro. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="479af-p104">Returns the index number of the column within the columns collection of the table. Zero-indexed. Read-only.</span></span>


    <span data-ttu-id="479af-129">\[[Du jeu d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="479af-129">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: index
  fullName: index
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly index: number;'
    return:
      type:
      - number
- uid: excel.Excel.TableColumn.load
  summary: <span data-ttu-id="479af-130">Files d’attente d’une commande pour charger les propriétés de l’objet spécifiées.</span><span class="sxs-lookup"><span data-stu-id="479af-130">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="479af-131">Vous devez appeler « context.sync() » avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="479af-131">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="479af-132">Outre cette signature, cette méthode présente les signatures suivantes :</span><span class="sxs-lookup"><span data-stu-id="479af-132">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="479af-133">`load(option?: string | string[]): Excel.TableColumn`-Où option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="479af-133">`load(option?: string | string[]): Excel.TableColumn` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="479af-134">`load(option?: { select?: string; expand?: string; }): Excel.TableColumn`-Où option.select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options.expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="479af-134">`load(option?: { select?: string; expand?: string; }): Excel.TableColumn` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="479af-135">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableColumn`-Uniquement disponible sur les types de la collection.</span><span class="sxs-lookup"><span data-stu-id="479af-135">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableColumn` - Only available on collection types.</span></span> <span data-ttu-id="479af-136">Il est similaire à la signature précédente.</span><span class="sxs-lookup"><span data-stu-id="479af-136">It is similar to the preceding signature.</span></span> <span data-ttu-id="479af-137">Option.Top Spécifie le nombre maximal d’éléments pouvant être inclus dans le résultat de la collection.</span><span class="sxs-lookup"><span data-stu-id="479af-137">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="479af-138">Option.Skip Spécifie le nombre d’éléments qui doivent être ignoré et non inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="479af-138">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="479af-139">Si option.top est spécifié, le jeu de résultats démarre après l’ignorer le nombre spécifié d’éléments.</span><span class="sxs-lookup"><span data-stu-id="479af-139">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.TableColumnLoadOptions): Excel.TableColumn;'
    return:
      type:
      - excel.Excel.TableColumn
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.TableColumnLoadOptions
- uid: excel.Excel.TableColumn.load_1
  summary: <span data-ttu-id="479af-140">Files d’attente d’une commande pour charger les propriétés de l’objet spécifiées.</span><span class="sxs-lookup"><span data-stu-id="479af-140">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="479af-141">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="479af-141">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.TableColumn;'
    return:
      type:
      - excel.Excel.TableColumn
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"479af-142\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"479af-142\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var column = ctx.workbook.tables.getItem(tableName).columns.getItem(0);\n    column.load('index');\n    return ctx.sync().then(function() {\n        console.log(column.index);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var tables = ctx.workbook.tables;\n    var newValues = [[\"New\"], [\"Values\"], [\"For\"], [\"New\"], [\"Column\"]];\n    var column = ctx.workbook.tables.getItem(tableName).columns.getItemAt(2);\n    column.values = newValues;\n    column.load('values');\n    return ctx.sync().then(function() {\n        console.log(column.values);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="479af-143">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="479af-143">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.TableColumn.load_2
  summary: <span data-ttu-id="479af-144">Files d’attente d’une commande pour charger les propriétés de l’objet spécifiées.</span><span class="sxs-lookup"><span data-stu-id="479af-144">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="479af-145">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="479af-145">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.TableColumn;'
    return:
      type:
      - excel.Excel.TableColumn
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="479af-146">Où propertyNamesAndPaths.select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et propertyNamesAndPaths.expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="479af-146">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.TableColumn.name
  summary: >-
    <span data-ttu-id="479af-147">Représente le nom de la colonne du tableau.</span><span class="sxs-lookup"><span data-stu-id="479af-147">Represents the name of the table column.</span></span>


    <span data-ttu-id="479af-148">\[[Du jeu d’API : ExcelApi 1.1 pour obtenir le nom ; 1.4 pour définir it.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span><span class="sxs-lookup"><span data-stu-id="479af-148">\[ [API set: ExcelApi 1.1 for getting the name; 1.4 for setting it.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span></span> <span data-ttu-id="479af-149">\]</span><span class="sxs-lookup"><span data-stu-id="479af-149"></span></span>
  name: name
  fullName: name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'name: string;'
    return:
      type:
      - string
- uid: excel.Excel.TableColumn.set
  summary: <span data-ttu-id="479af-150">Définir plusieurs propriétés d’un objet en même temps.</span><span class="sxs-lookup"><span data-stu-id="479af-150">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="479af-151">Vous pouvez passer un objet brut avec les propriétés appropriées, ou un autre objet API du même type.</span><span class="sxs-lookup"><span data-stu-id="479af-151">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="479af-152">Cette méthode a la signature supplémentaire suivante :</span><span class="sxs-lookup"><span data-stu-id="479af-152">This method has the following additional signature:</span></span>


    `set(properties: Excel.TableColumn): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.TableColumnUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="479af-153">Un objet JavaScript avec des propriétés qui sont structurés isomorphically pour les propriétés de l’objet sur lequel la méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="479af-153">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.TableColumnUpdateData
    - id: options
      description: <span data-ttu-id="479af-154">Fournit une option permettant de supprimer des erreurs si l’objet propriétés tente de définir des propriétés en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="479af-154">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.TableColumn.set_1
  summary: <span data-ttu-id="479af-155">Définit plusieurs propriétés de l’objet en même temps, basé sur un objet chargé existant.</span><span class="sxs-lookup"><span data-stu-id="479af-155">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.TableColumn): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.TableColumn
- uid: excel.Excel.TableColumn.toJSON
  summary: <span data-ttu-id="479af-156">Remplace le code JavaScript `toJSON()` méthode afin de fournir une sortie plus utile lorsqu’un objet API est passé à `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="479af-156">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="479af-157">(`JSON.stringify`<!-- -->, à son tour, appelle le `toJSON` méthode de l’objet qui lui est passé.) Tandis que l’objet Excel.TableColumn d’origine est un objet d’API, la `toJSON` méthode renvoie un objet JavaScript brut (typée en tant que `Excel.Interfaces.TableColumnData` <!-- -->) qui contient des copies superficielles de toutes les propriétés enfant chargé à partir de l’objet d’origine.</span><span class="sxs-lookup"><span data-stu-id="479af-157">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.TableColumn object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableColumnData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.TableColumnData;'
    return:
      type:
      - excel.Excel.Interfaces.TableColumnData
      description: ''
- uid: excel.Excel.TableColumn.values
  summary: >-
    <span data-ttu-id="479af-158">Représente les valeurs brutes de la plage spécifiée.</span><span class="sxs-lookup"><span data-stu-id="479af-158">Represents the raw values of the specified range.</span></span> <span data-ttu-id="479af-159">Les données renvoyées peuvent être de type chaîne, nombre ou une valeur boolean.</span><span class="sxs-lookup"><span data-stu-id="479af-159">The data returned could be of type string, number, or a boolean.</span></span> <span data-ttu-id="479af-160">Cellules qui contiennent une erreur renvoie la chaîne d’erreur.</span><span class="sxs-lookup"><span data-stu-id="479af-160">Cells that contain an error will return the error string.</span></span>


    <span data-ttu-id="479af-161">\[[Du jeu d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="479af-161">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: values
  fullName: values
  langs:
  - typeScript
  type: property
  syntax:
    content: 'values: any[][];'
    return:
      type:
      - any[][]
