### YamlMime:UniversalReference
ms.openlocfilehash: 7184aebfa96c070f261a8d5dc080e2b2b2d23453
ms.sourcegitcommit: e9cb2f2717e1cf062a2f6ffe6a382d7b9b934ba0
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 09/21/2018
ms.locfileid: "24063289"
items:
- uid: excel.Excel.ChartCollection
  summary: >-
    <span data-ttu-id="71e2a-101">Collection de tous les objets de graphique d’une feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="71e2a-101">A collection of all the chart objects on a worksheet.</span></span>


    <span data-ttu-id="71e2a-102">\[[Du jeu d’API : ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="71e2a-102">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.ChartCollection
  fullName: excel.Excel.ChartCollection
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.ChartCollection.add
  - excel.Excel.ChartCollection.count
  - excel.Excel.ChartCollection.getCount
  - excel.Excel.ChartCollection.getItem
  - excel.Excel.ChartCollection.getItemAt
  - excel.Excel.ChartCollection.getItemOrNullObject
  - excel.Excel.ChartCollection.items
  - excel.Excel.ChartCollection.load
  - excel.Excel.ChartCollection.onActivated
  - excel.Excel.ChartCollection.onAdded
  - excel.Excel.ChartCollection.onDeactivated
  - excel.Excel.ChartCollection.onDeleted
  - excel.Excel.ChartCollection.toJSON
- uid: excel.Excel.ChartCollection.add
  summary: >-
    <span data-ttu-id="71e2a-103">Crée un graphique.</span><span class="sxs-lookup"><span data-stu-id="71e2a-103">Creates a new chart.</span></span>


    <span data-ttu-id="71e2a-104">\[[Du jeu d’API : ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="71e2a-104">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: add(type, sourceData, seriesBy)
  fullName: excel.Excel.ChartCollection.add
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(type: Excel.ChartType, sourceData: Range, seriesBy?: Excel.ChartSeriesBy): Excel.Chart;'
    return:
      type:
      - excel.Excel.Chart
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"71e2a-105\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"71e2a-105\">Examples</span></span>\n\n```javascript\n// Add a chart of chartType \"ColumnClustered\" on worksheet \"Charts\" \n// with sourceData from Range \"A1:B4\" and seriresBy is set to be \"auto\".\nExcel.run(function (ctx) { \n    var rangeSelection = \"A1:B4\";\n    var range = ctx.workbook.worksheets.getItem(sheetName)\n        .getRange(rangeSelection);\n    var chart = ctx.workbook.worksheets.getItem(sheetName)\n        .charts.add(\"ColumnClustered\", range, \"auto\");    return ctx.sync().then(function() {\n            console.log(\"New Chart Added\");\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: type
      description: <span data-ttu-id="71e2a-106">Représente le type d’un graphique.</span><span class="sxs-lookup"><span data-stu-id="71e2a-106">Represents the type of a chart.</span></span> <span data-ttu-id="71e2a-107">Pour plus d’informations, voir Excel.ChartType.</span><span class="sxs-lookup"><span data-stu-id="71e2a-107">See Excel.ChartType for details.</span></span>
      type:
      - excel.Excel.ChartType
    - id: sourceData
      description: <span data-ttu-id="71e2a-108">Objet Range correspondant aux données source.</span><span class="sxs-lookup"><span data-stu-id="71e2a-108">The Range object corresponding to the source data.</span></span>
      type:
      - Range
    - id: seriesBy
      description: <span data-ttu-id="71e2a-109">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="71e2a-109">Optional.</span></span> <span data-ttu-id="71e2a-110">Spécifie que la manière dont les colonnes ou les lignes sont utilisées comme séries de données du graphique.</span><span class="sxs-lookup"><span data-stu-id="71e2a-110">Specifies the way columns or rows are used as data series on the chart.</span></span> <span data-ttu-id="71e2a-111">Pour plus d’informations, voir Excel.ChartSeriesBy.</span><span class="sxs-lookup"><span data-stu-id="71e2a-111">See Excel.ChartSeriesBy for details.</span></span>
      type:
      - excel.Excel.ChartSeriesBy
- uid: excel.Excel.ChartCollection.count
  summary: >-
    <span data-ttu-id="71e2a-p103">Renvoie le nombre de graphiques dans la feuille de calcul. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="71e2a-p103">Returns the number of charts in the worksheet. Read-only.</span></span>


    <span data-ttu-id="71e2a-114">\[[Du jeu d’API : ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="71e2a-114">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: count
  fullName: excel.Excel.ChartCollection.count
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly count: number;'
    return:
      type:
      - number
- uid: excel.Excel.ChartCollection.getCount
  summary: >-
    <span data-ttu-id="71e2a-115">Renvoie le nombre de graphiques dans la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="71e2a-115">Returns the number of charts in the worksheet.</span></span>


    <span data-ttu-id="71e2a-116">\[[Du jeu d’API : ExcelApi 1.4](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="71e2a-116">\[ [API set: ExcelApi 1.4](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getCount()
  fullName: excel.Excel.ChartCollection.getCount
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel.Excel.ChartCollection.getItem
  summary: >-
    <span data-ttu-id="71e2a-p104">Extrait un graphique à l’aide de son nom. Si plusieurs graphiques portent le même nom, c’est le premier d’entre eux qui est renvoyé.</span><span class="sxs-lookup"><span data-stu-id="71e2a-p104">Gets a chart using its name. If there are multiple charts with the same name, the first one will be returned.</span></span>


    <span data-ttu-id="71e2a-119">\[[Du jeu d’API : ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="71e2a-119">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItem(name)
  fullName: excel.Excel.ChartCollection.getItem
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(name: string): Excel.Chart;'
    return:
      type:
      - excel.Excel.Chart
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"71e2a-120\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"71e2a-120\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var chartname = 'Chart1';\n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(chartname);\n    return ctx.sync().then(function() {\n            console.log(chart.height);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nExcel.run(function (ctx) { \n    var chartId = 'SamplChartId';\n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(chartId);\n    return ctx.sync().then(function() {\n            console.log(chart.height);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nExcel.run(function (ctx) { \n    var lastPosition = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.count - 1;\n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItemAt(lastPosition);\n    return ctx.sync().then(function() {\n            console.log(chart.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: name
      description: <span data-ttu-id="71e2a-121">Nom du graphique à extraire.</span><span class="sxs-lookup"><span data-stu-id="71e2a-121">Name of the chart to be retrieved.</span></span>
      type:
      - string
- uid: excel.Excel.ChartCollection.getItemAt
  summary: >-
    <span data-ttu-id="71e2a-122">Extrait un graphique en fonction de sa position dans la collection.</span><span class="sxs-lookup"><span data-stu-id="71e2a-122">Gets a chart based on its position in the collection.</span></span>


    <span data-ttu-id="71e2a-123">\[[Du jeu d’API : ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="71e2a-123">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemAt(index)
  fullName: excel.Excel.ChartCollection.getItemAt
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): Excel.Chart;'
    return:
      type:
      - excel.Excel.Chart
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"71e2a-124\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"71e2a-124\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var lastPosition = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.count - 1;\n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItemAt(lastPosition);\n    return ctx.sync().then(function() {\n            console.log(chart.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="71e2a-p105">Valeur d’indice de l’objet à récupérer. Avec indice zéro.</span><span class="sxs-lookup"><span data-stu-id="71e2a-p105">Index value of the object to be retrieved. Zero-indexed.</span></span>
      type:
      - number
- uid: excel.Excel.ChartCollection.getItemOrNullObject
  summary: >-
    <span data-ttu-id="71e2a-127">Obtient un graphique à l’aide de son nom.</span><span class="sxs-lookup"><span data-stu-id="71e2a-127">Gets a chart using its name.</span></span> <span data-ttu-id="71e2a-128">S’il existe plusieurs graphiques portant le même nom, le premier élément est retourné.</span><span class="sxs-lookup"><span data-stu-id="71e2a-128">If there are multiple charts with the same name, the first one will be returned.</span></span> <span data-ttu-id="71e2a-129">Si le graphique n’existe pas, retourne un objet null.</span><span class="sxs-lookup"><span data-stu-id="71e2a-129">If the chart does not exist, will return a null object.</span></span>


    <span data-ttu-id="71e2a-130">\[[Du jeu d’API : ExcelApi 1.4](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="71e2a-130">\[ [API set: ExcelApi 1.4](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemOrNullObject(name)
  fullName: excel.Excel.ChartCollection.getItemOrNullObject
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemOrNullObject(name: string): Excel.Chart;'
    return:
      type:
      - excel.Excel.Chart
      description: ''
    parameters:
    - id: name
      description: <span data-ttu-id="71e2a-131">Nom du graphique à extraire.</span><span class="sxs-lookup"><span data-stu-id="71e2a-131">Name of the chart to be retrieved.</span></span>
      type:
      - string
- uid: excel.Excel.ChartCollection.items
  summary: <span data-ttu-id="71e2a-132">Obtient l’enfant chargé éléments dans cette collection.</span><span class="sxs-lookup"><span data-stu-id="71e2a-132">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: excel.Excel.ChartCollection.items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.Chart[];'
    return:
      type:
      - Excel.Chart[]
- uid: excel.Excel.ChartCollection.load
  summary: <span data-ttu-id="71e2a-133">Files d’attente d’une commande pour charger les propriétés de l’objet spécifiées.</span><span class="sxs-lookup"><span data-stu-id="71e2a-133">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="71e2a-134">Vous devez appeler « context.sync() » avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="71e2a-134">You must call "context.sync()" before reading the properties.</span></span>
  remarks: "<span data-ttu-id=\"71e2a-135\">Outre cette signature, cette méthode présente les signatures suivantes :</span><span class=\"sxs-lookup\"><span data-stu-id=\"71e2a-135\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"71e2a-136\">`load(option?: { select?: string; expand?: string; }): Excel.ChartCollection`-Où option.select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options.expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class=\"sxs-lookup\"><span data-stu-id=\"71e2a-136\">`load(option?: { select?: string; expand?: string; }): Excel.ChartCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"71e2a-137\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartCollection`-Uniquement disponible sur les types de la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"71e2a-137\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartCollection` - Only available on collection types.</span></span> <span data-ttu-id=\"71e2a-138\">Il est similaire à la signature précédente.</span><span class=\"sxs-lookup\"><span data-stu-id=\"71e2a-138\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"71e2a-139\">Option.Top Spécifie le nombre maximal d’éléments pouvant être inclus dans le résultat de la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"71e2a-139\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"71e2a-140\">Option.Skip Spécifie le nombre d’éléments qui doivent être ignoré et non inclus dans le résultat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"71e2a-140\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"71e2a-141\">Si option.top est spécifié, le jeu de résultats démarre après l’ignorer le nombre spécifié d’éléments.</span><span class=\"sxs-lookup\"><span data-stu-id=\"71e2a-141\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"71e2a-142\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"71e2a-142\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var charts = ctx.workbook.worksheets.getItem(\"Sheet1\").charts;\n    charts.load('items');\n    return ctx.sync().then(function() {\n        for (var i = 0; i < charts.items.length; i++)\n        {\n            console.log(charts.items[i].name);\n        }\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// Get the number of charts\nExcel.run(function (ctx) { \n    var charts = ctx.workbook.worksheets.getItem(\"Sheet1\").charts;\n    charts.load('count');\n    return ctx.sync().then(function() {\n        console.log(\"charts: Count= \" + charts.count);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  name: load(option)
  fullName: excel.Excel.ChartCollection.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.ChartCollection;'
    return:
      type:
      - excel.Excel.ChartCollection
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="71e2a-143">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="71e2a-143">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.ChartCollection.onActivated
  summary: >-
    <span data-ttu-id="71e2a-144">Se produit lorsqu’un graphique est activé.</span><span class="sxs-lookup"><span data-stu-id="71e2a-144">Occurs when a chart is activated.</span></span>


    <span data-ttu-id="71e2a-145">\[[Du jeu d’API : ExcelApi 1,8](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="71e2a-145">\[ [API set: ExcelApi 1.8](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onActivated
  fullName: excel.Excel.ChartCollection.onActivated
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onActivated: OfficeExtension.EventHandlers<Excel.ChartActivatedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.ChartActivatedEventArgs>
- uid: excel.Excel.ChartCollection.onAdded
  summary: >-
    <span data-ttu-id="71e2a-146">Se produit lorsqu’un nouveau graphique est ajouté à la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="71e2a-146">Occurs when a new chart is added to the worksheet.</span></span>


    <span data-ttu-id="71e2a-147">\[[Du jeu d’API : ExcelApi 1,8](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="71e2a-147">\[ [API set: ExcelApi 1.8](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onAdded
  fullName: excel.Excel.ChartCollection.onAdded
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onAdded: OfficeExtension.EventHandlers<Excel.ChartAddedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.ChartAddedEventArgs>
- uid: excel.Excel.ChartCollection.onDeactivated
  summary: >-
    <span data-ttu-id="71e2a-148">Se produit lorsqu’un graphique est désactivé.</span><span class="sxs-lookup"><span data-stu-id="71e2a-148">Occurs when a chart is deactivated.</span></span>


    <span data-ttu-id="71e2a-149">\[[Du jeu d’API : ExcelApi 1,8](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="71e2a-149">\[ [API set: ExcelApi 1.8](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onDeactivated
  fullName: excel.Excel.ChartCollection.onDeactivated
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onDeactivated: OfficeExtension.EventHandlers<Excel.ChartDeactivatedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.ChartDeactivatedEventArgs>
- uid: excel.Excel.ChartCollection.onDeleted
  summary: >-
    <span data-ttu-id="71e2a-150">Se produit lorsqu’un graphique est supprimé.</span><span class="sxs-lookup"><span data-stu-id="71e2a-150">Occurs when a chart is deleted.</span></span>


    <span data-ttu-id="71e2a-151">\[[Du jeu d’API : ExcelApi 1,8](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="71e2a-151">\[ [API set: ExcelApi 1.8](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onDeleted
  fullName: excel.Excel.ChartCollection.onDeleted
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onDeleted: OfficeExtension.EventHandlers<Excel.ChartDeletedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.ChartDeletedEventArgs>
- uid: excel.Excel.ChartCollection.toJSON
  name: toJSON()
  fullName: excel.Excel.ChartCollection.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ChartCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.ChartCollectionData
      description: ''
