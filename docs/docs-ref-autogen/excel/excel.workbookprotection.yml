### YamlMime:UniversalReference
ms.openlocfilehash: 7b5084cae27dc9ca0ae174a7e2e2c615b6ca65a2
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 02/13/2019
ms.locfileid: "29979203"
items:
- uid: excel.Excel.WorkbookProtection
  summary: >-
    <span data-ttu-id="958b4-101">Représente la protection d’un objet workbook.</span><span class="sxs-lookup"><span data-stu-id="958b4-101">Represents the protection of a workbook object.</span></span>


    <span data-ttu-id="958b4-102">\[[Du jeu d’API : ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="958b4-102">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.WorkbookProtection
  fullName: Excel.WorkbookProtection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.WorkbookProtection.context
  - excel.Excel.WorkbookProtection.load
  - excel.Excel.WorkbookProtection.load_1
  - excel.Excel.WorkbookProtection.load_2
  - excel.Excel.WorkbookProtection.protect
  - excel.Excel.WorkbookProtection.protected
  - excel.Excel.WorkbookProtection.toJSON
  - excel.Excel.WorkbookProtection.unprotect
- uid: excel.Excel.WorkbookProtection.context
  summary: <span data-ttu-id="958b4-103">Contexte de la requête associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="958b4-103">The request context associated with the object.</span></span> <span data-ttu-id="958b4-104">Il connecte processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="958b4-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.WorkbookProtection.load
  summary: <span data-ttu-id="958b4-105">Files d’attente d’une commande pour charger les propriétés de l’objet spécifiées.</span><span class="sxs-lookup"><span data-stu-id="958b4-105">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="958b4-106">Vous devez appeler « context.sync() » avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="958b4-106">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="958b4-107">Outre cette signature, cette méthode présente les signatures suivantes :</span><span class="sxs-lookup"><span data-stu-id="958b4-107">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="958b4-108">`load(option?: string | string[]): Excel.WorkbookProtection`-Où option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="958b4-108">`load(option?: string | string[]): Excel.WorkbookProtection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="958b4-109">`load(option?: { select?: string; expand?: string; }): Excel.WorkbookProtection`-Où option.select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options.expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="958b4-109">`load(option?: { select?: string; expand?: string; }): Excel.WorkbookProtection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="958b4-110">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.WorkbookProtection`-Uniquement disponible sur les types de la collection.</span><span class="sxs-lookup"><span data-stu-id="958b4-110">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.WorkbookProtection` - Only available on collection types.</span></span> <span data-ttu-id="958b4-111">Il est similaire à la signature précédente.</span><span class="sxs-lookup"><span data-stu-id="958b4-111">It is similar to the preceding signature.</span></span> <span data-ttu-id="958b4-112">Option.Top Spécifie le nombre maximal d’éléments pouvant être inclus dans le résultat de la collection.</span><span class="sxs-lookup"><span data-stu-id="958b4-112">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="958b4-113">Option.Skip Spécifie le nombre d’éléments qui doivent être ignoré et non inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="958b4-113">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="958b4-114">Si option.top est spécifié, le jeu de résultats démarre après l’ignorer le nombre spécifié d’éléments.</span><span class="sxs-lookup"><span data-stu-id="958b4-114">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.WorkbookProtectionLoadOptions): Excel.WorkbookProtection;'
    return:
      type:
      - excel.Excel.WorkbookProtection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.WorkbookProtectionLoadOptions
- uid: excel.Excel.WorkbookProtection.load_1
  summary: <span data-ttu-id="958b4-115">Files d’attente d’une commande pour charger les propriétés de l’objet spécifiées.</span><span class="sxs-lookup"><span data-stu-id="958b4-115">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="958b4-116">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="958b4-116">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.WorkbookProtection;'
    return:
      type:
      - excel.Excel.WorkbookProtection
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="958b4-117">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="958b4-117">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.WorkbookProtection.load_2
  summary: <span data-ttu-id="958b4-118">Files d’attente d’une commande pour charger les propriétés de l’objet spécifiées.</span><span class="sxs-lookup"><span data-stu-id="958b4-118">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="958b4-119">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="958b4-119">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.WorkbookProtection;'
    return:
      type:
      - excel.Excel.WorkbookProtection
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="958b4-120">Où propertyNamesAndPaths.select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et propertyNamesAndPaths.expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="958b4-120">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.WorkbookProtection.protect
  summary: >-
    <span data-ttu-id="958b4-121">Protège un classeur.</span><span class="sxs-lookup"><span data-stu-id="958b4-121">Protects a workbook.</span></span> <span data-ttu-id="958b4-122">Échoue si le classeur est protégé.</span><span class="sxs-lookup"><span data-stu-id="958b4-122">Fails if the workbook has been protected.</span></span>


    <span data-ttu-id="958b4-123">\[[Du jeu d’API : ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="958b4-123">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: protect(password)
  fullName: protect(password)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'protect(password?: string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"958b4-124\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"958b4-124\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    let workbook = context.workbook;\n    workbook.load(\"protection/protected\");\n\n    await context.sync();\n\n    if (!workbook.protection.protected) {\n        workbook.protection.protect();\n    }\n});\n```\n```typescript\nlet password = await passwordHandler();\npasswordHelper(password);\nawait Excel.run(async (context) => {\n    let workbook = context.workbook;\n    workbook.load(\"protection/protected\");\n\n    await context.sync();\n\n    if (!workbook.protection.protected) {\n        workbook.protection.protect(password);\n    }\n});\n```"
    parameters:
    - id: password
      description: <span data-ttu-id="958b4-125">mot de passe de protection de classeur.</span><span class="sxs-lookup"><span data-stu-id="958b4-125">workbook protection password.</span></span>
      type:
      - string
- uid: excel.Excel.WorkbookProtection.protected
  summary: >-
    <span data-ttu-id="958b4-126">Indique si le classeur est protégé.</span><span class="sxs-lookup"><span data-stu-id="958b4-126">Indicates if the workbook is protected.</span></span> <span data-ttu-id="958b4-127">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="958b4-127">Read-Only.</span></span>


    <span data-ttu-id="958b4-128">\[[Du jeu d’API : ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="958b4-128">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: protected
  fullName: protected
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly protected: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.WorkbookProtection.toJSON
  summary: <span data-ttu-id="958b4-129">Remplace le code JavaScript `toJSON()` méthode afin de fournir une sortie plus utile lorsqu’un objet API est passé à `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="958b4-129">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="958b4-130">(`JSON.stringify`<!-- -->, à son tour, appelle le `toJSON` méthode de l’objet qui lui est passé.) Tandis que l’objet Excel.WorkbookProtection d’origine est un objet d’API, la `toJSON` méthode renvoie un objet JavaScript brut (typée en tant que `Excel.Interfaces.WorkbookProtectionData` <!-- -->) qui contient des copies superficielles de toutes les propriétés enfant chargé à partir de l’objet d’origine.</span><span class="sxs-lookup"><span data-stu-id="958b4-130">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.WorkbookProtection object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.WorkbookProtectionData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.WorkbookProtectionData;'
    return:
      type:
      - excel.Excel.Interfaces.WorkbookProtectionData
      description: ''
- uid: excel.Excel.WorkbookProtection.unprotect
  summary: >-
    <span data-ttu-id="958b4-131">Annule la protection un classeur.</span><span class="sxs-lookup"><span data-stu-id="958b4-131">Unprotects a workbook.</span></span>


    <span data-ttu-id="958b4-132">\[[Du jeu d’API : ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="958b4-132">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: unprotect(password)
  fullName: unprotect(password)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'unprotect(password?: string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"958b4-133\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"958b4-133\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    let workbook = context.workbook;\n    workbook.protection.unprotect();\n});\n```\n```typescript\nlet password = await passwordHandler();\npasswordHelper(password);\nawait Excel.run(async (context) => {\n    let workbook = context.workbook;\n    workbook.protection.unprotect(password);\n});\n```"
    parameters:
    - id: password
      description: <span data-ttu-id="958b4-134">mot de passe de protection de classeur.</span><span class="sxs-lookup"><span data-stu-id="958b4-134">workbook protection password.</span></span>
      type:
      - string
