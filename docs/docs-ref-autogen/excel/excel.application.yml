### YamlMime:UniversalReference
ms.openlocfilehash: 321128a870e6f1c2a59be94d9572472fcf164a03
ms.sourcegitcommit: 016e17422cf62dc9f1de1809666e9244e41cc1a9
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 11/09/2018
ms.locfileid: "26229157"
items:
- uid: excel.Excel.Application
  summary: >-
    <span data-ttu-id="be5eb-101">Représente l’application Excel qui gère le classeur.</span><span class="sxs-lookup"><span data-stu-id="be5eb-101">Represents the Excel application that manages the workbook.</span></span>


    <span data-ttu-id="be5eb-102">\[[Du jeu d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be5eb-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.Application
  fullName: Excel.Application
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.Application.calculate
  - excel.Excel.Application.calculationMode
  - excel.Excel.Application.load
  - excel.Excel.Application.suspendApiCalculationUntilNextSync
  - excel.Excel.Application.toJSON
- uid: excel.Excel.Application.calculate
  summary: >-
    <span data-ttu-id="be5eb-103">Recalcule tous les classeurs actuellement ouverts dans Excel.</span><span class="sxs-lookup"><span data-stu-id="be5eb-103">Recalculate all currently opened workbooks in Excel.</span></span>


    <span data-ttu-id="be5eb-104">\[[Du jeu d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be5eb-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: calculate(calculationType)
  fullName: calculate
  langs:
  - typeScript
  type: method
  syntax:
    content: 'calculate(calculationType: Excel.CalculationType): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"be5eb-105\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"be5eb-105\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) {\n    ctx.workbook.application.calculate('Full');\n    return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: calculationType
      description: <span data-ttu-id="be5eb-106">Spécifie le type de calcul à utiliser.</span><span class="sxs-lookup"><span data-stu-id="be5eb-106">Specifies the calculation type to use.</span></span> <span data-ttu-id="be5eb-107">Pour plus d’informations, voir Excel.CalculationType.</span><span class="sxs-lookup"><span data-stu-id="be5eb-107">See Excel.CalculationType for details.</span></span>
      type:
      - excel.Excel.CalculationType
- uid: excel.Excel.Application.calculationMode
  summary: >-
    <span data-ttu-id="be5eb-108">Renvoie le mode de calcul utilisé dans le classeur, tel que défini par l’une des constantes dans Excel.CalculationMode.</span><span class="sxs-lookup"><span data-stu-id="be5eb-108">Returns the calculation mode used in the workbook, as defined by the constants in Excel.CalculationMode.</span></span> <span data-ttu-id="be5eb-109">Les valeurs possibles sont : `Automatic` <!-- -->, où Excel contrôle le recalcul ; `AutomaticExceptTables` <!-- -->, où Excel contrôle le recalcul, mais ignore des modifications apportées aux tableaux ; `Manual` <!-- -->, où le calcul est effectué lors de la demande de l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="be5eb-109">Possible values are: `Automatic`<!-- -->, where Excel controls recalculation; `AutomaticExceptTables`<!-- -->, where Excel controls recalculation but ignores changes in tables; `Manual`<!-- -->, where calculation is done when the user requests it.</span></span>


    <span data-ttu-id="be5eb-110">\[[Du jeu d’API : ExcelApi 1.1 pour get, 1,8 pour jeu](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be5eb-110">\[ [API set: ExcelApi 1.1 for get, 1.8 for set](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: calculationMode
  fullName: calculationMode
  langs:
  - typeScript
  type: property
  syntax:
    content: 'calculationMode: Excel.CalculationMode | "Automatic" | "AutomaticExceptTables" | "Manual";'
    return:
      type:
      - Excel.CalculationMode | "Automatic" | "AutomaticExceptTables" | "Manual"
- uid: excel.Excel.Application.load
  summary: <span data-ttu-id="be5eb-111">Files d’attente d’une commande pour charger les propriétés de l’objet spécifiées.</span><span class="sxs-lookup"><span data-stu-id="be5eb-111">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="be5eb-112">Vous devez appeler « context.sync() » avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="be5eb-112">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="be5eb-113">Outre cette signature, cette méthode présente les signatures suivantes :</span><span class="sxs-lookup"><span data-stu-id="be5eb-113">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="be5eb-114">`load(option?: { select?: string; expand?: string; }): Excel.Application`-Où option.select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options.expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="be5eb-114">`load(option?: { select?: string; expand?: string; }): Excel.Application` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="be5eb-115">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Application`-Uniquement disponible sur les types de la collection.</span><span class="sxs-lookup"><span data-stu-id="be5eb-115">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Application` - Only available on collection types.</span></span> <span data-ttu-id="be5eb-116">Il est similaire à la signature précédente.</span><span class="sxs-lookup"><span data-stu-id="be5eb-116">It is similar to the preceding signature.</span></span> <span data-ttu-id="be5eb-117">Option.Top Spécifie le nombre maximal d’éléments pouvant être inclus dans le résultat de la collection.</span><span class="sxs-lookup"><span data-stu-id="be5eb-117">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="be5eb-118">Option.Skip Spécifie le nombre d’éléments qui doivent être ignoré et non inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="be5eb-118">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="be5eb-119">Si option.top est spécifié, le jeu de résultats démarre après l’ignorer le nombre spécifié d’éléments.</span><span class="sxs-lookup"><span data-stu-id="be5eb-119">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>

    #### <a name="examples"></a><span data-ttu-id="be5eb-120">Exemples</span><span class="sxs-lookup"><span data-stu-id="be5eb-120">Examples</span></span>


    ```javascript

    Excel.run(function (ctx) {
        var application = ctx.workbook.application;
        application.load('calculationMode');
        return ctx.sync().then(function() {
            console.log(application.calculationMode);
        });
    }).catch(function(error) {
        console.log("Error: " + error);
        if (error instanceof OfficeExtension.Error) {
            console.log("Debug info: " + JSON.stringify(error.debugInfo));
        }
    });

    ```
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.Application;'
    return:
      type:
      - excel.Excel.Application
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="be5eb-121">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="be5eb-121">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.Application.suspendApiCalculationUntilNextSync
  summary: >-
    <span data-ttu-id="be5eb-p105">Interrompt le calcul jusqu'à ce que la prochaine méthode « context.sync() » soit appelée. Une fois cette option définie, il incombe au développeur de recalculer le classeur afin de garantir que toutes les dépendances sont propagées.</span><span class="sxs-lookup"><span data-stu-id="be5eb-p105">Suspends calculation until the next "context.sync()" is called. Once set, it is the developer's responsibility to re-calc the workbook, to ensure that any dependencies are propagated.</span></span>


    <span data-ttu-id="be5eb-124">\[[Du jeu d’API : ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be5eb-124">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: suspendApiCalculationUntilNextSync()
  fullName: suspendApiCalculationUntilNextSync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'suspendApiCalculationUntilNextSync(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.Application.toJSON
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ApplicationData;'
    return:
      type:
      - excel.Excel.Interfaces.ApplicationData
      description: ''
