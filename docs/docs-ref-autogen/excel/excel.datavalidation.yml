### YamlMime:UniversalReference
ms.openlocfilehash: 3f33e2da9e2254df50cc3801dd7fcc86056d7d22
ms.sourcegitcommit: 9034a7d2fb2934046178915d4305b0f0cf8f7934
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 10/26/2018
ms.locfileid: "25798175"
items:
- uid: excel.Excel.DataValidation
  summary: >-
    Représente la validation de données appliquée à la plage actuelle.


    \[[Du jeu d’API : ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: Excel.DataValidation
  fullName: excel.Excel.DataValidation
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.DataValidation.clear
  - excel.Excel.DataValidation.errorAlert
  - excel.Excel.DataValidation.ignoreBlanks
  - excel.Excel.DataValidation.load
  - excel.Excel.DataValidation.prompt
  - excel.Excel.DataValidation.rule
  - excel.Excel.DataValidation.toJSON
  - excel.Excel.DataValidation.type
  - excel.Excel.DataValidation.valid
- uid: excel.Excel.DataValidation.clear
  summary: >-
    Efface la validation des données à partir de la plage actuelle.


    \[[Du jeu d’API : ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: clear()
  fullName: excel.Excel.DataValidation.clear
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clear(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.DataValidation.errorAlert
  summary: >-
    Message d’erreur lorsque l’utilisateur entre des données non valides.


    \[[Du jeu d’API : ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: errorAlert
  fullName: excel.Excel.DataValidation.errorAlert
  langs:
  - typeScript
  type: property
  syntax:
    content: 'errorAlert: Excel.DataValidationErrorAlert;'
    return:
      type:
      - excel.Excel.DataValidationErrorAlert
      description: "\n#### <a name=\"examples\"></a>Exemples\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Decision\");\n    const commentsRange = \n        sheet.tables.getItem(\"NameOptionsTable\").columns.getItem(\"Comments\").getDataBodyRange();\n\n    // When you are developing, it is a good practice to\n    // clear the dataValidation object with each run of your code.\n    commentsRange.dataValidation.clear();   \n\n    // If the value of A2 is contained in the value of C2, then \n    // SEARCH(A2,C2) returns the number where it begins. Otherwise,\n    // it does not return a number.\n    let redundantStringRule = {\n        custom: {\n            formula: \"=NOT(ISNUMBER(SEARCH(A2,C2)))\"\n        }\n    };\n    commentsRange.dataValidation.rule = redundantStringRule;\n    commentsRange.dataValidation.errorAlert = {\n        message: \"It is redundant to include the baby name in the comment.\",\n        showAlert: true,\n        style: \"Information\",\n        title: \"Baby Name in Comment\"\n    };\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.DataValidation.ignoreBlanks
  summary: >-
    Ignorer les espaces : validation des données n’est effectuée sur les cellules vides, la valeur par défaut est true.


    \[[Du jeu d’API : ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: ignoreBlanks
  fullName: excel.Excel.DataValidation.ignoreBlanks
  langs:
  - typeScript
  type: property
  syntax:
    content: 'ignoreBlanks: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.DataValidation.load
  summary: Files d’attente d’une commande pour charger les propriétés de l’objet spécifiées. Vous devez appeler « context.sync() » avant de lire les propriétés.
  remarks: >-
    Outre cette signature, cette méthode présente les signatures suivantes :


    `load(option?: { select?: string; expand?: string; }): Excel.DataValidation`-Où option.select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options.expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.DataValidation`-Uniquement disponible sur les types de la collection. Il est similaire à la signature précédente. Option.Top Spécifie le nombre maximal d’éléments pouvant être inclus dans le résultat de la collection. Option.Skip Spécifie le nombre d’éléments qui doivent être ignoré et non inclus dans le résultat. Si option.top est spécifié, le jeu de résultats démarre après l’ignorer le nombre spécifié d’éléments.
  name: load(option)
  fullName: excel.Excel.DataValidation.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.DataValidation;'
    return:
      type:
      - excel.Excel.DataValidation
      description: ''
    parameters:
    - id: option
      description: Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.
      type:
      - string | string[]
- uid: excel.Excel.DataValidation.prompt
  summary: >-
    Invite lorsque l’utilisateur sélectionne une cellule.


    \[[Du jeu d’API : ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: prompt
  fullName: excel.Excel.DataValidation.prompt
  langs:
  - typeScript
  type: property
  syntax:
    content: 'prompt: Excel.DataValidationPrompt;'
    return:
      type:
      - excel.Excel.DataValidationPrompt
- uid: excel.Excel.DataValidation.rule
  summary: >-
    Règle de Validation de données qui contient les différents types de critères de validation de données.


    \[[Du jeu d’API : ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: rule
  fullName: excel.Excel.DataValidation.rule
  langs:
  - typeScript
  type: property
  syntax:
    content: 'rule: Excel.DataValidationRule;'
    return:
      type:
      - excel.Excel.DataValidationRule
- uid: excel.Excel.DataValidation.toJSON
  name: toJSON()
  fullName: excel.Excel.DataValidation.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.DataValidationData;'
    return:
      type:
      - excel.Excel.Interfaces.DataValidationData
      description: ''
- uid: excel.Excel.DataValidation.type
  summary: >-
    Le type de la validation des données, voir Excel.DataValidationType pour plus d’informations.


    \[[Du jeu d’API : ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: type
  fullName: excel.Excel.DataValidation.type
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly type: Excel.DataValidationType | "None" | "WholeNumber" | "Decimal" | "List" | "Date" | "Time" | "TextLength" | "Custom" | "Inconsistent" | "MixedCriteria";'
    return:
      type:
      - Excel.DataValidationType | "None" | "WholeNumber" | "Decimal" | "List" | "Date" | "Time" | "TextLength" | "Custom" | "Inconsistent" | "MixedCriteria"
- uid: excel.Excel.DataValidation.valid
  summary: >-
    Représente si toutes les valeurs de cellule sont valides conformément aux règles de validation de données. Renvoie la valeur true si toutes les valeurs de cellule sont valides, ou false si toutes les valeurs de cellule ne sont pas valides. Renvoie la valeur null s’il y a deux valeurs de cellule valides et non valides dans la plage.


    \[[Du jeu d’API : ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: valid
  fullName: excel.Excel.DataValidation.valid
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly valid: boolean;'
    return:
      type:
      - boolean
