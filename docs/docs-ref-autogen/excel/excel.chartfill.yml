### YamlMime:UniversalReference
ms.openlocfilehash: 3d69325801545906c9b7935094684f4902bd6999
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 02/20/2019
ms.locfileid: "30096478"
items:
- uid: excel.Excel.ChartFill
  summary: >-
    <span data-ttu-id="ce2a1-101">Représente le format de remplissage d’un élément de graphique.</span><span class="sxs-lookup"><span data-stu-id="ce2a1-101">Represents the fill formatting for a chart element.</span></span>


    <span data-ttu-id="ce2a1-102">\[[Ensemble d'API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ce2a1-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.ChartFill
  fullName: Excel.ChartFill
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.ChartFill.clear
  - excel.Excel.ChartFill.context
  - excel.Excel.ChartFill.load
  - excel.Excel.ChartFill.setSolidColor
  - excel.Excel.ChartFill.toJSON
- uid: excel.Excel.ChartFill.clear
  summary: >-
    <span data-ttu-id="ce2a1-103">Supprime la couleur de remplissage d’un élément de graphique.</span><span class="sxs-lookup"><span data-stu-id="ce2a1-103">Clear the fill color of a chart element.</span></span>


    <span data-ttu-id="ce2a1-104">\[[Ensemble d'API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ce2a1-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: clear()
  fullName: clear()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clear(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"ce2a1-105\">範例</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce2a1-105\">Examples</span></span>\n\n```javascript\n// Clear the line format of the major Gridlines on value axis of the Chart named \"Chart1\"\nExcel.run(function (ctx) { \n    var gridlines = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\").axes.valueAxis.majorGridlines;\n    gridlines.format.line.clear();\n    return ctx.sync().then(function() {\n            console.log(\"Chart Major Gridlines Format Cleared\");\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.ChartFill.context
  summary: <span data-ttu-id="ce2a1-106">Contexte de demande associé à l'objet.</span><span class="sxs-lookup"><span data-stu-id="ce2a1-106">The request context associated with the object.</span></span> <span data-ttu-id="ce2a1-107">Cette opération connecte le processus du complément au processus de l'application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="ce2a1-107">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.ChartFill.load
  summary: <span data-ttu-id="ce2a1-108">Met en file d'attente une commande pour charger les propriétés spécifiées de l'objet.</span><span class="sxs-lookup"><span data-stu-id="ce2a1-108">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="ce2a1-109">Vous devez appeler «Context. Sync ()» avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="ce2a1-109">You must call "context.sync()" before reading the properties.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[] | OfficeExtension.LoadOption): Excel.ChartFill;'
    return:
      type:
      - excel.Excel.ChartFill
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - string | string[] | OfficeExtension.LoadOption
- uid: excel.Excel.ChartFill.setSolidColor
  summary: >-
    <span data-ttu-id="ce2a1-110">Définit le format de remplissage d’un élément de graphique sur une couleur unie.</span><span class="sxs-lookup"><span data-stu-id="ce2a1-110">Sets the fill formatting of a chart element to a uniform color.</span></span>


    <span data-ttu-id="ce2a1-111">\[[Ensemble d'API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ce2a1-111">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: setSolidColor(color)
  fullName: setSolidColor(color)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setSolidColor(color: string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"ce2a1-112\">範例</span><span class=\"sxs-lookup\"><span data-stu-id=\"ce2a1-112\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n\n    chart.format.fill.setSolidColor(\"#FF0000\");\n\n    return ctx.sync().then(function() {\n            console.log(\"Chart1 Background Color Changed.\");\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    let pointsCollection = sheet.charts.getItemAt(0).series.getItemAt(0).points;\n    let point = pointsCollection.getItemAt(2);\n\n    // Set color for chart point.\n    point.format.fill.setSolidColor('red');\n\n    await context.sync();        \n});\n```"
    parameters:
    - id: color
      description: <span data-ttu-id="ce2a1-113">Code couleur HTML qui représente la couleur de la ligne de bordure, sous \#la forme RRGGBB (par exemple, «FFA500») ou sous forme de couleur HTML nommée (par exemple, «orange»).</span><span class="sxs-lookup"><span data-stu-id="ce2a1-113">HTML color code representing the color of the border line, of the form \#RRGGBB (e.g. "FFA500") or as a named HTML color (e.g. "orange").</span></span>
      type:
      - string
- uid: excel.Excel.ChartFill.toJSON
  summary: <span data-ttu-id="ce2a1-114">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu'un objet d'API est transmis à. `JSON.stringify()` <!-- --></span><span class="sxs-lookup"><span data-stu-id="ce2a1-114">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="ce2a1-115">(`JSON.stringify`<!-- -->, à son tour, appelle `toJSON` la méthode de l'objet qui lui est passé.) Tandis que l'objet Excel. ChartFill d'origine est un objet `toJSON` d'API, la méthode renvoie un objet JavaScript `Excel.Interfaces.ChartFillData` <!-- -->simple (tapé sous la forme) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l'objet d'origine.</span><span class="sxs-lookup"><span data-stu-id="ce2a1-115">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ChartFill object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ChartFillData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: >-
      toJSON(): {
                  [key: string]: string;
              };
    return:
      type:
      - >-
        {
                    [key: string]: string;
                }
      description: ''
