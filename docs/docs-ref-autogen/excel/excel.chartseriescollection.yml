### YamlMime:UniversalReference
items:
  - uid: excel.Excel.ChartSeriesCollection
    summary: |-
      <span data-ttu-id="89e80-101">Représente une collection de séries de graphique.</span><span class="sxs-lookup"><span data-stu-id="89e80-101">Represents a collection of chart series.</span></span>

      <span data-ttu-id="89e80-102">\[[Ensemble d'API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="89e80-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.ChartSeriesCollection
    fullName: Excel.ChartSeriesCollection
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.ChartSeriesCollection.add
      - excel.Excel.ChartSeriesCollection.context
      - excel.Excel.ChartSeriesCollection.count
      - excel.Excel.ChartSeriesCollection.getCount
      - excel.Excel.ChartSeriesCollection.getItemAt
      - excel.Excel.ChartSeriesCollection.items
      - excel.Excel.ChartSeriesCollection.load
      - excel.Excel.ChartSeriesCollection.load_1
      - excel.Excel.ChartSeriesCollection.load_2
      - excel.Excel.ChartSeriesCollection.toJSON
  - uid: excel.Excel.ChartSeriesCollection.add
    summary: |-
      <span data-ttu-id="89e80-103">Ajouter une nouvelle série à la collection.</span><span class="sxs-lookup"><span data-stu-id="89e80-103">Add a new series to the collection.</span></span> <span data-ttu-id="89e80-104">La nouvelle série ajoutée n'est pas visible jusqu'à ce que les valeurs de l'axe des ordonnées/valeurs de l'axe x/tailles des bulles lui soient attribuées (en fonction du type de graphique).</span><span class="sxs-lookup"><span data-stu-id="89e80-104">The new added series is not visible until set values/x axis values/bubble sizes for it (depending on chart type).</span></span>

      <span data-ttu-id="89e80-105">\[[Ensemble d'API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="89e80-105">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'add(name, index)'
    fullName: 'add(name, index)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(name?: string, index?: number): Excel.ChartSeries;'
      return:
        type:
          - excel.Excel.ChartSeries
        description: ''
      parameters:
        - id: name
          description: <span data-ttu-id="89e80-106">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="89e80-106">Optional.</span></span> <span data-ttu-id="89e80-107">Nom de la série.</span><span class="sxs-lookup"><span data-stu-id="89e80-107">Name of the series.</span></span>
          type:
            - string
        - id: index
          description: <span data-ttu-id="89e80-108">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="89e80-108">Optional.</span></span> <span data-ttu-id="89e80-109">Valeur d'index de la série à ajouter.</span><span class="sxs-lookup"><span data-stu-id="89e80-109">Index value of the series to be added.</span></span> <span data-ttu-id="89e80-110">Avec indice zéro.</span><span class="sxs-lookup"><span data-stu-id="89e80-110">Zero-indexed.</span></span>
          type:
            - number
  - uid: excel.Excel.ChartSeriesCollection.context
    summary: <span data-ttu-id="89e80-111">Contexte de demande associé à l'objet.</span><span class="sxs-lookup"><span data-stu-id="89e80-111">The request context associated with the object.</span></span> <span data-ttu-id="89e80-112">Cette opération connecte le processus du complément au processus de l'application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="89e80-112">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.ChartSeriesCollection.count
    summary: |-
      <span data-ttu-id="89e80-113">Renvoie le nombre de séries de la collection.</span><span class="sxs-lookup"><span data-stu-id="89e80-113">Returns the number of series in the collection.</span></span> <span data-ttu-id="89e80-114">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="89e80-114">Read-only.</span></span>

      <span data-ttu-id="89e80-115">\[[Ensemble d'API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="89e80-115">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: excel.Excel.ChartSeriesCollection.getCount
    summary: |-
      <span data-ttu-id="89e80-116">Renvoie le nombre de séries de la collection.</span><span class="sxs-lookup"><span data-stu-id="89e80-116">Returns the number of series in the collection.</span></span>

      <span data-ttu-id="89e80-117">\[[Ensemble d'API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="89e80-117">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: excel.Excel.ChartSeriesCollection.getItemAt
    summary: |-
      <span data-ttu-id="89e80-118">Extrait une série en fonction de sa position dans la collection.</span><span class="sxs-lookup"><span data-stu-id="89e80-118">Retrieves a series based on its position in the collection.</span></span>

      <span data-ttu-id="89e80-119">\[[Ensemble d'API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="89e80-119">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.ChartSeries;'
      return:
        type:
          - excel.Excel.ChartSeries
        description: |-


          #### <a name="examples"></a><span data-ttu-id="89e80-120">Exemples</span><span class="sxs-lookup"><span data-stu-id="89e80-120">Examples</span></span>

          ```javascript
          // Get the name of the first series in the series collection.
          Excel.run(function (ctx) { 
              var seriesCollection = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1").series;
              seriesCollection.load('items');
              return ctx.sync().then(function() {
                  console.log(seriesCollection.items[0].name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: <span data-ttu-id="89e80-121">Valeur d’indice de l’objet à récupérer.</span><span class="sxs-lookup"><span data-stu-id="89e80-121">Index value of the object to be retrieved.</span></span> <span data-ttu-id="89e80-122">Avec indice zéro.</span><span class="sxs-lookup"><span data-stu-id="89e80-122">Zero-indexed.</span></span>
          type:
            - number
  - uid: excel.Excel.ChartSeriesCollection.items
    summary: <span data-ttu-id="89e80-123">Obtient l’élément enfant chargé dans cette collection de sites.</span><span class="sxs-lookup"><span data-stu-id="89e80-123">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.ChartSeries[];'
      return:
        type:
          - 'Excel.ChartSeries[]'
  - uid: excel.Excel.ChartSeriesCollection.load
    summary: "<span data-ttu-id=\"89e80-124\">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"89e80-124\">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id=\"89e80-125\">Vous devez appeler «\_context.sync()\_» avant de lire les propriétés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"89e80-125\">You must call \"context.sync()\" before reading the properties.</span></span>"
    remarks: |-
      <span data-ttu-id="89e80-126">En plus de cette signature, cette méthode possède les signatures suivantes:</span><span class="sxs-lookup"><span data-stu-id="89e80-126">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="89e80-127">`load(option?: string | string[]): Excel.ChartSeriesCollection`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="89e80-127">`load(option?: string | string[]): Excel.ChartSeriesCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="89e80-128">`load(option?: { select?: string; expand?: string; }): Excel.ChartSeriesCollection`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="89e80-128">`load(option?: { select?: string; expand?: string; }): Excel.ChartSeriesCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="89e80-129">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartSeriesCollection`-Uniquement disponible sur les types de collection.</span><span class="sxs-lookup"><span data-stu-id="89e80-129">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartSeriesCollection` - Only available on collection types.</span></span> <span data-ttu-id="89e80-130">Elle est similaire à la signature précédente.</span><span class="sxs-lookup"><span data-stu-id="89e80-130">It is similar to the preceding signature.</span></span> <span data-ttu-id="89e80-131">Option. Top indique le nombre maximal d'éléments de collection qui peuvent être inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="89e80-131">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="89e80-132">Option. Skip indique le nombre d'éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="89e80-132">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="89e80-133">Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d'éléments.</span><span class="sxs-lookup"><span data-stu-id="89e80-133">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ChartSeriesCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.ChartSeriesCollection;'
      return:
        type:
          - excel.Excel.ChartSeriesCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.ChartSeriesCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel.Excel.ChartSeriesCollection.load_1
    summary: <span data-ttu-id="89e80-134">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="89e80-134">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="89e80-135">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="89e80-135">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ChartSeriesCollection;'
      return:
        type:
          - excel.Excel.ChartSeriesCollection
        description: |-


          #### <a name="examples"></a><span data-ttu-id="89e80-136">Exemples</span><span class="sxs-lookup"><span data-stu-id="89e80-136">Examples</span></span>

          ```javascript
          // Getting the names of series in the series collection.
          Excel.run(function (ctx) { 
              var seriesCollection = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1").series;
              seriesCollection.load('items');
              return ctx.sync().then(function() {
                  for (var i = 0; i < seriesCollection.items.length; i++)
                  {
                      console.log(seriesCollection.items[i].name);
                  }
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Get the number of chart series in collection.
          Excel.run(function (ctx) { 
              var seriesCollection = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1").series;
              seriesCollection.load('count');
              return ctx.sync().then(function() {
                  console.log("series: Count= " + seriesCollection.count);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="89e80-137">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="89e80-137">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.ChartSeriesCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.ChartSeriesCollection;'
      return:
        type:
          - excel.Excel.ChartSeriesCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - office.OfficeExtension.LoadOption
  - uid: excel.Excel.ChartSeriesCollection.toJSON
    summary: '<span data-ttu-id="89e80-138">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu''un objet d''API est transmis à`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="89e80-138">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="89e80-139">.</span><span class="sxs-lookup"><span data-stu-id="89e80-139"></span></span> <span data-ttu-id="89e80-140">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="89e80-140"></span></span><!-- --><span data-ttu-id="89e80-141">, à son tour, appelle `toJSON` la méthode de l''objet qui lui est passé.) Tandis que `Excel.ChartSeriesCollection` l''objet d''origine est un objet `toJSON` d''API, la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.ChartSeriesCollectionData`</span><span class="sxs-lookup"><span data-stu-id="89e80-141">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.ChartSeriesCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ChartSeriesCollectionData`</span></span><!-- --><span data-ttu-id="89e80-142">) qui contient un tableau «éléments» avec des copies superficielles de toutes les propriétés chargées des éléments de la collection.</span><span class="sxs-lookup"><span data-stu-id="89e80-142">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ChartSeriesCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.ChartSeriesCollectionData
        description: ''