### YamlMime:UniversalReference
ms.openlocfilehash: a5fb3f4975900e0b332201d217c1fc1f28f3616c
ms.sourcegitcommit: 3f4a320fa860d05d348c8bdec2295e046a45a34f
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 02/07/2019
ms.locfileid: "29769959"
items:
- uid: excel.Excel.Table
  summary: >-
    <span data-ttu-id="2c036-101">Représente un tableau Excel.</span><span class="sxs-lookup"><span data-stu-id="2c036-101">Represents an Excel table.</span></span>


    <span data-ttu-id="2c036-102">\[[Du jeu d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2c036-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.Table
  fullName: Excel.Table
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.Table.clearFilters
  - excel.Excel.Table.columns
  - excel.Excel.Table.context
  - excel.Excel.Table.convertToRange
  - excel.Excel.Table.delete
  - excel.Excel.Table.getDataBodyRange
  - excel.Excel.Table.getHeaderRowRange
  - excel.Excel.Table.getRange
  - excel.Excel.Table.getTotalRowRange
  - excel.Excel.Table.highlightFirstColumn
  - excel.Excel.Table.highlightLastColumn
  - excel.Excel.Table.id
  - excel.Excel.Table.legacyId
  - excel.Excel.Table.load
  - excel.Excel.Table.name
  - excel.Excel.Table.onChanged
  - excel.Excel.Table.onSelectionChanged
  - excel.Excel.Table.reapplyFilters
  - excel.Excel.Table.rows
  - excel.Excel.Table.set
  - excel.Excel.Table.showBandedColumns
  - excel.Excel.Table.showBandedRows
  - excel.Excel.Table.showFilterButton
  - excel.Excel.Table.showHeaders
  - excel.Excel.Table.showTotals
  - excel.Excel.Table.sort
  - excel.Excel.Table.style
  - excel.Excel.Table.toJSON
  - excel.Excel.Table.worksheet
- uid: excel.Excel.Table.clearFilters
  summary: >-
    <span data-ttu-id="2c036-103">Supprime tous les filtres appliqués actuellement sur le tableau.</span><span class="sxs-lookup"><span data-stu-id="2c036-103">Clears all the filters currently applied on the table.</span></span>


    <span data-ttu-id="2c036-104">\[[Du jeu d’API : ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2c036-104">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: clearFilters()
  fullName: clearFilters
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clearFilters(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.Table.columns
  summary: >-
    <span data-ttu-id="2c036-p101">Représente une collection de toutes les colonnes du tableau. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="2c036-p101">Represents a collection of all the columns in the table. Read-only.</span></span>


    <span data-ttu-id="2c036-107">\[[Du jeu d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2c036-107">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: columns
  fullName: columns
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly columns: Excel.TableColumnCollection;'
    return:
      type:
      - excel.Excel.TableColumnCollection
- uid: excel.Excel.Table.context
  summary: <span data-ttu-id="2c036-108">Contexte de la requête associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="2c036-108">The request context associated with the object.</span></span> <span data-ttu-id="2c036-109">Il connecte processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="2c036-109">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.Table.convertToRange
  summary: >-
    <span data-ttu-id="2c036-p103">Convertit le tableau en plage normale de cellules. Toutes les données sont conservées.</span><span class="sxs-lookup"><span data-stu-id="2c036-p103">Converts the table into a normal range of cells. All data is preserved.</span></span>


    <span data-ttu-id="2c036-112">\[[Du jeu d’API : ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2c036-112">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: convertToRange()
  fullName: convertToRange
  langs:
  - typeScript
  type: method
  syntax:
    content: 'convertToRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"2c036-113\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"2c036-113\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var table = ctx.workbook.tables.getItem(tableName);\n    table.convertToRange();\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Table.delete
  summary: >-
    <span data-ttu-id="2c036-114">Supprime le tableau.</span><span class="sxs-lookup"><span data-stu-id="2c036-114">Deletes the table.</span></span>


    <span data-ttu-id="2c036-115">\[[Du jeu d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2c036-115">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: delete()
  fullName: delete
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"2c036-116\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"2c036-116\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var table = ctx.workbook.tables.getItem(tableName);\n    table.delete();\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Table.getDataBodyRange
  summary: >-
    <span data-ttu-id="2c036-117">Obtient l’objet de plage associé au corps de données du tableau.</span><span class="sxs-lookup"><span data-stu-id="2c036-117">Gets the range object associated with the data body of the table.</span></span>


    <span data-ttu-id="2c036-118">\[[Du jeu d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2c036-118">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getDataBodyRange()
  fullName: getDataBodyRange
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getDataBodyRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"2c036-119\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"2c036-119\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var table = ctx.workbook.tables.getItem(tableName);\n    var tableDataRange = table.getDataBodyRange();\n    tableDataRange.load('address')\n    return ctx.sync().then(function() {\n            console.log(tableDataRange.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Table.getHeaderRowRange
  summary: >-
    <span data-ttu-id="2c036-120">Obtient l’objet de plage associé à la ligne d’en-tête du tableau.</span><span class="sxs-lookup"><span data-stu-id="2c036-120">Gets the range object associated with header row of the table.</span></span>


    <span data-ttu-id="2c036-121">\[[Du jeu d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2c036-121">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getHeaderRowRange()
  fullName: getHeaderRowRange
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getHeaderRowRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"2c036-122\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"2c036-122\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var table = ctx.workbook.tables.getItem(tableName);\n    var tableHeaderRange = table.getHeaderRowRange();\n    tableHeaderRange.load('address');\n    return ctx.sync().then(function() {\n        console.log(tableHeaderRange.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Table.getRange
  summary: >-
    <span data-ttu-id="2c036-123">Renvoie l’objet de plage associé à l’intégralité du tableau.</span><span class="sxs-lookup"><span data-stu-id="2c036-123">Gets the range object associated with the entire table.</span></span>


    <span data-ttu-id="2c036-124">\[[Du jeu d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2c036-124">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRange()
  fullName: getRange
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"2c036-125\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"2c036-125\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var table = ctx.workbook.tables.getItem(tableName);\n    var tableRange = table.getRange();\n    tableRange.load('address');    \n    return ctx.sync().then(function() {\n            console.log(tableRange.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Table.getTotalRowRange
  summary: >-
    <span data-ttu-id="2c036-126">Renvoie l’objet de plage associé à la ligne de total du tableau.</span><span class="sxs-lookup"><span data-stu-id="2c036-126">Gets the range object associated with totals row of the table.</span></span>


    <span data-ttu-id="2c036-127">\[[Du jeu d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2c036-127">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getTotalRowRange()
  fullName: getTotalRowRange
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getTotalRowRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"2c036-128\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"2c036-128\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var table = ctx.workbook.tables.getItem(tableName);\n    var tableTotalsRange = table.getTotalRowRange();\n    tableTotalsRange.load('address');    \n    return ctx.sync().then(function() {\n            console.log(tableTotalsRange.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Table.highlightFirstColumn
  summary: >-
    <span data-ttu-id="2c036-129">Indique si la première colonne contient une mise en forme spéciale.</span><span class="sxs-lookup"><span data-stu-id="2c036-129">Indicates whether the first column contains special formatting.</span></span>


    <span data-ttu-id="2c036-130">\[[Du jeu d’API : ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2c036-130">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: highlightFirstColumn
  fullName: highlightFirstColumn
  langs:
  - typeScript
  type: property
  syntax:
    content: 'highlightFirstColumn: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Table.highlightLastColumn
  summary: >-
    <span data-ttu-id="2c036-131">Indique si la dernière colonne contient une mise en forme spéciale.</span><span class="sxs-lookup"><span data-stu-id="2c036-131">Indicates whether the last column contains special formatting.</span></span>


    <span data-ttu-id="2c036-132">\[[Du jeu d’API : ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2c036-132">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: highlightLastColumn
  fullName: highlightLastColumn
  langs:
  - typeScript
  type: property
  syntax:
    content: 'highlightLastColumn: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Table.id
  summary: >-
    <span data-ttu-id="2c036-p104">Renvoie une valeur qui identifie le tableau dans un classeur donné. La valeur de l’identificateur reste identique, même lorsque le tableau est renommé. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="2c036-p104">Returns a value that uniquely identifies the table in a given workbook. The value of the identifier remains the same even when the table is renamed. Read-only.</span></span>


    <span data-ttu-id="2c036-136">\[[Du jeu d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2c036-136">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
- uid: excel.Excel.Table.legacyId
  summary: >-
    <span data-ttu-id="2c036-137">Renvoie un identificateur numérique.</span><span class="sxs-lookup"><span data-stu-id="2c036-137">Returns a numeric id.</span></span>


    <span data-ttu-id="2c036-138">\[[Du jeu d’API : ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2c036-138">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: legacyId
  fullName: legacyId
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly legacyId: string;'
    return:
      type:
      - string
- uid: excel.Excel.Table.load
  summary: <span data-ttu-id="2c036-139">Files d’attente d’une commande pour charger les propriétés de l’objet spécifiées.</span><span class="sxs-lookup"><span data-stu-id="2c036-139">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="2c036-140">Vous devez appeler « context.sync() » avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="2c036-140">You must call "context.sync()" before reading the properties.</span></span>
  remarks: "<span data-ttu-id=\"2c036-141\">Outre cette signature, cette méthode présente les signatures suivantes :</span><span class=\"sxs-lookup\"><span data-stu-id=\"2c036-141\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"2c036-142\">`load(option?: { select?: string; expand?: string; }): Excel.Table`-Où option.select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options.expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class=\"sxs-lookup\"><span data-stu-id=\"2c036-142\">`load(option?: { select?: string; expand?: string; }): Excel.Table` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"2c036-143\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Table`-Uniquement disponible sur les types de la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"2c036-143\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Table` - Only available on collection types.</span></span> <span data-ttu-id=\"2c036-144\">Il est similaire à la signature précédente.</span><span class=\"sxs-lookup\"><span data-stu-id=\"2c036-144\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"2c036-145\">Option.Top Spécifie le nombre maximal d’éléments pouvant être inclus dans le résultat de la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"2c036-145\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"2c036-146\">Option.Skip Spécifie le nombre d’éléments qui doivent être ignoré et non inclus dans le résultat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"2c036-146\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"2c036-147\">Si option.top est spécifié, le jeu de résultats démarre après l’ignorer le nombre spécifié d’éléments.</span><span class=\"sxs-lookup\"><span data-stu-id=\"2c036-147\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"2c036-148\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"2c036-148\">Examples</span></span>\n\n```javascript\n// Get a table by name. \nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var table = ctx.workbook.tables.getItem(tableName);\n    table.load('index')\n    return ctx.sync().then(function() {\n            console.log(table.index);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// Get a table by index.\nExcel.run(function (ctx) { \n    var index = 0;\n    var table = ctx.workbook.tables.getItemAt(0);\n    table.load('id')\n    return ctx.sync().then(function() {\n            console.log(table.id);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// Set table style. \nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var table = ctx.workbook.tables.getItem(tableName);\n    table.name = 'Table1-Renamed';\n    table.showTotals = false;\n    table.style = 'TableStyleMedium2';\n    table.load('tableStyle');\n    return ctx.sync().then(function() {\n            console.log(table.style);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.Table;'
    return:
      type:
      - excel.Excel.Table
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="2c036-149">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="2c036-149">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.Table.name
  summary: >-
    <span data-ttu-id="2c036-150">Nom du tableau.</span><span class="sxs-lookup"><span data-stu-id="2c036-150">Name of the table.</span></span>


    <span data-ttu-id="2c036-151">\[[Du jeu d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2c036-151">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: name
  fullName: name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'name: string;'
    return:
      type:
      - string
- uid: excel.Excel.Table.onChanged
  summary: >-
    <span data-ttu-id="2c036-152">Se produit lorsque des données dans les cellules modifiées dans une table spécifique.</span><span class="sxs-lookup"><span data-stu-id="2c036-152">Occurs when data in cells changes on a specific table.</span></span>


    <span data-ttu-id="2c036-153">\[[Du jeu d’API : ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2c036-153">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onChanged
  fullName: onChanged
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onChanged: OfficeExtension.EventHandlers<Excel.TableChangedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.TableChangedEventArgs>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"2c036-154\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"2c036-154\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    let table = context.workbook.tables.getItemAt(0);\n    table.onChanged.add(onChange);\n\n    await context.sync();\n    console.log(\"A handler has been registered for the onChanged event\");\n});\n```"
- uid: excel.Excel.Table.onSelectionChanged
  summary: >-
    <span data-ttu-id="2c036-155">Se produit lorsque la sélection change sur une table spécifique.</span><span class="sxs-lookup"><span data-stu-id="2c036-155">Occurs when the selection changes on a specific table.</span></span>


    <span data-ttu-id="2c036-156">\[[Du jeu d’API : ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2c036-156">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onSelectionChanged
  fullName: onSelectionChanged
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Excel.TableSelectionChangedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.TableSelectionChangedEventArgs>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"2c036-157\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"2c036-157\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    let table = context.workbook.tables.getItemAt(0);\n    table.onSelectionChanged.add(onSelectionChange);\n\n    await context.sync();\n    console.log(\"A handler has been registered for table onSelectionChanged event\");\n});\n```"
- uid: excel.Excel.Table.reapplyFilters
  summary: >-
    <span data-ttu-id="2c036-158">Applique de nouveau tous les filtres actuellement appliqués sur le tableau.</span><span class="sxs-lookup"><span data-stu-id="2c036-158">Reapplies all the filters currently on the table.</span></span>


    <span data-ttu-id="2c036-159">\[[Du jeu d’API : ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2c036-159">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: reapplyFilters()
  fullName: reapplyFilters
  langs:
  - typeScript
  type: method
  syntax:
    content: 'reapplyFilters(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.Table.rows
  summary: >-
    <span data-ttu-id="2c036-p107">Représente une collection de toutes les lignes du tableau. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="2c036-p107">Represents a collection of all the rows in the table. Read-only.</span></span>


    <span data-ttu-id="2c036-162">\[[Du jeu d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2c036-162">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: rows
  fullName: rows
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly rows: Excel.TableRowCollection;'
    return:
      type:
      - excel.Excel.TableRowCollection
- uid: excel.Excel.Table.set
  summary: <span data-ttu-id="2c036-163">Définir plusieurs propriétés d’un objet en même temps.</span><span class="sxs-lookup"><span data-stu-id="2c036-163">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="2c036-164">Vous pouvez passer un objet brut avec les propriétés appropriées, ou un autre objet API du même type.</span><span class="sxs-lookup"><span data-stu-id="2c036-164">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="2c036-165">Cette méthode a la signature supplémentaire suivante :</span><span class="sxs-lookup"><span data-stu-id="2c036-165">This method has the following additional signature:</span></span>


    `set(properties: Excel.Table): void`
  name: set(properties, options)
  fullName: set
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.TableUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="2c036-166">Un objet JavaScript avec des propriétés qui sont structurés isomorphically pour les propriétés de l’objet sur lequel la méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="2c036-166">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.TableUpdateData
    - id: options
      description: <span data-ttu-id="2c036-167">Fournit une option permettant de supprimer des erreurs si l’objet propriétés tente de définir des propriétés en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="2c036-167">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.Table.showBandedColumns
  summary: >-
    <span data-ttu-id="2c036-168">Indique si les colonnes affichent une mise en forme à bandes dans laquelle la mise en évidence des colonnes impaires diffère de celle des colonnes paires pour faciliter la lecture du tableau.</span><span class="sxs-lookup"><span data-stu-id="2c036-168">Indicates whether the columns show banded formatting in which odd columns are highlighted differently from even ones to make reading the table easier.</span></span>


    <span data-ttu-id="2c036-169">\[[Du jeu d’API : ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2c036-169">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: showBandedColumns
  fullName: showBandedColumns
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showBandedColumns: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Table.showBandedRows
  summary: >-
    <span data-ttu-id="2c036-170">Indique si les lignes affichent une mise en forme à bandes dans laquelle la mise en évidence des lignes impaires diffère de celle des lignes paires pour faciliter la lecture du tableau.</span><span class="sxs-lookup"><span data-stu-id="2c036-170">Indicates whether the rows show banded formatting in which odd rows are highlighted differently from even ones to make reading the table easier.</span></span>


    <span data-ttu-id="2c036-171">\[[Du jeu d’API : ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2c036-171">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: showBandedRows
  fullName: showBandedRows
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showBandedRows: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Table.showFilterButton
  summary: >-
    <span data-ttu-id="2c036-p109">Indique si les boutons de filtre sont visibles dans la partie supérieure de chaque en-tête de colonne. Ce paramètre est autorisé uniquement si le tableau contient une ligne d’en-tête.</span><span class="sxs-lookup"><span data-stu-id="2c036-p109">Indicates whether the filter buttons are visible at the top of each column header. Setting this is only allowed if the table contains a header row.</span></span>


    <span data-ttu-id="2c036-174">\[[Du jeu d’API : ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2c036-174">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: showFilterButton
  fullName: showFilterButton
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showFilterButton: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Table.showHeaders
  summary: >-
    <span data-ttu-id="2c036-p110">Indique si la ligne d’en-tête est visible ou non. Cette valeur peut être définie de manière à afficher ou à masquer la ligne d’en-tête.</span><span class="sxs-lookup"><span data-stu-id="2c036-p110">Indicates whether the header row is visible or not. This value can be set to show or remove the header row.</span></span>


    <span data-ttu-id="2c036-177">\[[Du jeu d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2c036-177">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: showHeaders
  fullName: showHeaders
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showHeaders: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Table.showTotals
  summary: >-
    <span data-ttu-id="2c036-p111">Indique si la ligne de total est visible ou non. Cette valeur peut être définie de manière à afficher ou à masquer la ligne de total.</span><span class="sxs-lookup"><span data-stu-id="2c036-p111">Indicates whether the total row is visible or not. This value can be set to show or remove the total row.</span></span>


    <span data-ttu-id="2c036-180">\[[Du jeu d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2c036-180">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: showTotals
  fullName: showTotals
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showTotals: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Table.sort
  summary: >-
    <span data-ttu-id="2c036-p112">Représente le tri du tableau. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="2c036-p112">Represents the sorting for the table. Read-only.</span></span>


    <span data-ttu-id="2c036-183">\[[Du jeu d’API : ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2c036-183">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: sort
  fullName: sort
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly sort: Excel.TableSort;'
    return:
      type:
      - excel.Excel.TableSort
- uid: excel.Excel.Table.style
  summary: >-
    <span data-ttu-id="2c036-p113">Valeur de constante qui représente le style du tableau. Les valeurs possibles sont les suivantes : TableStyleLight1 à TableStyleLight21, TableStyleMedium1 à TableStyleMedium28, TableStyleStyleDark1 à TableStyleStyleDark11. Vous pouvez également indiquer un style personnalisé présent dans le classeur.</span><span class="sxs-lookup"><span data-stu-id="2c036-p113">Constant value that represents the Table style. Possible values are: TableStyleLight1 thru TableStyleLight21, TableStyleMedium1 thru TableStyleMedium28, TableStyleStyleDark1 thru TableStyleStyleDark11. A custom user-defined style present in the workbook can also be specified.</span></span>


    <span data-ttu-id="2c036-187">\[[Du jeu d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2c036-187">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: style
  fullName: style
  langs:
  - typeScript
  type: property
  syntax:
    content: 'style: string;'
    return:
      type:
      - string
- uid: excel.Excel.Table.toJSON
  summary: <span data-ttu-id="2c036-188">Remplace le code JavaScript `toJSON()` méthode afin de fournir une sortie plus utile lorsqu’un objet API est passé à `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="2c036-188">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="2c036-189">(`JSON.stringify`<!-- -->, à son tour, appelle le `toJSON` méthode de l’objet qui lui est passé.) Tandis que l’objet Excel.Table d’origine est un objet d’API, la `toJSON` méthode renvoie un objet JavaScript brut (typée en tant que `Excel.Interfaces.TableData` <!-- -->) qui contient des copies superficielles de toutes les propriétés enfant chargé à partir de l’objet d’origine.</span><span class="sxs-lookup"><span data-stu-id="2c036-189">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Table object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.TableData;'
    return:
      type:
      - excel.Excel.Interfaces.TableData
      description: ''
- uid: excel.Excel.Table.worksheet
  summary: >-
    <span data-ttu-id="2c036-p115">Feuille de calcul contenant le tableau actif. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="2c036-p115">The worksheet containing the current table. Read-only.</span></span>


    <span data-ttu-id="2c036-192">\[[Du jeu d’API : ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2c036-192">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: worksheet
  fullName: worksheet
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly worksheet: Excel.Worksheet;'
    return:
      type:
      - excel.Excel.Worksheet
