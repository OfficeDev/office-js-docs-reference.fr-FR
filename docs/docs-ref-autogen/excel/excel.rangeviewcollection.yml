### YamlMime:UniversalReference
ms.openlocfilehash: 06089998c0651822c09846f272329248f543a23e
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 02/13/2019
ms.locfileid: "29977474"
items:
- uid: excel.Excel.RangeViewCollection
  summary: >-
    <span data-ttu-id="10fdb-101">Représente une collection d’objets RangeView.</span><span class="sxs-lookup"><span data-stu-id="10fdb-101">Represents a collection of RangeView objects.</span></span>


    <span data-ttu-id="10fdb-102">\[[Du jeu d’API : ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="10fdb-102">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.RangeViewCollection
  fullName: Excel.RangeViewCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.RangeViewCollection.context
  - excel.Excel.RangeViewCollection.getCount
  - excel.Excel.RangeViewCollection.getItemAt
  - excel.Excel.RangeViewCollection.items
  - excel.Excel.RangeViewCollection.load
  - excel.Excel.RangeViewCollection.load_1
  - excel.Excel.RangeViewCollection.load_2
  - excel.Excel.RangeViewCollection.toJSON
- uid: excel.Excel.RangeViewCollection.context
  summary: <span data-ttu-id="10fdb-103">Contexte de la requête associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="10fdb-103">The request context associated with the object.</span></span> <span data-ttu-id="10fdb-104">Il connecte processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="10fdb-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.RangeViewCollection.getCount
  summary: >-
    <span data-ttu-id="10fdb-105">Obtient le nombre d’objets RangeView dans la collection.</span><span class="sxs-lookup"><span data-stu-id="10fdb-105">Gets the number of RangeView objects in the collection.</span></span>


    <span data-ttu-id="10fdb-106">\[[Du jeu d’API : ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="10fdb-106">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel.Excel.RangeViewCollection.getItemAt
  summary: >-
    <span data-ttu-id="10fdb-107">Obtient une ligne RangeView par le biais de son index.</span><span class="sxs-lookup"><span data-stu-id="10fdb-107">Gets a RangeView Row via its index.</span></span> <span data-ttu-id="10fdb-108">Index zéro.</span><span class="sxs-lookup"><span data-stu-id="10fdb-108">Zero-Indexed.</span></span>


    <span data-ttu-id="10fdb-109">\[[Du jeu d’API : ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="10fdb-109">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemAt(index)
  fullName: getItemAt(index)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): Excel.RangeView;'
    return:
      type:
      - excel.Excel.RangeView
      description: ''
    parameters:
    - id: index
      description: <span data-ttu-id="10fdb-110">Index de la ligne visible.</span><span class="sxs-lookup"><span data-stu-id="10fdb-110">Index of the visible row.</span></span>
      type:
      - number
- uid: excel.Excel.RangeViewCollection.items
  summary: <span data-ttu-id="10fdb-111">Obtient l’enfant chargé éléments dans cette collection.</span><span class="sxs-lookup"><span data-stu-id="10fdb-111">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.RangeView[];'
    return:
      type:
      - Excel.RangeView[]
- uid: excel.Excel.RangeViewCollection.load
  summary: <span data-ttu-id="10fdb-112">Files d’attente d’une commande pour charger les propriétés de l’objet spécifiées.</span><span class="sxs-lookup"><span data-stu-id="10fdb-112">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="10fdb-113">Vous devez appeler « context.sync() » avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="10fdb-113">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="10fdb-114">Outre cette signature, cette méthode présente les signatures suivantes :</span><span class="sxs-lookup"><span data-stu-id="10fdb-114">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="10fdb-115">`load(option?: string | string[]): Excel.RangeViewCollection`-Où option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="10fdb-115">`load(option?: string | string[]): Excel.RangeViewCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="10fdb-116">`load(option?: { select?: string; expand?: string; }): Excel.RangeViewCollection`-Où option.select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options.expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="10fdb-116">`load(option?: { select?: string; expand?: string; }): Excel.RangeViewCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="10fdb-117">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeViewCollection`-Uniquement disponible sur les types de la collection.</span><span class="sxs-lookup"><span data-stu-id="10fdb-117">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeViewCollection` - Only available on collection types.</span></span> <span data-ttu-id="10fdb-118">Il est similaire à la signature précédente.</span><span class="sxs-lookup"><span data-stu-id="10fdb-118">It is similar to the preceding signature.</span></span> <span data-ttu-id="10fdb-119">Option.Top Spécifie le nombre maximal d’éléments pouvant être inclus dans le résultat de la collection.</span><span class="sxs-lookup"><span data-stu-id="10fdb-119">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="10fdb-120">Option.Skip Spécifie le nombre d’éléments qui doivent être ignoré et non inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="10fdb-120">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="10fdb-121">Si option.top est spécifié, le jeu de résultats démarre après l’ignorer le nombre spécifié d’éléments.</span><span class="sxs-lookup"><span data-stu-id="10fdb-121">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.RangeViewCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.RangeViewCollection;'
    return:
      type:
      - excel.Excel.RangeViewCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Excel.Interfaces.RangeViewCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
- uid: excel.Excel.RangeViewCollection.load_1
  summary: <span data-ttu-id="10fdb-122">Files d’attente d’une commande pour charger les propriétés de l’objet spécifiées.</span><span class="sxs-lookup"><span data-stu-id="10fdb-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="10fdb-123">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="10fdb-123">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.RangeViewCollection;'
    return:
      type:
      - excel.Excel.RangeViewCollection
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="10fdb-124">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="10fdb-124">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.RangeViewCollection.load_2
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Excel.RangeViewCollection;'
    return:
      type:
      - excel.Excel.RangeViewCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: excel.Excel.RangeViewCollection.toJSON
  summary: <span data-ttu-id="10fdb-125">Remplace le code JavaScript `toJSON()` méthode afin de fournir une sortie plus utile lorsqu’un objet API est passé à `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="10fdb-125">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="10fdb-126">(`JSON.stringify`<!-- -->, à son tour, appelle le `toJSON` méthode de l’objet qui lui est passé.) Tandis que l’original `Excel.RangeViewCollection` objet est un objet d’API, la `toJSON` méthode renvoie un objet JavaScript brut (typée en tant que `Excel.Interfaces.RangeViewCollectionData` <!-- -->) qui contient un tableau « éléments » avec copies superficielles de toutes les propriétés chargées à partir des éléments de la collection.</span><span class="sxs-lookup"><span data-stu-id="10fdb-126">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.RangeViewCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.RangeViewCollectionData`<!-- -->) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.RangeViewCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.RangeViewCollectionData
      description: ''
