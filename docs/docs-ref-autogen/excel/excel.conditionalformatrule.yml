### YamlMime:UniversalReference
ms.openlocfilehash: d27f2de597e0f2733ed8ee672f0ff02e8bcc97fd
ms.sourcegitcommit: 3f4a320fa860d05d348c8bdec2295e046a45a34f
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 02/07/2019
ms.locfileid: "29769399"
items:
- uid: excel.Excel.ConditionalFormatRule
  summary: >-
    <span data-ttu-id="3af21-101">Représente une règle, pour toutes les paires de règle/format classique.</span><span class="sxs-lookup"><span data-stu-id="3af21-101">Represents a rule, for all traditional rule/format pairings.</span></span>


    <span data-ttu-id="3af21-102">\[[Du jeu d’API : ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3af21-102">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.ConditionalFormatRule
  fullName: Excel.ConditionalFormatRule
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.ConditionalFormatRule.context
  - excel.Excel.ConditionalFormatRule.formula
  - excel.Excel.ConditionalFormatRule.formulaLocal
  - excel.Excel.ConditionalFormatRule.formulaR1C1
  - excel.Excel.ConditionalFormatRule.load
  - excel.Excel.ConditionalFormatRule.set
  - excel.Excel.ConditionalFormatRule.toJSON
- uid: excel.Excel.ConditionalFormatRule.context
  summary: <span data-ttu-id="3af21-103">Contexte de la requête associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="3af21-103">The request context associated with the object.</span></span> <span data-ttu-id="3af21-104">Il connecte processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="3af21-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.ConditionalFormatRule.formula
  summary: >-
    <span data-ttu-id="3af21-105">Formule, si nécessaire, servant à évaluer la règle de mise en forme conditionnelle.</span><span class="sxs-lookup"><span data-stu-id="3af21-105">The formula, if required, to evaluate the conditional format rule on.</span></span>


    <span data-ttu-id="3af21-106">\[[Du jeu d’API : ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3af21-106">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: formula
  fullName: formula
  langs:
  - typeScript
  type: property
  syntax:
    content: 'formula: string;'
    return:
      type:
      - string
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"3af21-107\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"3af21-107\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B8:E13\");\n    const conditionalFormat = range.conditionalFormats.add(Excel.ConditionalFormatType.custom);\n    conditionalFormat.custom.rule.formula = '=IF(B8>INDIRECT(\"RC[-1]\",0),TRUE)';\n    conditionalFormat.custom.format.font.color = \"green\";\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.ConditionalFormatRule.formulaLocal
  summary: >-
    <span data-ttu-id="3af21-108">Formule, si nécessaire, servant à évaluer la règle de mise en forme conditionnelle dans la langue de l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="3af21-108">The formula, if required, to evaluate the conditional format rule on in the user's language.</span></span>


    <span data-ttu-id="3af21-109">\[[Du jeu d’API : ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3af21-109">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: formulaLocal
  fullName: formulaLocal
  langs:
  - typeScript
  type: property
  syntax:
    content: 'formulaLocal: string;'
    return:
      type:
      - string
- uid: excel.Excel.ConditionalFormatRule.formulaR1C1
  summary: >-
    <span data-ttu-id="3af21-110">Formule, si nécessaire, servant à évaluer la règle de mise en forme conditionnelle dans la notation du style R1C1.</span><span class="sxs-lookup"><span data-stu-id="3af21-110">The formula, if required, to evaluate the conditional format rule on in R1C1-style notation.</span></span>


    <span data-ttu-id="3af21-111">\[[Du jeu d’API : ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3af21-111">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: formulaR1C1
  fullName: formulaR1C1
  langs:
  - typeScript
  type: property
  syntax:
    content: 'formulaR1C1: string;'
    return:
      type:
      - string
- uid: excel.Excel.ConditionalFormatRule.load
  summary: <span data-ttu-id="3af21-112">Files d’attente d’une commande pour charger les propriétés de l’objet spécifiées.</span><span class="sxs-lookup"><span data-stu-id="3af21-112">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="3af21-113">Vous devez appeler « context.sync() » avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="3af21-113">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="3af21-114">Outre cette signature, cette méthode présente les signatures suivantes :</span><span class="sxs-lookup"><span data-stu-id="3af21-114">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="3af21-115">`load(option?: { select?: string; expand?: string; }): Excel.ConditionalFormatRule`-Où option.select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options.expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="3af21-115">`load(option?: { select?: string; expand?: string; }): Excel.ConditionalFormatRule` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="3af21-116">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ConditionalFormatRule`-Uniquement disponible sur les types de la collection.</span><span class="sxs-lookup"><span data-stu-id="3af21-116">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ConditionalFormatRule` - Only available on collection types.</span></span> <span data-ttu-id="3af21-117">Il est similaire à la signature précédente.</span><span class="sxs-lookup"><span data-stu-id="3af21-117">It is similar to the preceding signature.</span></span> <span data-ttu-id="3af21-118">Option.Top Spécifie le nombre maximal d’éléments pouvant être inclus dans le résultat de la collection.</span><span class="sxs-lookup"><span data-stu-id="3af21-118">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="3af21-119">Option.Skip Spécifie le nombre d’éléments qui doivent être ignoré et non inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="3af21-119">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="3af21-120">Si option.top est spécifié, le jeu de résultats démarre après l’ignorer le nombre spécifié d’éléments.</span><span class="sxs-lookup"><span data-stu-id="3af21-120">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.ConditionalFormatRule;'
    return:
      type:
      - excel.Excel.ConditionalFormatRule
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="3af21-121">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="3af21-121">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.ConditionalFormatRule.set
  summary: <span data-ttu-id="3af21-122">Définir plusieurs propriétés d’un objet en même temps.</span><span class="sxs-lookup"><span data-stu-id="3af21-122">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="3af21-123">Vous pouvez passer un objet brut avec les propriétés appropriées, ou un autre objet API du même type.</span><span class="sxs-lookup"><span data-stu-id="3af21-123">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="3af21-124">Cette méthode a la signature supplémentaire suivante :</span><span class="sxs-lookup"><span data-stu-id="3af21-124">This method has the following additional signature:</span></span>


    `set(properties: Excel.ConditionalFormatRule): void`
  name: set(properties, options)
  fullName: set
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.ConditionalFormatRuleUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="3af21-125">Un objet JavaScript avec des propriétés qui sont structurés isomorphically pour les propriétés de l’objet sur lequel la méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="3af21-125">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.ConditionalFormatRuleUpdateData
    - id: options
      description: <span data-ttu-id="3af21-126">Fournit une option permettant de supprimer des erreurs si l’objet propriétés tente de définir des propriétés en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="3af21-126">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.ConditionalFormatRule.toJSON
  summary: <span data-ttu-id="3af21-127">Remplace le code JavaScript `toJSON()` méthode afin de fournir une sortie plus utile lorsqu’un objet API est passé à `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="3af21-127">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="3af21-128">(`JSON.stringify`<!-- -->, à son tour, appelle le `toJSON` méthode de l’objet qui lui est passé.) Tandis que l’objet Excel.ConditionalFormatRule d’origine est un objet d’API, la `toJSON` méthode renvoie un objet JavaScript brut (typée en tant que `Excel.Interfaces.ConditionalFormatRuleData` <!-- -->) qui contient des copies superficielles de toutes les propriétés enfant chargé à partir de l’objet d’origine.</span><span class="sxs-lookup"><span data-stu-id="3af21-128">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ConditionalFormatRule object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ConditionalFormatRuleData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ConditionalFormatRuleData;'
    return:
      type:
      - excel.Excel.Interfaces.ConditionalFormatRuleData
      description: ''
