### YamlMime:UniversalReference
ms.openlocfilehash: cc4fcfd114add0f06f08cd80d8ba4ca8bcfc7152
ms.sourcegitcommit: 06eebee5e68d349f78e6bc3bb0ef099fe063cf04
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 01/17/2019
ms.locfileid: "28725003"
items:
- uid: excel.Excel.Worksheet
  summary: >-
    <span data-ttu-id="3fdc8-p101">Une feuille de calcul Excel est une grille de cellules. Elle peut contenir des données, des tableaux, des graphiques, etc.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-p101">An Excel worksheet is a grid of cells. It can contain data, tables, charts, etc.</span></span>


    <span data-ttu-id="3fdc8-103">\[[Du jeu d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3fdc8-103">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  remarks: <span data-ttu-id="3fdc8-104">Notre [guide de procédure sur l’utilisation des feuilles de calcul](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-worksheets) a détaillé des exemples de code et des procédures pas à pas.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-104">Our [how-to guide on working with worksheets](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-worksheets) has detailed walkthroughs and code samples.</span></span>
  name: Excel.Worksheet
  fullName: Excel.Worksheet
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.Worksheet.activate
  - excel.Excel.Worksheet.calculate
  - excel.Excel.Worksheet.charts
  - excel.Excel.Worksheet.context
  - excel.Excel.Worksheet.copy
  - excel.Excel.Worksheet.delete
  - excel.Excel.Worksheet.freezePanes
  - excel.Excel.Worksheet.getCell
  - excel.Excel.Worksheet.getNext
  - excel.Excel.Worksheet.getNextOrNullObject
  - excel.Excel.Worksheet.getPrevious
  - excel.Excel.Worksheet.getPreviousOrNullObject
  - excel.Excel.Worksheet.getRange
  - excel.Excel.Worksheet.getRangeByIndexes
  - excel.Excel.Worksheet.getUsedRange
  - excel.Excel.Worksheet.getUsedRangeOrNullObject
  - excel.Excel.Worksheet.id
  - excel.Excel.Worksheet.load
  - excel.Excel.Worksheet.name
  - excel.Excel.Worksheet.names
  - excel.Excel.Worksheet.onActivated
  - excel.Excel.Worksheet.onCalculated
  - excel.Excel.Worksheet.onChanged
  - excel.Excel.Worksheet.onDeactivated
  - excel.Excel.Worksheet.onSelectionChanged
  - excel.Excel.Worksheet.pivotTables
  - excel.Excel.Worksheet.position
  - excel.Excel.Worksheet.protection
  - excel.Excel.Worksheet.showGridlines
  - excel.Excel.Worksheet.showHeadings
  - excel.Excel.Worksheet.standardHeight
  - excel.Excel.Worksheet.standardWidth
  - excel.Excel.Worksheet.tabColor
  - excel.Excel.Worksheet.tables
  - excel.Excel.Worksheet.toJSON
  - excel.Excel.Worksheet.visibility
- uid: excel.Excel.Worksheet.activate
  summary: >-
    <span data-ttu-id="3fdc8-105">Active la feuille de calcul dans l’interface utilisateur Excel.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-105">Activate the worksheet in the Excel UI.</span></span>


    <span data-ttu-id="3fdc8-106">\[[Du jeu d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3fdc8-106">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: activate()
  fullName: activate
  langs:
  - typeScript
  type: method
  syntax:
    content: 'activate(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"3fdc8-107\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"3fdc8-107\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var wSheetName = 'Sheet1';\n    var worksheet = ctx.workbook.worksheets.getItem(wSheetName);\n    worksheet.activate();\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Worksheet.calculate
  summary: >-
    <span data-ttu-id="3fdc8-108">Calcule toutes les cellules d’une feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-108">Calculates all cells on a worksheet.</span></span>


    <span data-ttu-id="3fdc8-109">\[[Du jeu d’API : ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3fdc8-109">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: calculate(markAllDirty)
  fullName: calculate
  langs:
  - typeScript
  type: method
  syntax:
    content: 'calculate(markAllDirty: boolean): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: markAllDirty
      description: <span data-ttu-id="3fdc8-110">True pour marquer tout comme ayant été modifié.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-110">True, to mark all as dirty.</span></span>
      type:
      - boolean
- uid: excel.Excel.Worksheet.charts
  summary: >-
    <span data-ttu-id="3fdc8-p102">Renvoie une collection de graphiques qui font partie de la feuille de calcul. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-p102">Returns collection of charts that are part of the worksheet. Read-only.</span></span>


    <span data-ttu-id="3fdc8-113">\[[Du jeu d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3fdc8-113">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: charts
  fullName: charts
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly charts: Excel.ChartCollection;'
    return:
      type:
      - excel.Excel.ChartCollection
- uid: excel.Excel.Worksheet.context
  summary: <span data-ttu-id="3fdc8-114">Contexte de la requête associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-114">The request context associated with the object.</span></span> <span data-ttu-id="3fdc8-115">Il connecte processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-115">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.Worksheet.copy
  summary: >-
    <span data-ttu-id="3fdc8-116">Copie une feuille de calcul et la place à la position spécifiée.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-116">Copy a worksheet and place it at the specified position.</span></span> <span data-ttu-id="3fdc8-117">Renvoie la feuille de calcul copiée.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-117">Return the copied worksheet.</span></span>


    <span data-ttu-id="3fdc8-118">\[[Du jeu d’API : ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3fdc8-118">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: copy(positionType, relativeTo)
  fullName: copy
  langs:
  - typeScript
  type: method
  syntax:
    content: 'copy(positionType?: Excel.WorksheetPositionType, relativeTo?: Excel.Worksheet): Excel.Worksheet;'
    return:
      type:
      - excel.Excel.Worksheet
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"3fdc8-119\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"3fdc8-119\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n\n    let myWorkbook = context.workbook;\n    let sampleSheet = myWorkbook.worksheets.getActiveWorksheet();\n    let copiedSheet = sampleSheet.copy(\"End\")\n\n    sampleSheet.load(\"name\");\n    copiedSheet.load(\"name\");\n\n    await context.sync();\n\n    console.log(\"'\" + sampleSheet.name + \"' was copied to '\" + copiedSheet.name + \"'\")\n});\n```"
    parameters:
    - id: positionType
      description: <span data-ttu-id="3fdc8-120">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-120">Optional.</span></span>
      type:
      - excel.Excel.WorksheetPositionType
    - id: relativeTo
      description: <span data-ttu-id="3fdc8-121">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-121">Optional.</span></span>
      type:
      - excel.Excel.Worksheet
- uid: excel.Excel.Worksheet.delete
  summary: >-
    <span data-ttu-id="3fdc8-122">Supprime la feuille de calcul du classeur.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-122">Deletes the worksheet from the workbook.</span></span>


    <span data-ttu-id="3fdc8-123">\[[Du jeu d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3fdc8-123">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: delete()
  fullName: delete
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"3fdc8-124\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"3fdc8-124\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var wSheetName = 'Sheet1';\n    var worksheet = ctx.workbook.worksheets.getItem(wSheetName);\n    worksheet.delete();\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Worksheet.freezePanes
  summary: >-
    <span data-ttu-id="3fdc8-125">Obtient un objet qui peut être utilisé pour manipuler les volets figés sur la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-125">Gets an object that can be used to manipulate frozen panes on the worksheet.</span></span> <span data-ttu-id="3fdc8-126">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-126">Read-only.</span></span>


    <span data-ttu-id="3fdc8-127">\[[Du jeu d’API : ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3fdc8-127">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: freezePanes
  fullName: freezePanes
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly freezePanes: Excel.WorksheetFreezePanes;'
    return:
      type:
      - excel.Excel.WorksheetFreezePanes
- uid: excel.Excel.Worksheet.getCell
  summary: >-
    <span data-ttu-id="3fdc8-p106">Renvoie l’objet de plage qui contient une cellule donnée sur la base des numéros de ligne et de colonne. La cellule peut se trouver en dehors des limites de ses plages parent, pour peu qu’elle reste dans la grille de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-p106">Gets the range object containing the single cell based on row and column numbers. The cell can be outside the bounds of its parent range, so long as it stays within the worksheet grid.</span></span>


    <span data-ttu-id="3fdc8-130">\[[Du jeu d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3fdc8-130">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getCell(row, column)
  fullName: getCell
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCell(row: number, column: number): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"3fdc8-131\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"3fdc8-131\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"A1:F8\";\n    var worksheet = ctx.workbook.worksheets.getItem(sheetName);\n    var cell = worksheet.getCell(0,0);\n    cell.load('address');\n    return ctx.sync().then(function() {\n        console.log(cell.address);\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: row
      description: <span data-ttu-id="3fdc8-p107">Numéro de ligne de la cellule à récupérer. Avec indice zéro.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-p107">The row number of the cell to be retrieved. Zero-indexed.</span></span>
      type:
      - number
    - id: column
      description: <span data-ttu-id="3fdc8-p108">Numéro de colonne de la cellule à récupérer. Avec indice zéro.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-p108">the column number of the cell to be retrieved. Zero-indexed.</span></span>
      type:
      - number
- uid: excel.Excel.Worksheet.getNext
  summary: >-
    <span data-ttu-id="3fdc8-p109">Obtient la feuille de calcul qui suit celle-ci. Si aucune feuille de calcul ne suit celle-ci, cette méthode génère une erreur.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-p109">Gets the worksheet that follows this one. If there are no worksheets following this one, this method will throw an error.</span></span>


    <span data-ttu-id="3fdc8-138">\[[Du jeu d’API : ExcelApi 1,5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3fdc8-138">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getNext(visibleOnly)
  fullName: getNext
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getNext(visibleOnly?: boolean): Excel.Worksheet;'
    return:
      type:
      - excel.Excel.Worksheet
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"3fdc8-139\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"3fdc8-139\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheets = context.workbook.worksheets;\n\n    // We don't want to include the default worksheet that was created\n    // when the workbook was created, so our \"firstSheet\" will be the one\n    // after the literal first. Note chaining of navigation methods.\n    const firstSheet = sheets.getFirst().getNext();\n    const lastSheet = sheets.getLast();\n    const firstTaxRateRange = firstSheet.getRange(\"B2\");\n    const lastTaxRateRange = lastSheet.getRange(\"B2\");\n\n    firstSheet.load(\"name\");\n    lastSheet.load(\"name\");\n    firstTaxRateRange.load(\"text\");\n    lastTaxRateRange.load(\"text\");\n\n    await context.sync();\n\n    let firstYear = firstSheet.name.substr(5, 4);\n    let lastYear = lastSheet.name.substr(5, 4);\n    console.log(`Tax Rate change from ${firstYear} to ${lastYear}`, `Tax rate for ${firstYear}: ${firstTaxRateRange.text[0][0]}\\nTax rate for ${lastYear}: ${lastTaxRateRange.text[0][0]}`)\n\n    await context.sync();\n});\n```"
    parameters:
    - id: visibleOnly
      description: <span data-ttu-id="3fdc8-p110">Facultatif. Si la valeur est True, prend en compte uniquement les feuilles de calcul visibles et ignore les feuilles de calcul masquées.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-p110">Optional. If true, considers only visible worksheets, skipping over any hidden ones.</span></span>
      type:
      - boolean
- uid: excel.Excel.Worksheet.getNextOrNullObject
  summary: >-
    <span data-ttu-id="3fdc8-p111">Obtient la feuille de calcul qui suit celle-ci. Si aucune feuille de calcul ne suit celle-ci, cette méthode renvoie un objet null.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-p111">Gets the worksheet that follows this one. If there are no worksheets following this one, this method will return a null object.</span></span>


    <span data-ttu-id="3fdc8-144">\[[Du jeu d’API : ExcelApi 1,5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3fdc8-144">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getNextOrNullObject(visibleOnly)
  fullName: getNextOrNullObject
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getNextOrNullObject(visibleOnly?: boolean): Excel.Worksheet;'
    return:
      type:
      - excel.Excel.Worksheet
      description: ''
    parameters:
    - id: visibleOnly
      description: <span data-ttu-id="3fdc8-p112">Facultatif. Si la valeur est True, prend en compte uniquement les feuilles de calcul visibles et ignore les feuilles de calcul masquées.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-p112">Optional. If true, considers only visible worksheets, skipping over any hidden ones.</span></span>
      type:
      - boolean
- uid: excel.Excel.Worksheet.getPrevious
  summary: >-
    <span data-ttu-id="3fdc8-p113">Obtient la feuille de calcul qui précède celle-ci. Si aucune feuille de calcul ne précède celle-ci, cette méthode génère une erreur.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-p113">Gets the worksheet that precedes this one. If there are no previous worksheets, this method will throw an error.</span></span>


    <span data-ttu-id="3fdc8-149">\[[Du jeu d’API : ExcelApi 1,5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3fdc8-149">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getPrevious(visibleOnly)
  fullName: getPrevious
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getPrevious(visibleOnly?: boolean): Excel.Worksheet;'
    return:
      type:
      - excel.Excel.Worksheet
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"3fdc8-150\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"3fdc8-150\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheets = context.workbook.worksheets;\n    const currentSheet = sheets.getActiveWorksheet();\n    const previousYearSheet = currentSheet.getPrevious();\n    const currentTaxDueRange = currentSheet.getRange(\"C2\");\n    const previousTaxDueRange = previousYearSheet.getRange(\"C2\");\n\n    currentSheet.load(\"name\");\n    previousYearSheet.load(\"name\");\n    currentTaxDueRange.load(\"text\");\n    previousTaxDueRange.load(\"text\");\n\n    await context.sync();\n\n    let currentYear = currentSheet.name.substr(5, 4);\n    let previousYear = previousYearSheet.name.substr(5, 4);\n    console.log(\"Two Year Tax Due Comparison\", `Tax due for ${currentYear} was ${currentTaxDueRange.text[0][0]}\\nTax due for ${previousYear} was ${previousTaxDueRange.text[0][0]}`)\n\n    await context.sync();\n});\n```"
    parameters:
    - id: visibleOnly
      description: <span data-ttu-id="3fdc8-p114">Facultatif. Si la valeur est True, prend en compte uniquement les feuilles de calcul visibles et ignore les feuilles de calcul masquées.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-p114">Optional. If true, considers only visible worksheets, skipping over any hidden ones.</span></span>
      type:
      - boolean
- uid: excel.Excel.Worksheet.getPreviousOrNullObject
  summary: >-
    <span data-ttu-id="3fdc8-p115">Obtient la feuille de calcul qui précède celle-ci. Si aucune feuille de calcul ne précède celle-ci, cette méthode renvoie un objet null.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-p115">Gets the worksheet that precedes this one. If there are no previous worksheets, this method will return a null objet.</span></span>


    <span data-ttu-id="3fdc8-155">\[[Du jeu d’API : ExcelApi 1,5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3fdc8-155">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getPreviousOrNullObject(visibleOnly)
  fullName: getPreviousOrNullObject
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getPreviousOrNullObject(visibleOnly?: boolean): Excel.Worksheet;'
    return:
      type:
      - excel.Excel.Worksheet
      description: ''
    parameters:
    - id: visibleOnly
      description: <span data-ttu-id="3fdc8-p116">Facultatif. Si la valeur est True, prend en compte uniquement les feuilles de calcul visibles et ignore les feuilles de calcul masquées.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-p116">Optional. If true, considers only visible worksheets, skipping over any hidden ones.</span></span>
      type:
      - boolean
- uid: excel.Excel.Worksheet.getRange
  summary: >-
    <span data-ttu-id="3fdc8-158">Obtient l’objet range, qui représente un bloc de cellules, spécifiée par le nom ou l’adresse rectangulaire unique.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-158">Gets the range object, representing a single rectangular block of cells, specified by the address or name.</span></span>


    <span data-ttu-id="3fdc8-159">\[[Du jeu d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3fdc8-159">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRange(address)
  fullName: getRange
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRange(address?: string): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"3fdc8-160\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"3fdc8-160\">Examples</span></span>\n\n```javascript\n// Below example uses range address to get the range object.\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"A1:F8\";\n    var worksheet = ctx.workbook.worksheets.getItem(sheetName);\n    var range = worksheet.getRange(rangeAddress);\n    range.load('cellCount');\n    return ctx.sync().then(function() {\n        console.log(range.cellCount);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// Below example uses a named-range to get the range object.\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeName = 'MyRange';\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeName);\n    range.load('address');\n    return ctx.sync().then(function() {\n        console.log(range.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: address
      description: '<span data-ttu-id="3fdc8-161">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-161">Optional.</span></span> <span data-ttu-id="3fdc8-162">La chaîne représentant l’adresse ou le nom de la plage.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-162">The string representing the address or name of the range.</span></span> <span data-ttu-id="3fdc8-163">Par exemple, « A1 : B2 ».</span><span class="sxs-lookup"><span data-stu-id="3fdc8-163">For example, "A1:B2".</span></span> <span data-ttu-id="3fdc8-164">Le cas contraire, la plage de feuille de calcul entière est renvoyée.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-164">If not specified, the entire worksheet range is returned.</span></span>'
      type:
      - string
- uid: excel.Excel.Worksheet.getRangeByIndexes
  summary: >-
    <span data-ttu-id="3fdc8-165">Obtient l’objet plage commençant à un index de ligne et de colonne particulier et couvrant un certain nombre de lignes et de colonnes.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-165">Gets the range object beginning at a particular row index and column index, and spanning a certain number of rows and columns.</span></span>


    <span data-ttu-id="3fdc8-166">\[[Du jeu d’API : ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3fdc8-166">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRangeByIndexes(startRow, startColumn, rowCount, columnCount)
  fullName: getRangeByIndexes
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRangeByIndexes(startRow: number, startColumn: number, rowCount: number, columnCount: number): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
    parameters:
    - id: startRow
      description: <span data-ttu-id="3fdc8-167">Début de ligne (indexé zéro).</span><span class="sxs-lookup"><span data-stu-id="3fdc8-167">Start row (zero-indexed).</span></span>
      type:
      - number
    - id: startColumn
      description: <span data-ttu-id="3fdc8-168">Démarrez la colonne (indexé zéro).</span><span class="sxs-lookup"><span data-stu-id="3fdc8-168">Start column (zero-indexed).</span></span>
      type:
      - number
    - id: rowCount
      description: <span data-ttu-id="3fdc8-169">Nombre de lignes à inclure dans la plage.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-169">Number of rows to include in the range.</span></span>
      type:
      - number
    - id: columnCount
      description: <span data-ttu-id="3fdc8-170">Nombre de colonnes à inclure dans la plage.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-170">Number of columns to include in the range.</span></span>
      type:
      - number
- uid: excel.Excel.Worksheet.getUsedRange
  summary: >-
    <span data-ttu-id="3fdc8-171">La plage utilisée est la plus petite plage qui englobe des cellules dont la valeur ou la mise en forme attribuée.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-171">The used range is the smallest range that encompasses any cells that have a value or formatting assigned to them.</span></span> <span data-ttu-id="3fdc8-172">Si la feuille de calcul entière est vide, cette fonction renvoie la cellule supérieure gauche (autrement dit, il sera *ne pas* lever une erreur).</span><span class="sxs-lookup"><span data-stu-id="3fdc8-172">If the entire worksheet is blank, this function will return the top left cell (i.e. it will *not* throw an error).</span></span>


    <span data-ttu-id="3fdc8-173">\[[Du jeu d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3fdc8-173">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getUsedRange(valuesOnly)
  fullName: getUsedRange
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getUsedRange(valuesOnly?: boolean): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"3fdc8-174\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"3fdc8-174\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var wSheetName = 'Sheet1';\n    var worksheet = ctx.workbook.worksheets.getItem(wSheetName);\n    var usedRange = worksheet.getUsedRange();\n    usedRange.load('address');\n    return ctx.sync().then(function() {\n            console.log(usedRange.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: valuesOnly
      description: '<span data-ttu-id="3fdc8-175">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-175">Optional.</span></span> <span data-ttu-id="3fdc8-176">Si true, considère uniquement les cellules avec des valeurs en tant que cellules utilisées (en ignorant la mise en forme).</span><span class="sxs-lookup"><span data-stu-id="3fdc8-176">If true, considers only cells with values as used cells (ignoring formatting).</span></span> <span data-ttu-id="3fdc8-177">\[Jeu d’API : ExcelApi 1.2\]</span><span class="sxs-lookup"><span data-stu-id="3fdc8-177">\[Api set: ExcelApi 1.2\]</span></span>'
      type:
      - boolean
- uid: excel.Excel.Worksheet.getUsedRangeOrNullObject
  summary: >-
    <span data-ttu-id="3fdc8-p120">La plage utilisée est la plus petite plage qui englobe toutes les cellules auxquelles une valeur ou un format est affecté. Si la feuille de calcul entière est vide, cette fonction renvoie un objet null.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-p120">The used range is the smallest range that encompasses any cells that have a value or formatting assigned to them. If the entire worksheet is blank, this function will return a null object.</span></span>


    <span data-ttu-id="3fdc8-180">\[[Du jeu d’API : ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3fdc8-180">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getUsedRangeOrNullObject(valuesOnly)
  fullName: getUsedRangeOrNullObject
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getUsedRangeOrNullObject(valuesOnly?: boolean): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
    parameters:
    - id: valuesOnly
      description: <span data-ttu-id="3fdc8-p121">Facultatif. Prend uniquement en compte les cellules avec des valeurs sous forme de cellules utilisées.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-p121">Optional. Considers only cells with values as used cells.</span></span>
      type:
      - boolean
- uid: excel.Excel.Worksheet.id
  summary: >-
    <span data-ttu-id="3fdc8-p122">Renvoie une valeur qui permet d’identifier la feuille de calcul de façon unique dans un classeur donné. La valeur de l’identificateur reste identique, même lorsque la feuille de calcul est renommée ou déplacée. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-p122">Returns a value that uniquely identifies the worksheet in a given workbook. The value of the identifier remains the same even when the worksheet is renamed or moved. Read-only.</span></span>


    <span data-ttu-id="3fdc8-186">\[[Du jeu d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3fdc8-186">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
- uid: excel.Excel.Worksheet.load
  summary: <span data-ttu-id="3fdc8-187">Files d’attente d’une commande pour charger les propriétés de l’objet spécifiées.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-187">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="3fdc8-188">Vous devez appeler « context.sync() » avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-188">You must call "context.sync()" before reading the properties.</span></span>
  remarks: "<span data-ttu-id=\"3fdc8-189\">Outre cette signature, cette méthode présente les signatures suivantes :</span><span class=\"sxs-lookup\"><span data-stu-id=\"3fdc8-189\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"3fdc8-190\">`load(option?: { select?: string; expand?: string; }): Excel.Worksheet`-Où option.select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options.expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3fdc8-190\">`load(option?: { select?: string; expand?: string; }): Excel.Worksheet` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"3fdc8-191\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Worksheet`-Uniquement disponible sur les types de la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3fdc8-191\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Worksheet` - Only available on collection types.</span></span> <span data-ttu-id=\"3fdc8-192\">Il est similaire à la signature précédente.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3fdc8-192\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"3fdc8-193\">Option.Top Spécifie le nombre maximal d’éléments pouvant être inclus dans le résultat de la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3fdc8-193\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"3fdc8-194\">Option.Skip Spécifie le nombre d’éléments qui doivent être ignoré et non inclus dans le résultat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3fdc8-194\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"3fdc8-195\">Si option.top est spécifié, le jeu de résultats démarre après l’ignorer le nombre spécifié d’éléments.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3fdc8-195\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"3fdc8-196\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"3fdc8-196\">Examples</span></span>\n\n```javascript\n// Get worksheet properties based on sheet name.\nExcel.run(function (ctx) { \n    var wSheetName = 'Sheet1';\n    var worksheet = ctx.workbook.worksheets.getItem(wSheetName);\n    worksheet.load('position')\n    return ctx.sync().then(function() {\n            console.log(worksheet.position);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// Set worksheet position. \nExcel.run(function (ctx) { \n    var wSheetName = 'Sheet1';\n    var worksheet = ctx.workbook.worksheets.getItem(wSheetName);\n    worksheet.position = 2;\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.Worksheet;'
    return:
      type:
      - excel.Excel.Worksheet
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="3fdc8-197">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-197">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.Worksheet.name
  summary: >-
    <span data-ttu-id="3fdc8-198">Nom complet de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-198">The display name of the worksheet.</span></span>


    <span data-ttu-id="3fdc8-199">\[[Du jeu d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3fdc8-199">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: name
  fullName: name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'name: string;'
    return:
      type:
      - string
- uid: excel.Excel.Worksheet.names
  summary: >-
    <span data-ttu-id="3fdc8-p125">Collection de noms inclus dans l’étendue de la feuille de calcul active. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-p125">Collection of names scoped to the current worksheet. Read-only.</span></span>


    <span data-ttu-id="3fdc8-202">\[[Du jeu d’API : ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3fdc8-202">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: names
  fullName: names
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly names: Excel.NamedItemCollection;'
    return:
      type:
      - excel.Excel.NamedItemCollection
- uid: excel.Excel.Worksheet.onActivated
  summary: >-
    <span data-ttu-id="3fdc8-203">Se produit lorsque la feuille de calcul est activée.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-203">Occurs when the worksheet is activated.</span></span>


    <span data-ttu-id="3fdc8-204">\[[Du jeu d’API : ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3fdc8-204">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onActivated
  fullName: onActivated
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onActivated: OfficeExtension.EventHandlers<Excel.WorksheetActivatedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.WorksheetActivatedEventArgs>
- uid: excel.Excel.Worksheet.onCalculated
  summary: >-
    <span data-ttu-id="3fdc8-205">Se produit lorsque la feuille de calcul est calculée.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-205">Occurs when the worksheet is calculated.</span></span>


    <span data-ttu-id="3fdc8-206">\[[Du jeu d’API : ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3fdc8-206">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onCalculated
  fullName: onCalculated
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onCalculated: OfficeExtension.EventHandlers<Excel.WorksheetCalculatedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.WorksheetCalculatedEventArgs>
- uid: excel.Excel.Worksheet.onChanged
  summary: >-
    <span data-ttu-id="3fdc8-207">Se produit lorsque les données modifiées dans une feuille de calcul spécifique.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-207">Occurs when data changed on a specific worksheet.</span></span>


    <span data-ttu-id="3fdc8-208">\[[Du jeu d’API : ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3fdc8-208">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onChanged
  fullName: onChanged
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onChanged: OfficeExtension.EventHandlers<Excel.WorksheetChangedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.WorksheetChangedEventArgs>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"3fdc8-209\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"3fdc8-209\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    sheet.onChanged.add(onChange);\n\n    await context.sync();\n    console.log(\"A handler has been registered for the onChanged event.\");\n});\n```"
- uid: excel.Excel.Worksheet.onDeactivated
  summary: >-
    <span data-ttu-id="3fdc8-210">Se produit lorsque la feuille de calcul est désactivée.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-210">Occurs when the worksheet is deactivated.</span></span>


    <span data-ttu-id="3fdc8-211">\[[Du jeu d’API : ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3fdc8-211">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onDeactivated
  fullName: onDeactivated
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onDeactivated: OfficeExtension.EventHandlers<Excel.WorksheetDeactivatedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.WorksheetDeactivatedEventArgs>
- uid: excel.Excel.Worksheet.onSelectionChanged
  summary: >-
    <span data-ttu-id="3fdc8-212">Se produit lorsque la sélection change sur une feuille de calcul particulière.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-212">Occurs when the selection changes on a specific worksheet.</span></span>


    <span data-ttu-id="3fdc8-213">\[[Du jeu d’API : ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3fdc8-213">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onSelectionChanged
  fullName: onSelectionChanged
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Excel.WorksheetSelectionChangedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.WorksheetSelectionChangedEventArgs>
- uid: excel.Excel.Worksheet.pivotTables
  summary: >-
    <span data-ttu-id="3fdc8-p126">Collection de tableaux croisés dynamiques qui font partie de la feuille de calcul. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-p126">Collection of PivotTables that are part of the worksheet. Read-only.</span></span>


    <span data-ttu-id="3fdc8-216">\[[Du jeu d’API : ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3fdc8-216">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: pivotTables
  fullName: pivotTables
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly pivotTables: Excel.PivotTableCollection;'
    return:
      type:
      - excel.Excel.PivotTableCollection
- uid: excel.Excel.Worksheet.position
  summary: >-
    <span data-ttu-id="3fdc8-217">Position de la feuille de calcul au sein du classeur (sur une base zéro).</span><span class="sxs-lookup"><span data-stu-id="3fdc8-217">The zero-based position of the worksheet within the workbook.</span></span>


    <span data-ttu-id="3fdc8-218">\[[Du jeu d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3fdc8-218">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: position
  fullName: position
  langs:
  - typeScript
  type: property
  syntax:
    content: 'position: number;'
    return:
      type:
      - number
- uid: excel.Excel.Worksheet.protection
  summary: >-
    <span data-ttu-id="3fdc8-p127">Renvoie un objet de protection de feuille pour une feuille de calcul. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-p127">Returns sheet protection object for a worksheet. Read-only.</span></span>


    <span data-ttu-id="3fdc8-221">\[[Du jeu d’API : ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3fdc8-221">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: protection
  fullName: protection
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly protection: Excel.WorksheetProtection;'
    return:
      type:
      - excel.Excel.WorksheetProtection
- uid: excel.Excel.Worksheet.showGridlines
  summary: >-
    <span data-ttu-id="3fdc8-222">Obtient ou définit l’indicateur de quadrillage de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-222">Gets or sets the worksheet's gridlines flag.</span></span> <span data-ttu-id="3fdc8-223">Cet indicateur détermine si un quadrillage est affichée à l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-223">This flag determines whether gridlines are visible to the user.</span></span>


    <span data-ttu-id="3fdc8-224">\[[Du jeu d’API : ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3fdc8-224">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: showGridlines
  fullName: showGridlines
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showGridlines: boolean;'
    return:
      type:
      - boolean
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"3fdc8-225\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"3fdc8-225\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getActiveWorksheet();\n    sheet.showGridlines = true;\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.Worksheet.showHeadings
  summary: >-
    <span data-ttu-id="3fdc8-226">Obtient ou définit l’indicateur d’en-tête de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-226">Gets or sets the worksheet's headings flag.</span></span> <span data-ttu-id="3fdc8-227">Cet indicateur détermine si les titres sont visibles par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-227">This flag determines whether headings are visible to the user.</span></span>


    <span data-ttu-id="3fdc8-228">\[[Du jeu d’API : ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3fdc8-228">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: showHeadings
  fullName: showHeadings
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showHeadings: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Worksheet.standardHeight
  summary: >-
    <span data-ttu-id="3fdc8-229">Renvoie la hauteur standard (par défaut) de toutes les lignes dans la feuille de calcul, en points.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-229">Returns the standard (default) height of all the rows in the worksheet, in points.</span></span> <span data-ttu-id="3fdc8-230">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-230">Read-only.</span></span>


    <span data-ttu-id="3fdc8-231">\[[Du jeu d’API : ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3fdc8-231">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: standardHeight
  fullName: standardHeight
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly standardHeight: number;'
    return:
      type:
      - number
- uid: excel.Excel.Worksheet.standardWidth
  summary: >-
    <span data-ttu-id="3fdc8-232">Renvoie ou définit la largeur standard (par défaut) de toutes les colonnes dans la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-232">Returns or sets the standard (default) width of all the columns in the worksheet.</span></span> <span data-ttu-id="3fdc8-233">Une unité de largeur de colonne est égale à la largeur d’un caractère dans le style Normal.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-233">One unit of column width is equal to the width of one character in the Normal style.</span></span> <span data-ttu-id="3fdc8-234">Pour les polices proportionnelles, la largeur du caractère 0 (zéro) est utilisée.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-234">For proportional fonts, the width of the character 0 (zero) is used.</span></span>


    <span data-ttu-id="3fdc8-235">\[[Du jeu d’API : ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3fdc8-235">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: standardWidth
  fullName: standardWidth
  langs:
  - typeScript
  type: property
  syntax:
    content: 'standardWidth: number;'
    return:
      type:
      - number
- uid: excel.Excel.Worksheet.tabColor
  summary: >-
    <span data-ttu-id="3fdc8-236">Obtient ou modifie la couleur d’onglet de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-236">Gets or sets the worksheet tab color.</span></span> <span data-ttu-id="3fdc8-237">Lors de l’extraction de la couleur d’onglet, si la feuille de calcul est invisible, la valeur sera nulle.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-237">When retrieving the tab color, if the worksheet is invisible, the value will be null.</span></span> <span data-ttu-id="3fdc8-238">Si la feuille de calcul est visible, mais la couleur d’onglet est définie sur auto, une chaîne vide est renvoyée.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-238">If the worksheet is visible but the tab color is set to auto, an empty string will be returned.</span></span> <span data-ttu-id="3fdc8-239">Dans le cas contraire, la propriété est fixée à une couleur, sous la forme «\#123456" lors de la définition de la couleur, utilisez une chaîne vide pour définir une couleur « automatique », ou une couleur réelle dans le cas contraire.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-239">Otherwise, the property will be set to a color, in the form "\#123456" When setting the color, use an empty-string to set an "auto" color, or a real color otherwise.</span></span>


    <span data-ttu-id="3fdc8-240">\[[Du jeu d’API : ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3fdc8-240">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: tabColor
  fullName: tabColor
  langs:
  - typeScript
  type: property
  syntax:
    content: 'tabColor: string;'
    return:
      type:
      - string
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"3fdc8-241\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"3fdc8-241\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const activeSheet = context.workbook.worksheets.getActiveWorksheet();\n    activeSheet.tabColor = \"#FF0000\";\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.Worksheet.tables
  summary: >-
    <span data-ttu-id="3fdc8-p133">Collection de tableaux qui font partie de la feuille de calcul. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-p133">Collection of tables that are part of the worksheet. Read-only.</span></span>


    <span data-ttu-id="3fdc8-244">\[[Du jeu d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3fdc8-244">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: tables
  fullName: tables
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly tables: Excel.TableCollection;'
    return:
      type:
      - excel.Excel.TableCollection
- uid: excel.Excel.Worksheet.toJSON
  summary: <span data-ttu-id="3fdc8-245">Remplace le code JavaScript `toJSON()` méthode afin de fournir une sortie plus utile lorsqu’un objet API est passé à `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-245">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="3fdc8-246">(`JSON.stringify`<!-- -->, à son tour, appelle le `toJSON` méthode de l’objet qui lui est passé.) Tandis que l’objet Excel.Worksheet d’origine est un objet d’API, la `toJSON` méthode renvoie un objet JavaScript brut (typée en tant que `Excel.Interfaces.WorksheetData` <!-- -->) qui contient des copies superficielles de toutes les propriétés enfant chargé à partir de l’objet d’origine.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-246">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Worksheet object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.WorksheetData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.WorksheetData;'
    return:
      type:
      - excel.Excel.Interfaces.WorksheetData
      description: ''
- uid: excel.Excel.Worksheet.visibility
  summary: >-
    <span data-ttu-id="3fdc8-247">La visibilité de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="3fdc8-247">The Visibility of the worksheet.</span></span>


    <span data-ttu-id="3fdc8-248">\[[Du jeu d’API : ExcelApi 1.1 pour la lecture de visibilité ; 1.2 pour le paramètre it.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span><span class="sxs-lookup"><span data-stu-id="3fdc8-248">\[ [API set: ExcelApi 1.1 for reading visibility; 1.2 for setting it.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span></span> <span data-ttu-id="3fdc8-249">\]</span><span class="sxs-lookup"><span data-stu-id="3fdc8-249"></span></span>
  name: visibility
  fullName: visibility
  langs:
  - typeScript
  type: property
  syntax:
    content: 'visibility: Excel.SheetVisibility | "Visible" | "Hidden" | "VeryHidden";'
    return:
      type:
      - Excel.SheetVisibility | "Visible" | "Hidden" | "VeryHidden"
