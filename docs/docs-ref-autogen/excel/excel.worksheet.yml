### YamlMime:UniversalReference
items:
  - uid: excel.Excel.Worksheet
    summary: |-
      <span data-ttu-id="e5f32-101">Une feuille de calcul Excel est une grille de cellules.</span><span class="sxs-lookup"><span data-stu-id="e5f32-101">An Excel worksheet is a grid of cells.</span></span> <span data-ttu-id="e5f32-102">Elle peut contenir des données, des tableaux, des graphiques, etc.</span><span class="sxs-lookup"><span data-stu-id="e5f32-102">It can contain data, tables, charts, etc.</span></span>

      <span data-ttu-id="e5f32-103">\[[Ensemble d'API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f32-103">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.Worksheet
    fullName: Excel.Worksheet
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.Worksheet.activate
      - excel.Excel.Worksheet.autoFilter
      - excel.Excel.Worksheet.calculate
      - excel.Excel.Worksheet.charts
      - excel.Excel.Worksheet.comments
      - excel.Excel.Worksheet.context
      - excel.Excel.Worksheet.copy
      - excel.Excel.Worksheet.copy_1
      - excel.Excel.Worksheet.delete
      - excel.Excel.Worksheet.enableCalculation
      - excel.Excel.Worksheet.findAll
      - excel.Excel.Worksheet.findAllOrNullObject
      - excel.Excel.Worksheet.freezePanes
      - excel.Excel.Worksheet.getCell
      - excel.Excel.Worksheet.getNext
      - excel.Excel.Worksheet.getNextOrNullObject
      - excel.Excel.Worksheet.getPrevious
      - excel.Excel.Worksheet.getPreviousOrNullObject
      - excel.Excel.Worksheet.getRange
      - excel.Excel.Worksheet.getRangeByIndexes
      - excel.Excel.Worksheet.getRanges
      - excel.Excel.Worksheet.getUsedRange
      - excel.Excel.Worksheet.getUsedRangeOrNullObject
      - excel.Excel.Worksheet.horizontalPageBreaks
      - excel.Excel.Worksheet.id
      - excel.Excel.Worksheet.load
      - excel.Excel.Worksheet.load_1
      - excel.Excel.Worksheet.load_2
      - excel.Excel.Worksheet.name
      - excel.Excel.Worksheet.names
      - excel.Excel.Worksheet.onActivated
      - excel.Excel.Worksheet.onCalculated
      - excel.Excel.Worksheet.onChanged
      - excel.Excel.Worksheet.onDeactivated
      - excel.Excel.Worksheet.onFiltered
      - excel.Excel.Worksheet.onFormatChanged
      - excel.Excel.Worksheet.onSelectionChanged
      - excel.Excel.Worksheet.pageLayout
      - excel.Excel.Worksheet.pivotTables
      - excel.Excel.Worksheet.position
      - excel.Excel.Worksheet.protection
      - excel.Excel.Worksheet.replaceAll
      - excel.Excel.Worksheet.set
      - excel.Excel.Worksheet.set_1
      - excel.Excel.Worksheet.shapes
      - excel.Excel.Worksheet.showGridlines
      - excel.Excel.Worksheet.showHeadings
      - excel.Excel.Worksheet.slicers
      - excel.Excel.Worksheet.standardHeight
      - excel.Excel.Worksheet.standardWidth
      - excel.Excel.Worksheet.tabColor
      - excel.Excel.Worksheet.tables
      - excel.Excel.Worksheet.toJSON
      - excel.Excel.Worksheet.verticalPageBreaks
      - excel.Excel.Worksheet.visibility
  - uid: excel.Excel.Worksheet.activate
    summary: |-
      <span data-ttu-id="e5f32-104">Active la feuille de calcul dans l’interface utilisateur Excel.</span><span class="sxs-lookup"><span data-stu-id="e5f32-104">Activate the worksheet in the Excel UI.</span></span>

      <span data-ttu-id="e5f32-105">\[[Ensemble d'API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f32-105">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: activate()
    fullName: activate()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'activate(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e5f32-106">Exemples</span><span class="sxs-lookup"><span data-stu-id="e5f32-106">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var wSheetName = 'Sheet1';
              var worksheet = ctx.workbook.worksheets.getItem(wSheetName);
              worksheet.activate();
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.Worksheet.autoFilter
    summary: |-
      <span data-ttu-id="e5f32-107">Représente l’objet AutoFilter de filtre automatique de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="e5f32-107">Represents the AutoFilter object of the worksheet.</span></span> <span data-ttu-id="e5f32-108">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="e5f32-108">Read-Only.</span></span>

      <span data-ttu-id="e5f32-109">\[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f32-109">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: autoFilter
    fullName: autoFilter
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly autoFilter: Excel.AutoFilter;'
      return:
        type:
          - excel.Excel.AutoFilter
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e5f32-110">Exemples</span><span class="sxs-lookup"><span data-stu-id="e5f32-110">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getActiveWorksheet();
              const farmData = sheet.getUsedRange();

              // This filter will only show the rows with the top 25% of values in column 3.
              sheet.autoFilter.apply(farmData, 3, { criterion1: "25", filterOn: Excel.FilterOn.topPercent });
              await context.sync();
          });
          ```
  - uid: excel.Excel.Worksheet.calculate
    summary: |-
      <span data-ttu-id="e5f32-111">Calcule toutes les cellules d’une feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="e5f32-111">Calculates all cells on a worksheet.</span></span>

      <span data-ttu-id="e5f32-112">\[[Ensemble d'API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f32-112">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: calculate(markAllDirty)
    fullName: calculate(markAllDirty)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'calculate(markAllDirty: boolean): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: markAllDirty
          description: '<span data-ttu-id="e5f32-113">True, pour marquer tout comme modifié.</span><span class="sxs-lookup"><span data-stu-id="e5f32-113">True, to mark all as dirty.</span></span>'
          type:
            - boolean
  - uid: excel.Excel.Worksheet.charts
    summary: |-
      <span data-ttu-id="e5f32-114">Renvoie une collection de graphiques qui font partie de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="e5f32-114">Returns collection of charts that are part of the worksheet.</span></span> <span data-ttu-id="e5f32-115">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="e5f32-115">Read-only.</span></span>

      <span data-ttu-id="e5f32-116">\[[Ensemble d'API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f32-116">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: charts
    fullName: charts
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly charts: Excel.ChartCollection;'
      return:
        type:
          - excel.Excel.ChartCollection
  - uid: excel.Excel.Worksheet.comments
    summary: |-
      <span data-ttu-id="e5f32-117">Renvoie une collection de tous les objets Lecteur sur l’ordinateur.</span><span class="sxs-lookup"><span data-stu-id="e5f32-117">Returns a collection of all the Comments objects on the worksheet.</span></span> <span data-ttu-id="e5f32-118">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="e5f32-118">Read-only.</span></span>

      <span data-ttu-id="e5f32-119">\[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f32-119">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: comments
    fullName: comments
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly comments: Excel.CommentCollection;'
      return:
        type:
          - excel.Excel.CommentCollection
  - uid: excel.Excel.Worksheet.context
    summary: <span data-ttu-id="e5f32-120">Contexte de demande associé à l'objet.</span><span class="sxs-lookup"><span data-stu-id="e5f32-120">The request context associated with the object.</span></span> <span data-ttu-id="e5f32-121">Cette opération connecte le processus du complément au processus de l'application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="e5f32-121">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.Worksheet.copy
    summary: |-
      <span data-ttu-id="e5f32-122">Copie une feuille de calcul et la place à la position spécifiée.</span><span class="sxs-lookup"><span data-stu-id="e5f32-122">Copy a worksheet and place it at the specified position.</span></span> <span data-ttu-id="e5f32-123">Renvoie la feuille de calcul copiée.</span><span class="sxs-lookup"><span data-stu-id="e5f32-123">Return the copied worksheet.</span></span>

      <span data-ttu-id="e5f32-124">\[[Ensemble d'API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f32-124">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'copy(positionType, relativeTo)'
    fullName: 'copy(positionType, relativeTo)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'copy(positionType?: Excel.WorksheetPositionType, relativeTo?: Excel.Worksheet): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e5f32-125">Exemples</span><span class="sxs-lookup"><span data-stu-id="e5f32-125">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {

              let myWorkbook = context.workbook;
              let sampleSheet = myWorkbook.worksheets.getActiveWorksheet();
              let copiedSheet = sampleSheet.copy("End")

              sampleSheet.load("name");
              copiedSheet.load("name");

              await context.sync();

              console.log("'" + sampleSheet.name + "' was copied to '" + copiedSheet.name + "'")
          });
          ```
      parameters:
        - id: positionType
          description: <span data-ttu-id="e5f32-126">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="e5f32-126">Optional.</span></span>
          type:
            - excel.Excel.WorksheetPositionType
        - id: relativeTo
          description: <span data-ttu-id="e5f32-127">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="e5f32-127">Optional.</span></span>
          type:
            - excel.Excel.Worksheet
  - uid: excel.Excel.Worksheet.copy_1
    summary: |-
      <span data-ttu-id="e5f32-128">Copie une feuille de calcul et la place à la position spécifiée.</span><span class="sxs-lookup"><span data-stu-id="e5f32-128">Copy a worksheet and place it at the specified position.</span></span> <span data-ttu-id="e5f32-129">Renvoie la feuille de calcul copiée.</span><span class="sxs-lookup"><span data-stu-id="e5f32-129">Return the copied worksheet.</span></span>

      <span data-ttu-id="e5f32-130">\[[Ensemble d'API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f32-130">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'copy(positionTypeString, relativeTo)'
    fullName: 'copy(positionTypeString, relativeTo)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'copy(positionTypeString?: "None" | "Before" | "After" | "Beginning" | "End", relativeTo?: Excel.Worksheet): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: ''
      parameters:
        - id: positionTypeString
          description: <span data-ttu-id="e5f32-131">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="e5f32-131">Optional.</span></span>
          type:
            - '"None" | "Before" | "After" | "Beginning" | "End"'
        - id: relativeTo
          description: <span data-ttu-id="e5f32-132">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="e5f32-132">Optional.</span></span>
          type:
            - excel.Excel.Worksheet
  - uid: excel.Excel.Worksheet.delete
    summary: |-
      <span data-ttu-id="e5f32-133">Supprime la feuille de calcul du classeur.</span><span class="sxs-lookup"><span data-stu-id="e5f32-133">Deletes the worksheet from the workbook.</span></span>

      <span data-ttu-id="e5f32-134">\[[Ensemble d'API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f32-134">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e5f32-135">Exemples</span><span class="sxs-lookup"><span data-stu-id="e5f32-135">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var wSheetName = 'Sheet1';
              var worksheet = ctx.workbook.worksheets.getItem(wSheetName);
              worksheet.delete();
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.Worksheet.enableCalculation
    summary: |-
      <span data-ttu-id="e5f32-136">Obtient ou définit EnableCalculation, propriété de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="e5f32-136">Gets or sets the enableCalculation property of the worksheet.</span></span> <span data-ttu-id="e5f32-137">La valeur true si Excel recalcule la feuille de calcul lorsque cela est nécessaire.</span><span class="sxs-lookup"><span data-stu-id="e5f32-137">True if Excel recalculates the worksheet when necessary.</span></span> <span data-ttu-id="e5f32-138">Elle a la valeur False si Excel ne recalcule pas la feuille.</span><span class="sxs-lookup"><span data-stu-id="e5f32-138">False if Excel doesn't recalculate the sheet.</span></span>

      <span data-ttu-id="e5f32-139">\[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f32-139">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: enableCalculation
    fullName: enableCalculation
    langs:
      - typeScript
    type: property
    syntax:
      content: 'enableCalculation: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Worksheet.findAll
    summary: |-
      <span data-ttu-id="e5f32-140">Trouve toutes les occurrences de la chaîne donnée en fonction des critères spécifiées et renvoie un objet RangeAreas comprenant une ou plusieurs plages rectangulaires.</span><span class="sxs-lookup"><span data-stu-id="e5f32-140">Finds all occurrences of the given string based on the criteria specified and returns them as a RangeAreas object, comprising one or more rectangular ranges.</span></span>

      <span data-ttu-id="e5f32-141">\[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f32-141">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: 'findAll(text, criteria)'
    fullName: 'findAll(text, criteria)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'findAll(text: string, criteria: Excel.WorksheetSearchCriteria): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: '<span data-ttu-id="e5f32-142">Objet RangeArea, comprenant une ou plusieurs plages rectangulaires, qui correspondent aux critères de recherche.</span><span class="sxs-lookup"><span data-stu-id="e5f32-142">A RangeArea object, comprising one or more rectangular ranges, that matches the search criteria.</span></span> <span data-ttu-id="e5f32-143">Si aucune cellule ne répond à ce critère, une erreur ItemNotFound est générée.</span><span class="sxs-lookup"><span data-stu-id="e5f32-143">If no cells meet this criteria, an ItemNotFound error will be thrown.</span></span>'
      parameters:
        - id: text
          description: <span data-ttu-id="e5f32-144">Chaîne à rechercher.</span><span class="sxs-lookup"><span data-stu-id="e5f32-144">String to find.</span></span>
          type:
            - string
        - id: criteria
          description: <span data-ttu-id="e5f32-145">Critères supplémentaires.</span><span class="sxs-lookup"><span data-stu-id="e5f32-145">Additional Criteria.</span></span>
          type:
            - excel.Excel.WorksheetSearchCriteria
  - uid: excel.Excel.Worksheet.findAllOrNullObject
    summary: |-
      <span data-ttu-id="e5f32-146">Trouve toutes les occurrences de la chaîne donnée en fonction des critères spécifiées et renvoie un objet RangeAreas comprenant une ou plusieurs plages rectangulaires.</span><span class="sxs-lookup"><span data-stu-id="e5f32-146">Finds all occurrences of the given string based on the criteria specified and returns them as a RangeAreas object, comprising one or more rectangular ranges.</span></span>

      <span data-ttu-id="e5f32-147">\[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f32-147">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: 'findAllOrNullObject(text, criteria)'
    fullName: 'findAllOrNullObject(text, criteria)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'findAllOrNullObject(text: string, criteria: Excel.WorksheetSearchCriteria): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: |-
          <span data-ttu-id="e5f32-148">Objet RangeArea, comprenant une ou plusieurs plages rectangulaires, qui correspondent aux critères de recherche.</span><span class="sxs-lookup"><span data-stu-id="e5f32-148">A RangeArea object, comprising one or more rectangular ranges, that matches the search criteria.</span></span> <span data-ttu-id="e5f32-149">S'il n'y a aucune correspondance, cette fonction renverra un objet null.</span><span class="sxs-lookup"><span data-stu-id="e5f32-149">If there are no matches, this function will return a null object.</span></span>

          #### <a name="examples"></a><span data-ttu-id="e5f32-150">Exemples</span><span class="sxs-lookup"><span data-stu-id="e5f32-150">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const foundRanges = sheet.findAllOrNullObject("Complete", {
                  completeMatch: true,
                  matchCase: false
              });

              await context.sync();

              if (foundRanges.isNullObject) {
                  console.log("No complete projects");
              } else {
                  foundRanges.format.fill.color = "green"
              }
          });
          ```
      parameters:
        - id: text
          description: <span data-ttu-id="e5f32-151">Chaîne à rechercher.</span><span class="sxs-lookup"><span data-stu-id="e5f32-151">String to find.</span></span>
          type:
            - string
        - id: criteria
          description: <span data-ttu-id="e5f32-152">Critères supplémentaires.</span><span class="sxs-lookup"><span data-stu-id="e5f32-152">Additional Criteria.</span></span>
          type:
            - excel.Excel.WorksheetSearchCriteria
  - uid: excel.Excel.Worksheet.freezePanes
    summary: |-
      <span data-ttu-id="e5f32-153">Obtient un objet qui peut être utilisé pour manipuler les volets figés de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="e5f32-153">Gets an object that can be used to manipulate frozen panes on the worksheet.</span></span> <span data-ttu-id="e5f32-154">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="e5f32-154">Read-only.</span></span>

      <span data-ttu-id="e5f32-155">\[[Ensemble d'API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f32-155">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: freezePanes
    fullName: freezePanes
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly freezePanes: Excel.WorksheetFreezePanes;'
      return:
        type:
          - excel.Excel.WorksheetFreezePanes
  - uid: excel.Excel.Worksheet.getCell
    summary: |-
      <span data-ttu-id="e5f32-156">Renvoie l’objet de plage qui contient une cellule donnée sur la base des numéros de ligne et de colonne.</span><span class="sxs-lookup"><span data-stu-id="e5f32-156">Gets the range object containing the single cell based on row and column numbers.</span></span> <span data-ttu-id="e5f32-157">La cellule peut être située en dehors des limites de sa plage parente, tant qu'elle reste dans la grille de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="e5f32-157">The cell can be outside the bounds of its parent range, so long as it stays within the worksheet grid.</span></span>

      <span data-ttu-id="e5f32-158">\[[Ensemble d'API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f32-158">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'getCell(row, column)'
    fullName: 'getCell(row, column)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCell(row: number, column: number): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e5f32-159">Exemples</span><span class="sxs-lookup"><span data-stu-id="e5f32-159">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "A1:F8";
              var worksheet = ctx.workbook.worksheets.getItem(sheetName);
              var cell = worksheet.getCell(0,0);
              cell.load('address');
              return ctx.sync().then(function() {
                  console.log(cell.address);
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: row
          description: <span data-ttu-id="e5f32-160">Numéro de ligne de la cellule à récupérer.</span><span class="sxs-lookup"><span data-stu-id="e5f32-160">The row number of the cell to be retrieved.</span></span> <span data-ttu-id="e5f32-161">Avec indice zéro.</span><span class="sxs-lookup"><span data-stu-id="e5f32-161">Zero-indexed.</span></span>
          type:
            - number
        - id: column
          description: <span data-ttu-id="e5f32-162">Numéro de colonne de la cellule à récupérer.</span><span class="sxs-lookup"><span data-stu-id="e5f32-162">the column number of the cell to be retrieved.</span></span> <span data-ttu-id="e5f32-163">Avec indice zéro.</span><span class="sxs-lookup"><span data-stu-id="e5f32-163">Zero-indexed.</span></span>
          type:
            - number
  - uid: excel.Excel.Worksheet.getNext
    summary: |-
      <span data-ttu-id="e5f32-164">Obtient la feuille de calcul qui suit celle-ci.</span><span class="sxs-lookup"><span data-stu-id="e5f32-164">Gets the worksheet that follows this one.</span></span> <span data-ttu-id="e5f32-165">S'il n'existe aucune feuille de calcul à la suite de celle-ci, cette méthode génère une erreur.</span><span class="sxs-lookup"><span data-stu-id="e5f32-165">If there are no worksheets following this one, this method will throw an error.</span></span>

      <span data-ttu-id="e5f32-166">\[[Ensemble d'API: ExcelApi 1,5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f32-166">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getNext(visibleOnly)
    fullName: getNext(visibleOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNext(visibleOnly?: boolean): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e5f32-167">Exemples</span><span class="sxs-lookup"><span data-stu-id="e5f32-167">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheets = context.workbook.worksheets;

              // We don't want to include the default worksheet that was created
              // when the workbook was created, so our "firstSheet" will be the one
              // after the literal first. Note chaining of navigation methods.
              const firstSheet = sheets.getFirst().getNext();
              const lastSheet = sheets.getLast();
              const firstTaxRateRange = firstSheet.getRange("B2");
              const lastTaxRateRange = lastSheet.getRange("B2");

              firstSheet.load("name");
              lastSheet.load("name");
              firstTaxRateRange.load("text");
              lastTaxRateRange.load("text");

              await context.sync();

              let firstYear = firstSheet.name.substr(5, 4);
              let lastYear = lastSheet.name.substr(5, 4);
              console.log(`Tax Rate change from ${firstYear} to ${lastYear}`, `Tax rate for ${firstYear}: ${firstTaxRateRange.text[0][0]}\nTax rate for ${lastYear}: ${lastTaxRateRange.text[0][0]}`)

              await context.sync();
          });
          ```
      parameters:
        - id: visibleOnly
          description: '<span data-ttu-id="e5f32-168">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="e5f32-168">Optional.</span></span> <span data-ttu-id="e5f32-169">Si la valeur est true, ne prend en compte que les feuilles de calcul visibles, en ignorant celles qui sont masquées.</span><span class="sxs-lookup"><span data-stu-id="e5f32-169">If true, considers only visible worksheets, skipping over any hidden ones.</span></span>'
          type:
            - boolean
  - uid: excel.Excel.Worksheet.getNextOrNullObject
    summary: |-
      <span data-ttu-id="e5f32-170">Obtient la feuille de calcul qui suit celle-ci.</span><span class="sxs-lookup"><span data-stu-id="e5f32-170">Gets the worksheet that follows this one.</span></span> <span data-ttu-id="e5f32-171">S'il n'existe aucune feuille de calcul à la suite de celle-ci, cette méthode renvoie un objet null.</span><span class="sxs-lookup"><span data-stu-id="e5f32-171">If there are no worksheets following this one, this method will return a null object.</span></span>

      <span data-ttu-id="e5f32-172">\[[Ensemble d'API: ExcelApi 1,5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f32-172">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getNextOrNullObject(visibleOnly)
    fullName: getNextOrNullObject(visibleOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNextOrNullObject(visibleOnly?: boolean): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: ''
      parameters:
        - id: visibleOnly
          description: '<span data-ttu-id="e5f32-173">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="e5f32-173">Optional.</span></span> <span data-ttu-id="e5f32-174">Si la valeur est true, ne prend en compte que les feuilles de calcul visibles, en ignorant celles qui sont masquées.</span><span class="sxs-lookup"><span data-stu-id="e5f32-174">If true, considers only visible worksheets, skipping over any hidden ones.</span></span>'
          type:
            - boolean
  - uid: excel.Excel.Worksheet.getPrevious
    summary: |-
      <span data-ttu-id="e5f32-175">Obtient la feuille de calcul qui précède celle-ci.</span><span class="sxs-lookup"><span data-stu-id="e5f32-175">Gets the worksheet that precedes this one.</span></span> <span data-ttu-id="e5f32-176">S'il n'y a pas de feuille de calcul précédente, cette méthode génère une erreur.</span><span class="sxs-lookup"><span data-stu-id="e5f32-176">If there are no previous worksheets, this method will throw an error.</span></span>

      <span data-ttu-id="e5f32-177">\[[Ensemble d'API: ExcelApi 1,5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f32-177">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getPrevious(visibleOnly)
    fullName: getPrevious(visibleOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPrevious(visibleOnly?: boolean): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e5f32-178">Exemples</span><span class="sxs-lookup"><span data-stu-id="e5f32-178">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheets = context.workbook.worksheets;
              const currentSheet = sheets.getActiveWorksheet();
              const previousYearSheet = currentSheet.getPrevious();
              const currentTaxDueRange = currentSheet.getRange("C2");
              const previousTaxDueRange = previousYearSheet.getRange("C2");

              currentSheet.load("name");
              previousYearSheet.load("name");
              currentTaxDueRange.load("text");
              previousTaxDueRange.load("text");

              await context.sync();

              let currentYear = currentSheet.name.substr(5, 4);
              let previousYear = previousYearSheet.name.substr(5, 4);
              console.log("Two Year Tax Due Comparison", `Tax due for ${currentYear} was ${currentTaxDueRange.text[0][0]}\nTax due for ${previousYear} was ${previousTaxDueRange.text[0][0]}`)

              await context.sync();
          });
          ```
      parameters:
        - id: visibleOnly
          description: '<span data-ttu-id="e5f32-179">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="e5f32-179">Optional.</span></span> <span data-ttu-id="e5f32-180">Si la valeur est true, ne prend en compte que les feuilles de calcul visibles, en ignorant celles qui sont masquées.</span><span class="sxs-lookup"><span data-stu-id="e5f32-180">If true, considers only visible worksheets, skipping over any hidden ones.</span></span>'
          type:
            - boolean
  - uid: excel.Excel.Worksheet.getPreviousOrNullObject
    summary: |-
      <span data-ttu-id="e5f32-181">Obtient la feuille de calcul qui précède celle-ci.</span><span class="sxs-lookup"><span data-stu-id="e5f32-181">Gets the worksheet that precedes this one.</span></span> <span data-ttu-id="e5f32-182">S'il n'y a pas de feuille de calcul précédente, cette méthode renvoie une valeur null.</span><span class="sxs-lookup"><span data-stu-id="e5f32-182">If there are no previous worksheets, this method will return a null objet.</span></span>

      <span data-ttu-id="e5f32-183">\[[Ensemble d'API: ExcelApi 1,5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f32-183">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getPreviousOrNullObject(visibleOnly)
    fullName: getPreviousOrNullObject(visibleOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPreviousOrNullObject(visibleOnly?: boolean): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: ''
      parameters:
        - id: visibleOnly
          description: '<span data-ttu-id="e5f32-184">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="e5f32-184">Optional.</span></span> <span data-ttu-id="e5f32-185">Si la valeur est true, ne prend en compte que les feuilles de calcul visibles, en ignorant celles qui sont masquées.</span><span class="sxs-lookup"><span data-stu-id="e5f32-185">If true, considers only visible worksheets, skipping over any hidden ones.</span></span>'
          type:
            - boolean
  - uid: excel.Excel.Worksheet.getRange
    summary: |-
      <span data-ttu-id="e5f32-186">Obtient l'objet de plage, représentant un seul bloc de cellules rectangulaires, spécifié par l'adresse ou le nom.</span><span class="sxs-lookup"><span data-stu-id="e5f32-186">Gets the range object, representing a single rectangular block of cells, specified by the address or name.</span></span>

      <span data-ttu-id="e5f32-187">\[[Ensemble d'API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f32-187">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRange(address)
    fullName: getRange(address)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(address?: string): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e5f32-188">Exemples</span><span class="sxs-lookup"><span data-stu-id="e5f32-188">Examples</span></span>

          ```javascript
          // Below example uses range address to get the range object.
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "A1:F8";
              var worksheet = ctx.workbook.worksheets.getItem(sheetName);
              var range = worksheet.getRange(rangeAddress);
              range.load('cellCount');
              return ctx.sync().then(function() {
                  console.log(range.cellCount);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Below example uses a named-range to get the range object.
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeName = 'MyRange';
              var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeName);
              range.load('address');
              return ctx.sync().then(function() {
                  console.log(range.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: address
          description: '<span data-ttu-id="e5f32-189">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="e5f32-189">Optional.</span></span> <span data-ttu-id="e5f32-190">La chaîne représentant l''adresse ou le nom de la plage.</span><span class="sxs-lookup"><span data-stu-id="e5f32-190">The string representing the address or name of the range.</span></span> <span data-ttu-id="e5f32-191">Par exemple, «a1: B2».</span><span class="sxs-lookup"><span data-stu-id="e5f32-191">For example, "A1:B2".</span></span> <span data-ttu-id="e5f32-192">Si cette propriété n’est pas définie, la plage de la feuille de calcul toute entière est renvoyée.</span><span class="sxs-lookup"><span data-stu-id="e5f32-192">If not specified, the entire worksheet range is returned.</span></span>'
          type:
            - string
  - uid: excel.Excel.Worksheet.getRangeByIndexes
    summary: |-
      <span data-ttu-id="e5f32-193">Obtient l’objet plage commençant à un index de ligne et de colonne particulier et couvrant un certain nombre de lignes et de colonnes.</span><span class="sxs-lookup"><span data-stu-id="e5f32-193">Gets the range object beginning at a particular row index and column index, and spanning a certain number of rows and columns.</span></span>

      <span data-ttu-id="e5f32-194">\[[Ensemble d'API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f32-194">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'getRangeByIndexes(startRow, startColumn, rowCount, columnCount)'
    fullName: 'getRangeByIndexes(startRow, startColumn, rowCount, columnCount)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRangeByIndexes(startRow: number, startColumn: number, rowCount: number, columnCount: number): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
      parameters:
        - id: startRow
          description: <span data-ttu-id="e5f32-195">Ligne de début (indexé à zéro).</span><span class="sxs-lookup"><span data-stu-id="e5f32-195">Start row (zero-indexed).</span></span>
          type:
            - number
        - id: startColumn
          description: <span data-ttu-id="e5f32-196">Colonne de début (indexée à zéro).</span><span class="sxs-lookup"><span data-stu-id="e5f32-196">Start column (zero-indexed).</span></span>
          type:
            - number
        - id: rowCount
          description: <span data-ttu-id="e5f32-197">Nombre de lignes à inclure dans la plage.</span><span class="sxs-lookup"><span data-stu-id="e5f32-197">Number of rows to include in the range.</span></span>
          type:
            - number
        - id: columnCount
          description: <span data-ttu-id="e5f32-198">Nombre de colonnes à inclure dans la plage.</span><span class="sxs-lookup"><span data-stu-id="e5f32-198">Number of columns to include in the range.</span></span>
          type:
            - number
  - uid: excel.Excel.Worksheet.getRanges
    summary: |-
      <span data-ttu-id="e5f32-199">Obtient l’objet RangeAreas représentant un ou plusieurs blocs de plages rectangulaires, spécifiés par nom ou l’adresse.</span><span class="sxs-lookup"><span data-stu-id="e5f32-199">Gets the RangeAreas object, representing one or more blocks of rectangular ranges, specified by the address or name.</span></span>

      <span data-ttu-id="e5f32-200">\[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f32-200">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getRanges(address)
    fullName: getRanges(address)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRanges(address?: string): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e5f32-201">Exemples</span><span class="sxs-lookup"><span data-stu-id="e5f32-201">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {

              const sheet = context.workbook.worksheets.getActiveWorksheet();
              const specifiedRanges = sheet.getRanges("D3:D5, G3:G5");
              specifiedRanges.format.fill.color = "pink";

              await context.sync();
          })
          ```
      parameters:
        - id: address
          description: '<span data-ttu-id="e5f32-202">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="e5f32-202">Optional.</span></span> <span data-ttu-id="e5f32-203">Chaîne contenant les adresses ou les noms des plages individuelles séparées par des virgules.</span><span class="sxs-lookup"><span data-stu-id="e5f32-203">A string containing the comma-separated addresses or names of the individual ranges.</span></span> <span data-ttu-id="e5f32-204">Par exemple, «a1: B2, A5: B5».</span><span class="sxs-lookup"><span data-stu-id="e5f32-204">For example, "A1:B2, A5:B5".</span></span> <span data-ttu-id="e5f32-205">Si ce n''est pas spécifié, un objet RangeArea est renvoyé pour l''intégralité de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="e5f32-205">If not specified, an RangeArea object for the entire worksheet is returned.</span></span>'
          type:
            - string
  - uid: excel.Excel.Worksheet.getUsedRange
    summary: |-
      <span data-ttu-id="e5f32-206">La plage utilisée est la plus petite plage qui englobe toutes les cellules auxquelles une valeur ou un format est affecté.</span><span class="sxs-lookup"><span data-stu-id="e5f32-206">The used range is the smallest range that encompasses any cells that have a value or formatting assigned to them.</span></span> <span data-ttu-id="e5f32-207">Si la feuille de calcul entière est vide, cette fonction renvoie la cellule supérieure gauche (autrement dit, elle ne génère *pas* d'erreur).</span><span class="sxs-lookup"><span data-stu-id="e5f32-207">If the entire worksheet is blank, this function will return the top left cell (i.e. it will *not* throw an error).</span></span>

      <span data-ttu-id="e5f32-208">\[[Ensemble d'API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f32-208">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getUsedRange(valuesOnly)
    fullName: getUsedRange(valuesOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getUsedRange(valuesOnly?: boolean): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e5f32-209">Exemples</span><span class="sxs-lookup"><span data-stu-id="e5f32-209">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var wSheetName = 'Sheet1';
              var worksheet = ctx.workbook.worksheets.getItem(wSheetName);
              var usedRange = worksheet.getUsedRange();
              usedRange.load('address');
              return ctx.sync().then(function() {
                      console.log(usedRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: valuesOnly
          description: '<span data-ttu-id="e5f32-210">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="e5f32-210">Optional.</span></span> <span data-ttu-id="e5f32-211">Si la valeur est true, ne prend en compte que les cellules contenant des valeurs comme cellules utilisées (en ignorant la mise en forme).</span><span class="sxs-lookup"><span data-stu-id="e5f32-211">If true, considers only cells with values as used cells (ignoring formatting).</span></span> <span data-ttu-id="e5f32-212">\[Ensemble d''API: ExcelApi 1,2\]</span><span class="sxs-lookup"><span data-stu-id="e5f32-212">\[Api set: ExcelApi 1.2\]</span></span>'
          type:
            - boolean
  - uid: excel.Excel.Worksheet.getUsedRangeOrNullObject
    summary: |-
      <span data-ttu-id="e5f32-p127">La plage utilisée est la plus petite plage qui englobe toutes les cellules auxquelles une valeur ou un format est affecté. Si la feuille de calcul entière est vide, cette fonction renvoie un objet null.</span><span class="sxs-lookup"><span data-stu-id="e5f32-p127">The used range is the smallest range that encompasses any cells that have a value or formatting assigned to them. If the entire worksheet is blank, this function will return a null object.</span></span>

      <span data-ttu-id="e5f32-215">\[[Ensemble d'API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f32-215">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getUsedRangeOrNullObject(valuesOnly)
    fullName: getUsedRangeOrNullObject(valuesOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getUsedRangeOrNullObject(valuesOnly?: boolean): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
      parameters:
        - id: valuesOnly
          description: <span data-ttu-id="e5f32-216">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="e5f32-216">Optional.</span></span> <span data-ttu-id="e5f32-217">Prend uniquement en compte les cellules avec des valeurs sous forme de cellules utilisées.</span><span class="sxs-lookup"><span data-stu-id="e5f32-217">Considers only cells with values as used cells.</span></span>
          type:
            - boolean
  - uid: excel.Excel.Worksheet.horizontalPageBreaks
    summary: |-
      <span data-ttu-id="e5f32-218">Obtient la collection de saut de page horizontal pour la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="e5f32-218">Gets the horizontal page break collection for the worksheet.</span></span> <span data-ttu-id="e5f32-219">Cette collection contient uniquement les sauts de page manuels.</span><span class="sxs-lookup"><span data-stu-id="e5f32-219">This collection only contains manual page breaks.</span></span>

      <span data-ttu-id="e5f32-220">\[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f32-220">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: horizontalPageBreaks
    fullName: horizontalPageBreaks
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly horizontalPageBreaks: Excel.PageBreakCollection;'
      return:
        type:
          - excel.Excel.PageBreakCollection
  - uid: excel.Excel.Worksheet.id
    summary: |-
      <span data-ttu-id="e5f32-p130">Renvoie une valeur qui permet d’identifier la feuille de calcul de façon unique dans un classeur donné. La valeur de l’identificateur reste identique, même lorsque la feuille de calcul est renommée ou déplacée. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="e5f32-p130">Returns a value that uniquely identifies the worksheet in a given workbook. The value of the identifier remains the same even when the worksheet is renamed or moved. Read-only.</span></span>

      <span data-ttu-id="e5f32-224">\[[Ensemble d'API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f32-224">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Worksheet.load
    summary: "<span data-ttu-id=\"e5f32-225\">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e5f32-225\">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id=\"e5f32-226\">Vous devez appeler «\_context.sync()\_» avant de lire les propriétés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e5f32-226\">You must call \"context.sync()\" before reading the properties.</span></span>"
    remarks: |-
      <span data-ttu-id="e5f32-227">En plus de cette signature, cette méthode possède les signatures suivantes:</span><span class="sxs-lookup"><span data-stu-id="e5f32-227">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="e5f32-228">`load(option?: string | string[]): Excel.Worksheet`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="e5f32-228">`load(option?: string | string[]): Excel.Worksheet` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="e5f32-229">`load(option?: { select?: string; expand?: string; }): Excel.Worksheet`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="e5f32-229">`load(option?: { select?: string; expand?: string; }): Excel.Worksheet` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="e5f32-230">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Worksheet`-Uniquement disponible sur les types de collection.</span><span class="sxs-lookup"><span data-stu-id="e5f32-230">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Worksheet` - Only available on collection types.</span></span> <span data-ttu-id="e5f32-231">Elle est similaire à la signature précédente.</span><span class="sxs-lookup"><span data-stu-id="e5f32-231">It is similar to the preceding signature.</span></span> <span data-ttu-id="e5f32-232">Option. Top indique le nombre maximal d'éléments de collection qui peuvent être inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="e5f32-232">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="e5f32-233">Option. Skip indique le nombre d'éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="e5f32-233">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="e5f32-234">Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d'éléments.</span><span class="sxs-lookup"><span data-stu-id="e5f32-234">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.WorksheetLoadOptions): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.WorksheetLoadOptions
  - uid: excel.Excel.Worksheet.load_1
    summary: <span data-ttu-id="e5f32-235">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="e5f32-235">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e5f32-236">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="e5f32-236">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e5f32-237">Exemples</span><span class="sxs-lookup"><span data-stu-id="e5f32-237">Examples</span></span>

          ```javascript
          // Get worksheet properties based on sheet name.
          Excel.run(function (ctx) { 
              var wSheetName = 'Sheet1';
              var worksheet = ctx.workbook.worksheets.getItem(wSheetName);
              worksheet.load('position')
              return ctx.sync().then(function() {
                      console.log(worksheet.position);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Set worksheet position. 
          Excel.run(function (ctx) { 
              var wSheetName = 'Sheet1';
              var worksheet = ctx.workbook.worksheets.getItem(wSheetName);
              worksheet.position = 2;
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="e5f32-238">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="e5f32-238">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.Worksheet.load_2
    summary: <span data-ttu-id="e5f32-239">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="e5f32-239">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e5f32-240">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="e5f32-240">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="e5f32-241">Où propertyNamesAndPaths. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et propertyNamesAndPaths. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="e5f32-241">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.Worksheet.name
    summary: |-
      <span data-ttu-id="e5f32-242">Nom complet de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="e5f32-242">The display name of the worksheet.</span></span>

      <span data-ttu-id="e5f32-243">\[[Ensemble d'API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f32-243">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Worksheet.names
    summary: |-
      <span data-ttu-id="e5f32-244">Collection de noms inclus dans l’étendue de la feuille de calcul active.</span><span class="sxs-lookup"><span data-stu-id="e5f32-244">Collection of names scoped to the current worksheet.</span></span> <span data-ttu-id="e5f32-245">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="e5f32-245">Read-only.</span></span>

      <span data-ttu-id="e5f32-246">\[[Ensemble d'API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f32-246">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: names
    fullName: names
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly names: Excel.NamedItemCollection;'
      return:
        type:
          - excel.Excel.NamedItemCollection
  - uid: excel.Excel.Worksheet.onActivated
    summary: |-
      <span data-ttu-id="e5f32-247">Se produit lorsque la feuille de calcul est activée.</span><span class="sxs-lookup"><span data-stu-id="e5f32-247">Occurs when the worksheet is activated.</span></span>

      <span data-ttu-id="e5f32-248">\[[Ensemble d'API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f32-248">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onActivated
    fullName: onActivated
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onActivated: OfficeExtension.EventHandlers<Excel.WorksheetActivatedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetActivatedEventArgs>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e5f32-249">Exemples</span><span class="sxs-lookup"><span data-stu-id="e5f32-249">Examples</span></span>

          ```javascript
          Excel.run(function (context) {
              var sheet = context.workbook.worksheets.getItem("Sample");
              sheet.onActivated.add(function (event) {
                  return Excel.run((context) => {
                      console.log("The activated worksheet ID is: " + event.worksheetId);
                      return context.sync();
                  });
              });
              return context.sync();
          });
          ```
  - uid: excel.Excel.Worksheet.onCalculated
    summary: |-
      <span data-ttu-id="e5f32-250">Se produit lors du calcul de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="e5f32-250">Occurs when the worksheet is calculated.</span></span>

      <span data-ttu-id="e5f32-251">\[[Ensemble d'API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f32-251">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onCalculated
    fullName: onCalculated
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onCalculated: OfficeExtension.EventHandlers<Excel.WorksheetCalculatedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetCalculatedEventArgs>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e5f32-252">Exemples</span><span class="sxs-lookup"><span data-stu-id="e5f32-252">Examples</span></span>

          ```javascript
          Excel.run(function (context) {
              var sheet = context.workbook.worksheets.getItem("Sample");
              sheet.onCalculated.add(function (event) {
                  return Excel.run((context) => {
                      console.log("The worksheet has recalculated.");
                      return context.sync();
                  });
              });
              return context.sync();
          });
          ```
  - uid: excel.Excel.Worksheet.onChanged
    summary: |-
      <span data-ttu-id="e5f32-253">Se produit lorsque des données sont modifiées dans une feuille de calcul spécifique.</span><span class="sxs-lookup"><span data-stu-id="e5f32-253">Occurs when data changed on a specific worksheet.</span></span>

      <span data-ttu-id="e5f32-254">\[[Ensemble d'API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f32-254">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onChanged
    fullName: onChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onChanged: OfficeExtension.EventHandlers<Excel.WorksheetChangedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetChangedEventArgs>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e5f32-255">Exemples</span><span class="sxs-lookup"><span data-stu-id="e5f32-255">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let sheet = context.workbook.worksheets.getItem("Sample");
              sheet.onChanged.add(onChange);

              await context.sync();
              console.log("A handler has been registered for the onChanged event.");
          });
          ```
  - uid: excel.Excel.Worksheet.onDeactivated
    summary: |-
      <span data-ttu-id="e5f32-256">Se produit lorsque la feuille de calcul est désactivée.</span><span class="sxs-lookup"><span data-stu-id="e5f32-256">Occurs when the worksheet is deactivated.</span></span>

      <span data-ttu-id="e5f32-257">\[[Ensemble d'API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f32-257">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onDeactivated
    fullName: onDeactivated
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onDeactivated: OfficeExtension.EventHandlers<Excel.WorksheetDeactivatedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetDeactivatedEventArgs>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e5f32-258">Exemples</span><span class="sxs-lookup"><span data-stu-id="e5f32-258">Examples</span></span>

          ```javascript
          Excel.run(function (context) {
              var sheet = context.workbook.worksheets.getItem("Sample");
              sheet.onDeactivated.add(function (event) {
                  return Excel.run((context) => {
                      console.log("The deactivated worksheet is: " + event.worksheetId);
                      return context.sync();
                  });
              });
              return context.sync();
          });
          ```
  - uid: excel.Excel.Worksheet.onFiltered
    summary: |-
      <span data-ttu-id="e5f32-259">Se produit lorsque le filtre est appliqué sur un tableau spécifique.</span><span class="sxs-lookup"><span data-stu-id="e5f32-259">Occurs when filter is applied on a specific worksheet.</span></span>

      <span data-ttu-id="e5f32-260">\[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f32-260">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: onFiltered
    fullName: onFiltered
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onFiltered: OfficeExtension.EventHandlers<Excel.WorksheetFilteredEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetFilteredEventArgs>
  - uid: excel.Excel.Worksheet.onFormatChanged
    summary: |-
      <span data-ttu-id="e5f32-261">Se produit lorsque le filtre est modifié sur un tableau spécifique.</span><span class="sxs-lookup"><span data-stu-id="e5f32-261">Occurs when format changed on a specific worksheet.</span></span>

      <span data-ttu-id="e5f32-262">\[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f32-262">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: onFormatChanged
    fullName: onFormatChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onFormatChanged: OfficeExtension.EventHandlers<Excel.WorksheetFormatChangedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetFormatChangedEventArgs>
  - uid: excel.Excel.Worksheet.onSelectionChanged
    summary: |-
      <span data-ttu-id="e5f32-263">Se produit lorsque la sélection change dans une feuille de calcul spécifique.</span><span class="sxs-lookup"><span data-stu-id="e5f32-263">Occurs when the selection changes on a specific worksheet.</span></span>

      <span data-ttu-id="e5f32-264">\[[Ensemble d'API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f32-264">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onSelectionChanged
    fullName: onSelectionChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Excel.WorksheetSelectionChangedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetSelectionChangedEventArgs>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e5f32-265">Exemples</span><span class="sxs-lookup"><span data-stu-id="e5f32-265">Examples</span></span>

          ```javascript
          Excel.run(function (context) {
              var sheet = context.workbook.worksheets.getItem("Sample");
              sheet.onSelectionChanged.add(function (event) {
                  return Excel.run((context) => {
                      console.log("The selected range has changed to: " + event.address);
                      return context.sync();
                  });
              });
              return context.sync();
          });
          ```
  - uid: excel.Excel.Worksheet.pageLayout
    summary: |-
      <span data-ttu-id="e5f32-266">Obtient l’objet PageLayout de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="e5f32-266">Gets the PageLayout object of the worksheet.</span></span>

      <span data-ttu-id="e5f32-267">\[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f32-267">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: pageLayout
    fullName: pageLayout
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly pageLayout: Excel.PageLayout;'
      return:
        type:
          - excel.Excel.PageLayout
  - uid: excel.Excel.Worksheet.pivotTables
    summary: |-
      <span data-ttu-id="e5f32-268">Collection de tableaux croisés dynamiques qui font partie de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="e5f32-268">Collection of PivotTables that are part of the worksheet.</span></span> <span data-ttu-id="e5f32-269">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="e5f32-269">Read-only.</span></span>

      <span data-ttu-id="e5f32-270">\[[Ensemble d'API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f32-270">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: pivotTables
    fullName: pivotTables
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly pivotTables: Excel.PivotTableCollection;'
      return:
        type:
          - excel.Excel.PivotTableCollection
  - uid: excel.Excel.Worksheet.position
    summary: |-
      <span data-ttu-id="e5f32-271">Position de la feuille de calcul au sein du classeur (sur une base zéro).</span><span class="sxs-lookup"><span data-stu-id="e5f32-271">The zero-based position of the worksheet within the workbook.</span></span>

      <span data-ttu-id="e5f32-272">\[[Ensemble d'API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f32-272">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: position
    fullName: position
    langs:
      - typeScript
    type: property
    syntax:
      content: 'position: number;'
      return:
        type:
          - number
  - uid: excel.Excel.Worksheet.protection
    summary: |-
      <span data-ttu-id="e5f32-273">Renvoie un objet de protection de feuille pour une feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="e5f32-273">Returns sheet protection object for a worksheet.</span></span> <span data-ttu-id="e5f32-274">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="e5f32-274">Read-only.</span></span>

      <span data-ttu-id="e5f32-275">\[[Ensemble d'API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f32-275">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: protection
    fullName: protection
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly protection: Excel.WorksheetProtection;'
      return:
        type:
          - excel.Excel.WorksheetProtection
  - uid: excel.Excel.Worksheet.replaceAll
    summary: |-
      <span data-ttu-id="e5f32-276">Détecte et remplace la chaîne donnée basée sur les critères spécifiés dans la plage active.</span><span class="sxs-lookup"><span data-stu-id="e5f32-276">Finds and replaces the given string based on the criteria specified within the current worksheet.</span></span>

      <span data-ttu-id="e5f32-277">\[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f32-277">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: 'replaceAll(text, replacement, criteria)'
    fullName: 'replaceAll(text, replacement, criteria)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'replaceAll(text: string, replacement: string, criteria: Excel.ReplaceCriteria): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: <span data-ttu-id="e5f32-278">Nombre de remplacements effectués.</span><span class="sxs-lookup"><span data-stu-id="e5f32-278">The number of replacements performed.</span></span>
      parameters:
        - id: text
          description: <span data-ttu-id="e5f32-279">Chaîne à rechercher.</span><span class="sxs-lookup"><span data-stu-id="e5f32-279">String to find.</span></span>
          type:
            - string
        - id: replacement
          description: <span data-ttu-id="e5f32-280">Chaîne de remplacement de l'original par.</span><span class="sxs-lookup"><span data-stu-id="e5f32-280">String to replace the original with.</span></span>
          type:
            - string
        - id: criteria
          description: <span data-ttu-id="e5f32-281">Critères de remplacement supplémentaires.</span><span class="sxs-lookup"><span data-stu-id="e5f32-281">Additional Replace Criteria.</span></span>
          type:
            - excel.Excel.ReplaceCriteria
  - uid: excel.Excel.Worksheet.set
    summary: '<span data-ttu-id="e5f32-282">Définit plusieurs propriétés d''un objet en même temps.</span><span class="sxs-lookup"><span data-stu-id="e5f32-282">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="e5f32-283">Vous pouvez transmettre un objet plain avec les propriétés appropriées, ou un autre objet API du même type.</span><span class="sxs-lookup"><span data-stu-id="e5f32-283">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="e5f32-284">Cette méthode est dotée de la signature supplémentaire suivante:</span><span class="sxs-lookup"><span data-stu-id="e5f32-284">This method has the following additional signature:</span></span>

      `set(properties: Excel.Worksheet): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.WorksheetUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="e5f32-285">Objet JavaScript avec des propriétés qui sont structurées isomorphically vers les propriétés de l'objet sur lequel la méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="e5f32-285">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.WorksheetUpdateData
        - id: options
          description: <span data-ttu-id="e5f32-286">Fournit une option permettant de supprimer les erreurs si l'objet Properties tente de définir des propriétés en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="e5f32-286">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: excel.Excel.Worksheet.set_1
    summary: '<span data-ttu-id="e5f32-287">Définit plusieurs propriétés de l''objet en même temps, en fonction d''un objet chargé existant.</span><span class="sxs-lookup"><span data-stu-id="e5f32-287">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Worksheet): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.Worksheet
  - uid: excel.Excel.Worksheet.shapes
    summary: |-
      <span data-ttu-id="e5f32-288">Renvoie une collection de tous les objets Forme sur la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="e5f32-288">Returns the collection of all the Shape objects on the worksheet.</span></span> <span data-ttu-id="e5f32-289">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="e5f32-289">Read-only.</span></span>

      <span data-ttu-id="e5f32-290">\[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f32-290">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: shapes
    fullName: shapes
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly shapes: Excel.ShapeCollection;'
      return:
        type:
          - excel.Excel.ShapeCollection
  - uid: excel.Excel.Worksheet.showGridlines
    summary: |-
      <span data-ttu-id="e5f32-291">Obtient ou définit l’indicateur de quadrillage de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="e5f32-291">Gets or sets the worksheet's gridlines flag.</span></span> <span data-ttu-id="e5f32-292">Cet indicateur détermine si le quadrillage est visible par l'utilisateur.</span><span class="sxs-lookup"><span data-stu-id="e5f32-292">This flag determines whether gridlines are visible to the user.</span></span>

      <span data-ttu-id="e5f32-293">\[[Ensemble d'API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f32-293">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showGridlines
    fullName: showGridlines
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showGridlines: boolean;'
      return:
        type:
          - boolean
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e5f32-294">Exemples</span><span class="sxs-lookup"><span data-stu-id="e5f32-294">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getActiveWorksheet();
              sheet.showGridlines = true;

              await context.sync();
          });
          ```
  - uid: excel.Excel.Worksheet.showHeadings
    summary: |-
      <span data-ttu-id="e5f32-295">Obtient ou définit l’indicateur d’en-tête de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="e5f32-295">Gets or sets the worksheet's headings flag.</span></span> <span data-ttu-id="e5f32-296">Cet indicateur détermine si les en-têtes sont visibles par l'utilisateur.</span><span class="sxs-lookup"><span data-stu-id="e5f32-296">This flag determines whether headings are visible to the user.</span></span>

      <span data-ttu-id="e5f32-297">\[[Ensemble d'API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f32-297">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showHeadings
    fullName: showHeadings
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showHeadings: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Worksheet.slicers
    summary: |-
      <span data-ttu-id="e5f32-298">Renvoie une collection de graphiques qui font partie de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="e5f32-298">Returns collection of slicers that are part of the worksheet.</span></span> <span data-ttu-id="e5f32-299">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="e5f32-299">Read-only.</span></span>

      <span data-ttu-id="e5f32-300">\[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f32-300">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: slicers
    fullName: slicers
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly slicers: Excel.SlicerCollection;'
      return:
        type:
          - excel.Excel.SlicerCollection
  - uid: excel.Excel.Worksheet.standardHeight
    summary: |-
      <span data-ttu-id="e5f32-301">Renvoie la hauteur standard (par défaut) de toutes les lignes dans la feuille de calcul, en points.</span><span class="sxs-lookup"><span data-stu-id="e5f32-301">Returns the standard (default) height of all the rows in the worksheet, in points.</span></span> <span data-ttu-id="e5f32-302">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="e5f32-302">Read-only.</span></span>

      <span data-ttu-id="e5f32-303">\[[Ensemble d'API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f32-303">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: standardHeight
    fullName: standardHeight
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly standardHeight: number;'
      return:
        type:
          - number
  - uid: excel.Excel.Worksheet.standardWidth
    summary: |-
      <span data-ttu-id="e5f32-304">Renvoie ou définit la largeur standard (par défaut) de toutes les colonnes dans la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="e5f32-304">Returns or sets the standard (default) width of all the columns in the worksheet.</span></span> <span data-ttu-id="e5f32-305">Une unité de largeur de colonne est égale à la largeur d'un caractère du style Normal.</span><span class="sxs-lookup"><span data-stu-id="e5f32-305">One unit of column width is equal to the width of one character in the Normal style.</span></span> <span data-ttu-id="e5f32-306">Dans le cas des polices proportionnelles, la largeur du caractère 0 (zéro) est utilisée.</span><span class="sxs-lookup"><span data-stu-id="e5f32-306">For proportional fonts, the width of the character 0 (zero) is used.</span></span>

      <span data-ttu-id="e5f32-307">\[[Ensemble d'API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f32-307">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: standardWidth
    fullName: standardWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'standardWidth: number;'
      return:
        type:
          - number
  - uid: excel.Excel.Worksheet.tabColor
    summary: |-
      <span data-ttu-id="e5f32-308">Obtient ou modifie la couleur d’onglet de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="e5f32-308">Gets or sets the worksheet tab color.</span></span> <span data-ttu-id="e5f32-309">Lors de l'extraction de la couleur d'onglet, si la feuille de calcul est invisible, la valeur est null.</span><span class="sxs-lookup"><span data-stu-id="e5f32-309">When retrieving the tab color, if the worksheet is invisible, the value will be null.</span></span> <span data-ttu-id="e5f32-310">Si la feuille de calcul est visible mais que la couleur d'onglet est définie sur auto, une chaîne vide est renvoyée.</span><span class="sxs-lookup"><span data-stu-id="e5f32-310">If the worksheet is visible but the tab color is set to auto, an empty string will be returned.</span></span> <span data-ttu-id="e5f32-311">Dans le cas contraire, la propriété est définie sur une couleur, au format\#«123456» lors de la définition de la couleur, utilisez une chaîne vide pour définir une couleur «automatique» ou une autre couleur réelle.</span><span class="sxs-lookup"><span data-stu-id="e5f32-311">Otherwise, the property will be set to a color, in the form "\#123456" When setting the color, use an empty-string to set an "auto" color, or a real color otherwise.</span></span>

      <span data-ttu-id="e5f32-312">\[[Ensemble d'API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f32-312">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: tabColor
    fullName: tabColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'tabColor: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e5f32-313">Exemples</span><span class="sxs-lookup"><span data-stu-id="e5f32-313">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const activeSheet = context.workbook.worksheets.getActiveWorksheet();
              activeSheet.tabColor = "#FF0000";

              await context.sync();
          });
          ```
  - uid: excel.Excel.Worksheet.tables
    summary: |-
      <span data-ttu-id="e5f32-314">Collection de tableaux qui font partie de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="e5f32-314">Collection of tables that are part of the worksheet.</span></span> <span data-ttu-id="e5f32-315">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="e5f32-315">Read-only.</span></span>

      <span data-ttu-id="e5f32-316">\[[Ensemble d'API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f32-316">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: tables
    fullName: tables
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly tables: Excel.TableCollection;'
      return:
        type:
          - excel.Excel.TableCollection
  - uid: excel.Excel.Worksheet.toJSON
    summary: '<span data-ttu-id="e5f32-317">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu''un objet d''API est transmis à`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="e5f32-317">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="e5f32-318">.</span><span class="sxs-lookup"><span data-stu-id="e5f32-318"></span></span> <span data-ttu-id="e5f32-319">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="e5f32-319"></span></span><!-- --><span data-ttu-id="e5f32-320">, à son tour, appelle `toJSON` la méthode de l''objet qui lui est passé.) Tandis que l''objet Excel. Worksheet d''origine est un objet `toJSON` API, la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.WorksheetData`</span><span class="sxs-lookup"><span data-stu-id="e5f32-320">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Worksheet object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.WorksheetData`</span></span><!-- --><span data-ttu-id="e5f32-321">) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l''objet d''origine.</span><span class="sxs-lookup"><span data-stu-id="e5f32-321">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.WorksheetData;'
      return:
        type:
          - excel.Excel.Interfaces.WorksheetData
        description: ''
  - uid: excel.Excel.Worksheet.verticalPageBreaks
    summary: |-
      <span data-ttu-id="e5f32-322">Obtient la collection de saut de page vertical pour la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="e5f32-322">Gets the vertical page break collection for the worksheet.</span></span> <span data-ttu-id="e5f32-323">Cette collection contient uniquement les sauts de page manuels.</span><span class="sxs-lookup"><span data-stu-id="e5f32-323">This collection only contains manual page breaks.</span></span>

      <span data-ttu-id="e5f32-324">\[[Ensemble d'API: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f32-324">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: verticalPageBreaks
    fullName: verticalPageBreaks
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly verticalPageBreaks: Excel.PageBreakCollection;'
      return:
        type:
          - excel.Excel.PageBreakCollection
  - uid: excel.Excel.Worksheet.visibility
    summary: |-
      <span data-ttu-id="e5f32-325">Visibilité de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="e5f32-325">The Visibility of the worksheet.</span></span>

      <span data-ttu-id="e5f32-326">\[[Ensemble d'API: ExcelApi 1,1 pour la lecture de la visibilité; 1,2 pour le définir.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span><span class="sxs-lookup"><span data-stu-id="e5f32-326">\[ [API set: ExcelApi 1.1 for reading visibility; 1.2 for setting it.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span></span> <span data-ttu-id="e5f32-327">\]</span><span class="sxs-lookup"><span data-stu-id="e5f32-327"></span></span>
    name: visibility
    fullName: visibility
    langs:
      - typeScript
    type: property
    syntax:
      content: 'visibility: Excel.SheetVisibility | "Visible" | "Hidden" | "VeryHidden";'
      return:
        type:
          - Excel.SheetVisibility | "Visible" | "Hidden" | "VeryHidden"