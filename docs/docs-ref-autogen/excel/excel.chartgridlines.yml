### YamlMime:UniversalReference
ms.openlocfilehash: adf4c462ada93c84042e42702056d134dace9b3e
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 02/13/2019
ms.locfileid: "29974359"
items:
- uid: excel.Excel.ChartGridlines
  summary: >-
    <span data-ttu-id="8b326-101">Représente un quadrillage principal ou secondaire sur un axe de graphique.</span><span class="sxs-lookup"><span data-stu-id="8b326-101">Represents major or minor gridlines on a chart axis.</span></span>


    <span data-ttu-id="8b326-102">\[[Du jeu d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8b326-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.ChartGridlines
  fullName: Excel.ChartGridlines
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.ChartGridlines.context
  - excel.Excel.ChartGridlines.format
  - excel.Excel.ChartGridlines.load
  - excel.Excel.ChartGridlines.load_1
  - excel.Excel.ChartGridlines.load_2
  - excel.Excel.ChartGridlines.set
  - excel.Excel.ChartGridlines.set_1
  - excel.Excel.ChartGridlines.toJSON
  - excel.Excel.ChartGridlines.visible
- uid: excel.Excel.ChartGridlines.context
  summary: <span data-ttu-id="8b326-103">Contexte de la requête associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="8b326-103">The request context associated with the object.</span></span> <span data-ttu-id="8b326-104">Il connecte processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="8b326-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.ChartGridlines.format
  summary: >-
    <span data-ttu-id="8b326-p102">Représente le format du quadrillage de graphique. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="8b326-p102">Represents the formatting of chart gridlines. Read-only.</span></span>


    <span data-ttu-id="8b326-107">\[[Du jeu d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8b326-107">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: format
  fullName: format
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly format: Excel.ChartGridlinesFormat;'
    return:
      type:
      - excel.Excel.ChartGridlinesFormat
- uid: excel.Excel.ChartGridlines.load
  summary: <span data-ttu-id="8b326-108">Files d’attente d’une commande pour charger les propriétés de l’objet spécifiées.</span><span class="sxs-lookup"><span data-stu-id="8b326-108">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="8b326-109">Vous devez appeler « context.sync() » avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="8b326-109">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="8b326-110">Outre cette signature, cette méthode présente les signatures suivantes :</span><span class="sxs-lookup"><span data-stu-id="8b326-110">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="8b326-111">`load(option?: string | string[]): Excel.ChartGridlines`-Où option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="8b326-111">`load(option?: string | string[]): Excel.ChartGridlines` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="8b326-112">`load(option?: { select?: string; expand?: string; }): Excel.ChartGridlines`-Où option.select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options.expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="8b326-112">`load(option?: { select?: string; expand?: string; }): Excel.ChartGridlines` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="8b326-113">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartGridlines`-Uniquement disponible sur les types de la collection.</span><span class="sxs-lookup"><span data-stu-id="8b326-113">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartGridlines` - Only available on collection types.</span></span> <span data-ttu-id="8b326-114">Il est similaire à la signature précédente.</span><span class="sxs-lookup"><span data-stu-id="8b326-114">It is similar to the preceding signature.</span></span> <span data-ttu-id="8b326-115">Option.Top Spécifie le nombre maximal d’éléments pouvant être inclus dans le résultat de la collection.</span><span class="sxs-lookup"><span data-stu-id="8b326-115">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="8b326-116">Option.Skip Spécifie le nombre d’éléments qui doivent être ignoré et non inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="8b326-116">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="8b326-117">Si option.top est spécifié, le jeu de résultats démarre après l’ignorer le nombre spécifié d’éléments.</span><span class="sxs-lookup"><span data-stu-id="8b326-117">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.ChartGridlinesLoadOptions): Excel.ChartGridlines;'
    return:
      type:
      - excel.Excel.ChartGridlines
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.ChartGridlinesLoadOptions
- uid: excel.Excel.ChartGridlines.load_1
  summary: <span data-ttu-id="8b326-118">Files d’attente d’une commande pour charger les propriétés de l’objet spécifiées.</span><span class="sxs-lookup"><span data-stu-id="8b326-118">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="8b326-119">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="8b326-119">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.ChartGridlines;'
    return:
      type:
      - excel.Excel.ChartGridlines
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"8b326-120\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"8b326-120\">Examples</span></span>\n\n```javascript\n// Get the visible of Major Gridlines on value axis of Chart1\nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n    var majGridlines = chart.axes.valueaxis.majorGridlines;\n    majGridlines.load('visible');\n    return ctx.sync().then(function() {\n            console.log(majGridlines.visible);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// Set to show major gridlines on valueAxis of Chart1\nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n    chart.axes.valueAxis.majorGridlines.visible = true;\n    return ctx.sync().then(function() {\n            console.log(\"Axis Gridlines Added \");\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="8b326-121">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="8b326-121">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.ChartGridlines.load_2
  summary: <span data-ttu-id="8b326-122">Files d’attente d’une commande pour charger les propriétés de l’objet spécifiées.</span><span class="sxs-lookup"><span data-stu-id="8b326-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="8b326-123">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="8b326-123">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.ChartGridlines;'
    return:
      type:
      - excel.Excel.ChartGridlines
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="8b326-124">Où propertyNamesAndPaths.select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et propertyNamesAndPaths.expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="8b326-124">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.ChartGridlines.set
  summary: <span data-ttu-id="8b326-125">Définir plusieurs propriétés d’un objet en même temps.</span><span class="sxs-lookup"><span data-stu-id="8b326-125">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="8b326-126">Vous pouvez passer un objet brut avec les propriétés appropriées, ou un autre objet API du même type.</span><span class="sxs-lookup"><span data-stu-id="8b326-126">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="8b326-127">Cette méthode a la signature supplémentaire suivante :</span><span class="sxs-lookup"><span data-stu-id="8b326-127">This method has the following additional signature:</span></span>


    `set(properties: Excel.ChartGridlines): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.ChartGridlinesUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="8b326-128">Un objet JavaScript avec des propriétés qui sont structurés isomorphically pour les propriétés de l’objet sur lequel la méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="8b326-128">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.ChartGridlinesUpdateData
    - id: options
      description: <span data-ttu-id="8b326-129">Fournit une option permettant de supprimer des erreurs si l’objet propriétés tente de définir des propriétés en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="8b326-129">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.ChartGridlines.set_1
  summary: <span data-ttu-id="8b326-130">Définit plusieurs propriétés de l’objet en même temps, basé sur un objet chargé existant.</span><span class="sxs-lookup"><span data-stu-id="8b326-130">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.ChartGridlines): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.ChartGridlines
- uid: excel.Excel.ChartGridlines.toJSON
  summary: <span data-ttu-id="8b326-131">Remplace le code JavaScript `toJSON()` méthode afin de fournir une sortie plus utile lorsqu’un objet API est passé à `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="8b326-131">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="8b326-132">(`JSON.stringify`<!-- -->, à son tour, appelle le `toJSON` méthode de l’objet qui lui est passé.) Tandis que l’objet Excel.ChartGridlines d’origine est un objet d’API, la `toJSON` méthode renvoie un objet JavaScript brut (typée en tant que `Excel.Interfaces.ChartGridlinesData` <!-- -->) qui contient des copies superficielles de toutes les propriétés enfant chargé à partir de l’objet d’origine.</span><span class="sxs-lookup"><span data-stu-id="8b326-132">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ChartGridlines object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ChartGridlinesData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ChartGridlinesData;'
    return:
      type:
      - excel.Excel.Interfaces.ChartGridlinesData
      description: ''
- uid: excel.Excel.ChartGridlines.visible
  summary: >-
    <span data-ttu-id="8b326-133">Valeur booléenne indiquant si les lignes de quadrillage de l’axe sont visibles ou non.</span><span class="sxs-lookup"><span data-stu-id="8b326-133">Boolean value representing if the axis gridlines are visible or not.</span></span>


    <span data-ttu-id="8b326-134">\[[Du jeu d’API : ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8b326-134">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: visible
  fullName: visible
  langs:
  - typeScript
  type: property
  syntax:
    content: 'visible: boolean;'
    return:
      type:
      - boolean
