### YamlMime:UniversalReference
ms.openlocfilehash: db98064c72209f87f51f1ce2401018e11aaf26a4
ms.sourcegitcommit: 016e17422cf62dc9f1de1809666e9244e41cc1a9
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 11/09/2018
ms.locfileid: "26227875"
items:
- uid: excel.Excel.TextConditionalFormat
  summary: >-
    <span data-ttu-id="10286-101">Représente un format conditionnel du texte spécifique.</span><span class="sxs-lookup"><span data-stu-id="10286-101">Represents a specific text conditional format.</span></span>


    <span data-ttu-id="10286-102">\[[Du jeu d’API : ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="10286-102">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.TextConditionalFormat
  fullName: Excel.TextConditionalFormat
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.TextConditionalFormat.format
  - excel.Excel.TextConditionalFormat.load
  - excel.Excel.TextConditionalFormat.rule
  - excel.Excel.TextConditionalFormat.toJSON
- uid: excel.Excel.TextConditionalFormat.format
  summary: >-
    <span data-ttu-id="10286-p101">Renvoie un objet de format, qui comprend les propriétés de police, de remplissage, de bordures des formats conditionnels, et d’autres propriétés. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="10286-p101">Returns a format object, encapsulating the conditional formats font, fill, borders, and other properties. Read-only.</span></span>


    <span data-ttu-id="10286-105">\[[Du jeu d’API : ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="10286-105">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: format
  fullName: format
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly format: Excel.ConditionalRangeFormat;'
    return:
      type:
      - excel.Excel.ConditionalRangeFormat
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"10286-106\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"10286-106\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B16:D18\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.containsText);\n    conditionalFormat.textComparison.format.font.color = \"red\";\n    conditionalFormat.textComparison.rule = { operator: Excel.ConditionalTextOperator.contains, text: \"Delayed\" };\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.TextConditionalFormat.load
  summary: <span data-ttu-id="10286-107">Files d’attente d’une commande pour charger les propriétés de l’objet spécifiées.</span><span class="sxs-lookup"><span data-stu-id="10286-107">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="10286-108">Vous devez appeler « context.sync() » avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="10286-108">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="10286-109">Outre cette signature, cette méthode présente les signatures suivantes :</span><span class="sxs-lookup"><span data-stu-id="10286-109">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="10286-110">`load(option?: { select?: string; expand?: string; }): Excel.TextConditionalFormat`-Où option.select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options.expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="10286-110">`load(option?: { select?: string; expand?: string; }): Excel.TextConditionalFormat` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="10286-111">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TextConditionalFormat`-Uniquement disponible sur les types de la collection.</span><span class="sxs-lookup"><span data-stu-id="10286-111">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TextConditionalFormat` - Only available on collection types.</span></span> <span data-ttu-id="10286-112">Il est similaire à la signature précédente.</span><span class="sxs-lookup"><span data-stu-id="10286-112">It is similar to the preceding signature.</span></span> <span data-ttu-id="10286-113">Option.Top Spécifie le nombre maximal d’éléments pouvant être inclus dans le résultat de la collection.</span><span class="sxs-lookup"><span data-stu-id="10286-113">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="10286-114">Option.Skip Spécifie le nombre d’éléments qui doivent être ignoré et non inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="10286-114">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="10286-115">Si option.top est spécifié, le jeu de résultats démarre après l’ignorer le nombre spécifié d’éléments.</span><span class="sxs-lookup"><span data-stu-id="10286-115">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.TextConditionalFormat;'
    return:
      type:
      - excel.Excel.TextConditionalFormat
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="10286-116">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="10286-116">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.TextConditionalFormat.rule
  summary: >-
    <span data-ttu-id="10286-117">Règle du format conditionnel.</span><span class="sxs-lookup"><span data-stu-id="10286-117">The rule of the conditional format.</span></span>


    <span data-ttu-id="10286-118">\[[Du jeu d’API : ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="10286-118">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: rule
  fullName: rule
  langs:
  - typeScript
  type: property
  syntax:
    content: 'rule: Excel.ConditionalTextComparisonRule;'
    return:
      type:
      - excel.Excel.ConditionalTextComparisonRule
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"10286-119\">範例</span><span class=\"sxs-lookup\"><span data-stu-id=\"10286-119\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B16:D18\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.containsText);\n    conditionalFormat.textComparison.format.font.color = \"red\";\n    conditionalFormat.textComparison.rule = { operator: Excel.ConditionalTextOperator.contains, text: \"Delayed\" };\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.TextConditionalFormat.toJSON
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.TextConditionalFormatData;'
    return:
      type:
      - excel.Excel.Interfaces.TextConditionalFormatData
      description: ''
