### YamlMime:UniversalReference
ms.openlocfilehash: 585a94b64064bcd631ccafdcf656acedc89d7ad8
ms.sourcegitcommit: 262b7c417245b7b61a57d53eee33a477a722ca6e
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 09/28/2018
ms.locfileid: "24044749"
items:
- uid: excel.Excel.TableRowCollection
  summary: >-
    <span data-ttu-id="1a1d6-101">Représente une collection de toutes les lignes du tableau.</span><span class="sxs-lookup"><span data-stu-id="1a1d6-101">Represents a collection of all the rows that are part of the table.</span></span>


    <span data-ttu-id="1a1d6-102">Notez que, contrairement aux plages ou de colonnes qui seront si de nouvelles lignes/colonnes sont ajoutés avant l’ajustement, un objet TableRow représente l’emplacement physique de la ligne du tableau, mais pas les données.</span><span class="sxs-lookup"><span data-stu-id="1a1d6-102">Note that unlike Ranges or Columns, which will adjust if new rows/columns are added before them, a TableRow object represent the physical location of the table row, but not the data.</span></span> <span data-ttu-id="1a1d6-103">Autrement dit, si les données sont triées ou si l’ajout de nouvelles lignes, une ligne de tableau continuera pointe au niveau de l’index pour lequel il a été créé.</span><span class="sxs-lookup"><span data-stu-id="1a1d6-103">That is, if the data is sorted or if new rows are added, a table row will continue to point at the index for which it was created.</span></span>


    <span data-ttu-id="1a1d6-104">\[[Du jeu d’API : ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1a1d6-104">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.TableRowCollection
  fullName: excel.Excel.TableRowCollection
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.TableRowCollection.add
  - excel.Excel.TableRowCollection.count
  - excel.Excel.TableRowCollection.getCount
  - excel.Excel.TableRowCollection.getItemAt
  - excel.Excel.TableRowCollection.items
  - excel.Excel.TableRowCollection.load
  - excel.Excel.TableRowCollection.toJSON
- uid: excel.Excel.TableRowCollection.add
  summary: >-
    <span data-ttu-id="1a1d6-p102">Ajoute une ou plusieurs lignes dans le tableau. L’objet renvoyé sera placé en premier dans les lignes récemment ajoutées.</span><span class="sxs-lookup"><span data-stu-id="1a1d6-p102">Adds one or more rows to the table. The return object will be the top of the newly added row(s).</span></span>


    <span data-ttu-id="1a1d6-107">Notez que, contrairement aux plages ou de colonnes qui seront si de nouvelles lignes/colonnes sont ajoutés avant l’ajustement, un objet TableRow représente l’emplacement physique de la ligne du tableau, mais pas les données.</span><span class="sxs-lookup"><span data-stu-id="1a1d6-107">Note that unlike Ranges or Columns, which will adjust if new rows/columns are added before them, a TableRow object represent the physical location of the table row, but not the data.</span></span> <span data-ttu-id="1a1d6-108">Autrement dit, si les données sont triées ou si l’ajout de nouvelles lignes, une ligne de tableau continuera pointe au niveau de l’index pour lequel il a été créé.</span><span class="sxs-lookup"><span data-stu-id="1a1d6-108">That is, if the data is sorted or if new rows are added, a table row will continue to point at the index for which it was created.</span></span>


    <span data-ttu-id="1a1d6-109">\[[Du jeu d’API : ExcelApi 1.1 à l’ajout d’une seule ligne ; 1.4 autorise l’ajout de plusieurs lignes.](/javascript/office/requirement-sets/excel-api-requirement-sets)</span><span class="sxs-lookup"><span data-stu-id="1a1d6-109">\[ [API set: ExcelApi 1.1 for adding a single row; 1.4 allows adding of multiple rows.](/javascript/office/requirement-sets/excel-api-requirement-sets)</span></span> <span data-ttu-id="1a1d6-110">\]</span><span class="sxs-lookup"><span data-stu-id="1a1d6-110"></span></span>
  name: add(index, values)
  fullName: excel.Excel.TableRowCollection.add
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(index?: number, values?: Array<Array<boolean | string | number>> | boolean | string | number): Excel.TableRow;'
    return:
      type:
      - excel.Excel.TableRow
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1a1d6-111\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"1a1d6-111\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tables = ctx.workbook.tables;\n    var values = [[\"Sample\", \"Values\", \"For\", \"New\", \"Row\"]];\n    var row = tables.getItem(\"Table1\").rows.add(null, values);\n    row.load('index');\n    return ctx.sync().then(function() {\n        console.log(row.index);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="1a1d6-p105">Facultatif. Spécifie la position relative de la nouvelle ligne. Si la valeur est null ou -1, la ligne est ajoutée à la fin. Toutes les lignes en dessous de la ligne insérée sont déplacées vers le bas. Avec indice zéro.</span><span class="sxs-lookup"><span data-stu-id="1a1d6-p105">Optional. Specifies the relative position of the new row. If null or -1, the addition happens at the end. Any rows below the inserted row are shifted downwards. Zero-indexed.</span></span>
      type:
      - number
    - id: values
      description: <span data-ttu-id="1a1d6-p106">Facultatif. Matrice 2D des valeurs non mises en forme de la ligne du tableau.</span><span class="sxs-lookup"><span data-stu-id="1a1d6-p106">Optional. A 2-dimensional array of unformatted values of the table row.</span></span>
      type:
      - Array<Array<boolean | string | number>> | boolean | string | number
- uid: excel.Excel.TableRowCollection.count
  summary: >-
    <span data-ttu-id="1a1d6-p107">Renvoie le nombre de lignes du tableau. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="1a1d6-p107">Returns the number of rows in the table. Read-only.</span></span>


    <span data-ttu-id="1a1d6-121">\[[Du jeu d’API : ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1a1d6-121">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: count
  fullName: excel.Excel.TableRowCollection.count
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly count: number;'
    return:
      type:
      - number
- uid: excel.Excel.TableRowCollection.getCount
  summary: >-
    <span data-ttu-id="1a1d6-122">Obtient le nombre de lignes dans le tableau.</span><span class="sxs-lookup"><span data-stu-id="1a1d6-122">Gets the number of rows in the table.</span></span>


    <span data-ttu-id="1a1d6-123">\[[Du jeu d’API : ExcelApi 1.4](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1a1d6-123">\[ [API set: ExcelApi 1.4](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getCount()
  fullName: excel.Excel.TableRowCollection.getCount
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel.Excel.TableRowCollection.getItemAt
  summary: >-
    <span data-ttu-id="1a1d6-124">Obtient une ligne en fonction de sa position dans la collection.</span><span class="sxs-lookup"><span data-stu-id="1a1d6-124">Gets a row based on its position in the collection.</span></span>


    <span data-ttu-id="1a1d6-125">Notez que, contrairement aux plages ou de colonnes qui seront si de nouvelles lignes/colonnes sont ajoutés avant l’ajustement, un objet TableRow représente l’emplacement physique de la ligne du tableau, mais pas les données.</span><span class="sxs-lookup"><span data-stu-id="1a1d6-125">Note that unlike Ranges or Columns, which will adjust if new rows/columns are added before them, a TableRow object represent the physical location of the table row, but not the data.</span></span> <span data-ttu-id="1a1d6-126">Autrement dit, si les données sont triées ou si l’ajout de nouvelles lignes, une ligne de tableau continuera pointe au niveau de l’index pour lequel il a été créé.</span><span class="sxs-lookup"><span data-stu-id="1a1d6-126">That is, if the data is sorted or if new rows are added, a table row will continue to point at the index for which it was created.</span></span>


    <span data-ttu-id="1a1d6-127">\[[Du jeu d’API : ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1a1d6-127">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemAt(index)
  fullName: excel.Excel.TableRowCollection.getItemAt
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): Excel.TableRow;'
    return:
      type:
      - excel.Excel.TableRow
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1a1d6-128\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"1a1d6-128\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tablerow = ctx.workbook.tables.getItem('Table1').rows.getItemAt(0);\n    tablerow.load('name');\n    return ctx.sync().then(function() {\n            console.log(tablerow.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="1a1d6-p109">Valeur d’indice de l’objet à récupérer. Avec indice zéro.</span><span class="sxs-lookup"><span data-stu-id="1a1d6-p109">Index value of the object to be retrieved. Zero-indexed.</span></span>
      type:
      - number
- uid: excel.Excel.TableRowCollection.items
  summary: <span data-ttu-id="1a1d6-131">Obtient l’enfant chargé éléments dans cette collection.</span><span class="sxs-lookup"><span data-stu-id="1a1d6-131">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: excel.Excel.TableRowCollection.items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.TableRow[];'
    return:
      type:
      - Excel.TableRow[]
- uid: excel.Excel.TableRowCollection.load
  summary: <span data-ttu-id="1a1d6-132">Files d’attente d’une commande pour charger les propriétés de l’objet spécifiées.</span><span class="sxs-lookup"><span data-stu-id="1a1d6-132">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1a1d6-133">Vous devez appeler « context.sync() » avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="1a1d6-133">You must call "context.sync()" before reading the properties.</span></span>
  remarks: "<span data-ttu-id=\"1a1d6-134\">Outre cette signature, cette méthode présente les signatures suivantes :</span><span class=\"sxs-lookup\"><span data-stu-id=\"1a1d6-134\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"1a1d6-135\">`load(option?: { select?: string; expand?: string; }): Excel.TableRowCollection`-Où option.select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options.expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1a1d6-135\">`load(option?: { select?: string; expand?: string; }): Excel.TableRowCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"1a1d6-136\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableRowCollection`-Uniquement disponible sur les types de la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1a1d6-136\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableRowCollection` - Only available on collection types.</span></span> <span data-ttu-id=\"1a1d6-137\">Il est similaire à la signature précédente.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1a1d6-137\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"1a1d6-138\">Option.Top Spécifie le nombre maximal d’éléments pouvant être inclus dans le résultat de la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1a1d6-138\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"1a1d6-139\">Option.Skip Spécifie le nombre d’éléments qui doivent être ignoré et non inclus dans le résultat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1a1d6-139\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"1a1d6-140\">Si option.top est spécifié, le jeu de résultats démarre après l’ignorer le nombre spécifié d’éléments.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1a1d6-140\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"1a1d6-141\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"1a1d6-141\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tablerows = ctx.workbook.tables.getItem('Table1').rows;\n    tablerows.load('items');\n    return ctx.sync().then(function() {\n        console.log(\"tablerows Count: \" + tablerows.count);\n        for (var i = 0; i < tablerows.items.length; i++)\n        {\n            console.log(tablerows.items[i].index);\n        }\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// In the example, we'll select the top 100 rows of the table.\nExcel.run(function (ctx) { \n    var table = ctx.workbook.tables.getItem(\"Table1\");\n    var tableRows = table.rows.load({\"select\" : \"index, values\",\"top\": 100, \"skip\": 0 })\n    return ctx.sync().then(function() {\n        for (var i = 0; i < tableRows.items.length; i++)\n        {\n            console.log(tableRows.items[i].index);\n            console.log(tableRows.items[i].values);\n        }\n    });\n}).catch(function(error) {\n        console.log(\"Error: \" + error);\n        if (error instanceof OfficeExtension.Error) {\n            console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n        }\n});\n```"
  name: load(option)
  fullName: excel.Excel.TableRowCollection.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.TableRowCollection;'
    return:
      type:
      - excel.Excel.TableRowCollection
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="1a1d6-142">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="1a1d6-142">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.TableRowCollection.toJSON
  name: toJSON()
  fullName: excel.Excel.TableRowCollection.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.TableRowCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.TableRowCollectionData
      description: ''
