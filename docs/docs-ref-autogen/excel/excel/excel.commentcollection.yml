### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.CommentCollection:class'
    summary: "<span data-ttu-id=\"1d397-101\">Représente une collection d’objets comment faisant partie du classeur.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1d397-101\">Represents a collection of comment objects that are part of the workbook.</span></span>\n\n<span data-ttu-id=\"1d397-102\">\\[[Ensemble d’API\_: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"1d397-102\">\\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    isPreview: true
    name: Excel.CommentCollection
    fullName: Excel.CommentCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.CommentCollection#add:member(1)'
      - 'excel!Excel.CommentCollection#add:member(2)'
      - 'excel!Excel.CommentCollection#context:member'
      - 'excel!Excel.CommentCollection#getCount:member(1)'
      - 'excel!Excel.CommentCollection#getItem:member(1)'
      - 'excel!Excel.CommentCollection#getItemAt:member(1)'
      - 'excel!Excel.CommentCollection#getItemByCell:member(1)'
      - 'excel!Excel.CommentCollection#getItemByReplyId:member(1)'
      - 'excel!Excel.CommentCollection#items:member'
      - 'excel!Excel.CommentCollection#load:member(1)'
      - 'excel!Excel.CommentCollection#load:member(2)'
      - 'excel!Excel.CommentCollection#load:member(3)'
      - 'excel!Excel.CommentCollection#toJSON:member(1)'
  - uid: 'excel!Excel.CommentCollection#add:member(1)'
    summary: "<span data-ttu-id=\"1d397-103\">Crée un nouveau commentaire (thread de commentaire) avec le contenu donné sur la cellule donnée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1d397-103\">Creates a new comment (comment thread) with the given content on the given cell.</span></span> <span data-ttu-id=\"1d397-104\">Une `InvalidArgument` erreur est générée si la plage fournie est plus grande qu’une cellule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1d397-104\">An `InvalidArgument` error is thrown if the provided range is larger than one cell.</span></span>\n\n<span data-ttu-id=\"1d397-105\">\\[[Ensemble d’API\_: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"1d397-105\">\\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    isPreview: true
    name: 'add(content, cellAddress, contentType)'
    fullName: 'add(content, cellAddress, contentType)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(content: string, cellAddress: Range | string, contentType?: Excel.ContentType): Excel.Comment;'
      return:
        type:
          - 'excel!Excel.Comment:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="1d397-106">Exemples</span><span class="sxs-lookup"><span data-stu-id="1d397-106">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Comments");

              // Note that an InvalidArgument error will be thrown if multiple cells passed to `comment.add`.
              sheet.comments.add("TODO: add data.", "A2");
              await context.sync();
          });
          ```
      parameters:
        - id: content
          description: <span data-ttu-id="1d397-107">Contenu du commentaire.</span><span class="sxs-lookup"><span data-stu-id="1d397-107">The comment content.</span></span>
          type:
            - string
        - id: cellAddress
          description: '<span data-ttu-id="1d397-108">Cellule à laquelle le commentaire est ajouté.</span><span class="sxs-lookup"><span data-stu-id="1d397-108">The cell to which the comment is added.</span></span> <span data-ttu-id="1d397-109">Il peut s’agir d’un objet Range ou d’une chaîne.</span><span class="sxs-lookup"><span data-stu-id="1d397-109">This can be a Range object or a string.</span></span> <span data-ttu-id="1d397-110">S’il s’agit d’une chaîne, elle doit contenir l’adresse complète, y compris le nom de la feuille.</span><span class="sxs-lookup"><span data-stu-id="1d397-110">If it''s a string, it must contain the full address, including the sheet name.</span></span> <span data-ttu-id="1d397-111">Une `InvalidArgument` erreur est générée si la plage fournie est plus grande qu’une cellule.</span><span class="sxs-lookup"><span data-stu-id="1d397-111">An `InvalidArgument` error is thrown if the provided range is larger than one cell.</span></span>'
          type:
            - 'excel!Excel.CommentCollection#add~0:complex'
        - id: contentType
          description: <span data-ttu-id="1d397-112">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="1d397-112">Optional.</span></span> <span data-ttu-id="1d397-113">Le type de contenu de commentaire</span><span class="sxs-lookup"><span data-stu-id="1d397-113">The type of the comment content</span></span>
          type:
            - 'excel!Excel.ContentType:enum'
  - uid: 'excel!Excel.CommentCollection#add:member(2)'
    summary: "<span data-ttu-id=\"1d397-114\">Crée un nouveau commentaire (thread de commentaire) avec le contenu donné sur la cellule donnée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1d397-114\">Creates a new comment (comment thread) with the given content on the given cell.</span></span> <span data-ttu-id=\"1d397-115\">Une `InvalidArgument` erreur est générée si la plage fournie est plus grande qu’une cellule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1d397-115\">An `InvalidArgument` error is thrown if the provided range is larger than one cell.</span></span>\n\n<span data-ttu-id=\"1d397-116\">\\[[Ensemble d’API\_: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"1d397-116\">\\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    isPreview: true
    name: 'add(content, cellAddress, contentTypeString)'
    fullName: 'add(content, cellAddress, contentTypeString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(content: string, cellAddress: Range | string, contentTypeString?: "Plain"): Excel.Comment;'
      return:
        type:
          - 'excel!Excel.Comment:class'
        description: ''
      parameters:
        - id: content
          description: <span data-ttu-id="1d397-117">Contenu du commentaire.</span><span class="sxs-lookup"><span data-stu-id="1d397-117">The comment content.</span></span>
          type:
            - string
        - id: cellAddress
          description: '<span data-ttu-id="1d397-118">Cellule à laquelle le commentaire est ajouté.</span><span class="sxs-lookup"><span data-stu-id="1d397-118">The cell to which the comment is added.</span></span> <span data-ttu-id="1d397-119">Il peut s’agir d’un objet Range ou d’une chaîne.</span><span class="sxs-lookup"><span data-stu-id="1d397-119">This can be a Range object or a string.</span></span> <span data-ttu-id="1d397-120">S’il s’agit d’une chaîne, elle doit contenir l’adresse complète, y compris le nom de la feuille.</span><span class="sxs-lookup"><span data-stu-id="1d397-120">If it''s a string, it must contain the full address, including the sheet name.</span></span> <span data-ttu-id="1d397-121">Une `InvalidArgument` erreur est générée si la plage fournie est plus grande qu’une cellule.</span><span class="sxs-lookup"><span data-stu-id="1d397-121">An `InvalidArgument` error is thrown if the provided range is larger than one cell.</span></span>'
          type:
            - 'excel!Excel.CommentCollection#add~1:complex'
        - id: contentTypeString
          description: <span data-ttu-id="1d397-122">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="1d397-122">Optional.</span></span> <span data-ttu-id="1d397-123">Le type de contenu de commentaire</span><span class="sxs-lookup"><span data-stu-id="1d397-123">The type of the comment content</span></span>
          type:
            - '"Plain"'
  - uid: 'excel!Excel.CommentCollection#context:member'
    summary: <span data-ttu-id="1d397-124">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="1d397-124">The request context associated with the object.</span></span> <span data-ttu-id="1d397-125">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="1d397-125">This connects the add-in's process to the Office host application's process.</span></span>
    isPreview: true
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.CommentCollection#getCount:member(1)'
    summary: "<span data-ttu-id=\"1d397-126\">Obtient le nombre de commentaires de la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1d397-126\">Gets the number of comments in the collection.</span></span>\n\n<span data-ttu-id=\"1d397-127\">\\[[Ensemble d’API\_: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"1d397-127\">\\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    isPreview: true
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.CommentCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.CommentCollection#getItem:member(1)'
    summary: "<span data-ttu-id=\"1d397-128\">Obtient un commentaire à partir de la collection de sites en fonction de son ID.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1d397-128\">Gets a comment from the collection based on its ID.</span></span> <span data-ttu-id=\"1d397-129\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1d397-129\">Read-only.</span></span>\n\n<span data-ttu-id=\"1d397-130\">\\[[Ensemble d’API\_: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"1d397-130\">\\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    isPreview: true
    name: getItem(commentId)
    fullName: getItem(commentId)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(commentId: string): Excel.Comment;'
      return:
        type:
          - 'excel!Excel.Comment:class'
        description: ''
      parameters:
        - id: commentId
          description: <span data-ttu-id="1d397-131">Identificateur du commentaire.</span><span class="sxs-lookup"><span data-stu-id="1d397-131">The identifier for the comment.</span></span>
          type:
            - string
  - uid: 'excel!Excel.CommentCollection#getItemAt:member(1)'
    summary: "<span data-ttu-id=\"1d397-132\">Obtient un commentaire en fonction de sa position dans la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1d397-132\">Gets a comment from the collection based on its position.</span></span>\n\n<span data-ttu-id=\"1d397-133\">\\[[Ensemble d’API\_: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"1d397-133\">\\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    isPreview: true
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.Comment;'
      return:
        type:
          - 'excel!Excel.Comment:class'
        description: ''
      parameters:
        - id: index
          description: <span data-ttu-id="1d397-134">Valeur d’indice de l’objet à récupérer.</span><span class="sxs-lookup"><span data-stu-id="1d397-134">Index value of the object to be retrieved.</span></span> <span data-ttu-id="1d397-135">Avec indice zéro.</span><span class="sxs-lookup"><span data-stu-id="1d397-135">Zero-indexed.</span></span>
          type:
            - number
  - uid: 'excel!Excel.CommentCollection#getItemByCell:member(1)'
    summary: "<span data-ttu-id=\"1d397-136\">Obtient le commentaire à partir de la cellule spécifiée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1d397-136\">Gets the comment from the specifed cell.</span></span>\n\n<span data-ttu-id=\"1d397-137\">\\[[Ensemble d’API\_: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"1d397-137\">\\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    isPreview: true
    name: getItemByCell(cellAddress)
    fullName: getItemByCell(cellAddress)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemByCell(cellAddress: Range | string): Excel.Comment;'
      return:
        type:
          - 'excel!Excel.Comment:class'
        description: ''
      parameters:
        - id: cellAddress
          description: '<span data-ttu-id="1d397-138">Cellule sur laquelle se trouve le commentaire.</span><span class="sxs-lookup"><span data-stu-id="1d397-138">The cell which the comment is on.</span></span> <span data-ttu-id="1d397-139">Il peut s’agir d’un objet Range ou d’une chaîne.</span><span class="sxs-lookup"><span data-stu-id="1d397-139">This can be a Range object or a string.</span></span> <span data-ttu-id="1d397-140">S’il s’agit d’une chaîne, elle doit contenir l’adresse complète, y compris le nom de la feuille.</span><span class="sxs-lookup"><span data-stu-id="1d397-140">If it''s a string, it must contain the full address, including the sheet name.</span></span> <span data-ttu-id="1d397-141">Une `InvalidArgument` erreur est générée si la plage fournie est plus grande qu’une cellule.</span><span class="sxs-lookup"><span data-stu-id="1d397-141">An `InvalidArgument` error is thrown if the provided range is larger than one cell.</span></span>'
          type:
            - 'excel!Excel.CommentCollection#getItemByCell~0:complex'
  - uid: 'excel!Excel.CommentCollection#getItemByReplyId:member(1)'
    summary: "<span data-ttu-id=\"1d397-142\">Obtient un commentaire lié à son ID dans la collection de réponse.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1d397-142\">Gets a comment related to its reply ID in the collection.</span></span>\n\n<span data-ttu-id=\"1d397-143\">\\[[Ensemble d’API\_: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"1d397-143\">\\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    isPreview: true
    name: getItemByReplyId(replyId)
    fullName: getItemByReplyId(replyId)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemByReplyId(replyId: string): Excel.Comment;'
      return:
        type:
          - 'excel!Excel.Comment:class'
        description: ''
      parameters:
        - id: replyId
          description: <span data-ttu-id="1d397-144">Identificateur de la réponse de commentaire.</span><span class="sxs-lookup"><span data-stu-id="1d397-144">The identifier of comment reply.</span></span>
          type:
            - string
  - uid: 'excel!Excel.CommentCollection#items:member'
    summary: <span data-ttu-id="1d397-145">Obtient l’élément enfant chargé dans cette collection de sites.</span><span class="sxs-lookup"><span data-stu-id="1d397-145">Gets the loaded child items in this collection.</span></span>
    isPreview: true
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Comment[];'
      return:
        type:
          - 'excel!Excel.CommentCollection#items~0:complex'
  - uid: 'excel!Excel.CommentCollection#load:member(1)'
    summary: "<span data-ttu-id=\"1d397-146\">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1d397-146\">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id=\"1d397-147\">Vous devez appeler «\_context.sync()\_» avant de lire les propriétés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1d397-147\">You must call \"context.sync()\" before reading the properties.</span></span>"
    remarks: "<span data-ttu-id=\"1d397-148\">En plus de cette signature, cette méthode possède les signatures suivantes\_:</span><span class=\"sxs-lookup\"><span data-stu-id=\"1d397-148\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"1d397-149\">`load(option?: string | string[]): Excel.CommentCollection`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1d397-149\">`load(option?: string | string[]): Excel.CommentCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>\n\n<span data-ttu-id=\"1d397-150\">`load(option?: { select?: string; expand?: string; }): Excel.CommentCollection`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1d397-150\">`load(option?: { select?: string; expand?: string; }): Excel.CommentCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"1d397-151\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.CommentCollection`-Uniquement disponible sur les types de collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1d397-151\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.CommentCollection` - Only available on collection types.</span></span> <span data-ttu-id=\"1d397-152\">Elle est similaire à la signature précédente.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1d397-152\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"1d397-153\">Option. Top indique le nombre maximal d’éléments de collection qui peuvent être inclus dans le résultat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1d397-153\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"1d397-154\">Option. Skip indique le nombre d’éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1d397-154\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"1d397-155\">Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d’éléments.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1d397-155\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>"
    isPreview: true
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.CommentCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.CommentCollection;'
      return:
        type:
          - 'excel!Excel.CommentCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.CommentCollection#load~0:complex'
  - uid: 'excel!Excel.CommentCollection#load:member(2)'
    summary: <span data-ttu-id="1d397-156">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="1d397-156">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1d397-157">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="1d397-157">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.CommentCollection;'
      return:
        type:
          - 'excel!Excel.CommentCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="1d397-158">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="1d397-158">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.CommentCollection#load:member(3)'
    isPreview: true
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.CommentCollection;'
      return:
        type:
          - 'excel!Excel.CommentCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.CommentCollection#toJSON:member(1)'
    summary: "<span data-ttu-id=\"1d397-159\">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class=\"sxs-lookup\"><span data-stu-id=\"1d397-159\">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id=\"1d397-160\">.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1d397-160\"></span></span> <span data-ttu-id=\"1d397-161\">(`JSON.stringify`</span><span class=\"sxs-lookup\"><span data-stu-id=\"1d397-161\"></span></span><!-- --><span data-ttu-id=\"1d397-162\">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que `Excel.CommentCollection` l’objet d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.CommentCollectionData`</span><span class=\"sxs-lookup\"><span data-stu-id=\"1d397-162\">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.CommentCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.CommentCollectionData`</span></span><!-- --><span data-ttu-id=\"1d397-163\">) qui contient un tableau «\_éléments\_» avec des copies superficielles de toutes les propriétés chargées des éléments de la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1d397-163\">) that contains an \"items\" array with shallow copies of any loaded properties from the collection's items.</span></span>"
    isPreview: true
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.CommentCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.CommentCollectionData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.Comment:class'
    name: Excel.Comment
  - uid: 'excel!Excel.CommentCollection#add~0:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.ContentType:enum'
    name: Excel.ContentType
  - uid: 'excel!Excel.CommentCollection#add~1:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.CommentCollection#getCount~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel!Excel.CommentCollection#getItemByCell~0:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.CommentCollection#items~0:complex'
    name: 'Excel.Comment[]'
    fullName: 'Excel.Comment[]'
    spec.typeScript:
      - uid: 'excel!Excel.Comment:class'
        name: Excel.Comment
        fullName: Excel.Comment
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.CommentCollection:class'
    name: Excel.CommentCollection
  - uid: 'excel!Excel.CommentCollection#load~0:complex'
    name: Excel.Interfaces.CommentCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.CommentCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.CommentCollectionLoadOptions:interface'
        name: Excel.Interfaces.CommentCollectionLoadOptions
        fullName: Excel.Interfaces.CommentCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'excel!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.Interfaces.CommentCollectionData:interface'
    name: Excel.Interfaces.CommentCollectionData