### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.Slicer:class'
    summary: "<span data-ttu-id=\"5fd40-101\">Représente un objet Slicer dans le classeur.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-101\">Represents a slicer object in the workbook.</span></span>\n\n<span data-ttu-id=\"5fd40-102\">\\[[Ensemble d’API\_: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-102\">\\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    isPreview: true
    name: Excel.Slicer
    fullName: Excel.Slicer
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.Slicer#caption:member'
      - 'excel!Excel.Slicer#clearFilters:member(1)'
      - 'excel!Excel.Slicer#context:member'
      - 'excel!Excel.Slicer#delete:member(1)'
      - 'excel!Excel.Slicer#getSelectedItems:member(1)'
      - 'excel!Excel.Slicer#height:member'
      - 'excel!Excel.Slicer#id:member'
      - 'excel!Excel.Slicer#isFilterCleared:member'
      - 'excel!Excel.Slicer#left:member'
      - 'excel!Excel.Slicer#load:member(1)'
      - 'excel!Excel.Slicer#load:member(2)'
      - 'excel!Excel.Slicer#load:member(3)'
      - 'excel!Excel.Slicer#name:member'
      - 'excel!Excel.Slicer#nameInFormula:member'
      - 'excel!Excel.Slicer#selectItems:member(1)'
      - 'excel!Excel.Slicer#set:member(1)'
      - 'excel!Excel.Slicer#set:member(2)'
      - 'excel!Excel.Slicer#slicerItems:member'
      - 'excel!Excel.Slicer#sortBy:member'
      - 'excel!Excel.Slicer#style:member'
      - 'excel!Excel.Slicer#toJSON:member(1)'
      - 'excel!Excel.Slicer#top:member'
      - 'excel!Excel.Slicer#width:member'
      - 'excel!Excel.Slicer#worksheet:member'
  - uid: 'excel!Excel.Slicer#caption:member'
    summary: "<span data-ttu-id=\"5fd40-103\">Représente la légende de segment.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-103\">Represents the caption of slicer.</span></span>\n\n<span data-ttu-id=\"5fd40-104\">\\[[Ensemble d’API\_: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-104\">\\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    isPreview: true
    name: caption
    fullName: caption
    langs:
      - typeScript
    type: property
    syntax:
      content: 'caption: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Slicer#clearFilters:member(1)'
    summary: "<span data-ttu-id=\"5fd40-105\">Supprime tous les filtres appliqués actuellement sur le tableau.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-105\">Clears all the filters currently applied on the slicer.</span></span>\n\n<span data-ttu-id=\"5fd40-106\">\\[[Ensemble d’API\_: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-106\">\\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    isPreview: true
    name: clearFilters()
    fullName: clearFilters()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clearFilters(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="5fd40-107">Exemples</span><span class="sxs-lookup"><span data-stu-id="5fd40-107">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const slicer = context.workbook.slicers.getItem("Fruit Slicer");
              slicer.clearFilters();
              await context.sync();
          });
          ```
  - uid: 'excel!Excel.Slicer#context:member'
    summary: <span data-ttu-id="5fd40-108">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="5fd40-108">The request context associated with the object.</span></span> <span data-ttu-id="5fd40-109">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="5fd40-109">This connects the add-in's process to the Office host application's process.</span></span>
    isPreview: true
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.Slicer#delete:member(1)'
    summary: "<span data-ttu-id=\"5fd40-110\">Supprime le segment.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-110\">Deletes the slicer.</span></span>\n\n<span data-ttu-id=\"5fd40-111\">\\[[Ensemble d’API\_: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-111\">\\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    isPreview: true
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="5fd40-112">Exemples</span><span class="sxs-lookup"><span data-stu-id="5fd40-112">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getActiveWorksheet();
              sheet.slicers.getItemAt(0).delete();
              await context.sync();
          });
          ```
  - uid: 'excel!Excel.Slicer#getSelectedItems:member(1)'
    summary: "<span data-ttu-id=\"5fd40-113\">Renvoie une matrice de noms d’éléments sélectionnés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-113\">Returns an array of selected items' keys.</span></span> <span data-ttu-id=\"5fd40-114\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-114\">Read-only.</span></span>\n\n<span data-ttu-id=\"5fd40-115\">\\[[Ensemble d’API\_: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-115\">\\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    isPreview: true
    name: getSelectedItems()
    fullName: getSelectedItems()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedItems(): OfficeExtension.ClientResult<string[]>;'
      return:
        type:
          - 'excel!Excel.Slicer#getSelectedItems~0:complex'
        description: ''
  - uid: 'excel!Excel.Slicer#height:member'
    summary: "<span data-ttu-id=\"5fd40-116\">Représente la hauteur, exprimée en points, de l’axe de graphique.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-116\">Represents the height, in points, of the slicer.</span></span> <span data-ttu-id=\"5fd40-117\">Renvoie un «\_l’argument est non valide ou manquant ou a un format incorrect.\_»</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-117\">Throws an \"The argument is invalid or missing or has an incorrect format.\"</span></span> <span data-ttu-id=\"5fd40-118\">exception lorsqu’elle est définie avec une valeur négative ou zéro comme entrée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-118\">exception when set with negative value or zero as input.</span></span>\n\n<span data-ttu-id=\"5fd40-119\">\\[[Ensemble d’API\_: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-119\">\\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    isPreview: true
    name: height
    fullName: height
    langs:
      - typeScript
    type: property
    syntax:
      content: 'height: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.Slicer#id:member'
    summary: "<span data-ttu-id=\"5fd40-120\">Représente l’id unique du segment.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-120\">Represents the unique id of slicer.</span></span> <span data-ttu-id=\"5fd40-121\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-121\">Read-only.</span></span>\n\n<span data-ttu-id=\"5fd40-122\">\\[[Ensemble d’API\_: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-122\">\\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    isPreview: true
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Slicer#isFilterCleared:member'
    summary: "<span data-ttu-id=\"5fd40-123\">True si tous les filtres appliqués actuellement sur le segment sont effacés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-123\">True if all filters currently applied on the slicer are cleared.</span></span>\n\n<span data-ttu-id=\"5fd40-124\">\\[[Ensemble d’API\_: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-124\">\\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    isPreview: true
    name: isFilterCleared
    fullName: isFilterCleared
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isFilterCleared: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Slicer#left:member'
    summary: "<span data-ttu-id=\"5fd40-125\">Représente la distance, en points, entre le côté gauche du graphique et l’origine de la feuille de calcul.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-125\">Represents the distance, in points, from the left side of the slicer to the left of the worksheet.</span></span> <span data-ttu-id=\"5fd40-126\">Renvoie un «\_l’argument est non valide ou manquant ou a un format incorrect.\_»</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-126\">Throws an \"The argument is invalid or missing or has an incorrect format.\"</span></span> <span data-ttu-id=\"5fd40-127\">exception lorsqu’elle est définie avec une valeur négative comme entrée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-127\">exception when set with negative value as input.</span></span>\n\n<span data-ttu-id=\"5fd40-128\">\\[[Ensemble d’API\_: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-128\">\\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    isPreview: true
    name: left
    fullName: left
    langs:
      - typeScript
    type: property
    syntax:
      content: 'left: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.Slicer#load:member(1)'
    summary: <span data-ttu-id="5fd40-129">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="5fd40-129">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="5fd40-130">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="5fd40-130">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.SlicerLoadOptions): Excel.Slicer;'
      return:
        type:
          - 'excel!Excel.Slicer:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="5fd40-131">Fournit des options pour les propriétés de l’objet à charger.</span><span class="sxs-lookup"><span data-stu-id="5fd40-131">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.Interfaces.SlicerLoadOptions:interface'
  - uid: 'excel!Excel.Slicer#load:member(2)'
    summary: <span data-ttu-id="5fd40-132">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="5fd40-132">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="5fd40-133">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="5fd40-133">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Slicer;'
      return:
        type:
          - 'excel!Excel.Slicer:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="5fd40-134">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="5fd40-134">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.Slicer#load:member(3)'
    summary: <span data-ttu-id="5fd40-135">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="5fd40-135">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="5fd40-136">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="5fd40-136">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.Slicer;
      return:
        type:
          - 'excel!Excel.Slicer:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="5fd40-137">`propertyNamesAndPaths.select`est une chaîne délimitée par des virgules qui spécifie les propriétés à `propertyNamesAndPaths.expand` charger et une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="5fd40-137">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.Slicer#name:member'
    summary: "<span data-ttu-id=\"5fd40-138\">Représente le nom de la forme.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-138\">Represents the name of slicer.</span></span>\n\n<span data-ttu-id=\"5fd40-139\">\\[[Ensemble d’API\_: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-139\">\\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    isPreview: true
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Slicer#nameInFormula:member'
    summary: "<span data-ttu-id=\"5fd40-140\">Représente le nom du segment utilisé dans la formule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-140\">Represents the slicer name used in the formula.</span></span>\n\n<span data-ttu-id=\"5fd40-141\">\\[[Ensemble d’API\_: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-141\">\\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    isPreview: true
    name: nameInFormula
    fullName: nameInFormula
    langs:
      - typeScript
    type: property
    syntax:
      content: 'nameInFormula: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Slicer#selectItems:member(1)'
    summary: "<span data-ttu-id=\"5fd40-142\">Sélectionne les éléments du Slicer en fonction de leurs clés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-142\">Selects slicer items based on their keys.</span></span> <span data-ttu-id=\"5fd40-143\">Les sélections précédentes sont effacées.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-143\">The previous selections are cleared.</span></span> <span data-ttu-id=\"5fd40-144\">Tous les éléments seront sélectionnés par défaut si le tableau est vide.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-144\">All items will be selected by default if the array is empty.</span></span>\n\n<span data-ttu-id=\"5fd40-145\">\\[[Ensemble d’API\_: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-145\">\\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    isPreview: true
    name: selectItems(items)
    fullName: selectItems(items)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'selectItems(items?: string[]): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="5fd40-146">Exemples</span><span class="sxs-lookup"><span data-stu-id="5fd40-146">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const slicer = context.workbook.slicers.getItem("Fruit Slicer");
              slicer.selectItems(["Lemon", "Lime", "Orange"]);
              await context.sync();
          });
          ```
      parameters:
        - id: items
          description: <span data-ttu-id="5fd40-147">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="5fd40-147">Optional.</span></span> <span data-ttu-id="5fd40-148">Noms des éléments de Slicer spécifiés à sélectionner.</span><span class="sxs-lookup"><span data-stu-id="5fd40-148">The specified slicer item names to be selected.</span></span>
          type:
            - 'string[]'
  - uid: 'excel!Excel.Slicer#set:member(1)'
    summary: '<span data-ttu-id="5fd40-149">Définit plusieurs propriétés d’un objet en même temps.</span><span class="sxs-lookup"><span data-stu-id="5fd40-149">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="5fd40-150">Vous pouvez transmettre un objet plain avec les propriétés appropriées, ou un autre objet API du même type.</span><span class="sxs-lookup"><span data-stu-id="5fd40-150">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: "<span data-ttu-id=\"5fd40-151\">Cette méthode est dotée de la signature supplémentaire suivante\_:</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-151\">This method has the following additional signature:</span></span>\n\n`set(properties: Excel.Slicer): void`"
    isPreview: true
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.SlicerUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="5fd40-152">Objet JavaScript avec des propriétés qui sont structurées isomorphically vers les propriétés de l’objet sur lequel la méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="5fd40-152">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'excel!Excel.Interfaces.SlicerUpdateData:interface'
        - id: options
          description: <span data-ttu-id="5fd40-153">Fournit une option permettant de supprimer les erreurs si l’objet Properties tente de définir des propriétés en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="5fd40-153">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.Slicer#set:member(2)'
    summary: '<span data-ttu-id="5fd40-154">Définit plusieurs propriétés de l’objet en même temps, en fonction d’un objet chargé existant.</span><span class="sxs-lookup"><span data-stu-id="5fd40-154">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    isPreview: true
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Slicer): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.Slicer:class'
  - uid: 'excel!Excel.Slicer#slicerItems:member'
    summary: "<span data-ttu-id=\"5fd40-155\">Représente la collection de SlicerItems qui font partie du segment.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-155\">Represents the collection of SlicerItems that are part of the slicer.</span></span> <span data-ttu-id=\"5fd40-156\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-156\">Read-only.</span></span>\n\n<span data-ttu-id=\"5fd40-157\">\\[[Ensemble d’API\_: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-157\">\\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    isPreview: true
    name: slicerItems
    fullName: slicerItems
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly slicerItems: Excel.SlicerItemCollection;'
      return:
        type:
          - 'excel!Excel.SlicerItemCollection:class'
  - uid: 'excel!Excel.Slicer#sortBy:member'
    summary: "<span data-ttu-id=\"5fd40-158\">Représente l’ordre de tri des éléments dans le segment.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-158\">Represents the sort order of the items in the slicer.</span></span> <span data-ttu-id=\"5fd40-159\">Les valeurs possibles sont\_: \"DataSourceOrder\", \"ascending\", \"Descending\".</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-159\">Possible values are: \"DataSourceOrder\", \"Ascending\", \"Descending\".</span></span>\n\n<span data-ttu-id=\"5fd40-160\">\\[[Ensemble d’API\_: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-160\">\\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    isPreview: true
    name: sortBy
    fullName: sortBy
    langs:
      - typeScript
    type: property
    syntax:
      content: 'sortBy: Excel.SlicerSortType | "DataSourceOrder" | "Ascending" | "Descending";'
      return:
        type:
          - 'excel!Excel.Slicer#sortBy~0:complex'
  - uid: 'excel!Excel.Slicer#style:member'
    summary: "<span data-ttu-id=\"5fd40-161\">Valeur de constante qui représente le style du tableau.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-161\">Constant value that represents the Slicer style.</span></span> <span data-ttu-id=\"5fd40-162\">Les valeurs possibles sont\_: «\_SlicerStyleLight1\_» à «\_SlicerStyleLight6\_», «\_TableStyleOther1\_» à «\_TableStyleOther2\_», «\_SlicerStyleDark1\_» et «\_SlicerStyleDark6\_».</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-162\">Possible values are: \"SlicerStyleLight1\" through \"SlicerStyleLight6\", \"TableStyleOther1\" through \"TableStyleOther2\", \"SlicerStyleDark1\" through \"SlicerStyleDark6\".</span></span> <span data-ttu-id=\"5fd40-163\">Vous pouvez également indiquer un style personnalisé présent dans le classeur.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-163\">A custom user-defined style present in the workbook can also be specified.</span></span>\n\n<span data-ttu-id=\"5fd40-164\">\\[[Ensemble d’API\_: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-164\">\\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    isPreview: true
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="5fd40-165">Exemples</span><span class="sxs-lookup"><span data-stu-id="5fd40-165">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const slicer = context.workbook.slicers.getItem("Fruit Slicer");
              slicer.style = "SlicerStyleLight6";
              await context.sync();
          });
          ```
  - uid: 'excel!Excel.Slicer#toJSON:member(1)'
    summary: '<span data-ttu-id="5fd40-166">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="5fd40-166">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="5fd40-167">.</span><span class="sxs-lookup"><span data-stu-id="5fd40-167"></span></span> <span data-ttu-id="5fd40-168">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="5fd40-168"></span></span><!-- --><span data-ttu-id="5fd40-169">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que l’objet Excel. Slicer d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.SlicerData`</span><span class="sxs-lookup"><span data-stu-id="5fd40-169">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Slicer object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.SlicerData`</span></span><!-- --><span data-ttu-id="5fd40-170">) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l’objet d’origine.</span><span class="sxs-lookup"><span data-stu-id="5fd40-170">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    isPreview: true
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.SlicerData;'
      return:
        type:
          - 'excel!Excel.Interfaces.SlicerData:interface'
        description: ''
  - uid: 'excel!Excel.Slicer#top:member'
    summary: "<span data-ttu-id=\"5fd40-171\">Représente la distance, en points, du bord supérieur de la section à la partie droite de la feuille de calcul.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-171\">Represents the distance, in points, from the top edge of the slicer to the top of the worksheet.</span></span> <span data-ttu-id=\"5fd40-172\">Renvoie un «\_l’argument est non valide ou manquant ou a un format incorrect.\_»</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-172\">Throws an \"The argument is invalid or missing or has an incorrect format.\"</span></span> <span data-ttu-id=\"5fd40-173\">exception lorsqu’elle est définie avec une valeur négative comme entrée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-173\">exception when set with negative value as input.</span></span>\n\n<span data-ttu-id=\"5fd40-174\">\\[[Ensemble d’API\_: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-174\">\\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    isPreview: true
    name: top
    fullName: top
    langs:
      - typeScript
    type: property
    syntax:
      content: 'top: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.Slicer#width:member'
    summary: "<span data-ttu-id=\"5fd40-175\">Représente la largeur, en points, de la forme.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-175\">Represents the width, in points, of the slicer.</span></span> <span data-ttu-id=\"5fd40-176\">Renvoie un «\_l’argument est non valide ou manquant ou a un format incorrect.\_»</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-176\">Throws an \"The argument is invalid or missing or has an incorrect format.\"</span></span> <span data-ttu-id=\"5fd40-177\">exception lorsqu’elle est définie avec une valeur négative ou zéro comme entrée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-177\">exception when set with negative value or zero as input.</span></span>\n\n<span data-ttu-id=\"5fd40-178\">\\[[Ensemble d’API\_: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-178\">\\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    isPreview: true
    name: width
    fullName: width
    langs:
      - typeScript
    type: property
    syntax:
      content: 'width: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.Slicer#worksheet:member'
    summary: "<span data-ttu-id=\"5fd40-179\">Obtenir la feuille de calcul contenant la plage.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-179\">Represents the worksheet containing the slicer.</span></span> <span data-ttu-id=\"5fd40-180\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-180\">Read-only.</span></span>\n\n<span data-ttu-id=\"5fd40-181\">\\[[Ensemble d’API\_: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"5fd40-181\">\\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    isPreview: true
    name: worksheet
    fullName: worksheet
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheet: Excel.Worksheet;'
      return:
        type:
          - 'excel!Excel.Worksheet:class'
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.Slicer#getSelectedItems~0:complex'
    name: 'OfficeExtension.ClientResult<string[]>'
    fullName: 'OfficeExtension.ClientResult<string[]>'
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: '<string[]>'
        fullName: '<string[]>'
  - uid: 'excel!Excel.Slicer:class'
    name: Excel.Slicer
  - uid: 'excel!Excel.Interfaces.SlicerLoadOptions:interface'
    name: Excel.Interfaces.SlicerLoadOptions
  - uid: 'excel!Excel.Interfaces.SlicerUpdateData:interface'
    name: Interfaces.SlicerUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.SlicerItemCollection:class'
    name: Excel.SlicerItemCollection
  - uid: 'excel!Excel.Slicer#sortBy~0:complex'
    name: Excel.SlicerSortType | "DataSourceOrder" | "Ascending" | "Descending"
    fullName: Excel.SlicerSortType | "DataSourceOrder" | "Ascending" | "Descending"
    spec.typeScript:
      - uid: 'excel!Excel.SlicerSortType:enum'
        name: Excel.SlicerSortType
        fullName: Excel.SlicerSortType
      - name: ' | "DataSourceOrder" | "Ascending" | "Descending"'
        fullName: ' | "DataSourceOrder" | "Ascending" | "Descending"'
  - uid: 'excel!Excel.Interfaces.SlicerData:interface'
    name: Excel.Interfaces.SlicerData
  - uid: 'excel!Excel.Worksheet:class'
    name: Excel.Worksheet