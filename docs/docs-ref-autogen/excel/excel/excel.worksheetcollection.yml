### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.WorksheetCollection:class'
    summary: "<span data-ttu-id=\"967e7-101\">Représente une collection d’objets de feuille de calcul qui font partie du classeur.</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-101\">Represents a collection of worksheet objects that are part of the workbook.</span></span>\n\n<span data-ttu-id=\"967e7-102\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-102\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: Excel.WorksheetCollection
    fullName: Excel.WorksheetCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.WorksheetCollection#add:member(1)'
      - 'excel!Excel.WorksheetCollection#addFromBase64:member(1)'
      - 'excel!Excel.WorksheetCollection#addFromBase64:member(2)'
      - 'excel!Excel.WorksheetCollection#context:member'
      - 'excel!Excel.WorksheetCollection#getActiveWorksheet:member(1)'
      - 'excel!Excel.WorksheetCollection#getCount:member(1)'
      - 'excel!Excel.WorksheetCollection#getFirst:member(1)'
      - 'excel!Excel.WorksheetCollection#getItem:member(1)'
      - 'excel!Excel.WorksheetCollection#getItemOrNullObject:member(1)'
      - 'excel!Excel.WorksheetCollection#getLast:member(1)'
      - 'excel!Excel.WorksheetCollection#items:member'
      - 'excel!Excel.WorksheetCollection#load:member(1)'
      - 'excel!Excel.WorksheetCollection#load:member(2)'
      - 'excel!Excel.WorksheetCollection#load:member(3)'
      - 'excel!Excel.WorksheetCollection#onActivated:member'
      - 'excel!Excel.WorksheetCollection#onAdded:member'
      - 'excel!Excel.WorksheetCollection#onCalculated:member'
      - 'excel!Excel.WorksheetCollection#onChanged:member'
      - 'excel!Excel.WorksheetCollection#onColumnSorted:member'
      - 'excel!Excel.WorksheetCollection#onDeactivated:member'
      - 'excel!Excel.WorksheetCollection#onDeleted:member'
      - 'excel!Excel.WorksheetCollection#onFiltered:member'
      - 'excel!Excel.WorksheetCollection#onFormatChanged:member'
      - 'excel!Excel.WorksheetCollection#onRowHiddenChanged:member'
      - 'excel!Excel.WorksheetCollection#onRowSorted:member'
      - 'excel!Excel.WorksheetCollection#onSelectionChanged:member'
      - 'excel!Excel.WorksheetCollection#onSingleClicked:member'
      - 'excel!Excel.WorksheetCollection#toJSON:member(1)'
  - uid: 'excel!Excel.WorksheetCollection#add:member(1)'
    summary: "<span data-ttu-id=\"967e7-p101\">Ajoute une nouvelle feuille de calcul au classeur. La feuille de calcul est ajoutée à la fin des feuilles de calcul existantes. Si vous souhaitez activer la feuille de calcul nouvellement ajoutée, appelez la méthode .activate() pour cette feuille.</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-p101\">Adds a new worksheet to the workbook. The worksheet will be added at the end of existing worksheets. If you wish to activate the newly added worksheet, call \".activate() on it.</span></span>\n\n<span data-ttu-id=\"967e7-106\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-106\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: add(name)
    fullName: add(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(name?: string): Excel.Worksheet;'
      return:
        type:
          - 'excel!Excel.Worksheet:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="967e7-107">Exemples</span><span class="sxs-lookup"><span data-stu-id="967e7-107">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var wSheetName = 'Sample Name';
              var worksheet = ctx.workbook.worksheets.add(wSheetName);
              worksheet.load('name');
              return ctx.sync().then(function() {
                  console.log(worksheet.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: name
          description: '<span data-ttu-id="967e7-p102">Facultatif. Nom de la feuille de calcul à ajouter. Si cette propriété est définie, le nom doit être unique. Si cette propriété n’est pas définie, Excel détermine le nom de la nouvelle feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="967e7-p102">Optional. The name of the worksheet to be added. If specified, name should be unqiue. If not specified, Excel determines the name of the new worksheet.</span></span>'
          type:
            - string
  - uid: 'excel!Excel.WorksheetCollection#addFromBase64:member(1)'
    summary: "<span data-ttu-id=\"967e7-112\">Insère les feuilles de calcul spécifiées d’un classeur dans le classeur actif.</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-112\">Inserts the specified worksheets of a workbook into the current workbook.</span></span>\n\n<span data-ttu-id=\"967e7-113\">\\[[Ensemble d’API\_: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-113\">\\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    isPreview: true
    name: 'addFromBase64(base64File, sheetNamesToInsert, positionType, relativeTo)'
    fullName: 'addFromBase64(base64File, sheetNamesToInsert, positionType, relativeTo)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromBase64(base64File: string, sheetNamesToInsert?: string[], positionType?: Excel.WorksheetPositionType, relativeTo?: Worksheet | string): OfficeExtension.ClientResult<string[]>;'
      return:
        type:
          - 'excel!Excel.WorksheetCollection#addFromBase64~0:complex'
        description: |-
          <span data-ttu-id="967e7-114">Tableau d’ID correspondant à chaque feuille de calcul nouvellement insérée.</span><span class="sxs-lookup"><span data-stu-id="967e7-114">An array of ids corresponding to each newly inserted worksheet.</span></span>

          #### <a name="examples"></a><span data-ttu-id="967e7-115">Exemples</span><span class="sxs-lookup"><span data-stu-id="967e7-115">Examples</span></span>

          ```javascript
          const myFile = <HTMLInputElement>document.getElementById("file");
          const reader = new FileReader();

          reader.onload = (event) => {
              Excel.run((context) => {
                  // strip off the metadata before the base64-encoded string
                  const startIndex = reader.result.toString().indexOf("base64,");
                  const workbookContents = reader.result.toString().substr(startIndex + 7);

                  const sheets = context.workbook.worksheets;
                  sheets.addFromBase64(
                      workbookContents,
                      null, // get all the worksheets 
                      Excel.WorksheetPositionType.end // insert them after the current workbook's worksheets
                      );
                  return context.sync();
              });
          };

          // read in the file as a data URL so we can parse the base64-encoded string
          reader.readAsDataURL(myFile.files[0]);
          ```
      parameters:
        - id: base64File
          description: <span data-ttu-id="967e7-116">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="967e7-116">Required.</span></span> <span data-ttu-id="967e7-117">Chaîne codée en base64 représentant le fichier de classeur source.</span><span class="sxs-lookup"><span data-stu-id="967e7-117">The base64-encoded string representing the source workbook file.</span></span>
          type:
            - string
        - id: sheetNamesToInsert
          description: '<span data-ttu-id="967e7-118">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="967e7-118">Optional.</span></span> <span data-ttu-id="967e7-119">Noms des feuilles individuelles à insérer.</span><span class="sxs-lookup"><span data-stu-id="967e7-119">The names of individual worksheets to insert.</span></span> <span data-ttu-id="967e7-120">Par défaut, toutes les feuilles de calcul du classeur source sont insérées.</span><span class="sxs-lookup"><span data-stu-id="967e7-120">By default, all the worksheets from the source workbook are inserted.</span></span>'
          type:
            - 'string[]'
        - id: positionType
          description: "<span data-ttu-id=\"967e7-121\">Facultatif.</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-121\">Optional.</span></span> <span data-ttu-id=\"967e7-122\">Où les nouvelles feuilles de calcul seront insérées dans le classeur actif.</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-122\">Where in the current workbook the new worksheets will be inserted.</span></span> <span data-ttu-id=\"967e7-123\">Pour plus d’informations, voir Excel. WorksheetPositionType.</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-123\">See Excel.WorksheetPositionType for details.</span></span> <span data-ttu-id=\"967e7-124\">La valeur par défaut est «\_démarrer\_».</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-124\">Default is \"Start\".</span></span>"
          type:
            - 'excel!Excel.WorksheetPositionType:enum'
        - id: relativeTo
          description: '<span data-ttu-id="967e7-125">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="967e7-125">Optional.</span></span> <span data-ttu-id="967e7-126">Feuille de calcul du classeur actif référencée pour le paramètre positionType.</span><span class="sxs-lookup"><span data-stu-id="967e7-126">The worksheet in the current workbook that is referenced for the positionType parameter.</span></span> <span data-ttu-id="967e7-127">La valeur par défaut est null et, en fonction de positionType, des feuilles de calcul sont insérées au début ou à la fin du classeur actif.</span><span class="sxs-lookup"><span data-stu-id="967e7-127">Default is null and, based on positionType, it will insert worksheets at the start or end of the current workbook.</span></span>'
          type:
            - 'excel!Excel.WorksheetCollection#addFromBase64~1:complex'
  - uid: 'excel!Excel.WorksheetCollection#addFromBase64:member(2)'
    summary: "<span data-ttu-id=\"967e7-128\">Insère les feuilles de calcul spécifiées d’un classeur dans le classeur actif.</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-128\">Inserts the specified worksheets of a workbook into the current workbook.</span></span>\n\n<span data-ttu-id=\"967e7-129\">\\[[Ensemble d’API\_: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-129\">\\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    isPreview: true
    name: 'addFromBase64(base64File, sheetNamesToInsert, positionTypeString, relativeTo)'
    fullName: 'addFromBase64(base64File, sheetNamesToInsert, positionTypeString, relativeTo)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromBase64(base64File: string, sheetNamesToInsert?: string[], positionTypeString?: "None" | "Before" | "After" | "Beginning" | "End", relativeTo?: Worksheet | string): OfficeExtension.ClientResult<string[]>;'
      return:
        type:
          - 'excel!Excel.WorksheetCollection#addFromBase64~2:complex'
        description: <span data-ttu-id="967e7-130">Tableau d’ID correspondant à chaque feuille de calcul nouvellement insérée.</span><span class="sxs-lookup"><span data-stu-id="967e7-130">An array of ids corresponding to each newly inserted worksheet.</span></span>
      parameters:
        - id: base64File
          description: <span data-ttu-id="967e7-131">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="967e7-131">Required.</span></span> <span data-ttu-id="967e7-132">Chaîne codée en base64 représentant le fichier de classeur source.</span><span class="sxs-lookup"><span data-stu-id="967e7-132">The base64-encoded string representing the source workbook file.</span></span>
          type:
            - string
        - id: sheetNamesToInsert
          description: '<span data-ttu-id="967e7-133">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="967e7-133">Optional.</span></span> <span data-ttu-id="967e7-134">Noms des feuilles individuelles à insérer.</span><span class="sxs-lookup"><span data-stu-id="967e7-134">The names of individual worksheets to insert.</span></span> <span data-ttu-id="967e7-135">Par défaut, toutes les feuilles de calcul du classeur source sont insérées.</span><span class="sxs-lookup"><span data-stu-id="967e7-135">By default, all the worksheets from the source workbook are inserted.</span></span>'
          type:
            - 'string[]'
        - id: positionTypeString
          description: "<span data-ttu-id=\"967e7-136\">Facultatif.</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-136\">Optional.</span></span> <span data-ttu-id=\"967e7-137\">Où les nouvelles feuilles de calcul seront insérées dans le classeur actif.</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-137\">Where in the current workbook the new worksheets will be inserted.</span></span> <span data-ttu-id=\"967e7-138\">Pour plus d’informations, voir Excel. WorksheetPositionType.</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-138\">See Excel.WorksheetPositionType for details.</span></span> <span data-ttu-id=\"967e7-139\">La valeur par défaut est «\_démarrer\_».</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-139\">Default is \"Start\".</span></span>"
          type:
            - '"None" | "Before" | "After" | "Beginning" | "End"'
        - id: relativeTo
          description: '<span data-ttu-id="967e7-140">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="967e7-140">Optional.</span></span> <span data-ttu-id="967e7-141">Feuille de calcul du classeur actif référencée pour le paramètre positionType.</span><span class="sxs-lookup"><span data-stu-id="967e7-141">The worksheet in the current workbook that is referenced for the positionType parameter.</span></span> <span data-ttu-id="967e7-142">La valeur par défaut est null et, en fonction de positionType, des feuilles de calcul sont insérées au début ou à la fin du classeur actif.</span><span class="sxs-lookup"><span data-stu-id="967e7-142">Default is null and, based on positionType, it will insert worksheets at the start or end of the current workbook.</span></span>'
          type:
            - 'excel!Excel.WorksheetCollection#addFromBase64~3:complex'
  - uid: 'excel!Excel.WorksheetCollection#context:member'
    summary: <span data-ttu-id="967e7-143">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="967e7-143">The request context associated with the object.</span></span> <span data-ttu-id="967e7-144">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="967e7-144">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.WorksheetCollection#getActiveWorksheet:member(1)'
    summary: "<span data-ttu-id=\"967e7-145\">Obtient la feuille de calcul active du classeur.</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-145\">Gets the currently active worksheet in the workbook.</span></span>\n\n<span data-ttu-id=\"967e7-146\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-146\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: getActiveWorksheet()
    fullName: getActiveWorksheet()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveWorksheet(): Excel.Worksheet;'
      return:
        type:
          - 'excel!Excel.Worksheet:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="967e7-147">Exemples</span><span class="sxs-lookup"><span data-stu-id="967e7-147">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) {  
              var activeWorksheet = ctx.workbook.worksheets.getActiveWorksheet();
              activeWorksheet.load('name');
              return ctx.sync().then(function() {
                      console.log(activeWorksheet.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.WorksheetCollection#getCount:member(1)'
    summary: "<span data-ttu-id=\"967e7-148\">Obtient le nombre de feuilles de calcul dans la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-148\">Gets the number of worksheets in the collection.</span></span>\n\n<span data-ttu-id=\"967e7-149\">\\[[Ensemble d’API\_: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-149\">\\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: getCount(visibleOnly)
    fullName: getCount(visibleOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(visibleOnly?: boolean): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.WorksheetCollection#getCount~0:complex'
        description: ''
      parameters:
        - id: visibleOnly
          description: '<span data-ttu-id="967e7-150">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="967e7-150">Optional.</span></span> <span data-ttu-id="967e7-151">Si la valeur est true, ne prend en compte que les feuilles de calcul visibles, en ignorant celles qui sont masquées.</span><span class="sxs-lookup"><span data-stu-id="967e7-151">If true, considers only visible worksheets, skipping over any hidden ones.</span></span>'
          type:
            - boolean
  - uid: 'excel!Excel.WorksheetCollection#getFirst:member(1)'
    summary: "<span data-ttu-id=\"967e7-152\">Obtient la première feuille de calcul dans la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-152\">Gets the first worksheet in the collection.</span></span>\n\n<span data-ttu-id=\"967e7-153\">\\[[Ensemble d’API\_: ExcelApi 1,5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-153\">\\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: getFirst(visibleOnly)
    fullName: getFirst(visibleOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFirst(visibleOnly?: boolean): Excel.Worksheet;'
      return:
        type:
          - 'excel!Excel.Worksheet:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="967e7-154">Exemples</span><span class="sxs-lookup"><span data-stu-id="967e7-154">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheets = context.workbook.worksheets;

              // We don't want to include the default worksheet that was created
              // when the workbook was created, so our "firstSheet" will be the one
              // after the literal first. Note chaining of navigation methods.
              const firstSheet = sheets.getFirst().getNext();
              const lastSheet = sheets.getLast();
              const firstTaxRateRange = firstSheet.getRange("B2");
              const lastTaxRateRange = lastSheet.getRange("B2");

              firstSheet.load("name");
              lastSheet.load("name");
              firstTaxRateRange.load("text");
              lastTaxRateRange.load("text");

              await context.sync();

              let firstYear = firstSheet.name.substr(5, 4);
              let lastYear = lastSheet.name.substr(5, 4);
              console.log(`Tax Rate change from ${firstYear} to ${lastYear}`, `Tax rate for ${firstYear}: ${firstTaxRateRange.text[0][0]}\nTax rate for ${lastYear}: ${lastTaxRateRange.text[0][0]}`)

              await context.sync();
          });
          ```
      parameters:
        - id: visibleOnly
          description: '<span data-ttu-id="967e7-155">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="967e7-155">Optional.</span></span> <span data-ttu-id="967e7-156">Si la valeur est true, ne prend en compte que les feuilles de calcul visibles, en ignorant celles qui sont masquées.</span><span class="sxs-lookup"><span data-stu-id="967e7-156">If true, considers only visible worksheets, skipping over any hidden ones.</span></span>'
          type:
            - boolean
  - uid: 'excel!Excel.WorksheetCollection#getItem:member(1)'
    summary: "<span data-ttu-id=\"967e7-157\">Obtient un objet de feuille de calcul à l’aide de son nom ou de son ID.</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-157\">Gets a worksheet object using its Name or ID.</span></span>\n\n<span data-ttu-id=\"967e7-158\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-158\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Excel.Worksheet;'
      return:
        type:
          - 'excel!Excel.Worksheet:class'
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="967e7-159">Nom ou ID de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="967e7-159">The Name or ID of the worksheet.</span></span>
          type:
            - string
  - uid: 'excel!Excel.WorksheetCollection#getItemOrNullObject:member(1)'
    summary: "<span data-ttu-id=\"967e7-160\">Obtient un objet de feuille de calcul à l’aide de son nom ou de son ID.</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-160\">Gets a worksheet object using its Name or ID.</span></span> <span data-ttu-id=\"967e7-161\">Si la feuille de calcul n’existe pas, renvoie un objet null.</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-161\">If the worksheet does not exist, will return a null object.</span></span>\n\n<span data-ttu-id=\"967e7-162\">\\[[Ensemble d’API\_: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-162\">\\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: getItemOrNullObject(key)
    fullName: getItemOrNullObject(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(key: string): Excel.Worksheet;'
      return:
        type:
          - 'excel!Excel.Worksheet:class'
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="967e7-163">Nom ou ID de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="967e7-163">The Name or ID of the worksheet.</span></span>
          type:
            - string
  - uid: 'excel!Excel.WorksheetCollection#getLast:member(1)'
    summary: "<span data-ttu-id=\"967e7-164\">Obtient la dernière feuille de calcul dans la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-164\">Gets the last worksheet in the collection.</span></span>\n\n<span data-ttu-id=\"967e7-165\">\\[[Ensemble d’API\_: ExcelApi 1,5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-165\">\\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: getLast(visibleOnly)
    fullName: getLast(visibleOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getLast(visibleOnly?: boolean): Excel.Worksheet;'
      return:
        type:
          - 'excel!Excel.Worksheet:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="967e7-166">Exemples</span><span class="sxs-lookup"><span data-stu-id="967e7-166">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheets = context.workbook.worksheets;

              // We don't want to include the default worksheet that was created
              // when the workbook was created, so our "firstSheet" will be the one
              // after the literal first. Note chaining of navigation methods.
              const firstSheet = sheets.getFirst().getNext();
              const lastSheet = sheets.getLast();
              const firstTaxRateRange = firstSheet.getRange("B2");
              const lastTaxRateRange = lastSheet.getRange("B2");

              firstSheet.load("name");
              lastSheet.load("name");
              firstTaxRateRange.load("text");
              lastTaxRateRange.load("text");

              await context.sync();

              let firstYear = firstSheet.name.substr(5, 4);
              let lastYear = lastSheet.name.substr(5, 4);
              console.log(`Tax Rate change from ${firstYear} to ${lastYear}`, `Tax rate for ${firstYear}: ${firstTaxRateRange.text[0][0]}\nTax rate for ${lastYear}: ${lastTaxRateRange.text[0][0]}`)

              await context.sync();
          });
          ```
      parameters:
        - id: visibleOnly
          description: '<span data-ttu-id="967e7-167">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="967e7-167">Optional.</span></span> <span data-ttu-id="967e7-168">Si la valeur est true, ne prend en compte que les feuilles de calcul visibles, en ignorant celles qui sont masquées.</span><span class="sxs-lookup"><span data-stu-id="967e7-168">If true, considers only visible worksheets, skipping over any hidden ones.</span></span>'
          type:
            - boolean
  - uid: 'excel!Excel.WorksheetCollection#items:member'
    summary: <span data-ttu-id="967e7-169">Obtient l’élément enfant chargé dans cette collection de sites.</span><span class="sxs-lookup"><span data-stu-id="967e7-169">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Worksheet[];'
      return:
        type:
          - 'excel!Excel.WorksheetCollection#items~0:complex'
  - uid: 'excel!Excel.WorksheetCollection#load:member(1)'
    summary: <span data-ttu-id="967e7-170">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="967e7-170">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="967e7-171">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="967e7-171">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.WorksheetCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.WorksheetCollection;'
      return:
        type:
          - 'excel!Excel.WorksheetCollection:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="967e7-172">Fournit des options pour les propriétés de l’objet à charger.</span><span class="sxs-lookup"><span data-stu-id="967e7-172">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.WorksheetCollection#load~0:complex'
  - uid: 'excel!Excel.WorksheetCollection#load:member(2)'
    summary: <span data-ttu-id="967e7-173">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="967e7-173">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="967e7-174">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="967e7-174">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.WorksheetCollection;'
      return:
        type:
          - 'excel!Excel.WorksheetCollection:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="967e7-175">Exemples</span><span class="sxs-lookup"><span data-stu-id="967e7-175">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var worksheets = ctx.workbook.worksheets;
              worksheets.load('items');
              return ctx.sync().then(function() {
                  for (var i = 0; i < worksheets.items.length; i++)
                  {
                      console.log(worksheets.items[i].name);
                      console.log(worksheets.items[i].index);
                  }
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="967e7-176">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="967e7-176">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.WorksheetCollection#load:member(3)'
    summary: <span data-ttu-id="967e7-177">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="967e7-177">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="967e7-178">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="967e7-178">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Excel.WorksheetCollection;'
      return:
        type:
          - 'excel!Excel.WorksheetCollection:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="967e7-179">`propertyNamesAndPaths.select`est une chaîne délimitée par des virgules qui spécifie les propriétés à `propertyNamesAndPaths.expand` charger et une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="967e7-179">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - 'excel!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.WorksheetCollection#onActivated:member'
    summary: "<span data-ttu-id=\"967e7-180\">Cet événement se produit lorsqu’une feuille de calcul du classeur est activée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-180\">Occurs when any worksheet in the workbook is activated.</span></span>\n\n<span data-ttu-id=\"967e7-181\">\\[[Ensemble d’API\_: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-181\">\\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: onActivated
    fullName: onActivated
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onActivated: OfficeExtension.EventHandlers<Excel.WorksheetActivatedEventArgs>;'
      return:
        type:
          - 'excel!Excel.WorksheetCollection#onActivated~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="967e7-182">Exemples</span><span class="sxs-lookup"><span data-stu-id="967e7-182">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let sheets = context.workbook.worksheets;
              sheets.onActivated.add(onActivate);

              await context.sync();
              console.log("A handler has been registered for the OnActivate event.");
          });
          ```
  - uid: 'excel!Excel.WorksheetCollection#onAdded:member'
    summary: "<span data-ttu-id=\"967e7-183\">Survient lors de l’ajout d’une nouvelle feuille de calcul au classeur.</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-183\">Occurs when a new worksheet is added to the workbook.</span></span>\n\n<span data-ttu-id=\"967e7-184\">\\[[Ensemble d’API\_: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-184\">\\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: onAdded
    fullName: onAdded
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onAdded: OfficeExtension.EventHandlers<Excel.WorksheetAddedEventArgs>;'
      return:
        type:
          - 'excel!Excel.WorksheetCollection#onAdded~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="967e7-185">Exemples</span><span class="sxs-lookup"><span data-stu-id="967e7-185">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let sheet = context.workbook.worksheets;
              sheet.onAdded.add(onWorksheetAdd);

              await context.sync();
              console.log("A handler has been registered for the OnAdded event.");
          });
          ```
  - uid: 'excel!Excel.WorksheetCollection#onCalculated:member'
    summary: "<span data-ttu-id=\"967e7-186\">Cet événement se produit lorsqu’une feuille de calcul du classeur est calculée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-186\">Occurs when any worksheet in the workbook is calculated.</span></span>\n\n<span data-ttu-id=\"967e7-187\">\\[[Ensemble d’API\_: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-187\">\\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: onCalculated
    fullName: onCalculated
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onCalculated: OfficeExtension.EventHandlers<Excel.WorksheetCalculatedEventArgs>;'
      return:
        type:
          - 'excel!Excel.WorksheetCollection#onCalculated~0:complex'
  - uid: 'excel!Excel.WorksheetCollection#onChanged:member'
    summary: "<span data-ttu-id=\"967e7-188\">Se produit lorsqu’une feuille de calcul dans le classeur est modifiée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-188\">Occurs when any worksheet in the workbook is changed.</span></span>\n\n<span data-ttu-id=\"967e7-189\">\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-189\">\\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: onChanged
    fullName: onChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onChanged: OfficeExtension.EventHandlers<Excel.WorksheetChangedEventArgs>;'
      return:
        type:
          - 'excel!Excel.WorksheetCollection#onChanged~0:complex'
  - uid: 'excel!Excel.WorksheetCollection#onColumnSorted:member'
    summary: "<span data-ttu-id=\"967e7-190\">Se produit lorsqu’une ou plusieurs colonnes ont été triées.</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-190\">Occurs when one or more columns have been sorted.</span></span> <span data-ttu-id=\"967e7-191\">Cela se produit à la suite d’une opération de tri de gauche à droite.</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-191\">This happens as the result of a left-to-right sort operation.</span></span>\n\n<span data-ttu-id=\"967e7-192\">\\[[Ensemble d’API\_: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-192\">\\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    isPreview: true
    name: onColumnSorted
    fullName: onColumnSorted
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onColumnSorted: OfficeExtension.EventHandlers<Excel.WorksheetColumnSortedEventArgs>;'
      return:
        type:
          - 'excel!Excel.WorksheetCollection#onColumnSorted~0:complex'
  - uid: 'excel!Excel.WorksheetCollection#onDeactivated:member'
    summary: "<span data-ttu-id=\"967e7-193\">Cet événement se produit lorsqu’une feuille de calcul du classeur est désactivée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-193\">Occurs when any worksheet in the workbook is deactivated.</span></span>\n\n<span data-ttu-id=\"967e7-194\">\\[[Ensemble d’API\_: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-194\">\\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: onDeactivated
    fullName: onDeactivated
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onDeactivated: OfficeExtension.EventHandlers<Excel.WorksheetDeactivatedEventArgs>;'
      return:
        type:
          - 'excel!Excel.WorksheetCollection#onDeactivated~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="967e7-195">Exemples</span><span class="sxs-lookup"><span data-stu-id="967e7-195">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let sheets = context.workbook.worksheets;
              sheets.onDeactivated.add(onDeactivate);

              await context.sync();
              console.log("A handler has been registered for the OnDeactivate event.");
          });
          ```
  - uid: 'excel!Excel.WorksheetCollection#onDeleted:member'
    summary: "<span data-ttu-id=\"967e7-196\">Survient lors de la suppression d’une feuille de calcul du classeur.</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-196\">Occurs when a worksheet is deleted from the workbook.</span></span>\n\n<span data-ttu-id=\"967e7-197\">\\[[Ensemble d’API\_: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-197\">\\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: onDeleted
    fullName: onDeleted
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onDeleted: OfficeExtension.EventHandlers<Excel.WorksheetDeletedEventArgs>;'
      return:
        type:
          - 'excel!Excel.WorksheetCollection#onDeleted~0:complex'
  - uid: 'excel!Excel.WorksheetCollection#onFiltered:member'
    summary: "<span data-ttu-id=\"967e7-198\">Se produit lorsqu’un filtre de la feuille de calcul est appliqué dans le classeur.</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-198\">Occurs when any worksheet's filter is applied in the workbook.</span></span>\n\n<span data-ttu-id=\"967e7-199\">\\[[Ensemble d’API\_: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-199\">\\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    isPreview: true
    name: onFiltered
    fullName: onFiltered
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onFiltered: OfficeExtension.EventHandlers<Excel.WorksheetFilteredEventArgs>;'
      return:
        type:
          - 'excel!Excel.WorksheetCollection#onFiltered~0:complex'
  - uid: 'excel!Excel.WorksheetCollection#onFormatChanged:member'
    summary: "<span data-ttu-id=\"967e7-200\">Se produit lorsqu’une feuille de calcul dans le classeur a un format modifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-200\">Occurs when any worksheet in the workbook has format changed.</span></span>\n\n<span data-ttu-id=\"967e7-201\">\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-201\">\\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: onFormatChanged
    fullName: onFormatChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onFormatChanged: OfficeExtension.EventHandlers<Excel.WorksheetFormatChangedEventArgs>;'
      return:
        type:
          - 'excel!Excel.WorksheetCollection#onFormatChanged~0:complex'
  - uid: 'excel!Excel.WorksheetCollection#onRowHiddenChanged:member'
    summary: "<span data-ttu-id=\"967e7-202\">Survient lorsque l’état masqué d’une ou plusieurs lignes a été modifié sur une feuille de calcul spécifique.</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-202\">Occurs when the hidden state of one or more rows has changed on a specific worksheet.</span></span>\n\n<span data-ttu-id=\"967e7-203\">\\[[Ensemble d’API\_: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-203\">\\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    isPreview: true
    name: onRowHiddenChanged
    fullName: onRowHiddenChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onRowHiddenChanged: OfficeExtension.EventHandlers<Excel.WorksheetRowHiddenChangedEventArgs>;'
      return:
        type:
          - 'excel!Excel.WorksheetCollection#onRowHiddenChanged~0:complex'
  - uid: 'excel!Excel.WorksheetCollection#onRowSorted:member'
    summary: "<span data-ttu-id=\"967e7-204\">Se produit lorsqu’une ou plusieurs lignes ont été triées.</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-204\">Occurs when one or more rows have been sorted.</span></span> <span data-ttu-id=\"967e7-205\">Cela se produit à la suite d’une opération de tri de haut en bas.</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-205\">This happens as the result of a top-to-bottom sort operation.</span></span>\n\n<span data-ttu-id=\"967e7-206\">\\[[Ensemble d’API\_: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-206\">\\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    isPreview: true
    name: onRowSorted
    fullName: onRowSorted
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onRowSorted: OfficeExtension.EventHandlers<Excel.WorksheetRowSortedEventArgs>;'
      return:
        type:
          - 'excel!Excel.WorksheetCollection#onRowSorted~0:complex'
  - uid: 'excel!Excel.WorksheetCollection#onSelectionChanged:member'
    summary: "<span data-ttu-id=\"967e7-207\">Se produit lorsque la sélection change sur n’importe quelle feuille de calcul.</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-207\">Occurs when the selection changes on any worksheet.</span></span>\n\n<span data-ttu-id=\"967e7-208\">\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-208\">\\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: onSelectionChanged
    fullName: onSelectionChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Excel.WorksheetSelectionChangedEventArgs>;'
      return:
        type:
          - 'excel!Excel.WorksheetCollection#onSelectionChanged~0:complex'
  - uid: 'excel!Excel.WorksheetCollection#onSingleClicked:member'
    summary: "<span data-ttu-id=\"967e7-209\">Cet événement se produit lorsque l’utilisateur clique dessus ou a cliqué sur une opération dans la collection Worksheet.</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-209\">Occurs when left-clicked/tapped operation happens in the worksheet collection.</span></span> <span data-ttu-id=\"967e7-210\">Cet événement ne sera pas déclenché lorsque vous cliquerez dans les cas suivants\_:</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-210\">This event will not be fired when clicking in the following cases:</span></span>\n\n- <span data-ttu-id=\"967e7-211\">L’utilisateur fait glisser la souris pour sélectionner plusieurs sélections.</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-211\">The user drags the mouse for multi-selection.</span></span>\n\n- <span data-ttu-id=\"967e7-212\">L’utilisateur sélectionne une cellule dans le mode lorsque les arguments de la cellule sont sélectionnés pour les références de formule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-212\">The user selects a cell in the mode when cell arguments are selected for formula references.</span></span>\n\n<span data-ttu-id=\"967e7-213\">\\[[Ensemble d’API\_: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-213\">\\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    isPreview: true
    name: onSingleClicked
    fullName: onSingleClicked
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onSingleClicked: OfficeExtension.EventHandlers<Excel.WorksheetSingleClickedEventArgs>;'
      return:
        type:
          - 'excel!Excel.WorksheetCollection#onSingleClicked~0:complex'
  - uid: 'excel!Excel.WorksheetCollection#toJSON:member(1)'
    summary: "<span data-ttu-id=\"967e7-214\">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-214\">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id=\"967e7-215\">.</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-215\"></span></span> <span data-ttu-id=\"967e7-216\">(`JSON.stringify`</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-216\"></span></span><!-- --><span data-ttu-id=\"967e7-217\">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que `Excel.WorksheetCollection` l’objet d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.WorksheetCollectionData`</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-217\">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.WorksheetCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.WorksheetCollectionData`</span></span><!-- --><span data-ttu-id=\"967e7-218\">) qui contient un tableau «\_éléments\_» avec des copies superficielles de toutes les propriétés chargées des éléments de la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"967e7-218\">) that contains an \"items\" array with shallow copies of any loaded properties from the collection's items.</span></span>"
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.WorksheetCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.WorksheetCollectionData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.Worksheet:class'
    name: Excel.Worksheet
  - uid: 'excel!Excel.WorksheetCollection#addFromBase64~0:complex'
    name: 'OfficeExtension.ClientResult<string[]>'
    fullName: 'OfficeExtension.ClientResult<string[]>'
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: '<string[]>'
        fullName: '<string[]>'
  - uid: 'excel!Excel.WorksheetPositionType:enum'
    name: Excel.WorksheetPositionType
  - uid: 'excel!Excel.WorksheetCollection#addFromBase64~1:complex'
    name: Worksheet | string
    fullName: Excel.Worksheet | string
    spec.typeScript:
      - uid: 'excel!Excel.Worksheet:class'
        name: Worksheet
        fullName: Excel.Worksheet
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.WorksheetCollection#addFromBase64~2:complex'
    name: 'OfficeExtension.ClientResult<string[]>'
    fullName: 'OfficeExtension.ClientResult<string[]>'
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: '<string[]>'
        fullName: '<string[]>'
  - uid: 'excel!Excel.WorksheetCollection#addFromBase64~3:complex'
    name: Worksheet | string
    fullName: Excel.Worksheet | string
    spec.typeScript:
      - uid: 'excel!Excel.Worksheet:class'
        name: Worksheet
        fullName: Excel.Worksheet
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.WorksheetCollection#getCount~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel!Excel.WorksheetCollection#items~0:complex'
    name: 'Excel.Worksheet[]'
    fullName: 'Excel.Worksheet[]'
    spec.typeScript:
      - uid: 'excel!Excel.Worksheet:class'
        name: Excel.Worksheet
        fullName: Excel.Worksheet
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.WorksheetCollection:class'
    name: Excel.WorksheetCollection
  - uid: 'excel!Excel.WorksheetCollection#load~0:complex'
    name: Excel.Interfaces.WorksheetCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.WorksheetCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.WorksheetCollectionLoadOptions:interface'
        name: Excel.Interfaces.WorksheetCollectionLoadOptions
        fullName: Excel.Interfaces.WorksheetCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'excel!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.WorksheetCollection#onActivated~0:complex'
    name: OfficeExtension.EventHandlers<Excel.WorksheetActivatedEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.WorksheetActivatedEventArgs>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.WorksheetActivatedEventArgs:interface'
        name: Excel.WorksheetActivatedEventArgs
        fullName: Excel.WorksheetActivatedEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.WorksheetCollection#onAdded~0:complex'
    name: OfficeExtension.EventHandlers<Excel.WorksheetAddedEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.WorksheetAddedEventArgs>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.WorksheetAddedEventArgs:interface'
        name: Excel.WorksheetAddedEventArgs
        fullName: Excel.WorksheetAddedEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.WorksheetCollection#onCalculated~0:complex'
    name: OfficeExtension.EventHandlers<Excel.WorksheetCalculatedEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.WorksheetCalculatedEventArgs>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.WorksheetCalculatedEventArgs:interface'
        name: Excel.WorksheetCalculatedEventArgs
        fullName: Excel.WorksheetCalculatedEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.WorksheetCollection#onChanged~0:complex'
    name: OfficeExtension.EventHandlers<Excel.WorksheetChangedEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.WorksheetChangedEventArgs>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.WorksheetChangedEventArgs:interface'
        name: Excel.WorksheetChangedEventArgs
        fullName: Excel.WorksheetChangedEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.WorksheetCollection#onColumnSorted~0:complex'
    name: OfficeExtension.EventHandlers<Excel.WorksheetColumnSortedEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.WorksheetColumnSortedEventArgs>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.WorksheetColumnSortedEventArgs:interface'
        name: Excel.WorksheetColumnSortedEventArgs
        fullName: Excel.WorksheetColumnSortedEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.WorksheetCollection#onDeactivated~0:complex'
    name: OfficeExtension.EventHandlers<Excel.WorksheetDeactivatedEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.WorksheetDeactivatedEventArgs>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.WorksheetDeactivatedEventArgs:interface'
        name: Excel.WorksheetDeactivatedEventArgs
        fullName: Excel.WorksheetDeactivatedEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.WorksheetCollection#onDeleted~0:complex'
    name: OfficeExtension.EventHandlers<Excel.WorksheetDeletedEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.WorksheetDeletedEventArgs>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.WorksheetDeletedEventArgs:interface'
        name: Excel.WorksheetDeletedEventArgs
        fullName: Excel.WorksheetDeletedEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.WorksheetCollection#onFiltered~0:complex'
    name: OfficeExtension.EventHandlers<Excel.WorksheetFilteredEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.WorksheetFilteredEventArgs>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.WorksheetFilteredEventArgs:interface'
        name: Excel.WorksheetFilteredEventArgs
        fullName: Excel.WorksheetFilteredEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.WorksheetCollection#onFormatChanged~0:complex'
    name: OfficeExtension.EventHandlers<Excel.WorksheetFormatChangedEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.WorksheetFormatChangedEventArgs>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.WorksheetFormatChangedEventArgs:interface'
        name: Excel.WorksheetFormatChangedEventArgs
        fullName: Excel.WorksheetFormatChangedEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.WorksheetCollection#onRowHiddenChanged~0:complex'
    name: OfficeExtension.EventHandlers<Excel.WorksheetRowHiddenChangedEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.WorksheetRowHiddenChangedEventArgs>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.WorksheetRowHiddenChangedEventArgs:interface'
        name: Excel.WorksheetRowHiddenChangedEventArgs
        fullName: Excel.WorksheetRowHiddenChangedEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.WorksheetCollection#onRowSorted~0:complex'
    name: OfficeExtension.EventHandlers<Excel.WorksheetRowSortedEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.WorksheetRowSortedEventArgs>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.WorksheetRowSortedEventArgs:interface'
        name: Excel.WorksheetRowSortedEventArgs
        fullName: Excel.WorksheetRowSortedEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.WorksheetCollection#onSelectionChanged~0:complex'
    name: OfficeExtension.EventHandlers<Excel.WorksheetSelectionChangedEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.WorksheetSelectionChangedEventArgs>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.WorksheetSelectionChangedEventArgs:interface'
        name: Excel.WorksheetSelectionChangedEventArgs
        fullName: Excel.WorksheetSelectionChangedEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.WorksheetCollection#onSingleClicked~0:complex'
    name: OfficeExtension.EventHandlers<Excel.WorksheetSingleClickedEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.WorksheetSingleClickedEventArgs>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.WorksheetSingleClickedEventArgs:interface'
        name: Excel.WorksheetSingleClickedEventArgs
        fullName: Excel.WorksheetSingleClickedEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.Interfaces.WorksheetCollectionData:interface'
    name: Excel.Interfaces.WorksheetCollectionData