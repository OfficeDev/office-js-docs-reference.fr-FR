### YamlMime:TSType
name: Excel.CommentReplyCollection
uid: excel!Excel.CommentReplyCollection:class
package: excel!
fullName: Excel.CommentReplyCollection
summary: >-
  Représente une collection d’objets de réponse de commentaire qui font partie du commentaire.


  \[[Ensemble d’API : ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: context
  uid: excel!Excel.CommentReplyCollection#context:member
  package: excel!
  fullName: context
  summary: Contexte de demande associé à l’objet. Cela connecte le processus du add-in au processus de l’application hôte Office.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="excel!Excel.RequestContext:class" />
- name: items
  uid: excel!Excel.CommentReplyCollection#items:member
  package: excel!
  fullName: items
  summary: Obtient l’élément enfant chargé dans cette collection de sites.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly items: Excel.CommentReply[];'
    return:
      type: <xref uid="excel!Excel.CommentReply:class" />[]
methods:
- name: add(content, contentType)
  uid: excel!Excel.CommentReplyCollection#add:member(1)
  package: excel!
  fullName: add(content, contentType)
  summary: >-
    Crée une réponse de commentaire pour un commentaire.


    \[[Ensemble d’API : ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'add(content: CommentRichContent | string, contentType?: Excel.ContentType): Excel.CommentReply;'
    parameters:
    - id: content
      description: 'Contenu du commentaire. Il peut s’agit d’une chaîne ou d’un objet `CommentRichContent` (par exemple, pour les commentaires avec mentions). \[Ensemble d’api : ExcelApi 1.10 pour la chaîne, 1,11 pour l’objet CommentRichContent\]'
      type: <xref uid="excel!Excel.CommentRichContent:interface" /> | string
    - id: contentType
      description: 'Facultatif. Type de contenu contenu dans le commentaire. La valeur par défaut est enum `ContentType.Plain`<!-- -->. \[Ensemble d’api : ExcelApi 1.10 pour Enum ContentType.Plain, 1,11 pour Enum ContentType.Mention\]'
      type: <xref uid="excel!Excel.ContentType:enum" />
    return:
      type: <xref uid="excel!Excel.CommentReply:class" />
      description: "\n\n#### <a name=\"examples\"></a>Exemples\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/12-comment/comment-replies.yaml\nawait Excel.run(async (context) => {\n    // Adds a reply to the first comment in this worksheet.\n    const sheet = context.workbook.worksheets.getItem(\"Comments\");\n    const comment = sheet.comments.getItemAt(0);\n    comment.replies.add(\"Add content to this worksheet.\");\n    await context.sync();\n});\n```"
- name: add(content, contentTypeString)
  uid: excel!Excel.CommentReplyCollection#add:member(2)
  package: excel!
  fullName: add(content, contentTypeString)
  summary: >-
    Crée une réponse de commentaire pour un commentaire.


    \[[Ensemble d’API : ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'add(content: CommentRichContent | string, contentTypeString?: "Plain" | "Mention"): Excel.CommentReply;'
    parameters:
    - id: content
      description: 'Contenu du commentaire. Il peut s’agit d’une chaîne ou d’un objet `CommentRichContent` (par exemple, pour les commentaires avec mentions). \[Ensemble d’api : ExcelApi 1.10 pour la chaîne, 1,11 pour l’objet CommentRichContent\]'
      type: <xref uid="excel!Excel.CommentRichContent:interface" /> | string
    - id: contentTypeString
      description: 'Facultatif. Type de contenu contenu dans le commentaire. La valeur par défaut est enum `ContentType.Plain`<!-- -->. \[Ensemble d’api : ExcelApi 1.10 pour Enum ContentType.Plain, 1,11 pour Enum ContentType.Mention\]'
      type: "\"Plain\" | \"Mention\""
    return:
      type: <xref uid="excel!Excel.CommentReply:class" />
      description: ''
- name: getCount()
  uid: excel!Excel.CommentReplyCollection#getCount:member(1)
  package: excel!
  fullName: getCount()
  summary: >-
    Obtient le nombre de réponses aux commentaires de la collection.


    \[[Ensemble d’API : ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;number&gt;
      description: ''
- name: getItem(commentReplyId)
  uid: excel!Excel.CommentReplyCollection#getItem:member(1)
  package: excel!
  fullName: getItem(commentReplyId)
  summary: >-
    Renvoie une réponse de commentaire identifié via son ID.


    \[[Ensemble d’API : ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getItem(commentReplyId: string): Excel.CommentReply;'
    parameters:
    - id: commentReplyId
      description: Identificateur de la réponse au commentaire.
      type: string
    return:
      type: <xref uid="excel!Excel.CommentReply:class" />
      description: ''
- name: getItemAt(index)
  uid: excel!Excel.CommentReplyCollection#getItemAt:member(1)
  package: excel!
  fullName: getItemAt(index)
  summary: >-
    Obtient une réponse de commentaire en fonction de sa position dans la collection.


    \[[Ensemble d’API : ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getItemAt(index: number): Excel.CommentReply;'
    parameters:
    - id: index
      description: Valeur d’index de la réponse de commentaire à récupérer. La collection utilise l’indexation de base zéro.
      type: number
    return:
      type: <xref uid="excel!Excel.CommentReply:class" />
      description: ''
- name: getItemOrNullObject(commentReplyId)
  uid: excel!Excel.CommentReplyCollection#getItemOrNullObject:member(1)
  package: excel!
  fullName: getItemOrNullObject(commentReplyId)
  summary: >-
    Renvoie une réponse de commentaire identifié via son ID. Si l’objet de réponse de commentaire n’existe pas, cette fonction retourne un objet dont la `isNullObject` propriété est définie sur `true`<!-- -->. Pour plus d’informations, [voir *OrNullObject methods and properties](https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties)<!-- -->.


    \[[Ensemble d’API : ExcelApi BÊTA (PRÉVISUALISATION UNIQUEMENT)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'getItemOrNullObject(commentReplyId: string): Excel.CommentReply;'
    parameters:
    - id: commentReplyId
      description: Identificateur de la réponse au commentaire
      type: string
    return:
      type: <xref uid="excel!Excel.CommentReply:class" />
      description: ''
- name: load(options)
  uid: excel!Excel.CommentReplyCollection#load:member(1)
  package: excel!
  fullName: load(options)
  summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(options?: Excel.Interfaces.CommentReplyCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.CommentReplyCollection;'
    parameters:
    - id: options
      description: Fournit des options pour lesquelles les propriétés de l’objet à charger.
      type: <xref uid="excel!Excel.Interfaces.CommentReplyCollectionLoadOptions:interface" /> & <xref uid="excel!Excel.Interfaces.CollectionLoadOptions:interface" />
    return:
      type: <xref uid="excel!Excel.CommentReplyCollection:class" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.CommentReplyCollection#load:member(2)
  package: excel!
  fullName: load(propertyNames)
  summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.CommentReplyCollection;'
    parameters:
    - id: propertyNames
      description: Chaîne délimitée par des virgules ou tableau de chaînes spécifiant les propriétés à charger.
      type: string | string[]
    return:
      type: <xref uid="excel!Excel.CommentReplyCollection:class" />
      description: ''
- name: load(propertyNamesAndPaths)
  uid: excel!Excel.CommentReplyCollection#load:member(3)
  package: excel!
  fullName: load(propertyNamesAndPaths)
  summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Excel.CommentReplyCollection;'
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` est une chaîne délimitée par des virgules qui spécifie les propriétés à charger, et est une chaîne délimitée par des virgules qui spécifie les propriétés de `propertyNamesAndPaths.expand` navigation à charger.'
      type: <xref uid="office!OfficeExtension.LoadOption:interface" />
    return:
      type: <xref uid="excel!Excel.CommentReplyCollection:class" />
      description: ''
- name: toJSON()
  uid: excel!Excel.CommentReplyCollection#toJSON:member(1)
  package: excel!
  fullName: toJSON()
  summary: Remplace la méthode JavaScript afin de fournir une sortie plus utile lorsqu’un objet `toJSON()` API est transmis à `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, à son tour, appelle `toJSON` la méthode de l’objet qui lui est transmis.) Alors que `Excel.CommentReplyCollection` l’objet d’origine est un objet API, la méthode renvoie un objet `toJSON` JavaScript simple (tapé sous la forme `Excel.Interfaces.CommentReplyCollectionData`<!-- -->) qui contient un tableau « éléments » avec des copies peu profondes de toutes les propriétés chargées à partir des éléments de la collection.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Excel.Interfaces.CommentReplyCollectionData;'
    return:
      type: <xref uid="excel!Excel.Interfaces.CommentReplyCollectionData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: f9605106e7cc7145e6dbc2e4b0f14d7c9824a841
  ms.sourcegitcommit: 276e655472f82435a4b1227fbbb2feb687b659c0
  ms.translationtype: MT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 03/08/2021
  ms.locfileid: "50538806"
