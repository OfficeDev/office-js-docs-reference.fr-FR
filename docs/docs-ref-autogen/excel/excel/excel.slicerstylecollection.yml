### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.SlicerStyleCollection:class'
    summary: "<span data-ttu-id=\"331d5-101\">Représente une collection d’objets SlicerStyle.</span><span class=\"sxs-lookup\"><span data-stu-id=\"331d5-101\">Represents a collection of SlicerStyle objects.</span></span>\n\n<span data-ttu-id=\"331d5-102\">\\[[Ensemble d’API\_: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"331d5-102\">\\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    isPreview: true
    name: Excel.SlicerStyleCollection
    fullName: Excel.SlicerStyleCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.SlicerStyleCollection#add:member(1)'
      - 'excel!Excel.SlicerStyleCollection#context:member'
      - 'excel!Excel.SlicerStyleCollection#getCount:member(1)'
      - 'excel!Excel.SlicerStyleCollection#getDefault:member(1)'
      - 'excel!Excel.SlicerStyleCollection#getItem:member(1)'
      - 'excel!Excel.SlicerStyleCollection#getItemOrNullObject:member(1)'
      - 'excel!Excel.SlicerStyleCollection#items:member'
      - 'excel!Excel.SlicerStyleCollection#load:member(1)'
      - 'excel!Excel.SlicerStyleCollection#load:member(2)'
      - 'excel!Excel.SlicerStyleCollection#load:member(3)'
      - 'excel!Excel.SlicerStyleCollection#setDefault:member(1)'
      - 'excel!Excel.SlicerStyleCollection#toJSON:member(1)'
  - uid: 'excel!Excel.SlicerStyleCollection#add:member(1)'
    summary: "<span data-ttu-id=\"331d5-103\">Crée un SlicerStyle vide avec le nom spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"331d5-103\">Creates a blank SlicerStyle with the specified name.</span></span>\n\n<span data-ttu-id=\"331d5-104\">\\[[Ensemble d’API\_: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"331d5-104\">\\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    isPreview: true
    name: 'add(name, makeUniqueName)'
    fullName: 'add(name, makeUniqueName)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(name: string, makeUniqueName?: boolean): Excel.SlicerStyle;'
      return:
        type:
          - 'excel!Excel.SlicerStyle:class'
        description: <span data-ttu-id="331d5-105">SlicerStyle nouvellement créé.</span><span class="sxs-lookup"><span data-stu-id="331d5-105">The newly created SlicerStyle.</span></span>
      parameters:
        - id: name
          description: <span data-ttu-id="331d5-106">Nom unique de la nouvelle SlicerStyle.</span><span class="sxs-lookup"><span data-stu-id="331d5-106">The unique name for the new SlicerStyle.</span></span> <span data-ttu-id="331d5-107">Génère une exception d’argument non valide si le nom est déjà utilisé.</span><span class="sxs-lookup"><span data-stu-id="331d5-107">Will throw an invalid argument exception if the name is already in use.</span></span>
          type:
            - string
        - id: makeUniqueName
          description: '<span data-ttu-id="331d5-108">Facultatif, la valeur par défaut est false.</span><span class="sxs-lookup"><span data-stu-id="331d5-108">Optional, defaults to false.</span></span> <span data-ttu-id="331d5-109">Si la valeur est true, ajoute des numéros au nom afin de le définir comme étant unique, le cas échéant.</span><span class="sxs-lookup"><span data-stu-id="331d5-109">If true, will append numbers to the name in order to make it unique, if needed.</span></span>'
          type:
            - boolean
  - uid: 'excel!Excel.SlicerStyleCollection#context:member'
    summary: <span data-ttu-id="331d5-110">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="331d5-110">The request context associated with the object.</span></span> <span data-ttu-id="331d5-111">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="331d5-111">This connects the add-in's process to the Office host application's process.</span></span>
    isPreview: true
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.SlicerStyleCollection#getCount:member(1)'
    summary: "<span data-ttu-id=\"331d5-112\">Obtient le nombre de styles de slicer de la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"331d5-112\">Gets the number of slicer styles in the collection.</span></span>\n\n<span data-ttu-id=\"331d5-113\">\\[[Ensemble d’API\_: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"331d5-113\">\\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    isPreview: true
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.SlicerStyleCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.SlicerStyleCollection#getDefault:member(1)'
    summary: "<span data-ttu-id=\"331d5-114\">Obtient SlicerStyle par défaut pour la portée de l’objet parent portée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"331d5-114\">Gets the default SlicerStyle for the parent object's scope.</span></span>\n\n<span data-ttu-id=\"331d5-115\">\\[[Ensemble d’API\_: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"331d5-115\">\\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    isPreview: true
    name: getDefault()
    fullName: getDefault()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDefault(): Excel.SlicerStyle;'
      return:
        type:
          - 'excel!Excel.SlicerStyle:class'
        description: <span data-ttu-id="331d5-116">Objet SlicerStyle qui est le SlicerStyle par défaut actuel.</span><span class="sxs-lookup"><span data-stu-id="331d5-116">The SlicerStyle object that is the current default SlicerStyle.</span></span>
  - uid: 'excel!Excel.SlicerStyleCollection#getItem:member(1)'
    summary: "<span data-ttu-id=\"331d5-117\">Obtient un SlicerStyle par nom.</span><span class=\"sxs-lookup\"><span data-stu-id=\"331d5-117\">Gets a SlicerStyle by name.</span></span>\n\n<span data-ttu-id=\"331d5-118\">\\[[Ensemble d’API\_: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"331d5-118\">\\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    isPreview: true
    name: getItem(name)
    fullName: getItem(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(name: string): Excel.SlicerStyle;'
      return:
        type:
          - 'excel!Excel.SlicerStyle:class'
        description: <span data-ttu-id="331d5-119">Objet SlicerStyle dont le nom correspond à l’entrée.</span><span class="sxs-lookup"><span data-stu-id="331d5-119">The SlicerStyle object whose name matches the input.</span></span>
      parameters:
        - id: name
          description: <span data-ttu-id="331d5-120">Nom du SlicerStyle à récupérer.</span><span class="sxs-lookup"><span data-stu-id="331d5-120">Name of the SlicerStyle to be retrieved.</span></span>
          type:
            - string
  - uid: 'excel!Excel.SlicerStyleCollection#getItemOrNullObject:member(1)'
    summary: "<span data-ttu-id=\"331d5-121\">Obtient un SlicerStyle par nom.</span><span class=\"sxs-lookup\"><span data-stu-id=\"331d5-121\">Gets a SlicerStyle by name.</span></span> <span data-ttu-id=\"331d5-122\">Si le SlicerStyle n’existe pas, il renvoie un objet null.</span><span class=\"sxs-lookup\"><span data-stu-id=\"331d5-122\">If the SlicerStyle does not exist, will return a null object.</span></span>\n\n<span data-ttu-id=\"331d5-123\">\\[[Ensemble d’API\_: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"331d5-123\">\\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    isPreview: true
    name: getItemOrNullObject(name)
    fullName: getItemOrNullObject(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(name: string): Excel.SlicerStyle;'
      return:
        type:
          - 'excel!Excel.SlicerStyle:class'
        description: <span data-ttu-id="331d5-124">Objet SlicerStyle dont le nom correspond à l’entrée.</span><span class="sxs-lookup"><span data-stu-id="331d5-124">The SlicerStyle object whose name matches the input.</span></span>
      parameters:
        - id: name
          description: <span data-ttu-id="331d5-125">Nom du SlicerStyle à récupérer.</span><span class="sxs-lookup"><span data-stu-id="331d5-125">Name of the SlicerStyle to be retrieved.</span></span>
          type:
            - string
  - uid: 'excel!Excel.SlicerStyleCollection#items:member'
    summary: <span data-ttu-id="331d5-126">Obtient l’élément enfant chargé dans cette collection de sites.</span><span class="sxs-lookup"><span data-stu-id="331d5-126">Gets the loaded child items in this collection.</span></span>
    isPreview: true
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.SlicerStyle[];'
      return:
        type:
          - 'excel!Excel.SlicerStyleCollection#items~0:complex'
  - uid: 'excel!Excel.SlicerStyleCollection#load:member(1)'
    summary: "<span data-ttu-id=\"331d5-127\">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"331d5-127\">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id=\"331d5-128\">Vous devez appeler «\_context.sync()\_» avant de lire les propriétés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"331d5-128\">You must call \"context.sync()\" before reading the properties.</span></span>"
    remarks: "<span data-ttu-id=\"331d5-129\">En plus de cette signature, cette méthode possède les signatures suivantes\_:</span><span class=\"sxs-lookup\"><span data-stu-id=\"331d5-129\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"331d5-130\">`load(option?: string | string[]): Excel.SlicerStyleCollection`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class=\"sxs-lookup\"><span data-stu-id=\"331d5-130\">`load(option?: string | string[]): Excel.SlicerStyleCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>\n\n<span data-ttu-id=\"331d5-131\">`load(option?: { select?: string; expand?: string; }): Excel.SlicerStyleCollection`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class=\"sxs-lookup\"><span data-stu-id=\"331d5-131\">`load(option?: { select?: string; expand?: string; }): Excel.SlicerStyleCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"331d5-132\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SlicerStyleCollection`-Uniquement disponible sur les types de collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"331d5-132\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SlicerStyleCollection` - Only available on collection types.</span></span> <span data-ttu-id=\"331d5-133\">Elle est similaire à la signature précédente.</span><span class=\"sxs-lookup\"><span data-stu-id=\"331d5-133\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"331d5-134\">Option. Top indique le nombre maximal d’éléments de collection qui peuvent être inclus dans le résultat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"331d5-134\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"331d5-135\">Option. Skip indique le nombre d’éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"331d5-135\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"331d5-136\">Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d’éléments.</span><span class=\"sxs-lookup\"><span data-stu-id=\"331d5-136\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>"
    isPreview: true
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.SlicerStyleCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.SlicerStyleCollection;'
      return:
        type:
          - 'excel!Excel.SlicerStyleCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.SlicerStyleCollection#load~0:complex'
  - uid: 'excel!Excel.SlicerStyleCollection#load:member(2)'
    summary: <span data-ttu-id="331d5-137">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="331d5-137">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="331d5-138">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="331d5-138">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.SlicerStyleCollection;'
      return:
        type:
          - 'excel!Excel.SlicerStyleCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="331d5-139">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="331d5-139">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.SlicerStyleCollection#load:member(3)'
    isPreview: true
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.SlicerStyleCollection;'
      return:
        type:
          - 'excel!Excel.SlicerStyleCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.SlicerStyleCollection#setDefault:member(1)'
    summary: "<span data-ttu-id=\"331d5-140\">Obtient le SlicerStyle par défaut pour la portée de l’objet parent portée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"331d5-140\">Sets the default SlicerStyle for use in the parent object's scope.</span></span>\n\n<span data-ttu-id=\"331d5-141\">\\[[Ensemble d’API\_: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"331d5-141\">\\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    isPreview: true
    name: setDefault(newDefaultStyle)
    fullName: setDefault(newDefaultStyle)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setDefault(newDefaultStyle: SlicerStyle | string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: newDefaultStyle
          description: <span data-ttu-id="331d5-142">Objet SlicerStyle ou nom de l’objet SlicerStyle qui doit être la nouvelle valeur par défaut.</span><span class="sxs-lookup"><span data-stu-id="331d5-142">The SlicerStyle object or name of the SlicerStyle object that should be the new default.</span></span>
          type:
            - 'excel!Excel.SlicerStyleCollection#setDefault~0:complex'
  - uid: 'excel!Excel.SlicerStyleCollection#toJSON:member(1)'
    summary: "<span data-ttu-id=\"331d5-143\">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class=\"sxs-lookup\"><span data-stu-id=\"331d5-143\">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id=\"331d5-144\">.</span><span class=\"sxs-lookup\"><span data-stu-id=\"331d5-144\"></span></span> <span data-ttu-id=\"331d5-145\">(`JSON.stringify`</span><span class=\"sxs-lookup\"><span data-stu-id=\"331d5-145\"></span></span><!-- --><span data-ttu-id=\"331d5-146\">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que `Excel.SlicerStyleCollection` l’objet d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.SlicerStyleCollectionData`</span><span class=\"sxs-lookup\"><span data-stu-id=\"331d5-146\">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.SlicerStyleCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.SlicerStyleCollectionData`</span></span><!-- --><span data-ttu-id=\"331d5-147\">) qui contient un tableau «\_éléments\_» avec des copies superficielles de toutes les propriétés chargées des éléments de la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"331d5-147\">) that contains an \"items\" array with shallow copies of any loaded properties from the collection's items.</span></span>"
    isPreview: true
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.SlicerStyleCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.SlicerStyleCollectionData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.SlicerStyle:class'
    name: Excel.SlicerStyle
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.SlicerStyleCollection#getCount~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel!Excel.SlicerStyleCollection#items~0:complex'
    name: 'Excel.SlicerStyle[]'
    fullName: 'Excel.SlicerStyle[]'
    spec.typeScript:
      - uid: 'excel!Excel.SlicerStyle:class'
        name: Excel.SlicerStyle
        fullName: Excel.SlicerStyle
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.SlicerStyleCollection:class'
    name: Excel.SlicerStyleCollection
  - uid: 'excel!Excel.SlicerStyleCollection#load~0:complex'
    name: Excel.Interfaces.SlicerStyleCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.SlicerStyleCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.SlicerStyleCollectionLoadOptions:interface'
        name: Excel.Interfaces.SlicerStyleCollectionLoadOptions
        fullName: Excel.Interfaces.SlicerStyleCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'excel!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.SlicerStyleCollection#setDefault~0:complex'
    name: SlicerStyle | string
    fullName: Excel.SlicerStyle | string
    spec.typeScript:
      - uid: 'excel!Excel.SlicerStyle:class'
        name: SlicerStyle
        fullName: Excel.SlicerStyle
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.Interfaces.SlicerStyleCollectionData:interface'
    name: Excel.Interfaces.SlicerStyleCollectionData