### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.PivotTableCollection:class'
    summary: "<span data-ttu-id=\"8b5fb-101\">Représente une collection de tous les tableaux croisés dynamiques du classeur ou de la feuille de travail.</span><span class=\"sxs-lookup\"><span data-stu-id=\"8b5fb-101\">Represents a collection of all the PivotTables that are part of the workbook or worksheet.</span></span>\n\n<span data-ttu-id=\"8b5fb-102\">\\[[Ensemble d’API\_: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"8b5fb-102\">\\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: Excel.PivotTableCollection
    fullName: Excel.PivotTableCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.PivotTableCollection#add:member(1)'
      - 'excel!Excel.PivotTableCollection#context:member'
      - 'excel!Excel.PivotTableCollection#getCount:member(1)'
      - 'excel!Excel.PivotTableCollection#getItem:member(1)'
      - 'excel!Excel.PivotTableCollection#getItemOrNullObject:member(1)'
      - 'excel!Excel.PivotTableCollection#items:member'
      - 'excel!Excel.PivotTableCollection#load:member(1)'
      - 'excel!Excel.PivotTableCollection#load:member(2)'
      - 'excel!Excel.PivotTableCollection#load:member(3)'
      - 'excel!Excel.PivotTableCollection#refreshAll:member(1)'
      - 'excel!Excel.PivotTableCollection#toJSON:member(1)'
  - uid: 'excel!Excel.PivotTableCollection#add:member(1)'
    summary: "<span data-ttu-id=\"8b5fb-103\">Ajoute un tableau croisé dynamique en fonction des données sources spécifiées et les insère à la cellule supérieure gauche de la plage de destination.</span><span class=\"sxs-lookup\"><span data-stu-id=\"8b5fb-103\">Add a Pivottable based on the specified source data and insert it at the top left cell of the destination range.</span></span>\n\n<span data-ttu-id=\"8b5fb-104\">\\[[Ensemble d’API\_: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"8b5fb-104\">\\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: 'add(name, source, destination)'
    fullName: 'add(name, source, destination)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(name: string, source: Range | string | Table, destination: Range | string): Excel.PivotTable;'
      return:
        type:
          - 'excel!Excel.PivotTable:class'
        description: |-
          <span data-ttu-id="8b5fb-105">Renvoie le tableau croisé dynamique qui vient d’être inséré.</span><span class="sxs-lookup"><span data-stu-id="8b5fb-105">Returns the newly inserted PivotTable.</span></span>

          #### <a name="examples"></a><span data-ttu-id="8b5fb-106">Exemples</span><span class="sxs-lookup"><span data-stu-id="8b5fb-106">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const rangeToAnalyze = context.workbook.worksheets.getItem("Data").getRange("A1:E21");
              const rangeToPlacePivot = context.workbook.worksheets.getItem("Pivot").getRange("A2");
              context.workbook.worksheets.getItem("Pivot").pivotTables.add("Farm Sales", rangeToAnalyze, rangeToPlacePivot);

              await context.sync();
          });
          ```
      parameters:
        - id: name
          description: <span data-ttu-id="8b5fb-107">Nom du nouveau tableau croisé dynamique.</span><span class="sxs-lookup"><span data-stu-id="8b5fb-107">The name of the new PivotTable.</span></span>
          type:
            - string
        - id: source
          description: '<span data-ttu-id="8b5fb-108">Les données source du nouveau tableau croisé dynamique, il peut s’agir d’une plage (ou d’une adresse de chaîne incluant le nom de la feuille de calcul) ou d’un tableau.</span><span class="sxs-lookup"><span data-stu-id="8b5fb-108">The source data for the new PivotTable, this can either be a range (or string address including the worksheet name) or a table.</span></span>'
          type:
            - 'excel!Excel.PivotTableCollection#add~0:complex'
        - id: destination
          description: <span data-ttu-id="8b5fb-109">Cellule située dans le coin supérieur gauche de la plage de destination du rapport de tableau croisé dynamique (plage de la feuille de calcul destinée à recevoir le rapport obtenu).</span><span class="sxs-lookup"><span data-stu-id="8b5fb-109">The cell in the upper-left corner of the PivotTable report's destination range (the range on the worksheet where the resulting report will be placed).</span></span>
          type:
            - 'excel!Excel.PivotTableCollection#add~1:complex'
  - uid: 'excel!Excel.PivotTableCollection#context:member'
    summary: <span data-ttu-id="8b5fb-110">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="8b5fb-110">The request context associated with the object.</span></span> <span data-ttu-id="8b5fb-111">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="8b5fb-111">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.PivotTableCollection#getCount:member(1)'
    summary: "<span data-ttu-id=\"8b5fb-112\">Obtient le nombre de tableaux croisés dynamiques de la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"8b5fb-112\">Gets the number of pivot tables in the collection.</span></span>\n\n<span data-ttu-id=\"8b5fb-113\">\\[[Ensemble d’API\_: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"8b5fb-113\">\\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.PivotTableCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.PivotTableCollection#getItem:member(1)'
    summary: "<span data-ttu-id=\"8b5fb-114\">Obtient un tableau croisé dynamique par nom.</span><span class=\"sxs-lookup\"><span data-stu-id=\"8b5fb-114\">Gets a PivotTable by name.</span></span>\n\n<span data-ttu-id=\"8b5fb-115\">\\[[Ensemble d’API\_: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"8b5fb-115\">\\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: getItem(name)
    fullName: getItem(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(name: string): Excel.PivotTable;'
      return:
        type:
          - 'excel!Excel.PivotTable:class'
        description: ''
      parameters:
        - id: name
          description: <span data-ttu-id="8b5fb-116">Nom du tableau croisé dynamique à récupérer.</span><span class="sxs-lookup"><span data-stu-id="8b5fb-116">Name of the PivotTable to be retrieved.</span></span>
          type:
            - string
  - uid: 'excel!Excel.PivotTableCollection#getItemOrNullObject:member(1)'
    summary: "<span data-ttu-id=\"8b5fb-117\">Extrait un tableau croisé dynamique par nom.</span><span class=\"sxs-lookup\"><span data-stu-id=\"8b5fb-117\">Gets a PivotTable by name.</span></span> <span data-ttu-id=\"8b5fb-118\">Si le tableau croisé dynamique n’existe pas, renvoie un objet null.</span><span class=\"sxs-lookup\"><span data-stu-id=\"8b5fb-118\">If the PivotTable does not exist, will return a null object.</span></span>\n\n<span data-ttu-id=\"8b5fb-119\">\\[[Ensemble d’API\_: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"8b5fb-119\">\\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: getItemOrNullObject(name)
    fullName: getItemOrNullObject(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(name: string): Excel.PivotTable;'
      return:
        type:
          - 'excel!Excel.PivotTable:class'
        description: ''
      parameters:
        - id: name
          description: <span data-ttu-id="8b5fb-120">Nom du tableau croisé dynamique à récupérer.</span><span class="sxs-lookup"><span data-stu-id="8b5fb-120">Name of the PivotTable to be retrieved.</span></span>
          type:
            - string
  - uid: 'excel!Excel.PivotTableCollection#items:member'
    summary: <span data-ttu-id="8b5fb-121">Obtient l’élément enfant chargé dans cette collection de sites.</span><span class="sxs-lookup"><span data-stu-id="8b5fb-121">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.PivotTable[];'
      return:
        type:
          - 'excel!Excel.PivotTableCollection#items~0:complex'
  - uid: 'excel!Excel.PivotTableCollection#load:member(1)'
    summary: <span data-ttu-id="8b5fb-122">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="8b5fb-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="8b5fb-123">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="8b5fb-123">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.PivotTableCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.PivotTableCollection;'
      return:
        type:
          - 'excel!Excel.PivotTableCollection:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="8b5fb-124">Fournit des options pour les propriétés de l’objet à charger.</span><span class="sxs-lookup"><span data-stu-id="8b5fb-124">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.PivotTableCollection#load~0:complex'
  - uid: 'excel!Excel.PivotTableCollection#load:member(2)'
    summary: <span data-ttu-id="8b5fb-125">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="8b5fb-125">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="8b5fb-126">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="8b5fb-126">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.PivotTableCollection;'
      return:
        type:
          - 'excel!Excel.PivotTableCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="8b5fb-127">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="8b5fb-127">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.PivotTableCollection#load:member(3)'
    summary: <span data-ttu-id="8b5fb-128">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="8b5fb-128">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="8b5fb-129">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="8b5fb-129">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Excel.PivotTableCollection;'
      return:
        type:
          - 'excel!Excel.PivotTableCollection:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="8b5fb-130">`propertyNamesAndPaths.select`est une chaîne délimitée par des virgules qui spécifie les propriétés à `propertyNamesAndPaths.expand` charger et une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="8b5fb-130">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - 'excel!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.PivotTableCollection#refreshAll:member(1)'
    summary: "<span data-ttu-id=\"8b5fb-131\">Actualise tous les tableaux croisés dynamiques de la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"8b5fb-131\">Refreshes all the pivot tables in the collection.</span></span>\n\n<span data-ttu-id=\"8b5fb-132\">\\[[Ensemble d’API\_: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"8b5fb-132\">\\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: refreshAll()
    fullName: refreshAll()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'refreshAll(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel!Excel.PivotTableCollection#toJSON:member(1)'
    summary: "<span data-ttu-id=\"8b5fb-133\">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class=\"sxs-lookup\"><span data-stu-id=\"8b5fb-133\">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id=\"8b5fb-134\">.</span><span class=\"sxs-lookup\"><span data-stu-id=\"8b5fb-134\"></span></span> <span data-ttu-id=\"8b5fb-135\">(`JSON.stringify`</span><span class=\"sxs-lookup\"><span data-stu-id=\"8b5fb-135\"></span></span><!-- --><span data-ttu-id=\"8b5fb-136\">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que `Excel.PivotTableCollection` l’objet d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.PivotTableCollectionData`</span><span class=\"sxs-lookup\"><span data-stu-id=\"8b5fb-136\">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.PivotTableCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.PivotTableCollectionData`</span></span><!-- --><span data-ttu-id=\"8b5fb-137\">) qui contient un tableau «\_éléments\_» avec des copies superficielles de toutes les propriétés chargées des éléments de la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"8b5fb-137\">) that contains an \"items\" array with shallow copies of any loaded properties from the collection's items.</span></span>"
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.PivotTableCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.PivotTableCollectionData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.PivotTable:class'
    name: Excel.PivotTable
  - uid: 'excel!Excel.PivotTableCollection#add~0:complex'
    name: Range | string | Table
    fullName: Excel.Range | string | Excel.Table
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string | '
        fullName: ' | string | '
      - uid: 'excel!Excel.Table:class'
        name: Table
        fullName: Excel.Table
  - uid: 'excel!Excel.PivotTableCollection#add~1:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.PivotTableCollection#getCount~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel!Excel.PivotTableCollection#items~0:complex'
    name: 'Excel.PivotTable[]'
    fullName: 'Excel.PivotTable[]'
    spec.typeScript:
      - uid: 'excel!Excel.PivotTable:class'
        name: Excel.PivotTable
        fullName: Excel.PivotTable
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.PivotTableCollection:class'
    name: Excel.PivotTableCollection
  - uid: 'excel!Excel.PivotTableCollection#load~0:complex'
    name: Excel.Interfaces.PivotTableCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.PivotTableCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.PivotTableCollectionLoadOptions:interface'
        name: Excel.Interfaces.PivotTableCollectionLoadOptions
        fullName: Excel.Interfaces.PivotTableCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'excel!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.Interfaces.PivotTableCollectionData:interface'
    name: Excel.Interfaces.PivotTableCollectionData