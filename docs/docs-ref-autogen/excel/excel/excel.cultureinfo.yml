### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.CultureInfo:class'
    summary: "Fournit des informations basées sur les paramètres de culture système actuels. Cela inclut les noms de culture, la mise en forme de numéros et d’autres paramètres dépendants de la culture.\n\n\\[[Ensemble d’API\_: ExcelApi 1,11](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: Excel.CultureInfo
    fullName: Excel.CultureInfo
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.CultureInfo#context:member'
      - 'excel!Excel.CultureInfo#datetimeFormat:member'
      - 'excel!Excel.CultureInfo#load:member(1)'
      - 'excel!Excel.CultureInfo#load:member(2)'
      - 'excel!Excel.CultureInfo#load:member(3)'
      - 'excel!Excel.CultureInfo#name:member'
      - 'excel!Excel.CultureInfo#numberFormat:member'
      - 'excel!Excel.CultureInfo#toJSON:member(1)'
  - uid: 'excel!Excel.CultureInfo#context:member'
    summary: Contexte de demande associé à l’objet. Cette opération connecte le processus du complément au processus de l’application hôte Office.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.CultureInfo#datetimeFormat:member'
    summary: "Définit le format d’affichage de la date et de l’heure approprié pour la culture. Cette fonction est basée sur les paramètres de culture actuelle du système.\n\n\\[[Ensemble d’API\_: EXCELAPI Beta (aperçu uniquement)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    isPreview: true
    name: datetimeFormat
    fullName: datetimeFormat
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly datetimeFormat: Excel.DatetimeFormatInfo;'
      return:
        type:
          - 'excel!Excel.DatetimeFormatInfo:class'
        description: |-


          #### <a name="examples"></a>Exemples

          ```typescript
          // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/85-preview-apis/culture-info-date-time.yaml
          await Excel.run(async (context) => {
            context.application.cultureInfo.datetimeFormat.load([
              "longDatePattern",
              "shortDatePattern",
              "dateSeparator",
              "longTimePattern",
              "timeSeparator"
            ]);
            await context.sync();

            // Use the cultural settings API to retrieve the user's system date and time settings.
            const systemLongDatePattern = context.application.cultureInfo.datetimeFormat.longDatePattern;
            const systemShortDatePattern = context.application.cultureInfo.datetimeFormat.shortDatePattern;
            const systemDateSeparator = context.application.cultureInfo.datetimeFormat.dateSeparator;
            const systemLongTimePattern = context.application.cultureInfo.datetimeFormat.longTimePattern;
            const systemTimeSeparator = context.application.cultureInfo.datetimeFormat.timeSeparator;

            // Write the date and time settings in your table. 
            const sheet = context.workbook.worksheets.getActiveWorksheet();
            const dateTimeData = sheet.getRange("A2:B6");
            dateTimeData.values = [
              ["Long date", systemLongDatePattern], 
              ["Short date", systemShortDatePattern], 
              ["Date separator", systemDateSeparator], 
              ["Long time format", systemLongTimePattern],
              ["Time separator", systemTimeSeparator]
            ];

            sheet.tables
              .getItemAt(0)
              .getRange()
              .format.autofitColumns();

            await context.sync();
          });
          ```
  - uid: 'excel!Excel.CultureInfo#load:member(1)'
    summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.CultureInfoLoadOptions): Excel.CultureInfo;'
      return:
        type:
          - 'excel!Excel.CultureInfo:class'
        description: ''
      parameters:
        - id: options
          description: Fournit des options pour les propriétés de l’objet à charger.
          type:
            - 'excel!Excel.Interfaces.CultureInfoLoadOptions:interface'
  - uid: 'excel!Excel.CultureInfo#load:member(2)'
    summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.CultureInfo;'
      return:
        type:
          - 'excel!Excel.CultureInfo:class'
        description: ''
      parameters:
        - id: propertyNames
          description: Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.CultureInfo#load:member(3)'
    summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.CultureInfo;
      return:
        type:
          - 'excel!Excel.CultureInfo:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '`propertyNamesAndPaths.select` est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et `propertyNamesAndPaths.expand` une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.CultureInfo#name:member'
    summary: "Obtient le nom de la culture au format languagecode2-Country/regioncode2 (par exemple, «\_zh-CN\_» ou «\_en-US\_»). Cette fonction est basée sur les paramètres système actuels.\n\n\\[[Ensemble d’API\_: ExcelApi 1,11](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly name: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.CultureInfo#numberFormat:member'
    summary: "Définit le format d’affichage des nombres approprié pour la culture. Cette fonction est basée sur les paramètres de culture actuelle du système.\n\n\\[[Ensemble d’API\_: ExcelApi 1,11](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: numberFormat
    fullName: numberFormat
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly numberFormat: Excel.NumberFormatInfo;'
      return:
        type:
          - 'excel!Excel.NumberFormatInfo:class'
  - uid: 'excel!Excel.CultureInfo#toJSON:member(1)'
    summary: 'Remplace la méthode JavaScript afin `toJSON()` de fournir une sortie plus utile lorsqu’un objet d’API est transmis à `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, à son tour, appelle la `toJSON` méthode de l’objet qui lui est passé.) Tandis que l’objet Excel. CultureInfo d’origine est un objet d’API, la `toJSON` méthode renvoie un objet JavaScript simple (tapé comme `Excel.Interfaces.CultureInfoData`<!-- -->) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l’objet d’origine.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.CultureInfoData;'
      return:
        type:
          - 'excel!Excel.Interfaces.CultureInfoData:interface'
        description: ''
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.DatetimeFormatInfo:class'
    name: Excel.DatetimeFormatInfo
  - uid: 'excel!Excel.CultureInfo:class'
    name: Excel.CultureInfo
  - uid: 'excel!Excel.Interfaces.CultureInfoLoadOptions:interface'
    name: Excel.Interfaces.CultureInfoLoadOptions
  - uid: 'excel!Excel.NumberFormatInfo:class'
    name: Excel.NumberFormatInfo
  - uid: 'excel!Excel.Interfaces.CultureInfoData:interface'
    name: Excel.Interfaces.CultureInfoData