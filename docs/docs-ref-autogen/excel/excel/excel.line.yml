### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.Line:class'
    summary: "Représente une ligne dans une feuille de calcul. Pour obtenir l’objet Shape correspondant, utilisez`Line.shape`<!-- -->.\n\n\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: Excel.Line
    fullName: Excel.Line
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.Line#beginArrowheadLength:member'
      - 'excel!Excel.Line#beginArrowheadStyle:member'
      - 'excel!Excel.Line#beginArrowheadWidth:member'
      - 'excel!Excel.Line#beginConnectedShape:member'
      - 'excel!Excel.Line#beginConnectedSite:member'
      - 'excel!Excel.Line#connectBeginShape:member(1)'
      - 'excel!Excel.Line#connectEndShape:member(1)'
      - 'excel!Excel.Line#connectorType:member'
      - 'excel!Excel.Line#context:member'
      - 'excel!Excel.Line#disconnectBeginShape:member(1)'
      - 'excel!Excel.Line#disconnectEndShape:member(1)'
      - 'excel!Excel.Line#endArrowheadLength:member'
      - 'excel!Excel.Line#endArrowheadStyle:member'
      - 'excel!Excel.Line#endArrowheadWidth:member'
      - 'excel!Excel.Line#endConnectedShape:member'
      - 'excel!Excel.Line#endConnectedSite:member'
      - 'excel!Excel.Line#id:member'
      - 'excel!Excel.Line#isBeginConnected:member'
      - 'excel!Excel.Line#isEndConnected:member'
      - 'excel!Excel.Line#load:member(1)'
      - 'excel!Excel.Line#load:member(2)'
      - 'excel!Excel.Line#load:member(3)'
      - 'excel!Excel.Line#set:member(1)'
      - 'excel!Excel.Line#set:member(2)'
      - 'excel!Excel.Line#shape:member'
      - 'excel!Excel.Line#toJSON:member(1)'
  - uid: 'excel!Excel.Line#beginArrowheadLength:member'
    summary: "Renvoie ou définit la longueur de la pointe de la flèche au début de la ligne spécifiée.\n\n\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: beginArrowheadLength
    fullName: beginArrowheadLength
    langs:
      - typeScript
    type: property
    syntax:
      content: 'beginArrowheadLength: Excel.ArrowheadLength | "Short" | "Medium" | "Long";'
      return:
        type:
          - 'excel!Excel.Line#beginArrowheadLength~0:complex'
  - uid: 'excel!Excel.Line#beginArrowheadStyle:member'
    summary: "Représente le style de la pointe de la flèche au début de la ligne spécifiée.\n\n\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: beginArrowheadStyle
    fullName: beginArrowheadStyle
    langs:
      - typeScript
    type: property
    syntax:
      content: 'beginArrowheadStyle: Excel.ArrowheadStyle | "None" | "Triangle" | "Stealth" | "Diamond" | "Oval" | "Open";'
      return:
        type:
          - 'excel!Excel.Line#beginArrowheadStyle~0:complex'
  - uid: 'excel!Excel.Line#beginArrowheadWidth:member'
    summary: "Représente la largeur de la pointe de la flèche au début de la ligne spécifiée.\n\n\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: beginArrowheadWidth
    fullName: beginArrowheadWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'beginArrowheadWidth: Excel.ArrowheadWidth | "Narrow" | "Medium" | "Wide";'
      return:
        type:
          - 'excel!Excel.Line#beginArrowheadWidth~0:complex'
  - uid: 'excel!Excel.Line#beginConnectedShape:member'
    summary: "Représente la forme de la pointe de la flèche au début de la ligne spécifiée. En lecture seule.\n\n\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: beginConnectedShape
    fullName: beginConnectedShape
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly beginConnectedShape: Excel.Shape;'
      return:
        type:
          - 'excel!Excel.Shape:class'
  - uid: 'excel!Excel.Line#beginConnectedSite:member'
    summary: "Représente le site de connexion indiquant le point de connexion auquel le début d'un connecteur est relié. En lecture seule. Renvoie la valeur null lorsque le début de la ligne n’est pas attaché à n’importe quelle forme.\n\n\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: beginConnectedSite
    fullName: beginConnectedSite
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly beginConnectedSite: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.Line#connectBeginShape:member(1)'
    summary: "Détache le début du connecteur spécifié de la forme à laquelle il est attaché.\n\n\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: 'connectBeginShape(shape, connectionSite)'
    fullName: 'connectBeginShape(shape, connectionSite)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'connectBeginShape(shape: Excel.Shape, connectionSite: number): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Exemples

          ```typescript
          await Excel.run(async (context) => {
              const shapes = context.workbook.worksheets.getItem("Shapes").shapes;
              const line = shapes.getItem("StraightLine").line;
              line.connectBeginShape(shapes.getItem("Left"), 2);
              line.connectEndShape(shapes.getItem("Right"), 0);
              await context.sync();
          });
          ```
      parameters:
        - id: shape
          description: Forme à connecter.
          type:
            - 'excel!Excel.Shape:class'
        - id: connectionSite
          description: Point de connexion sur la forme à laquelle est attaché le début du connecteur. Doit être un entier compris entre 0 (inclus) et le nombre de sites de connexion de la forme spécifiée (exclusif).
          type:
            - number
  - uid: 'excel!Excel.Line#connectEndShape:member(1)'
    summary: "Joint la fin du connecteur spécifié à une forme spécifiée.\n\n\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: 'connectEndShape(shape, connectionSite)'
    fullName: 'connectEndShape(shape, connectionSite)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'connectEndShape(shape: Excel.Shape, connectionSite: number): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Exemples

          ```typescript
          await Excel.run(async (context) => {
              const shapes = context.workbook.worksheets.getItem("Shapes").shapes;
              const line = shapes.getItem("StraightLine").line;
              line.connectBeginShape(shapes.getItem("Left"), 2);
              line.connectEndShape(shapes.getItem("Right"), 0);
              await context.sync();
          });
          ```
      parameters:
        - id: shape
          description: Forme à connecter.
          type:
            - 'excel!Excel.Shape:class'
        - id: connectionSite
          description: Point de connexion de la forme à laquelle est attachée la fin du connecteur. Doit être un entier compris entre 0 (inclus) et le nombre de sites de connexion de la forme spécifiée (exclusif).
          type:
            - number
  - uid: 'excel!Excel.Line#connectorType:member'
    summary: "Représente le type de connecteur pour la ligne.\n\n\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: connectorType
    fullName: connectorType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'connectorType: Excel.ConnectorType | "Straight" | "Elbow" | "Curve";'
      return:
        type:
          - 'excel!Excel.Line#connectorType~0:complex'
  - uid: 'excel!Excel.Line#context:member'
    summary: Contexte de demande associé à l’objet. Cette opération connecte le processus du complément au processus de l’application hôte Office.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.Line#disconnectBeginShape:member(1)'
    summary: "Détache le début du connecteur spécifié de la forme à laquelle il est attaché.\n\n\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: disconnectBeginShape()
    fullName: disconnectBeginShape()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'disconnectBeginShape(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Exemples

          ```typescript
          await Excel.run(async (context) => {
              const shapes = context.workbook.worksheets.getItem("Shapes").shapes;
              const line = shapes.getItem("StraightLine").line;
              line.disconnectBeginShape();
              line.disconnectEndShape();
              await context.sync();
          });
          ```
  - uid: 'excel!Excel.Line#disconnectEndShape:member(1)'
    summary: "Détache la fin du connecteur spécifié de la forme à laquelle il est attaché.\n\n\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: disconnectEndShape()
    fullName: disconnectEndShape()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'disconnectEndShape(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Exemples

          ```typescript
          await Excel.run(async (context) => {
              const shapes = context.workbook.worksheets.getItem("Shapes").shapes;
              const line = shapes.getItem("StraightLine").line;
              line.disconnectBeginShape();
              line.disconnectEndShape();
              await context.sync();
          });
          ```
  - uid: 'excel!Excel.Line#endArrowheadLength:member'
    summary: "Représente la longueur de la pointe de la flèche à la fin de la ligne spécifiée.\n\n\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: endArrowheadLength
    fullName: endArrowheadLength
    langs:
      - typeScript
    type: property
    syntax:
      content: 'endArrowheadLength: Excel.ArrowheadLength | "Short" | "Medium" | "Long";'
      return:
        type:
          - 'excel!Excel.Line#endArrowheadLength~0:complex'
  - uid: 'excel!Excel.Line#endArrowheadStyle:member'
    summary: "Représente le style de la pointe de la flèche à la fin de ligne spécifée.\n\n\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: endArrowheadStyle
    fullName: endArrowheadStyle
    langs:
      - typeScript
    type: property
    syntax:
      content: 'endArrowheadStyle: Excel.ArrowheadStyle | "None" | "Triangle" | "Stealth" | "Diamond" | "Oval" | "Open";'
      return:
        type:
          - 'excel!Excel.Line#endArrowheadStyle~0:complex'
  - uid: 'excel!Excel.Line#endArrowheadWidth:member'
    summary: "Représente la largeur de la pointe de la flèche à la fin de la ligne spécifiée.\n\n\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: endArrowheadWidth
    fullName: endArrowheadWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'endArrowheadWidth: Excel.ArrowheadWidth | "Narrow" | "Medium" | "Wide";'
      return:
        type:
          - 'excel!Excel.Line#endArrowheadWidth~0:complex'
  - uid: 'excel!Excel.Line#endConnectedShape:member'
    summary: "Représente la forme de la pointe de la flèche à la fin de la ligne spécifiée. En lecture seule.\n\n\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: endConnectedShape
    fullName: endConnectedShape
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly endConnectedShape: Excel.Shape;'
      return:
        type:
          - 'excel!Excel.Shape:class'
  - uid: 'excel!Excel.Line#endConnectedSite:member'
    summary: "Représente le site de connexion indiquant le point de connexion auquel la fin d'un connecteur est relié. En lecture seule. Renvoie la valeur null lorsque la fin de la ligne n’est pas attaché à n’importe quelle forme.\n\n\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: endConnectedSite
    fullName: endConnectedSite
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly endConnectedSite: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.Line#id:member'
    summary: "Représente l’identificateur de forme. En lecture seule.\n\n\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Line#isBeginConnected:member'
    summary: "Détermine si le début du connecteur spécifié est connecté à une forme. En lecture seule.\n\n\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: isBeginConnected
    fullName: isBeginConnected
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isBeginConnected: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Line#isEndConnected:member'
    summary: "Spécifie si la fin du connecteur spécifié est connecté à une forme ou non. En lecture seule.\n\n\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: isEndConnected
    fullName: isEndConnected
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isEndConnected: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Line#load:member(1)'
    summary: "Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez appeler «\_context.sync()\_» avant de lire les propriétés."
    remarks: "En plus de cette signature, cette méthode possède les signatures suivantes\_:\n\n`load(option?: string | string[]): Excel.Line`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.\n\n`load(option?: { select?: string; expand?: string; }): Excel.Line`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.\n\n`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Line`-Uniquement disponible sur les types de collection. Elle est similaire à la signature précédente. Option. Top indique le nombre maximal d’éléments de collection qui peuvent être inclus dans le résultat. Option. Skip indique le nombre d’éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat. Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d’éléments."
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.LineLoadOptions): Excel.Line;'
      return:
        type:
          - 'excel!Excel.Line:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.Interfaces.LineLoadOptions:interface'
  - uid: 'excel!Excel.Line#load:member(2)'
    summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez appeler `context.sync()` avant de lire les propriétés.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Line;'
      return:
        type:
          - 'excel!Excel.Line:class'
        description: ''
      parameters:
        - id: propertyNames
          description: Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.Line#load:member(3)'
    summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez appeler `context.sync()` avant de lire les propriétés.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Line;'
      return:
        type:
          - 'excel!Excel.Line:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: Où propertyNamesAndPaths. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et propertyNamesAndPaths. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'excel!Excel.Line#set:member(1)'
    summary: 'Définit plusieurs propriétés d’un objet en même temps. Vous pouvez transmettre un objet plain avec les propriétés appropriées, ou un autre objet API du même type.'
    remarks: "Cette méthode est dotée de la signature supplémentaire suivante\_:\n\n`set(properties: Excel.Line): void`"
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.LineUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: Objet JavaScript avec des propriétés qui sont structurées isomorphically vers les propriétés de l’objet sur lequel la méthode est appelée.
          type:
            - 'excel!Excel.Interfaces.LineUpdateData:interface'
        - id: options
          description: Fournit une option permettant de supprimer les erreurs si l’objet Properties tente de définir des propriétés en lecture seule.
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.Line#set:member(2)'
    summary: 'Définit plusieurs propriétés de l’objet en même temps, en fonction d’un objet chargé existant.'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Line): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.Line:class'
  - uid: 'excel!Excel.Line#shape:member'
    summary: "Renvoie l’objet de la Forme associée à la ligne. En lecture seule.\n\n\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: shape
    fullName: shape
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly shape: Excel.Shape;'
      return:
        type:
          - 'excel!Excel.Shape:class'
  - uid: 'excel!Excel.Line#toJSON:member(1)'
    summary: 'Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que l’objet Excel. Line d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.LineData`<!-- -->) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l’objet d’origine.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.LineData;'
      return:
        type:
          - 'excel!Excel.Interfaces.LineData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.Line#beginArrowheadLength~0:complex'
    name: Excel.ArrowheadLength | "Short" | "Medium" | "Long"
    fullName: Excel.ArrowheadLength | "Short" | "Medium" | "Long"
    spec.typeScript:
      - uid: 'excel!Excel.ArrowheadLength:enum'
        name: Excel.ArrowheadLength
        fullName: Excel.ArrowheadLength
      - name: ' | "Short" | "Medium" | "Long"'
        fullName: ' | "Short" | "Medium" | "Long"'
  - uid: 'excel!Excel.Line#beginArrowheadStyle~0:complex'
    name: Excel.ArrowheadStyle | "None" | "Triangle" | "Stealth" | "Diamond" | "Oval" | "Open"
    fullName: Excel.ArrowheadStyle | "None" | "Triangle" | "Stealth" | "Diamond" | "Oval" | "Open"
    spec.typeScript:
      - uid: 'excel!Excel.ArrowheadStyle:enum'
        name: Excel.ArrowheadStyle
        fullName: Excel.ArrowheadStyle
      - name: ' | "None" | "Triangle" | "Stealth" | "Diamond" | "Oval" | "Open"'
        fullName: ' | "None" | "Triangle" | "Stealth" | "Diamond" | "Oval" | "Open"'
  - uid: 'excel!Excel.Line#beginArrowheadWidth~0:complex'
    name: Excel.ArrowheadWidth | "Narrow" | "Medium" | "Wide"
    fullName: Excel.ArrowheadWidth | "Narrow" | "Medium" | "Wide"
    spec.typeScript:
      - uid: 'excel!Excel.ArrowheadWidth:enum'
        name: Excel.ArrowheadWidth
        fullName: Excel.ArrowheadWidth
      - name: ' | "Narrow" | "Medium" | "Wide"'
        fullName: ' | "Narrow" | "Medium" | "Wide"'
  - uid: 'excel!Excel.Shape:class'
    name: Excel.Shape
  - uid: 'excel!Excel.Line#connectorType~0:complex'
    name: Excel.ConnectorType | "Straight" | "Elbow" | "Curve"
    fullName: Excel.ConnectorType | "Straight" | "Elbow" | "Curve"
    spec.typeScript:
      - uid: 'excel!Excel.ConnectorType:enum'
        name: Excel.ConnectorType
        fullName: Excel.ConnectorType
      - name: ' | "Straight" | "Elbow" | "Curve"'
        fullName: ' | "Straight" | "Elbow" | "Curve"'
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.Line#endArrowheadLength~0:complex'
    name: Excel.ArrowheadLength | "Short" | "Medium" | "Long"
    fullName: Excel.ArrowheadLength | "Short" | "Medium" | "Long"
    spec.typeScript:
      - uid: 'excel!Excel.ArrowheadLength:enum'
        name: Excel.ArrowheadLength
        fullName: Excel.ArrowheadLength
      - name: ' | "Short" | "Medium" | "Long"'
        fullName: ' | "Short" | "Medium" | "Long"'
  - uid: 'excel!Excel.Line#endArrowheadStyle~0:complex'
    name: Excel.ArrowheadStyle | "None" | "Triangle" | "Stealth" | "Diamond" | "Oval" | "Open"
    fullName: Excel.ArrowheadStyle | "None" | "Triangle" | "Stealth" | "Diamond" | "Oval" | "Open"
    spec.typeScript:
      - uid: 'excel!Excel.ArrowheadStyle:enum'
        name: Excel.ArrowheadStyle
        fullName: Excel.ArrowheadStyle
      - name: ' | "None" | "Triangle" | "Stealth" | "Diamond" | "Oval" | "Open"'
        fullName: ' | "None" | "Triangle" | "Stealth" | "Diamond" | "Oval" | "Open"'
  - uid: 'excel!Excel.Line#endArrowheadWidth~0:complex'
    name: Excel.ArrowheadWidth | "Narrow" | "Medium" | "Wide"
    fullName: Excel.ArrowheadWidth | "Narrow" | "Medium" | "Wide"
    spec.typeScript:
      - uid: 'excel!Excel.ArrowheadWidth:enum'
        name: Excel.ArrowheadWidth
        fullName: Excel.ArrowheadWidth
      - name: ' | "Narrow" | "Medium" | "Wide"'
        fullName: ' | "Narrow" | "Medium" | "Wide"'
  - uid: 'excel!Excel.Line:class'
    name: Excel.Line
  - uid: 'excel!Excel.Interfaces.LineLoadOptions:interface'
    name: Excel.Interfaces.LineLoadOptions
  - uid: 'excel!Excel.Interfaces.LineUpdateData:interface'
    name: Interfaces.LineUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Interfaces.LineData:interface'
    name: Excel.Interfaces.LineData