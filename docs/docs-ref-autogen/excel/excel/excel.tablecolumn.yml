### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.TableColumn:class'
    summary: "<span data-ttu-id=\"e36f5-101\">Cet objet représente une colonne dans un tableau.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e36f5-101\">Represents a column in a table.</span></span>\n\n<span data-ttu-id=\"e36f5-102\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"e36f5-102\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: Excel.TableColumn
    fullName: Excel.TableColumn
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.TableColumn#context:member'
      - 'excel!Excel.TableColumn#delete:member(1)'
      - 'excel!Excel.TableColumn#filter:member'
      - 'excel!Excel.TableColumn#getDataBodyRange:member(1)'
      - 'excel!Excel.TableColumn#getHeaderRowRange:member(1)'
      - 'excel!Excel.TableColumn#getRange:member(1)'
      - 'excel!Excel.TableColumn#getTotalRowRange:member(1)'
      - 'excel!Excel.TableColumn#id:member'
      - 'excel!Excel.TableColumn#index:member'
      - 'excel!Excel.TableColumn#load:member(1)'
      - 'excel!Excel.TableColumn#load:member(2)'
      - 'excel!Excel.TableColumn#load:member(3)'
      - 'excel!Excel.TableColumn#name:member'
      - 'excel!Excel.TableColumn#set:member(1)'
      - 'excel!Excel.TableColumn#set:member(2)'
      - 'excel!Excel.TableColumn#toJSON:member(1)'
      - 'excel!Excel.TableColumn#values:member'
  - uid: 'excel!Excel.TableColumn#context:member'
    summary: <span data-ttu-id="e36f5-103">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="e36f5-103">The request context associated with the object.</span></span> <span data-ttu-id="e36f5-104">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="e36f5-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.TableColumn#delete:member(1)'
    summary: "<span data-ttu-id=\"e36f5-105\">Supprime la colonne du tableau.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e36f5-105\">Deletes the column from the table.</span></span>\n\n<span data-ttu-id=\"e36f5-106\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"e36f5-106\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e36f5-107">Exemples</span><span class="sxs-lookup"><span data-stu-id="e36f5-107">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var column = ctx.workbook.tables.getItem(tableName).columns.getItemAt(2);
              column.delete();
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.TableColumn#filter:member'
    summary: "<span data-ttu-id=\"e36f5-108\">Extrait le filtre appliqué à la colonne.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e36f5-108\">Retrieve the filter applied to the column.</span></span> <span data-ttu-id=\"e36f5-109\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e36f5-109\">Read-only.</span></span>\n\n<span data-ttu-id=\"e36f5-110\">\\[[Ensemble d’API\_: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"e36f5-110\">\\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: filter
    fullName: filter
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly filter: Excel.Filter;'
      return:
        type:
          - 'excel!Excel.Filter:class'
  - uid: 'excel!Excel.TableColumn#getDataBodyRange:member(1)'
    summary: "<span data-ttu-id=\"e36f5-111\">Obtient l’objet de plage associé au corps de données de la colonne.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e36f5-111\">Gets the range object associated with the data body of the column.</span></span>\n\n<span data-ttu-id=\"e36f5-112\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"e36f5-112\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: getDataBodyRange()
    fullName: getDataBodyRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDataBodyRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e36f5-113">Exemples</span><span class="sxs-lookup"><span data-stu-id="e36f5-113">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var column = ctx.workbook.tables.getItem(tableName).columns.getItemAt(0);
              var dataBodyRange = column.getDataBodyRange();
              dataBodyRange.load('address');
              return ctx.sync().then(function() {
                  console.log(dataBodyRange.address);
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.TableColumn#getHeaderRowRange:member(1)'
    summary: "<span data-ttu-id=\"e36f5-114\">Obtient l’objet de plage associé à la ligne d’en-tête de la colonne.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e36f5-114\">Gets the range object associated with the header row of the column.</span></span>\n\n<span data-ttu-id=\"e36f5-115\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"e36f5-115\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: getHeaderRowRange()
    fullName: getHeaderRowRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getHeaderRowRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e36f5-116">Exemples</span><span class="sxs-lookup"><span data-stu-id="e36f5-116">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var columns = ctx.workbook.tables.getItem(tableName).columns.getItemAt(0);
              var headerRowRange = columns.getHeaderRowRange();
              headerRowRange.load('address');
              return ctx.sync().then(function() {
                  console.log(headerRowRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.TableColumn#getRange:member(1)'
    summary: "<span data-ttu-id=\"e36f5-117\">Renvoie l’objet de plage associé à l’intégralité de la colonne.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e36f5-117\">Gets the range object associated with the entire column.</span></span>\n\n<span data-ttu-id=\"e36f5-118\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"e36f5-118\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e36f5-119">Exemples</span><span class="sxs-lookup"><span data-stu-id="e36f5-119">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var columns = ctx.workbook.tables.getItem(tableName).columns.getItemAt(0);
              var columnRange = columns.getRange();
              columnRange.load('address');
              return ctx.sync().then(function() {
                  console.log(columnRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.TableColumn#getTotalRowRange:member(1)'
    summary: "<span data-ttu-id=\"e36f5-120\">Obtient l’objet de plage associé à la ligne de total de la colonne.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e36f5-120\">Gets the range object associated with the totals row of the column.</span></span>\n\n<span data-ttu-id=\"e36f5-121\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"e36f5-121\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: getTotalRowRange()
    fullName: getTotalRowRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTotalRowRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e36f5-122">Exemples</span><span class="sxs-lookup"><span data-stu-id="e36f5-122">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var columns = ctx.workbook.tables.getItem(tableName).columns.getItemAt(0);
              var totalRowRange = columns.getTotalRowRange();
              totalRowRange.load('address');
              return ctx.sync().then(function() {
                  console.log(totalRowRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.TableColumn#id:member'
    summary: "<span data-ttu-id=\"e36f5-123\">Renvoie une clé unique qui identifie la colonne du tableau.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e36f5-123\">Returns a unique key that identifies the column within the table.</span></span> <span data-ttu-id=\"e36f5-124\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e36f5-124\">Read-only.</span></span>\n\n<span data-ttu-id=\"e36f5-125\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"e36f5-125\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.TableColumn#index:member'
    summary: "<span data-ttu-id=\"e36f5-126\">Renvoie le numéro d’indice de la colonne dans la collection de colonnes du tableau.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e36f5-126\">Returns the index number of the column within the columns collection of the table.</span></span> <span data-ttu-id=\"e36f5-127\">Avec indice zéro.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e36f5-127\">Zero-indexed.</span></span> <span data-ttu-id=\"e36f5-128\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e36f5-128\">Read-only.</span></span>\n\n<span data-ttu-id=\"e36f5-129\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"e36f5-129\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: index
    fullName: index
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly index: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.TableColumn#load:member(1)'
    summary: <span data-ttu-id="e36f5-130">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="e36f5-130">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e36f5-131">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="e36f5-131">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.TableColumnLoadOptions): Excel.TableColumn;'
      return:
        type:
          - 'excel!Excel.TableColumn:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="e36f5-132">Fournit des options pour les propriétés de l’objet à charger.</span><span class="sxs-lookup"><span data-stu-id="e36f5-132">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.Interfaces.TableColumnLoadOptions:interface'
  - uid: 'excel!Excel.TableColumn#load:member(2)'
    summary: <span data-ttu-id="e36f5-133">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="e36f5-133">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e36f5-134">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="e36f5-134">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.TableColumn;'
      return:
        type:
          - 'excel!Excel.TableColumn:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e36f5-135">Exemples</span><span class="sxs-lookup"><span data-stu-id="e36f5-135">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var column = ctx.workbook.tables.getItem(tableName).columns.getItem(0);
              column.load('index');
              return ctx.sync().then(function() {
                  console.log(column.index);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var tables = ctx.workbook.tables;
              var newValues = [["New"], ["Values"], ["For"], ["New"], ["Column"]];
              var column = ctx.workbook.tables.getItem(tableName).columns.getItemAt(2);
              column.values = newValues;
              column.load('values');
              return ctx.sync().then(function() {
                  console.log(column.values);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="e36f5-136">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="e36f5-136">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.TableColumn#load:member(3)'
    summary: <span data-ttu-id="e36f5-137">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="e36f5-137">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e36f5-138">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="e36f5-138">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.TableColumn;
      return:
        type:
          - 'excel!Excel.TableColumn:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="e36f5-139">`propertyNamesAndPaths.select`est une chaîne délimitée par des virgules qui spécifie les propriétés à `propertyNamesAndPaths.expand` charger et une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="e36f5-139">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.TableColumn#name:member'
    summary: "<span data-ttu-id=\"e36f5-140\">Représente le nom de la colonne du tableau.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e36f5-140\">Represents the name of the table column.</span></span>\n\n<span data-ttu-id=\"e36f5-141\">\\[[Ensemble d’API\_: ExcelApi 1,1 pour obtenir le nom\_; 1,4 pour le définir.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span><span class=\"sxs-lookup\"><span data-stu-id=\"e36f5-141\">\\[ [API set: ExcelApi 1.1 for getting the name; 1.4 for setting it.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span></span> <span data-ttu-id=\"e36f5-142\">\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"e36f5-142\"></span></span>"
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.TableColumn#set:member(1)'
    summary: '<span data-ttu-id="e36f5-143">Définit plusieurs propriétés d’un objet en même temps.</span><span class="sxs-lookup"><span data-stu-id="e36f5-143">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="e36f5-144">Vous pouvez transmettre un objet plain avec les propriétés appropriées, ou un autre objet API du même type.</span><span class="sxs-lookup"><span data-stu-id="e36f5-144">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: "<span data-ttu-id=\"e36f5-145\">Cette méthode est dotée de la signature supplémentaire suivante\_:</span><span class=\"sxs-lookup\"><span data-stu-id=\"e36f5-145\">This method has the following additional signature:</span></span>\n\n`set(properties: Excel.TableColumn): void`"
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.TableColumnUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="e36f5-146">Objet JavaScript avec des propriétés qui sont structurées isomorphically vers les propriétés de l’objet sur lequel la méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="e36f5-146">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'excel!Excel.Interfaces.TableColumnUpdateData:interface'
        - id: options
          description: <span data-ttu-id="e36f5-147">Fournit une option permettant de supprimer les erreurs si l’objet Properties tente de définir des propriétés en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="e36f5-147">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.TableColumn#set:member(2)'
    summary: '<span data-ttu-id="e36f5-148">Définit plusieurs propriétés de l’objet en même temps, en fonction d’un objet chargé existant.</span><span class="sxs-lookup"><span data-stu-id="e36f5-148">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.TableColumn): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.TableColumn:class'
  - uid: 'excel!Excel.TableColumn#toJSON:member(1)'
    summary: '<span data-ttu-id="e36f5-149">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="e36f5-149">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="e36f5-150">.</span><span class="sxs-lookup"><span data-stu-id="e36f5-150"></span></span> <span data-ttu-id="e36f5-151">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="e36f5-151"></span></span><!-- --><span data-ttu-id="e36f5-152">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que l’objet Excel. TableColumn d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.TableColumnData`</span><span class="sxs-lookup"><span data-stu-id="e36f5-152">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.TableColumn object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableColumnData`</span></span><!-- --><span data-ttu-id="e36f5-153">) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l’objet d’origine.</span><span class="sxs-lookup"><span data-stu-id="e36f5-153">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.TableColumnData;'
      return:
        type:
          - 'excel!Excel.Interfaces.TableColumnData:interface'
        description: ''
  - uid: 'excel!Excel.TableColumn#values:member'
    summary: "<span data-ttu-id=\"e36f5-154\">Représente les valeurs brutes de la plage spécifiée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e36f5-154\">Represents the raw values of the specified range.</span></span> <span data-ttu-id=\"e36f5-155\">Les données renvoyées peuvent être des chaînes, des valeurs numériques ou des valeurs booléennes.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e36f5-155\">The data returned could be of type string, number, or a boolean.</span></span> <span data-ttu-id=\"e36f5-156\">Les cellules contenant une erreur renvoie la chaîne d’erreur.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e36f5-156\">Cells that contain an error will return the error string.</span></span>\n\n<span data-ttu-id=\"e36f5-157\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"e36f5-157\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: values
    fullName: values
    langs:
      - typeScript
    type: property
    syntax:
      content: 'values: any[][];'
      return:
        type:
          - 'any[][]'
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.Filter:class'
    name: Excel.Filter
  - uid: 'excel!Excel.Range:class'
    name: Excel.Range
  - uid: 'excel!Excel.TableColumn:class'
    name: Excel.TableColumn
  - uid: 'excel!Excel.Interfaces.TableColumnLoadOptions:interface'
    name: Excel.Interfaces.TableColumnLoadOptions
  - uid: 'excel!Excel.Interfaces.TableColumnUpdateData:interface'
    name: Interfaces.TableColumnUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Interfaces.TableColumnData:interface'
    name: Excel.Interfaces.TableColumnData