### YamlMime:UniversalReference
items:
  - uid: excel.Excel.BindingCollection
    summary: |-
      <span data-ttu-id="79bea-101">Représente la collection de l’ensemble des objets de liaison qui font partie du classeur.</span><span class="sxs-lookup"><span data-stu-id="79bea-101">Represents the collection of all the binding objects that are part of the workbook.</span></span>

      <span data-ttu-id="79bea-102">\[[Ensemble d’API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="79bea-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.BindingCollection
    fullName: Excel.BindingCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.BindingCollection.add
      - excel.Excel.BindingCollection.add_1
      - excel.Excel.BindingCollection.addFromNamedItem
      - excel.Excel.BindingCollection.addFromNamedItem_1
      - excel.Excel.BindingCollection.addFromSelection
      - excel.Excel.BindingCollection.addFromSelection_1
      - excel.Excel.BindingCollection.context
      - excel.Excel.BindingCollection.count
      - excel.Excel.BindingCollection.getCount
      - excel.Excel.BindingCollection.getItem
      - excel.Excel.BindingCollection.getItemAt
      - excel.Excel.BindingCollection.getItemOrNullObject
      - excel.Excel.BindingCollection.items
      - excel.Excel.BindingCollection.load
      - excel.Excel.BindingCollection.load_1
      - excel.Excel.BindingCollection.load_2
      - excel.Excel.BindingCollection.toJSON
  - uid: excel.Excel.BindingCollection.add
    summary: |-
      <span data-ttu-id="79bea-103">Ajoute une nouvelle liaison à une plage spécifique.</span><span class="sxs-lookup"><span data-stu-id="79bea-103">Add a new binding to a particular Range.</span></span>

      <span data-ttu-id="79bea-104">\[[Ensemble d’API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="79bea-104">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'add(range, bindingType, id)'
    fullName: 'add(range, bindingType, id)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(range: Range | string, bindingType: Excel.BindingType, id: string): Excel.Binding;'
      return:
        type:
          - excel.Excel.Binding
        description: ''
      parameters:
        - id: range
          description: '<span data-ttu-id="79bea-p101">Plage à laquelle lier la liaison. Peut être un objet de plage Excel ou une chaîne. Si c’est une chaîne, elle doit contenir l’adresse complète, y compris le nom de la feuille.</span><span class="sxs-lookup"><span data-stu-id="79bea-p101">Range to bind the binding to. May be an Excel Range object, or a string. If string, must contain the full address, including the sheet name</span></span>'
          type:
            - Range | string
        - id: bindingType
          description: <span data-ttu-id="79bea-108">Type de liaison.</span><span class="sxs-lookup"><span data-stu-id="79bea-108">Type of binding.</span></span> <span data-ttu-id="79bea-109">Voir Excel. BindingType.</span><span class="sxs-lookup"><span data-stu-id="79bea-109">See Excel.BindingType.</span></span>
          type:
            - excel.Excel.BindingType
        - id: id
          description: <span data-ttu-id="79bea-110">Nom de la liaison.</span><span class="sxs-lookup"><span data-stu-id="79bea-110">Name of binding.</span></span>
          type:
            - string
  - uid: excel.Excel.BindingCollection.add_1
    summary: |-
      <span data-ttu-id="79bea-111">Ajoute une nouvelle liaison à une plage spécifique.</span><span class="sxs-lookup"><span data-stu-id="79bea-111">Add a new binding to a particular Range.</span></span>

      <span data-ttu-id="79bea-112">\[[Ensemble d’API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="79bea-112">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'add(range, bindingTypeString, id)'
    fullName: 'add(range, bindingTypeString, id)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(range: Range | string, bindingTypeString: "Range" | "Table" | "Text", id: string): Excel.Binding;'
      return:
        type:
          - excel.Excel.Binding
        description: ''
      parameters:
        - id: range
          description: '<span data-ttu-id="79bea-p103">Plage à laquelle lier la liaison. Peut être un objet de plage Excel ou une chaîne. Si c’est une chaîne, elle doit contenir l’adresse complète, y compris le nom de la feuille.</span><span class="sxs-lookup"><span data-stu-id="79bea-p103">Range to bind the binding to. May be an Excel Range object, or a string. If string, must contain the full address, including the sheet name</span></span>'
          type:
            - Range | string
        - id: bindingTypeString
          description: <span data-ttu-id="79bea-116">Type de liaison.</span><span class="sxs-lookup"><span data-stu-id="79bea-116">Type of binding.</span></span> <span data-ttu-id="79bea-117">Voir Excel. BindingType.</span><span class="sxs-lookup"><span data-stu-id="79bea-117">See Excel.BindingType.</span></span>
          type:
            - '"Range" | "Table" | "Text"'
        - id: id
          description: <span data-ttu-id="79bea-118">Nom de la liaison.</span><span class="sxs-lookup"><span data-stu-id="79bea-118">Name of binding.</span></span>
          type:
            - string
  - uid: excel.Excel.BindingCollection.addFromNamedItem
    summary: |-
      <span data-ttu-id="79bea-119">Ajoute une nouvelle liaison basée sur un élément nommé dans le classeur.</span><span class="sxs-lookup"><span data-stu-id="79bea-119">Add a new binding based on a named item in the workbook.</span></span> <span data-ttu-id="79bea-120">Si l’élément nommé fait référence à plusieurs zones, l’erreur «InvalidReference» est renvoyée.</span><span class="sxs-lookup"><span data-stu-id="79bea-120">If the named item references to multiple areas, the "InvalidReference" error will be returned.</span></span>

      <span data-ttu-id="79bea-121">\[[Ensemble d’API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="79bea-121">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'addFromNamedItem(name, bindingType, id)'
    fullName: 'addFromNamedItem(name, bindingType, id)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromNamedItem(name: string, bindingType: Excel.BindingType, id: string): Excel.Binding;'
      return:
        type:
          - excel.Excel.Binding
        description: ''
      parameters:
        - id: name
          description: <span data-ttu-id="79bea-122">Nom à partir duquel créer la liaison.</span><span class="sxs-lookup"><span data-stu-id="79bea-122">Name from which to create binding.</span></span>
          type:
            - string
        - id: bindingType
          description: <span data-ttu-id="79bea-123">Type de liaison.</span><span class="sxs-lookup"><span data-stu-id="79bea-123">Type of binding.</span></span> <span data-ttu-id="79bea-124">Voir Excel. BindingType.</span><span class="sxs-lookup"><span data-stu-id="79bea-124">See Excel.BindingType.</span></span>
          type:
            - excel.Excel.BindingType
        - id: id
          description: <span data-ttu-id="79bea-125">Nom de la liaison.</span><span class="sxs-lookup"><span data-stu-id="79bea-125">Name of binding.</span></span>
          type:
            - string
  - uid: excel.Excel.BindingCollection.addFromNamedItem_1
    summary: |-
      <span data-ttu-id="79bea-126">Ajoute une nouvelle liaison basée sur un élément nommé dans le classeur.</span><span class="sxs-lookup"><span data-stu-id="79bea-126">Add a new binding based on a named item in the workbook.</span></span> <span data-ttu-id="79bea-127">Si l’élément nommé fait référence à plusieurs zones, l’erreur «InvalidReference» est renvoyée.</span><span class="sxs-lookup"><span data-stu-id="79bea-127">If the named item references to multiple areas, the "InvalidReference" error will be returned.</span></span>

      <span data-ttu-id="79bea-128">\[[Ensemble d’API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="79bea-128">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'addFromNamedItem(name, bindingTypeString, id)'
    fullName: 'addFromNamedItem(name, bindingTypeString, id)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromNamedItem(name: string, bindingTypeString: "Range" | "Table" | "Text", id: string): Excel.Binding;'
      return:
        type:
          - excel.Excel.Binding
        description: ''
      parameters:
        - id: name
          description: <span data-ttu-id="79bea-129">Nom à partir duquel créer la liaison.</span><span class="sxs-lookup"><span data-stu-id="79bea-129">Name from which to create binding.</span></span>
          type:
            - string
        - id: bindingTypeString
          description: <span data-ttu-id="79bea-130">Type de liaison.</span><span class="sxs-lookup"><span data-stu-id="79bea-130">Type of binding.</span></span> <span data-ttu-id="79bea-131">Voir Excel. BindingType.</span><span class="sxs-lookup"><span data-stu-id="79bea-131">See Excel.BindingType.</span></span>
          type:
            - '"Range" | "Table" | "Text"'
        - id: id
          description: <span data-ttu-id="79bea-132">Nom de la liaison.</span><span class="sxs-lookup"><span data-stu-id="79bea-132">Name of binding.</span></span>
          type:
            - string
  - uid: excel.Excel.BindingCollection.addFromSelection
    summary: |-
      <span data-ttu-id="79bea-133">Ajoute une nouvelle liaison basée sur la sélection en cours.</span><span class="sxs-lookup"><span data-stu-id="79bea-133">Add a new binding based on the current selection.</span></span> <span data-ttu-id="79bea-134">Si la sélection comporte plusieurs zones, l’erreur «InvalidReference» est renvoyée.</span><span class="sxs-lookup"><span data-stu-id="79bea-134">If the selection has multiple areas, the "InvalidReference" error will be returned.</span></span>

      <span data-ttu-id="79bea-135">\[[Ensemble d’API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="79bea-135">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'addFromSelection(bindingType, id)'
    fullName: 'addFromSelection(bindingType, id)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromSelection(bindingType: Excel.BindingType, id: string): Excel.Binding;'
      return:
        type:
          - excel.Excel.Binding
        description: ''
      parameters:
        - id: bindingType
          description: <span data-ttu-id="79bea-136">Type de liaison.</span><span class="sxs-lookup"><span data-stu-id="79bea-136">Type of binding.</span></span> <span data-ttu-id="79bea-137">Voir Excel. BindingType.</span><span class="sxs-lookup"><span data-stu-id="79bea-137">See Excel.BindingType.</span></span>
          type:
            - excel.Excel.BindingType
        - id: id
          description: <span data-ttu-id="79bea-138">Nom de la liaison.</span><span class="sxs-lookup"><span data-stu-id="79bea-138">Name of binding.</span></span>
          type:
            - string
  - uid: excel.Excel.BindingCollection.addFromSelection_1
    summary: |-
      <span data-ttu-id="79bea-139">Ajoute une nouvelle liaison basée sur la sélection en cours.</span><span class="sxs-lookup"><span data-stu-id="79bea-139">Add a new binding based on the current selection.</span></span> <span data-ttu-id="79bea-140">Si la sélection comporte plusieurs zones, l’erreur «InvalidReference» est renvoyée.</span><span class="sxs-lookup"><span data-stu-id="79bea-140">If the selection has multiple areas, the "InvalidReference" error will be returned.</span></span>

      <span data-ttu-id="79bea-141">\[[Ensemble d’API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="79bea-141">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'addFromSelection(bindingTypeString, id)'
    fullName: 'addFromSelection(bindingTypeString, id)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromSelection(bindingTypeString: "Range" | "Table" | "Text", id: string): Excel.Binding;'
      return:
        type:
          - excel.Excel.Binding
        description: ''
      parameters:
        - id: bindingTypeString
          description: <span data-ttu-id="79bea-142">Type de liaison.</span><span class="sxs-lookup"><span data-stu-id="79bea-142">Type of binding.</span></span> <span data-ttu-id="79bea-143">Voir Excel. BindingType.</span><span class="sxs-lookup"><span data-stu-id="79bea-143">See Excel.BindingType.</span></span>
          type:
            - '"Range" | "Table" | "Text"'
        - id: id
          description: <span data-ttu-id="79bea-144">Nom de la liaison.</span><span class="sxs-lookup"><span data-stu-id="79bea-144">Name of binding.</span></span>
          type:
            - string
  - uid: excel.Excel.BindingCollection.context
    summary: <span data-ttu-id="79bea-145">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="79bea-145">The request context associated with the object.</span></span> <span data-ttu-id="79bea-146">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="79bea-146">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.BindingCollection.count
    summary: |-
      <span data-ttu-id="79bea-147">Renvoie le nombre de liaisons de la collection.</span><span class="sxs-lookup"><span data-stu-id="79bea-147">Returns the number of bindings in the collection.</span></span> <span data-ttu-id="79bea-148">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="79bea-148">Read-only.</span></span>

      <span data-ttu-id="79bea-149">\[[Ensemble d’API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="79bea-149">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: excel.Excel.BindingCollection.getCount
    summary: |-
      <span data-ttu-id="79bea-150">Obtient le nombre de liaisons de la collection.</span><span class="sxs-lookup"><span data-stu-id="79bea-150">Gets the number of bindings in the collection.</span></span>

      <span data-ttu-id="79bea-151">\[[Ensemble d’API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="79bea-151">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: excel.Excel.BindingCollection.getItem
    summary: |-
      <span data-ttu-id="79bea-152">Obtient un objet de liaison par ID.</span><span class="sxs-lookup"><span data-stu-id="79bea-152">Gets a binding object by ID.</span></span>

      <span data-ttu-id="79bea-153">\[[Ensemble d’API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="79bea-153">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItem(id)
    fullName: getItem(id)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(id: string): Excel.Binding;'
      return:
        type:
          - excel.Excel.Binding
        description: |-


          #### <a name="examples"></a><span data-ttu-id="79bea-154">Exemples</span><span class="sxs-lookup"><span data-stu-id="79bea-154">Examples</span></span>

          ```javascript
          // Create a table binding to monitor data changes in the table. 
          // When data is changed, the background color of the table will be changed to orange.
          function addEventHandler() {
              // Create Table1
              Excel.run(function (ctx) { 
                  ctx.workbook.tables.add("Sheet1!A1:C4", true);
                  return ctx.sync().then(function() {
                          console.log("My Diet Data Inserted!");
                  })
                  .catch(function (error) {
                          console.log(JSON.stringify(error));
                  });
              });
              //Create a new table binding for Table1
              Office.context.document.bindings.addFromNamedItemAsync(
                  "Table1", Office.CoercionType.Table, { id: "myBinding" }, function (asyncResult) {
                  if (asyncResult.status == "failed") {
                      console.log("Action failed with error: " + asyncResult.error.message);
                  }
                  else {
                      // If succeeded, then add event handler to the table binding.
                      Office.select("bindings#myBinding").addHandlerAsync(
                          Office.EventType.BindingDataChanged, onBindingDataChanged);
                  }
              });
          }
              
          // when data in the table is changed, this event will be triggered.
          function onBindingDataChanged(eventArgs) {
              Excel.run(function (ctx) { 
                  // highlight the table in orange to indicate data has been changed.
                  ctx.workbook.bindings.getItem(eventArgs.binding.id).getTable().getDataBodyRange().format.fill.color = "Orange";
                  return ctx.sync().then(function() {
                          console.log("The value in this table got changed!");
                  })
                  .catch(function (error) {
                          console.log(JSON.stringify(error));
                  });
              });
          }
          ```
      parameters:
        - id: id
          description: <span data-ttu-id="79bea-155">ID de l’objet de liaison à récupérer.</span><span class="sxs-lookup"><span data-stu-id="79bea-155">Id of the binding object to be retrieved.</span></span>
          type:
            - string
  - uid: excel.Excel.BindingCollection.getItemAt
    summary: |-
      <span data-ttu-id="79bea-156">Obtient un objet de liaison en fonction de sa position dans le tableau d’éléments.</span><span class="sxs-lookup"><span data-stu-id="79bea-156">Gets a binding object based on its position in the items array.</span></span>

      <span data-ttu-id="79bea-157">\[[Ensemble d’API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="79bea-157">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.Binding;'
      return:
        type:
          - excel.Excel.Binding
        description: |-


          #### <a name="examples"></a><span data-ttu-id="79bea-158">Exemples</span><span class="sxs-lookup"><span data-stu-id="79bea-158">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var lastPosition = ctx.workbook.bindings.count - 1;
              var binding = ctx.workbook.bindings.getItemAt(lastPosition);
              binding.load('type')
              return ctx.sync().then(function() {
                      console.log(binding.type); 
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: <span data-ttu-id="79bea-159">Valeur d’indice de l’objet à récupérer.</span><span class="sxs-lookup"><span data-stu-id="79bea-159">Index value of the object to be retrieved.</span></span> <span data-ttu-id="79bea-160">Avec indice zéro.</span><span class="sxs-lookup"><span data-stu-id="79bea-160">Zero-indexed.</span></span>
          type:
            - number
  - uid: excel.Excel.BindingCollection.getItemOrNullObject
    summary: |-
      <span data-ttu-id="79bea-161">Obtient un objet de liaison par ID.</span><span class="sxs-lookup"><span data-stu-id="79bea-161">Gets a binding object by ID.</span></span> <span data-ttu-id="79bea-162">Si l’objet de liaison n’existe pas, renvoie un objet null.</span><span class="sxs-lookup"><span data-stu-id="79bea-162">If the binding object does not exist, will return a null object.</span></span>

      <span data-ttu-id="79bea-163">\[[Ensemble d’API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="79bea-163">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemOrNullObject(id)
    fullName: getItemOrNullObject(id)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(id: string): Excel.Binding;'
      return:
        type:
          - excel.Excel.Binding
        description: ''
      parameters:
        - id: id
          description: <span data-ttu-id="79bea-164">ID de l’objet de liaison à récupérer.</span><span class="sxs-lookup"><span data-stu-id="79bea-164">Id of the binding object to be retrieved.</span></span>
          type:
            - string
  - uid: excel.Excel.BindingCollection.items
    summary: <span data-ttu-id="79bea-165">Obtient l’élément enfant chargé dans cette collection de sites.</span><span class="sxs-lookup"><span data-stu-id="79bea-165">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Binding[];'
      return:
        type:
          - 'Excel.Binding[]'
  - uid: excel.Excel.BindingCollection.load
    summary: "<span data-ttu-id=\"79bea-166\">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79bea-166\">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id=\"79bea-167\">Vous devez appeler «\_context.sync()\_» avant de lire les propriétés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79bea-167\">You must call \"context.sync()\" before reading the properties.</span></span>"
    remarks: |-
      <span data-ttu-id="79bea-168">En plus de cette signature, cette méthode possède les signatures suivantes:</span><span class="sxs-lookup"><span data-stu-id="79bea-168">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="79bea-169">`load(option?: string | string[]): Excel.BindingCollection`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="79bea-169">`load(option?: string | string[]): Excel.BindingCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="79bea-170">`load(option?: { select?: string; expand?: string; }): Excel.BindingCollection`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="79bea-170">`load(option?: { select?: string; expand?: string; }): Excel.BindingCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="79bea-171">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.BindingCollection`-Uniquement disponible sur les types de collection.</span><span class="sxs-lookup"><span data-stu-id="79bea-171">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.BindingCollection` - Only available on collection types.</span></span> <span data-ttu-id="79bea-172">Elle est similaire à la signature précédente.</span><span class="sxs-lookup"><span data-stu-id="79bea-172">It is similar to the preceding signature.</span></span> <span data-ttu-id="79bea-173">Option. Top indique le nombre maximal d’éléments de collection qui peuvent être inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="79bea-173">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="79bea-174">Option. Skip indique le nombre d’éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="79bea-174">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="79bea-175">Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d’éléments.</span><span class="sxs-lookup"><span data-stu-id="79bea-175">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.BindingCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.BindingCollection;'
      return:
        type:
          - excel.Excel.BindingCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.BindingCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel.Excel.BindingCollection.load_1
    summary: <span data-ttu-id="79bea-176">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="79bea-176">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="79bea-177">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="79bea-177">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.BindingCollection;'
      return:
        type:
          - excel.Excel.BindingCollection
        description: |-


          #### <a name="examples"></a><span data-ttu-id="79bea-178">Exemples</span><span class="sxs-lookup"><span data-stu-id="79bea-178">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var bindings = ctx.workbook.bindings;
              bindings.load('items');
              return ctx.sync().then(function() {
                  for (var i = 0; i < bindings.items.length; i++)
                  {
                      console.log(bindings.items[i].id);
                  }
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Get the number of bindings
          Excel.run(function (ctx) { 
              var bindings = ctx.workbook.bindings;
              bindings.load('count');
              return ctx.sync().then(function() {
                  console.log("Bindings: Count= " + bindings.count);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="79bea-179">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="79bea-179">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.BindingCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.BindingCollection;'
      return:
        type:
          - excel.Excel.BindingCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - OfficeExtension.LoadOption
  - uid: excel.Excel.BindingCollection.toJSON
    summary: '<span data-ttu-id="79bea-180">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="79bea-180">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="79bea-181">.</span><span class="sxs-lookup"><span data-stu-id="79bea-181"></span></span> <span data-ttu-id="79bea-182">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="79bea-182"></span></span><!-- --><span data-ttu-id="79bea-183">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que `Excel.BindingCollection` l’objet d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.BindingCollectionData`</span><span class="sxs-lookup"><span data-stu-id="79bea-183">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.BindingCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.BindingCollectionData`</span></span><!-- --><span data-ttu-id="79bea-184">) qui contient un tableau «éléments» avec des copies superficielles de toutes les propriétés chargées des éléments de la collection.</span><span class="sxs-lookup"><span data-stu-id="79bea-184">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.BindingCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.BindingCollectionData
        description: ''