### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.DataBarConditionalFormat:class'
    summary: "<span data-ttu-id=\"b9e4f-101\">Représente un type de barre de données conditionnelle Excel.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9e4f-101\">Represents an Excel Conditional Data Bar Type.</span></span>\n\n<span data-ttu-id=\"b9e4f-102\">\\[[Ensemble d’API\_: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9e4f-102\">\\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: Excel.DataBarConditionalFormat
    fullName: Excel.DataBarConditionalFormat
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.DataBarConditionalFormat#axisColor:member'
      - 'excel!Excel.DataBarConditionalFormat#axisFormat:member'
      - 'excel!Excel.DataBarConditionalFormat#barDirection:member'
      - 'excel!Excel.DataBarConditionalFormat#context:member'
      - 'excel!Excel.DataBarConditionalFormat#load:member(1)'
      - 'excel!Excel.DataBarConditionalFormat#load:member(2)'
      - 'excel!Excel.DataBarConditionalFormat#load:member(3)'
      - 'excel!Excel.DataBarConditionalFormat#lowerBoundRule:member'
      - 'excel!Excel.DataBarConditionalFormat#negativeFormat:member'
      - 'excel!Excel.DataBarConditionalFormat#positiveFormat:member'
      - 'excel!Excel.DataBarConditionalFormat#set:member(1)'
      - 'excel!Excel.DataBarConditionalFormat#set:member(2)'
      - 'excel!Excel.DataBarConditionalFormat#showDataBarOnly:member'
      - 'excel!Excel.DataBarConditionalFormat#toJSON:member(1)'
      - 'excel!Excel.DataBarConditionalFormat#upperBoundRule:member'
  - uid: 'excel!Excel.DataBarConditionalFormat#axisColor:member'
    summary: "<span data-ttu-id=\"b9e4f-103\">Code couleur HTML qui représente la couleur de la ligne de l’axe, \\#sous la forme RRGGBB (par exemple, «\_FFA500\_») ou sous forme de couleur HTML nommée (par exemple, «\_orange\_»).</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9e4f-103\">HTML color code representing the color of the Axis line, of the form \\#RRGGBB (e.g. \"FFA500\") or as a named HTML color (e.g. \"orange\").</span></span> <span data-ttu-id=\"b9e4f-104\">\"\" (chaîne vide) si aucun axe n’est présent ou défini.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9e4f-104\">\"\" (empty string) if no axis is present or set.</span></span>\n\n<span data-ttu-id=\"b9e4f-105\">\\[[Ensemble d’API\_: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9e4f-105\">\\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: axisColor
    fullName: axisColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'axisColor: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.DataBarConditionalFormat#axisFormat:member'
    summary: "<span data-ttu-id=\"b9e4f-106\">Représentation de la façon dont l’axe est déterminé pour une barre de données Excel.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9e4f-106\">Representation of how the axis is determined for an Excel data bar.</span></span>\n\n<span data-ttu-id=\"b9e4f-107\">\\[[Ensemble d’API\_: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9e4f-107\">\\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: axisFormat
    fullName: axisFormat
    langs:
      - typeScript
    type: property
    syntax:
      content: 'axisFormat: Excel.ConditionalDataBarAxisFormat | "Automatic" | "None" | "CellMidPoint";'
      return:
        type:
          - 'excel!Excel.DataBarConditionalFormat#axisFormat~0:complex'
  - uid: 'excel!Excel.DataBarConditionalFormat#barDirection:member'
    summary: "<span data-ttu-id=\"b9e4f-108\">Représente le sens de l’image de la barre de données.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9e4f-108\">Represents the direction that the data bar graphic should be based on.</span></span>\n\n<span data-ttu-id=\"b9e4f-109\">\\[[Ensemble d’API\_: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9e4f-109\">\\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: barDirection
    fullName: barDirection
    langs:
      - typeScript
    type: property
    syntax:
      content: 'barDirection: Excel.ConditionalDataBarDirection | "Context" | "LeftToRight" | "RightToLeft";'
      return:
        type:
          - 'excel!Excel.DataBarConditionalFormat#barDirection~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="b9e4f-110">Exemples</span><span class="sxs-lookup"><span data-stu-id="b9e4f-110">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B8:E13");
              const conditionalFormat = range.conditionalFormats
                  .add(Excel.ConditionalFormatType.dataBar);
              conditionalFormat.dataBar.barDirection = Excel.ConditionalDataBarDirection.leftToRight;

              await context.sync();
          });
          ```
  - uid: 'excel!Excel.DataBarConditionalFormat#context:member'
    summary: <span data-ttu-id="b9e4f-111">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="b9e4f-111">The request context associated with the object.</span></span> <span data-ttu-id="b9e4f-112">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="b9e4f-112">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.DataBarConditionalFormat#load:member(1)'
    summary: <span data-ttu-id="b9e4f-113">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="b9e4f-113">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="b9e4f-114">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="b9e4f-114">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.DataBarConditionalFormatLoadOptions): Excel.DataBarConditionalFormat;'
      return:
        type:
          - 'excel!Excel.DataBarConditionalFormat:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="b9e4f-115">Fournit des options pour les propriétés de l’objet à charger.</span><span class="sxs-lookup"><span data-stu-id="b9e4f-115">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.Interfaces.DataBarConditionalFormatLoadOptions:interface'
  - uid: 'excel!Excel.DataBarConditionalFormat#load:member(2)'
    summary: <span data-ttu-id="b9e4f-116">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="b9e4f-116">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="b9e4f-117">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="b9e4f-117">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.DataBarConditionalFormat;'
      return:
        type:
          - 'excel!Excel.DataBarConditionalFormat:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="b9e4f-118">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="b9e4f-118">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.DataBarConditionalFormat#load:member(3)'
    summary: <span data-ttu-id="b9e4f-119">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="b9e4f-119">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="b9e4f-120">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="b9e4f-120">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.DataBarConditionalFormat;
      return:
        type:
          - 'excel!Excel.DataBarConditionalFormat:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="b9e4f-121">`propertyNamesAndPaths.select`est une chaîne délimitée par des virgules qui spécifie les propriétés à `propertyNamesAndPaths.expand` charger et une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="b9e4f-121">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.DataBarConditionalFormat#lowerBoundRule:member'
    summary: "<span data-ttu-id=\"b9e4f-122\">Règle de ce qui constitue la limite inférieure (et comment la calculer, le cas échéant) pour une barre de données.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9e4f-122\">The rule for what consistutes the lower bound (and how to calculate it, if applicable) for a data bar.</span></span> <span data-ttu-id=\"b9e4f-123\">L' `ConditionalDataBarRule` objet doit être défini en tant qu’objet JSON ( `x.lowerBoundRule = {...}` utilisez au lieu de`x.lowerBoundRule.formula = ...`</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9e4f-123\">The `ConditionalDataBarRule` object must be set as a JSON object (use `x.lowerBoundRule = {...}` instead of `x.lowerBoundRule.formula = ...`</span></span><!-- --><span data-ttu-id=\"b9e4f-124\">).</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9e4f-124\"></span></span>\n\n<span data-ttu-id=\"b9e4f-125\">\\[[Ensemble d’API\_: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9e4f-125\">\\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: lowerBoundRule
    fullName: lowerBoundRule
    langs:
      - typeScript
    type: property
    syntax:
      content: 'lowerBoundRule: Excel.ConditionalDataBarRule;'
      return:
        type:
          - 'excel!Excel.ConditionalDataBarRule:interface'
  - uid: 'excel!Excel.DataBarConditionalFormat#negativeFormat:member'
    summary: "<span data-ttu-id=\"b9e4f-126\">Représentation de toutes les valeurs à gauche de l’axe dans une barre de données Excel.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9e4f-126\">Representation of all values to the left of the axis in an Excel data bar.</span></span> <span data-ttu-id=\"b9e4f-127\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9e4f-127\">Read-only.</span></span>\n\n<span data-ttu-id=\"b9e4f-128\">\\[[Ensemble d’API\_: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9e4f-128\">\\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: negativeFormat
    fullName: negativeFormat
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly negativeFormat: Excel.ConditionalDataBarNegativeFormat;'
      return:
        type:
          - 'excel!Excel.ConditionalDataBarNegativeFormat:class'
  - uid: 'excel!Excel.DataBarConditionalFormat#positiveFormat:member'
    summary: "<span data-ttu-id=\"b9e4f-129\">Représentation de toutes les valeurs à droite de l’axe dans une barre de données Excel.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9e4f-129\">Representation of all values to the right of the axis in an Excel data bar.</span></span> <span data-ttu-id=\"b9e4f-130\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9e4f-130\">Read-only.</span></span>\n\n<span data-ttu-id=\"b9e4f-131\">\\[[Ensemble d’API\_: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9e4f-131\">\\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: positiveFormat
    fullName: positiveFormat
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly positiveFormat: Excel.ConditionalDataBarPositiveFormat;'
      return:
        type:
          - 'excel!Excel.ConditionalDataBarPositiveFormat:class'
  - uid: 'excel!Excel.DataBarConditionalFormat#set:member(1)'
    summary: '<span data-ttu-id="b9e4f-132">Définit plusieurs propriétés d’un objet en même temps.</span><span class="sxs-lookup"><span data-stu-id="b9e4f-132">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="b9e4f-133">Vous pouvez transmettre un objet plain avec les propriétés appropriées, ou un autre objet API du même type.</span><span class="sxs-lookup"><span data-stu-id="b9e4f-133">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: "<span data-ttu-id=\"b9e4f-134\">Cette méthode est dotée de la signature supplémentaire suivante\_:</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9e4f-134\">This method has the following additional signature:</span></span>\n\n`set(properties: Excel.DataBarConditionalFormat): void`"
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.DataBarConditionalFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="b9e4f-135">Objet JavaScript avec des propriétés qui sont structurées isomorphically vers les propriétés de l’objet sur lequel la méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="b9e4f-135">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'excel!Excel.Interfaces.DataBarConditionalFormatUpdateData:interface'
        - id: options
          description: <span data-ttu-id="b9e4f-136">Fournit une option permettant de supprimer les erreurs si l’objet Properties tente de définir des propriétés en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="b9e4f-136">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.DataBarConditionalFormat#set:member(2)'
    summary: '<span data-ttu-id="b9e4f-137">Définit plusieurs propriétés de l’objet en même temps, en fonction d’un objet chargé existant.</span><span class="sxs-lookup"><span data-stu-id="b9e4f-137">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.DataBarConditionalFormat): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.DataBarConditionalFormat:class'
  - uid: 'excel!Excel.DataBarConditionalFormat#showDataBarOnly:member'
    summary: "<span data-ttu-id=\"b9e4f-138\">Si la valeur est True, masque les valeurs des cellules où la barre de données est appliquée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9e4f-138\">If true, hides the values from the cells where the data bar is applied.</span></span>\n\n<span data-ttu-id=\"b9e4f-139\">\\[[Ensemble d’API\_: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9e4f-139\">\\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: showDataBarOnly
    fullName: showDataBarOnly
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showDataBarOnly: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.DataBarConditionalFormat#toJSON:member(1)'
    summary: '<span data-ttu-id="b9e4f-140">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="b9e4f-140">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="b9e4f-141">.</span><span class="sxs-lookup"><span data-stu-id="b9e4f-141"></span></span> <span data-ttu-id="b9e4f-142">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="b9e4f-142"></span></span><!-- --><span data-ttu-id="b9e4f-143">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que l’objet Excel. DataBarConditionalFormat d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.DataBarConditionalFormatData`</span><span class="sxs-lookup"><span data-stu-id="b9e4f-143">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.DataBarConditionalFormat object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.DataBarConditionalFormatData`</span></span><!-- --><span data-ttu-id="b9e4f-144">) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l’objet d’origine.</span><span class="sxs-lookup"><span data-stu-id="b9e4f-144">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.DataBarConditionalFormatData;'
      return:
        type:
          - 'excel!Excel.Interfaces.DataBarConditionalFormatData:interface'
        description: ''
  - uid: 'excel!Excel.DataBarConditionalFormat#upperBoundRule:member'
    summary: "<span data-ttu-id=\"b9e4f-145\">Règle de ce qui constitue la limite supérieure (et comment la calculer, le cas échéant) pour une barre de données.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9e4f-145\">The rule for what constitutes the upper bound (and how to calculate it, if applicable) for a data bar.</span></span> <span data-ttu-id=\"b9e4f-146\">L' `ConditionalDataBarRule` objet doit être défini en tant qu’objet JSON ( `x.upperBoundRule = {...}` utilisez au lieu de`x.upperBoundRule.formula = ...`</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9e4f-146\">The `ConditionalDataBarRule` object must be set as a JSON object (use `x.upperBoundRule = {...}` instead of `x.upperBoundRule.formula = ...`</span></span><!-- --><span data-ttu-id=\"b9e4f-147\">).</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9e4f-147\"></span></span>\n\n<span data-ttu-id=\"b9e4f-148\">\\[[Ensemble d’API\_: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9e4f-148\">\\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: upperBoundRule
    fullName: upperBoundRule
    langs:
      - typeScript
    type: property
    syntax:
      content: 'upperBoundRule: Excel.ConditionalDataBarRule;'
      return:
        type:
          - 'excel!Excel.ConditionalDataBarRule:interface'
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.DataBarConditionalFormat#axisFormat~0:complex'
    name: Excel.ConditionalDataBarAxisFormat | "Automatic" | "None" | "CellMidPoint"
    fullName: Excel.ConditionalDataBarAxisFormat | "Automatic" | "None" | "CellMidPoint"
    spec.typeScript:
      - uid: 'excel!Excel.ConditionalDataBarAxisFormat:enum'
        name: Excel.ConditionalDataBarAxisFormat
        fullName: Excel.ConditionalDataBarAxisFormat
      - name: ' | "Automatic" | "None" | "CellMidPoint"'
        fullName: ' | "Automatic" | "None" | "CellMidPoint"'
  - uid: 'excel!Excel.DataBarConditionalFormat#barDirection~0:complex'
    name: Excel.ConditionalDataBarDirection | "Context" | "LeftToRight" | "RightToLeft"
    fullName: Excel.ConditionalDataBarDirection | "Context" | "LeftToRight" | "RightToLeft"
    spec.typeScript:
      - uid: 'excel!Excel.ConditionalDataBarDirection:enum'
        name: Excel.ConditionalDataBarDirection
        fullName: Excel.ConditionalDataBarDirection
      - name: ' | "Context" | "LeftToRight" | "RightToLeft"'
        fullName: ' | "Context" | "LeftToRight" | "RightToLeft"'
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.DataBarConditionalFormat:class'
    name: Excel.DataBarConditionalFormat
  - uid: 'excel!Excel.Interfaces.DataBarConditionalFormatLoadOptions:interface'
    name: Excel.Interfaces.DataBarConditionalFormatLoadOptions
  - uid: 'excel!Excel.ConditionalDataBarRule:interface'
    name: Excel.ConditionalDataBarRule
  - uid: 'excel!Excel.ConditionalDataBarNegativeFormat:class'
    name: Excel.ConditionalDataBarNegativeFormat
  - uid: 'excel!Excel.ConditionalDataBarPositiveFormat:class'
    name: Excel.ConditionalDataBarPositiveFormat
  - uid: 'excel!Excel.Interfaces.DataBarConditionalFormatUpdateData:interface'
    name: Interfaces.DataBarConditionalFormatUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Interfaces.DataBarConditionalFormatData:interface'
    name: Excel.Interfaces.DataBarConditionalFormatData