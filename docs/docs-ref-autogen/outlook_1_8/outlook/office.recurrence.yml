### YamlMime:TSType
name: Office.Recurrence
uid: outlook!Office.Recurrence:interface
package: outlook!
fullName: Office.Recurrence
summary: >-
  L’objet fournit des méthodes pour obtenir et définir la modèle de récurrence des rendez-vous, mais uniquement la modèle de récurrence `Recurrence` des demandes de réunion. Il aura un dictionnaire avec les clés suivantes : `seriesTime`<!-- -->, `recurrenceType`<!-- -->, `recurrenceProperties`<!-- -->et `recurrenceTimeZone` (facultatif).


  \[ [Jeu d’API : Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]
remarks: >-
  **[Niveau d’autorisation minimal](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**:`ReadItem`


  **[Mode Outlook applicable](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**  : Rédiger ou Lire


  **États**


  <table> <tr> <th>État</th> <th>Modifiable ?</th> <th>Consultable ?</th> </tr> <tr> <td>Organisateur de rendez-vous - Série de composition</td> <td>Oui (setAsync)</td> <td>Oui (getAsync)</td> </tr> <tr> <td>Organisateur de rendez-vous - Instance de composition</td> <td>Non (setAsync renvoie une erreur)</td> <td>Oui (getAsync)</td> </tr> <tr> <td>Participant au rendez-vous - Série de lecture</td> <td>Non (setAsync non disponible)</td> <td>Oui (item.recurrence)</td> </tr> <tr> <td>Participant au rendez-vous - Instance de lecture</td> <td>Non (setAsync non disponible)</td> <td>Oui (item.recurrence)</td> </tr> <tr> <td>Demande de réunion - Série de lecture</td> <td>Non (setAsync non disponible)</td> <td>Oui (item.recurrence)</td> </tr> <tr> <td>Demande de réunion - Instance de lecture</td> <td>Non (setAsync non disponible)</td> <td>Oui (item.recurrence)</td> </tr> </table>
isPreview: false
isDeprecated: false
type: interface
properties:
- name: recurrenceProperties
  uid: outlook!Office.Recurrence#recurrenceProperties:member
  package: outlook!
  fullName: recurrenceProperties
  summary: >-
    Obtient ou définit les propriétés de la série de rendez-vous périodiques.


    \[ [Jeu d’API : Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]
  remarks: >-
    **[Niveau d’autorisation minimal](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**:`ReadItem`


    **[Mode Outlook applicable](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**  : Rédiger ou Lire
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'recurrenceProperties?: RecurrenceProperties;'
    return:
      type: <xref uid="outlook!Office.RecurrenceProperties:interface" />
- name: recurrenceTimeZone
  uid: outlook!Office.Recurrence#recurrenceTimeZone:member
  package: outlook!
  fullName: recurrenceTimeZone
  summary: >-
    Obtient ou définit les propriétés de la série de rendez-vous périodiques.


    \[ [Jeu d’API : Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]
  remarks: >-
    **[Niveau d’autorisation minimal](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**:`ReadItem`


    **[Mode Outlook applicable](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**  : Rédiger ou Lire
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'recurrenceTimeZone?: RecurrenceTimeZone;'
    return:
      type: <xref uid="outlook!Office.RecurrenceTimeZone:interface" />
- name: recurrenceType
  uid: outlook!Office.Recurrence#recurrenceType:member
  package: outlook!
  fullName: recurrenceType
  summary: >-
    Obtient ou définit le type de la série de rendez-vous périodiques.


    \[ [Jeu d’API : Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]
  remarks: >-
    **[Niveau d’autorisation minimal](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**:`ReadItem`


    **[Mode Outlook applicable](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**  : Rédiger ou Lire
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'recurrenceType: MailboxEnums.RecurrenceType | string;'
    return:
      type: <xref uid="outlook!Office.MailboxEnums.RecurrenceType:enum" /> | string
- name: seriesTime
  uid: outlook!Office.Recurrence#seriesTime:member
  package: outlook!
  fullName: seriesTime
  summary: >-
    [L’objet SeriesTime](xref:outlook!Office.SeriesTime:interface) vous permet de gérer les dates de début et de fin de la série de rendez-vous périodiques et les heures de début et de fin habituelles des instances. **Cet objet n’est pas en heure UTC.** Au lieu de cela, elle est définie dans le fuseau horaire spécifié par la valeur ou définie par défaut sur le fuseau `recurrenceTimeZone` horaire de l’élément.


    \[ [Jeu d’API : Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]
  remarks: >-
    **[Niveau d’autorisation minimal](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**:`ReadItem`


    **[Mode Outlook applicable](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**  : Rédiger ou Lire
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'seriesTime: SeriesTime;'
    return:
      type: <xref uid="outlook!Office.SeriesTime:interface" />
methods:
- name: getAsync(options, callback)
  uid: outlook!Office.Recurrence#getAsync:member(1)
  package: outlook!
  fullName: getAsync(options, callback)
  summary: >-
    Renvoie l’objet de récurrence actuel d’une série de rendez-vous.


    Cette méthode renvoie l’objet `Recurrence` entier de la série de rendez-vous.


    \[ [Jeu d’API : Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]
  remarks: >-
    **[Niveau d’autorisation minimal](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**:`ReadItem`


    **[Mode Outlook applicable](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**  : Rédiger ou Lire


    #### <a name="examples"></a>Exemples


    ```javascript

    // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/outlook/50-recurrence/get-set-recurrence-appointment-organizer.yaml

    Office.context.mailbox.item.recurrence.getAsync(function(asyncResult) {
      if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
        var recurrence = asyncResult.value;
        if (recurrence === null) {
          console.log("This is a single appointment.");
        } else {
          console.log(`Recurrence pattern: ${JSON.stringify(recurrence)}`);
        }
      } else {
        console.error(asyncResult.error);
      }
    });

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getAsync(options: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<Recurrence>) => void): void;'
    parameters:
    - id: options
      description: 'Littéral d’objet contenant une ou plusieurs des propriétés suivantes. `asyncContext`<!-- -->: les développeurs peuvent fournir n’importe quel objet à accéder dans la méthode de rappel.'
      type: <xref uid="office!Office.AsyncContextOptions:interface" />
    - id: callback
      description: Facultatif. Une fois la méthode terminée, la fonction passée dans le paramètre `callback` est appelée avec un seul paramètre, `asyncResult`<!-- -->, qui est un `Office.AsyncResult` objet. La `value` propriété du résultat est un `Recurrence` objet.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;<xref uid="outlook!Office.Recurrence:interface" />&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: getAsync(callback)
  uid: outlook!Office.Recurrence#getAsync:member(2)
  package: outlook!
  fullName: getAsync(callback)
  summary: >-
    Renvoie l’objet de récurrence actuel d’une série de rendez-vous.


    Cette méthode renvoie l’objet `Recurrence` entier de la série de rendez-vous.


    \[ [Jeu d’API : Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]
  remarks: >-
    **[Niveau d’autorisation minimal](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**:`ReadItem`


    **[Mode Outlook applicable](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**  : Rédiger ou Lire
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getAsync(callback?: (asyncResult: Office.AsyncResult<Recurrence>) => void): void;'
    parameters:
    - id: callback
      description: Facultatif. Une fois la méthode terminée, la fonction passée dans le paramètre `callback` est appelée avec un seul paramètre, `asyncResult`<!-- -->, qui est un `Office.AsyncResult` objet. La `value` propriété du résultat est un `Recurrence` objet.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;<xref uid="outlook!Office.Recurrence:interface" />&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: setAsync(recurrencePattern, options, callback)
  uid: outlook!Office.Recurrence#setAsync:member(1)
  package: outlook!
  fullName: setAsync(recurrencePattern, options, callback)
  summary: >-
    Définit la modèle de récurrence d’une série de rendez-vous.


    **Remarque**: `setAsync` ne doit être disponible que pour les éléments de série et non pour les éléments d’instance.


    \[ [Jeu d’API : Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]
  remarks: >-
    **[Niveau d’autorisation minimal](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**:`ReadWriteItem`


    **[Mode Outlook applicable](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->**: Composer


    **Erreurs**:


    - `InvalidEndTime`<!-- -->: l’heure de fin du rendez-vous est avant son heure de début.


    #### <a name="examples"></a>Exemples


    ```javascript

    // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/outlook/50-recurrence/get-set-recurrence-appointment-organizer.yaml

    // Important: Can only set the recurrence pattern of an appointment series.


    var currentDate = new Date();

    let seriesTimeObject : Office.SeriesTime;

    // Set series start date to tomorrow.

    seriesTimeObject.setStartDate(
      currentDate.getFullYear(),
      currentDate.getMonth(),
      currentDate.getDay() + 1
    );

    // Set series end date to 1 month from now.

    seriesTimeObject.setEndDate(
      currentDate.getFullYear(),
      currentDate.getMonth() + 1,
      currentDate.getDay()
    );

    // Set start time to 1:30 PM.

    seriesTimeObject.setStartTime(13, 30);

    // Set duration to 30 minutes.

    seriesTimeObject.setDuration(30);


    let pattern : Office.Recurrence = {
      seriesTime: seriesTimeObject,
      recurrenceType: "weekly",
      recurrenceProperties: { interval: 1, days: ["tue", "thu"], firstDayOfWeek: "sun" },
      recurrenceTimeZone: { name: "Pacific Standard Time" }
    };


    Office.context.mailbox.item.recurrence.setAsync(pattern, (asyncResult) => {
      if (asyncResult.status !== Office.AsyncResultStatus.Succeeded) {
        console.error(`Failed to set recurrence. Error: ${asyncResult.error.message}`);
        return;
      }
      console.log(`Succeeded in setting recurrence pattern ${JSON.stringify(pattern)}`);
    });

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setAsync(recurrencePattern: Recurrence, options: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    parameters:
    - id: recurrencePattern
      description: Objet de récurrence.
      type: <xref uid="outlook!Office.Recurrence:interface" />
    - id: options
      description: 'Littéral d’objet contenant une ou plusieurs des propriétés suivantes. `asyncContext`<!-- -->: les développeurs peuvent fournir n’importe quel objet à accéder dans la méthode de rappel.'
      type: <xref uid="office!Office.AsyncContextOptions:interface" />
    - id: callback
      description: Facultatif. Une fois la méthode terminée, la fonction passée dans le paramètre `callback` est appelée avec un seul paramètre, `asyncResult`<!-- -->, qui est un `Office.AsyncResult` objet.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: setAsync(recurrencePattern, callback)
  uid: outlook!Office.Recurrence#setAsync:member(2)
  package: outlook!
  fullName: setAsync(recurrencePattern, callback)
  summary: >-
    Définit la modèle de récurrence d’une série de rendez-vous.


    **Remarque**: `setAsync` ne doit être disponible que pour les éléments de série et non pour les éléments d’instance.


    \[ [Jeu d’API : Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]
  remarks: >-
    **[Niveau d’autorisation minimal](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**:`ReadWriteItem`


    **[Mode Outlook applicable](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->**: Composer


    **Erreurs**:


    - `InvalidEndTime`<!-- -->: l’heure de fin du rendez-vous est avant son heure de début.
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setAsync(recurrencePattern: Recurrence, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    parameters:
    - id: recurrencePattern
      description: Objet de récurrence.
      type: <xref uid="outlook!Office.Recurrence:interface" />
    - id: callback
      description: Facultatif. Une fois la méthode terminée, la fonction passée dans le paramètre `callback` est appelée avec un seul paramètre, `asyncResult`<!-- -->, qui est un `Office.AsyncResult` objet.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: 5664a1b416a2bdd23f95864cae287f5ec69d7d07
  ms.sourcegitcommit: d0f7e3d564e90cdff464157440c36ad19fa526f0
  ms.translationtype: MT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 04/09/2021
  ms.locfileid: "51658825"
