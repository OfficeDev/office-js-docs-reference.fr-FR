### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.RangeCollection:class'
    summary: "<span data-ttu-id=\"fce6d-101\">\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"fce6d-101\">\\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: Excel.RangeCollection
    fullName: Excel.RangeCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.RangeCollection#context:member'
      - 'excel!Excel.RangeCollection#getCount:member(1)'
      - 'excel!Excel.RangeCollection#getItemAt:member(1)'
      - 'excel!Excel.RangeCollection#items:member'
      - 'excel!Excel.RangeCollection#load:member(1)'
      - 'excel!Excel.RangeCollection#load:member(2)'
      - 'excel!Excel.RangeCollection#load:member(3)'
      - 'excel!Excel.RangeCollection#toJSON:member(1)'
  - uid: 'excel!Excel.RangeCollection#context:member'
    summary: <span data-ttu-id="fce6d-102">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="fce6d-102">The request context associated with the object.</span></span> <span data-ttu-id="fce6d-103">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="fce6d-103">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.RangeCollection#getCount:member(1)'
    summary: "<span data-ttu-id=\"fce6d-104\">Renvoie le nombre de pages de la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fce6d-104\">Returns the number of ranges in the RangeCollection.</span></span>\n\n<span data-ttu-id=\"fce6d-105\">\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"fce6d-105\">\\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.RangeCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.RangeCollection#getItemAt:member(1)'
    summary: "<span data-ttu-id=\"fce6d-106\">Renvoie la plage d’objet selon sa position dans la RangeCollection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fce6d-106\">Returns the range object based on its position in the RangeCollection.</span></span>\n\n<span data-ttu-id=\"fce6d-107\">\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"fce6d-107\">\\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: ''
      parameters:
        - id: index
          description: <span data-ttu-id="fce6d-108">Valeur d’index de l’objet de plage à récupérer.</span><span class="sxs-lookup"><span data-stu-id="fce6d-108">Index value of the range object to be retrieved.</span></span> <span data-ttu-id="fce6d-109">Avec indice zéro.</span><span class="sxs-lookup"><span data-stu-id="fce6d-109">Zero-indexed.</span></span>
          type:
            - number
  - uid: 'excel!Excel.RangeCollection#items:member'
    summary: <span data-ttu-id="fce6d-110">Obtient l’élément enfant chargé dans cette collection de sites.</span><span class="sxs-lookup"><span data-stu-id="fce6d-110">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Range[];'
      return:
        type:
          - 'excel!Excel.RangeCollection#items~0:complex'
  - uid: 'excel!Excel.RangeCollection#load:member(1)'
    summary: "<span data-ttu-id=\"fce6d-111\">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fce6d-111\">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id=\"fce6d-112\">Vous devez appeler «\_context.sync()\_» avant de lire les propriétés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fce6d-112\">You must call \"context.sync()\" before reading the properties.</span></span>"
    remarks: "<span data-ttu-id=\"fce6d-113\">En plus de cette signature, cette méthode possède les signatures suivantes\_:</span><span class=\"sxs-lookup\"><span data-stu-id=\"fce6d-113\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"fce6d-114\">`load(option?: string | string[]): Excel.RangeCollection`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fce6d-114\">`load(option?: string | string[]): Excel.RangeCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>\n\n<span data-ttu-id=\"fce6d-115\">`load(option?: { select?: string; expand?: string; }): Excel.RangeCollection`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fce6d-115\">`load(option?: { select?: string; expand?: string; }): Excel.RangeCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"fce6d-116\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeCollection`-Uniquement disponible sur les types de collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fce6d-116\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeCollection` - Only available on collection types.</span></span> <span data-ttu-id=\"fce6d-117\">Elle est similaire à la signature précédente.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fce6d-117\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"fce6d-118\">Option. Top indique le nombre maximal d’éléments de collection qui peuvent être inclus dans le résultat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fce6d-118\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"fce6d-119\">Option. Skip indique le nombre d’éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fce6d-119\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"fce6d-120\">Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d’éléments.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fce6d-120\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>"
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.RangeCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.RangeCollection;'
      return:
        type:
          - 'excel!Excel.RangeCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.RangeCollection#load~0:complex'
  - uid: 'excel!Excel.RangeCollection#load:member(2)'
    summary: <span data-ttu-id="fce6d-121">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="fce6d-121">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="fce6d-122">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="fce6d-122">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.RangeCollection;'
      return:
        type:
          - 'excel!Excel.RangeCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="fce6d-123">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="fce6d-123">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.RangeCollection#load:member(3)'
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.RangeCollection;'
      return:
        type:
          - 'excel!Excel.RangeCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.RangeCollection#toJSON:member(1)'
    summary: "<span data-ttu-id=\"fce6d-124\">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class=\"sxs-lookup\"><span data-stu-id=\"fce6d-124\">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id=\"fce6d-125\">.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fce6d-125\"></span></span> <span data-ttu-id=\"fce6d-126\">(`JSON.stringify`</span><span class=\"sxs-lookup\"><span data-stu-id=\"fce6d-126\"></span></span><!-- --><span data-ttu-id=\"fce6d-127\">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que `Excel.RangeCollection` l’objet d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.RangeCollectionData`</span><span class=\"sxs-lookup\"><span data-stu-id=\"fce6d-127\">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.RangeCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.RangeCollectionData`</span></span><!-- --><span data-ttu-id=\"fce6d-128\">) qui contient un tableau «\_éléments\_» avec des copies superficielles de toutes les propriétés chargées des éléments de la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fce6d-128\">) that contains an \"items\" array with shallow copies of any loaded properties from the collection's items.</span></span>"
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.RangeCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.RangeCollectionData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.RangeCollection#getCount~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel!Excel.Range:class'
    name: Excel.Range
  - uid: 'excel!Excel.RangeCollection#items~0:complex'
    name: 'Excel.Range[]'
    fullName: 'Excel.Range[]'
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Excel.Range
        fullName: Excel.Range
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.RangeCollection:class'
    name: Excel.RangeCollection
  - uid: 'excel!Excel.RangeCollection#load~0:complex'
    name: Excel.Interfaces.RangeCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.RangeCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.RangeCollectionLoadOptions:interface'
        name: Excel.Interfaces.RangeCollectionLoadOptions
        fullName: Excel.Interfaces.RangeCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'excel!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.Interfaces.RangeCollectionData:interface'
    name: Excel.Interfaces.RangeCollectionData