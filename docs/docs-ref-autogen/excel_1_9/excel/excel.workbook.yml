### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.Workbook:class'
    summary: "Workbook est l’objet de niveau supérieur qui contient des objets Workbook connexes tels que des feuilles de calcul, des tableaux, des plages, etc. Pour en savoir plus sur le modèle objet Workbook, consultez [utiliser des classeurs à l’aide de l’API JavaScript pour Excel](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-workbooks)<!-- -->.\n\n\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: Excel.Workbook
    fullName: Excel.Workbook
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.Workbook#application:member'
      - 'excel!Excel.Workbook#autoSave:member'
      - 'excel!Excel.Workbook#bindings:member'
      - 'excel!Excel.Workbook#calculationEngineVersion:member'
      - 'excel!Excel.Workbook#chartDataPointTrack:member'
      - 'excel!Excel.Workbook#context:member'
      - 'excel!Excel.Workbook#customXmlParts:member'
      - 'excel!Excel.Workbook#dataConnections:member'
      - 'excel!Excel.Workbook#functions:member'
      - 'excel!Excel.Workbook#getActiveCell:member(1)'
      - 'excel!Excel.Workbook#getActiveChart:member(1)'
      - 'excel!Excel.Workbook#getActiveChartOrNullObject:member(1)'
      - 'excel!Excel.Workbook#getIsActiveCollabSession:member(1)'
      - 'excel!Excel.Workbook#getSelectedRange:member(1)'
      - 'excel!Excel.Workbook#getSelectedRanges:member(1)'
      - 'excel!Excel.Workbook#isDirty:member'
      - 'excel!Excel.Workbook#load:member(1)'
      - 'excel!Excel.Workbook#load:member(2)'
      - 'excel!Excel.Workbook#load:member(3)'
      - 'excel!Excel.Workbook#name:member'
      - 'excel!Excel.Workbook#names:member'
      - 'excel!Excel.Workbook#onAutoSaveSettingChanged:member'
      - 'excel!Excel.Workbook#onSelectionChanged:member'
      - 'excel!Excel.Workbook#pivotTables:member'
      - 'excel!Excel.Workbook#previouslySaved:member'
      - 'excel!Excel.Workbook#properties:member'
      - 'excel!Excel.Workbook#protection:member'
      - 'excel!Excel.Workbook#readOnly:member'
      - 'excel!Excel.Workbook#set:member(1)'
      - 'excel!Excel.Workbook#set:member(2)'
      - 'excel!Excel.Workbook#settings:member'
      - 'excel!Excel.Workbook#styles:member'
      - 'excel!Excel.Workbook#tables:member'
      - 'excel!Excel.Workbook#toJSON:member(1)'
      - 'excel!Excel.Workbook#usePrecisionAsDisplayed:member'
      - 'excel!Excel.Workbook#worksheets:member'
  - uid: 'excel!Excel.Workbook#application:member'
    summary: "Représente l’instance de l’application Excel qui contient ce classeur.\n\n\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: application
    fullName: application
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly application: Excel.Application;'
      return:
        type:
          - 'excel!Excel.Application:class'
  - uid: 'excel!Excel.Workbook#autoSave:member'
    summary: "Indique si le classeur est en mode d’enregistrement automatique.\n\n\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: autoSave
    fullName: autoSave
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly autoSave: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Workbook#bindings:member'
    summary: "Représente une collection de liaisons appartenant au classeur.\n\n\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: bindings
    fullName: bindings
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly bindings: Excel.BindingCollection;'
      return:
        type:
          - 'excel!Excel.BindingCollection:class'
  - uid: 'excel!Excel.Workbook#calculationEngineVersion:member'
    summary: "Renvoie un nombre sur la version de moteur de calcul Excel.\n\n\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: calculationEngineVersion
    fullName: calculationEngineVersion
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly calculationEngineVersion: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.Workbook#chartDataPointTrack:member'
    summary: "True si tous les graphiques dans le classeur suivent les points de données réelles auquel qu’il sont joints. False si les graphiques effectuent le suivi de l’index des points de données.\n\n\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: chartDataPointTrack
    fullName: chartDataPointTrack
    langs:
      - typeScript
    type: property
    syntax:
      content: 'chartDataPointTrack: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Workbook#context:member'
    summary: Contexte de demande associé à l’objet. Cette opération connecte le processus du complément au processus de l’application hôte Office.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.Workbook#customXmlParts:member'
    summary: "Représente la collection de parties XML personnalisées contenues dans ce classeur.\n\n\\[[Ensemble d’API\_: ExcelApi 1,5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: customXmlParts
    fullName: customXmlParts
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly customXmlParts: Excel.CustomXmlPartCollection;'
      return:
        type:
          - 'excel!Excel.CustomXmlPartCollection:class'
  - uid: 'excel!Excel.Workbook#dataConnections:member'
    summary: "Représente toutes les connexions de données du classeur.\n\n\\[[Ensemble d’API\_: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: dataConnections
    fullName: dataConnections
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly dataConnections: Excel.DataConnectionCollection;'
      return:
        type:
          - 'excel!Excel.DataConnectionCollection:class'
  - uid: 'excel!Excel.Workbook#functions:member'
    summary: "Représente une collection de fonctions de feuille de calcul qui peuvent être utilisées pour le calcul.\n\n\\[[Ensemble d’API\_: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: functions
    fullName: functions
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly functions: Excel.Functions;'
      return:
        type:
          - 'excel!Excel.Functions:class'
  - uid: 'excel!Excel.Workbook#getActiveCell:member(1)'
    summary: "Obtient la cellule active du classeur.\n\n\\[[Ensemble d’API\_: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: getActiveCell()
    fullName: getActiveCell()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveCell(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a>Exemples

          ```typescript
          // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/50-workbook/workbook-get-active-cell.yaml
          await Excel.run(async (context) => {

              let myWorkbook = context.workbook;
              let activeCell = myWorkbook.getActiveCell();
              activeCell.load("address");

              await context.sync();
              
              console.log("The active cell is " + activeCell.address);
          });
          ```
  - uid: 'excel!Excel.Workbook#getActiveChart:member(1)'
    summary: "Obtient la feuille de calcul active du classeur. S’il n’y a aucun graphique actif, une `ItemNotFound` exception est générée.\n\n\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: getActiveChart()
    fullName: getActiveChart()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveChart(): Excel.Chart;'
      return:
        type:
          - 'excel!Excel.Chart:class'
        description: ''
  - uid: 'excel!Excel.Workbook#getActiveChartOrNullObject:member(1)'
    summary: "Obtient la feuille de calcul active du classeur. S’il n’y a aucun graphique actif, un objet null est renvoyé.\n\n\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: getActiveChartOrNullObject()
    fullName: getActiveChartOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveChartOrNullObject(): Excel.Chart;'
      return:
        type:
          - 'excel!Excel.Chart:class'
        description: ''
  - uid: 'excel!Excel.Workbook#getIsActiveCollabSession:member(1)'
    summary: "True si le classeur est modifié par plusieurs utilisateurs (co-création). Notez qu’il peut y avoir un délai entre le moment où l’état du classeur change et le moment où les modifications sont reflétées sur le résultat de la méthode.\n\n\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: getIsActiveCollabSession()
    fullName: getIsActiveCollabSession()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getIsActiveCollabSession(): OfficeExtension.ClientResult<boolean>;'
      return:
        type:
          - 'excel!Excel.Workbook#getIsActiveCollabSession~0:complex'
        description: ''
  - uid: 'excel!Excel.Workbook#getSelectedRange:member(1)'
    summary: "Obtient la plage unique actuellement sélectionnée du classeur. Si plusieurs plages sont sélectionnées, cette méthode génère une erreur.\n\n\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: getSelectedRange()
    fullName: getSelectedRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a>Exemples

          ```javascript
          Excel.run(function (ctx) { 
              var selectedRange = ctx.workbook.getSelectedRange();
              selectedRange.load('address');
              return ctx.sync().then(function() {
                      console.log(selectedRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.Workbook#getSelectedRanges:member(1)'
    summary: "Obtient la ou les plage(s) sélectionnée(s) actuelle(s) dans le classeur. Contrairement aux getSelectedRange(), cette méthode renvoie un objet RangeAreas qui représente toutes les plages sélectionnées.\n\n\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: getSelectedRanges()
    fullName: getSelectedRanges()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedRanges(): Excel.RangeAreas;'
      return:
        type:
          - 'excel!Excel.RangeAreas:class'
        description: |-


          #### <a name="examples"></a>Exemples

          ```typescript
          // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/42-range/range-areas.yaml
          await Excel.run(async (context) => {

              const selectedRanges = context.workbook.getSelectedRanges();
              selectedRanges.format.fill.color = "lightblue";

              await context.sync();
          })
          ```
  - uid: 'excel!Excel.Workbook#isDirty:member'
    summary: "Indique si des modifications ont été apportées depuis le dernier enregistrement du classeur. Vous pouvez définir cette propriété sur true si vous voulez fermer un classeur modifié sans l’enregistrer ou être invité à l’enregistrer.\n\n\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: isDirty
    fullName: isDirty
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isDirty: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Workbook#load:member(1)'
    summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.WorkbookLoadOptions): Excel.Workbook;'
      return:
        type:
          - 'excel!Excel.Workbook:class'
        description: ''
      parameters:
        - id: options
          description: Fournit des options pour les propriétés de l’objet à charger.
          type:
            - 'excel!Excel.Interfaces.WorkbookLoadOptions:interface'
  - uid: 'excel!Excel.Workbook#load:member(2)'
    summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Workbook;'
      return:
        type:
          - 'excel!Excel.Workbook:class'
        description: ''
      parameters:
        - id: propertyNames
          description: Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.Workbook#load:member(3)'
    summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.Workbook;
      return:
        type:
          - 'excel!Excel.Workbook:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '`propertyNamesAndPaths.select`est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et `propertyNamesAndPaths.expand` une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.Workbook#name:member'
    summary: "Obtient le nom du classeur.\n\n\\[[Ensemble d’API\_: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly name: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Workbook#names:member'
    summary: "Représente une collection d’éléments nommés portant sur le classeur (appelés plages et constantes).\n\n\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: names
    fullName: names
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly names: Excel.NamedItemCollection;'
      return:
        type:
          - 'excel!Excel.NamedItemCollection:class'
  - uid: 'excel!Excel.Workbook#onAutoSaveSettingChanged:member'
    summary: "Se produit lorsque le paramètre de l’enregistrement automatique est modifié dans le classeur.\n\n\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: onAutoSaveSettingChanged
    fullName: onAutoSaveSettingChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onAutoSaveSettingChanged: OfficeExtension.EventHandlers<Excel.WorkbookAutoSaveSettingChangedEventArgs>;'
      return:
        type:
          - 'excel!Excel.Workbook#onAutoSaveSettingChanged~0:complex'
  - uid: 'excel!Excel.Workbook#onSelectionChanged:member'
    summary: "Se produit quand la sélection change dans le document.\n\n\\[[Ensemble d’API\_: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: onSelectionChanged
    fullName: onSelectionChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Excel.SelectionChangedEventArgs>;'
      return:
        type:
          - 'excel!Excel.Workbook#onSelectionChanged~0:complex'
  - uid: 'excel!Excel.Workbook#pivotTables:member'
    summary: "Représente une collection de tableaux croisés dynamiques associés au classeur.\n\n\\[[Ensemble d’API\_: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: pivotTables
    fullName: pivotTables
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly pivotTables: Excel.PivotTableCollection;'
      return:
        type:
          - 'excel!Excel.PivotTableCollection:class'
  - uid: 'excel!Excel.Workbook#previouslySaved:member'
    summary: "Indique si le classeur a déjà été enregistré en local ou en ligne.\n\n\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: previouslySaved
    fullName: previouslySaved
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly previouslySaved: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Workbook#properties:member'
    summary: "Obtient les propriétés du classeur.\n\n\\[[Ensemble d’API\_: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: properties
    fullName: properties
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly properties: Excel.DocumentProperties;'
      return:
        type:
          - 'excel!Excel.DocumentProperties:class'
        description: |-


          #### <a name="examples"></a>Exemples

          ```typescript
          // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/26-document/properties.yaml
          await Excel.run(async (context) => {
              let titleValue = "Excel document properties API";
              let subjectValue = "Set and get document properties";
              let keywordsValue = "Set and get operations";
              let commentsValue = "This is an Excel document properties API code sample";
              let categoryValue = "Office Add-ins";
              let managerValue = "John";
              let companyValue = "Microsoft";

              let docProperties = context.workbook.properties;

              // Set the writeable document properties.
              docProperties.title = titleValue;
              docProperties.subject = subjectValue;
              docProperties.keywords = keywordsValue;
              docProperties.comments = commentsValue;
              docProperties.category = categoryValue;
              docProperties.manager = managerValue;
              docProperties.company = companyValue;

              await context.sync();

              console.log("Set the following document properties: title, subject, keywords, comments, category, manager, company.");
          });
          ```
  - uid: 'excel!Excel.Workbook#protection:member'
    summary: "Renvoie l’objet protection pour un classeur.\n\n\\[[Ensemble d’API\_: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: protection
    fullName: protection
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly protection: Excel.WorkbookProtection;'
      return:
        type:
          - 'excel!Excel.WorkbookProtection:class'
  - uid: 'excel!Excel.Workbook#readOnly:member'
    summary: "True si le classeur est ouvert en mode lecture seule.\n\n\\[[Ensemble d’API\_: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: readOnly
    fullName: readOnly
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly readOnly: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Workbook#set:member(1)'
    summary: 'Définit plusieurs propriétés d’un objet en même temps. Vous pouvez transmettre un objet plain avec les propriétés appropriées, ou un autre objet API du même type.'
    remarks: "Cette méthode est dotée de la signature supplémentaire suivante\_:\n\n`set(properties: Excel.Workbook): void`"
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.WorkbookUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: Objet JavaScript avec des propriétés qui sont structurées isomorphically vers les propriétés de l’objet sur lequel la méthode est appelée.
          type:
            - 'excel!Excel.Interfaces.WorkbookUpdateData:interface'
        - id: options
          description: Fournit une option permettant de supprimer les erreurs si l’objet Properties tente de définir des propriétés en lecture seule.
          type:
            - 'office!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.Workbook#set:member(2)'
    summary: 'Définit plusieurs propriétés de l’objet en même temps, en fonction d’un objet chargé existant.'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Workbook): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.Workbook:class'
  - uid: 'excel!Excel.Workbook#settings:member'
    summary: "Représente une collection d’objets Settings associés au classeur.\n\n\\[[Ensemble d’API\_: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: settings
    fullName: settings
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly settings: Excel.SettingCollection;'
      return:
        type:
          - 'excel!Excel.SettingCollection:class'
  - uid: 'excel!Excel.Workbook#styles:member'
    summary: "Représente une collection de styles associés au classeur.\n\n\\[[Ensemble d’API\_: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: styles
    fullName: styles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly styles: Excel.StyleCollection;'
      return:
        type:
          - 'excel!Excel.StyleCollection:class'
        description: |-


          #### <a name="examples"></a>Exemples

          ```typescript
          // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/42-range/style.yaml
          await Excel.run(async (context) => {
              let styles = context.workbook.styles;

              // Add a new style to the style collection.
              // Styles is in the Home tab ribbon.
              styles.add("Diagonal Orientation Style");
                    
              let newStyle = styles.getItem("Diagonal Orientation Style");
              
              // The "Diagonal Orientation Style" properties.
              newStyle.textOrientation = 38;
              newStyle.autoIndent = true;
              newStyle.includeProtection = true;
              newStyle.shrinkToFit = true;
              newStyle.locked = false;
              
              await context.sync();

              console.log("Successfully added a new style with diagonal orientation to the Home tab ribbon.");
          });
          ```
  - uid: 'excel!Excel.Workbook#tables:member'
    summary: "Représente une collection de tableaux associés au classeur.\n\n\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: tables
    fullName: tables
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly tables: Excel.TableCollection;'
      return:
        type:
          - 'excel!Excel.TableCollection:class'
  - uid: 'excel!Excel.Workbook#toJSON:member(1)'
    summary: 'Remplace la méthode JavaScript afin `toJSON()` de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, à son tour, appelle la `toJSON` méthode de l’objet qui lui est passé.) Tandis que l’objet Excel. Workbook d’origine est un objet API, la `toJSON` méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.WorkbookData`<!-- -->) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l’objet d’origine.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.WorkbookData;'
      return:
        type:
          - 'excel!Excel.Interfaces.WorkbookData:interface'
        description: ''
  - uid: 'excel!Excel.Workbook#usePrecisionAsDisplayed:member'
    summary: "True si les calculs réalisés dans ce classeur utiliseront uniquement la précision des nombres tels qu’ils sont affichés.  Les données perdent définitivement en précision lors du changement de cette propriété de false à true.\n\n\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: usePrecisionAsDisplayed
    fullName: usePrecisionAsDisplayed
    langs:
      - typeScript
    type: property
    syntax:
      content: 'usePrecisionAsDisplayed: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Workbook#worksheets:member'
    summary: "Représente une collection de feuilles de calcul associées au classeur.\n\n\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: worksheets
    fullName: worksheets
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheets: Excel.WorksheetCollection;'
      return:
        type:
          - 'excel!Excel.WorksheetCollection:class'
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.Application:class'
    name: Excel.Application
  - uid: 'excel!Excel.BindingCollection:class'
    name: Excel.BindingCollection
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.CustomXmlPartCollection:class'
    name: Excel.CustomXmlPartCollection
  - uid: 'excel!Excel.DataConnectionCollection:class'
    name: Excel.DataConnectionCollection
  - uid: 'excel!Excel.Functions:class'
    name: Excel.Functions
  - uid: 'excel!Excel.Range:class'
    name: Excel.Range
  - uid: 'excel!Excel.Chart:class'
    name: Excel.Chart
  - uid: 'excel!Excel.Workbook#getIsActiveCollabSession~0:complex'
    name: OfficeExtension.ClientResult<boolean>
    fullName: OfficeExtension.ClientResult<boolean>
    spec.typeScript:
      - uid: 'office!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <boolean>
        fullName: <boolean>
  - uid: 'excel!Excel.RangeAreas:class'
    name: Excel.RangeAreas
  - uid: 'excel!Excel.Workbook:class'
    name: Excel.Workbook
  - uid: 'excel!Excel.Interfaces.WorkbookLoadOptions:interface'
    name: Excel.Interfaces.WorkbookLoadOptions
  - uid: 'excel!Excel.NamedItemCollection:class'
    name: Excel.NamedItemCollection
  - uid: 'excel!Excel.Workbook#onAutoSaveSettingChanged~0:complex'
    name: OfficeExtension.EventHandlers<Excel.WorkbookAutoSaveSettingChangedEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.WorkbookAutoSaveSettingChangedEventArgs>
    spec.typeScript:
      - uid: 'office!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.WorkbookAutoSaveSettingChangedEventArgs:interface'
        name: Excel.WorkbookAutoSaveSettingChangedEventArgs
        fullName: Excel.WorkbookAutoSaveSettingChangedEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.Workbook#onSelectionChanged~0:complex'
    name: OfficeExtension.EventHandlers<Excel.SelectionChangedEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.SelectionChangedEventArgs>
    spec.typeScript:
      - uid: 'office!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.SelectionChangedEventArgs:interface'
        name: Excel.SelectionChangedEventArgs
        fullName: Excel.SelectionChangedEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.PivotTableCollection:class'
    name: Excel.PivotTableCollection
  - uid: 'excel!Excel.DocumentProperties:class'
    name: Excel.DocumentProperties
  - uid: 'excel!Excel.WorkbookProtection:class'
    name: Excel.WorkbookProtection
  - uid: 'excel!Excel.Interfaces.WorkbookUpdateData:interface'
    name: Interfaces.WorkbookUpdateData
  - uid: 'office!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.SettingCollection:class'
    name: Excel.SettingCollection
  - uid: 'excel!Excel.StyleCollection:class'
    name: Excel.StyleCollection
  - uid: 'excel!Excel.TableCollection:class'
    name: Excel.TableCollection
  - uid: 'excel!Excel.Interfaces.WorkbookData:interface'
    name: Excel.Interfaces.WorkbookData
  - uid: 'excel!Excel.WorksheetCollection:class'
    name: Excel.WorksheetCollection