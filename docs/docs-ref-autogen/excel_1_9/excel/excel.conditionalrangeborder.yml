### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ConditionalRangeBorder:class'
    summary: "<span data-ttu-id=\"0565b-101\">Cet objet représente la bordure d'un objet.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0565b-101\">Represents the border of an object.</span></span>\n\n<span data-ttu-id=\"0565b-102\">\\[[Ensemble d’API\_: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"0565b-102\">\\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: Excel.ConditionalRangeBorder
    fullName: Excel.ConditionalRangeBorder
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.ConditionalRangeBorder#color:member'
      - 'excel!Excel.ConditionalRangeBorder#context:member'
      - 'excel!Excel.ConditionalRangeBorder#load:member(1)'
      - 'excel!Excel.ConditionalRangeBorder#load:member(2)'
      - 'excel!Excel.ConditionalRangeBorder#load:member(3)'
      - 'excel!Excel.ConditionalRangeBorder#set:member(1)'
      - 'excel!Excel.ConditionalRangeBorder#set:member(2)'
      - 'excel!Excel.ConditionalRangeBorder#sideIndex:member'
      - 'excel!Excel.ConditionalRangeBorder#style:member'
      - 'excel!Excel.ConditionalRangeBorder#toJSON:member(1)'
  - uid: 'excel!Excel.ConditionalRangeBorder#color:member'
    summary: "<span data-ttu-id=\"0565b-103\">Code couleur HTML qui représente la couleur de la ligne de bordure, sous \\#la forme RRGGBB (par exemple, «\_FFA500\_») ou sous forme de couleur HTML nommée (par exemple, «\_orange\_»).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0565b-103\">HTML color code representing the color of the border line, of the form \\#RRGGBB (e.g. \"FFA500\") or as a named HTML color (e.g. \"orange\").</span></span>\n\n<span data-ttu-id=\"0565b-104\">\\[[Ensemble d’API\_: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"0565b-104\">\\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: color
    fullName: color
    langs:
      - typeScript
    type: property
    syntax:
      content: 'color: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.ConditionalRangeBorder#context:member'
    summary: <span data-ttu-id="0565b-105">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="0565b-105">The request context associated with the object.</span></span> <span data-ttu-id="0565b-106">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="0565b-106">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.ConditionalRangeBorder#load:member(1)'
    summary: <span data-ttu-id="0565b-107">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="0565b-107">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0565b-108">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="0565b-108">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.ConditionalRangeBorderLoadOptions): Excel.ConditionalRangeBorder;'
      return:
        type:
          - 'excel!Excel.ConditionalRangeBorder:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="0565b-109">Fournit des options pour les propriétés de l’objet à charger.</span><span class="sxs-lookup"><span data-stu-id="0565b-109">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.Interfaces.ConditionalRangeBorderLoadOptions:interface'
  - uid: 'excel!Excel.ConditionalRangeBorder#load:member(2)'
    summary: <span data-ttu-id="0565b-110">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="0565b-110">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0565b-111">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="0565b-111">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ConditionalRangeBorder;'
      return:
        type:
          - 'excel!Excel.ConditionalRangeBorder:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="0565b-112">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="0565b-112">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.ConditionalRangeBorder#load:member(3)'
    summary: <span data-ttu-id="0565b-113">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="0565b-113">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0565b-114">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="0565b-114">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.ConditionalRangeBorder;
      return:
        type:
          - 'excel!Excel.ConditionalRangeBorder:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="0565b-115">`propertyNamesAndPaths.select`est une chaîne délimitée par des virgules qui spécifie les propriétés à `propertyNamesAndPaths.expand` charger et une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="0565b-115">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.ConditionalRangeBorder#set:member(1)'
    summary: '<span data-ttu-id="0565b-116">Définit plusieurs propriétés d’un objet en même temps.</span><span class="sxs-lookup"><span data-stu-id="0565b-116">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="0565b-117">Vous pouvez transmettre un objet plain avec les propriétés appropriées, ou un autre objet API du même type.</span><span class="sxs-lookup"><span data-stu-id="0565b-117">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: "<span data-ttu-id=\"0565b-118\">Cette méthode est dotée de la signature supplémentaire suivante\_:</span><span class=\"sxs-lookup\"><span data-stu-id=\"0565b-118\">This method has the following additional signature:</span></span>\n\n`set(properties: Excel.ConditionalRangeBorder): void`"
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ConditionalRangeBorderUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="0565b-119">Objet JavaScript avec des propriétés qui sont structurées isomorphically vers les propriétés de l’objet sur lequel la méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="0565b-119">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'excel!Excel.Interfaces.ConditionalRangeBorderUpdateData:interface'
        - id: options
          description: <span data-ttu-id="0565b-120">Fournit une option permettant de supprimer les erreurs si l’objet Properties tente de définir des propriétés en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="0565b-120">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.ConditionalRangeBorder#set:member(2)'
    summary: '<span data-ttu-id="0565b-121">Définit plusieurs propriétés de l’objet en même temps, en fonction d’un objet chargé existant.</span><span class="sxs-lookup"><span data-stu-id="0565b-121">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.ConditionalRangeBorder): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.ConditionalRangeBorder:class'
  - uid: 'excel!Excel.ConditionalRangeBorder#sideIndex:member'
    summary: "<span data-ttu-id=\"0565b-122\">Valeur constante qui indique un côté spécifique de la bordure.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0565b-122\">Constant value that indicates the specific side of the border.</span></span> <span data-ttu-id=\"0565b-123\">Pour plus d’informations, voir Excel. ConditionalRangeBorderIndex.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0565b-123\">See Excel.ConditionalRangeBorderIndex for details.</span></span> <span data-ttu-id=\"0565b-124\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0565b-124\">Read-only.</span></span>\n\n<span data-ttu-id=\"0565b-125\">\\[[Ensemble d’API\_: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"0565b-125\">\\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: sideIndex
    fullName: sideIndex
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly sideIndex: Excel.ConditionalRangeBorderIndex | "EdgeTop" | "EdgeBottom" | "EdgeLeft" | "EdgeRight";'
      return:
        type:
          - 'excel!Excel.ConditionalRangeBorder#sideIndex~0:complex'
  - uid: 'excel!Excel.ConditionalRangeBorder#style:member'
    summary: "<span data-ttu-id=\"0565b-126\">L’une des constantes de style de ligne déterminant le style de ligne de la bordure.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0565b-126\">One of the constants of line style specifying the line style for the border.</span></span> <span data-ttu-id=\"0565b-127\">Pour plus d’informations, voir Excel. BorderLineStyle.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0565b-127\">See Excel.BorderLineStyle for details.</span></span>\n\n<span data-ttu-id=\"0565b-128\">\\[[Ensemble d’API\_: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"0565b-128\">\\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: Excel.ConditionalRangeBorderLineStyle | "None" | "Continuous" | "Dash" | "DashDot" | "DashDotDot" | "Dot";'
      return:
        type:
          - 'excel!Excel.ConditionalRangeBorder#style~0:complex'
  - uid: 'excel!Excel.ConditionalRangeBorder#toJSON:member(1)'
    summary: '<span data-ttu-id="0565b-129">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="0565b-129">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="0565b-130">.</span><span class="sxs-lookup"><span data-stu-id="0565b-130"></span></span> <span data-ttu-id="0565b-131">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="0565b-131"></span></span><!-- --><span data-ttu-id="0565b-132">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que l’objet Excel. ConditionalRangeBorder d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.ConditionalRangeBorderData`</span><span class="sxs-lookup"><span data-stu-id="0565b-132">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ConditionalRangeBorder object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ConditionalRangeBorderData`</span></span><!-- --><span data-ttu-id="0565b-133">) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l’objet d’origine.</span><span class="sxs-lookup"><span data-stu-id="0565b-133">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ConditionalRangeBorderData;'
      return:
        type:
          - 'excel!Excel.Interfaces.ConditionalRangeBorderData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.ConditionalRangeBorder:class'
    name: Excel.ConditionalRangeBorder
  - uid: 'excel!Excel.Interfaces.ConditionalRangeBorderLoadOptions:interface'
    name: Excel.Interfaces.ConditionalRangeBorderLoadOptions
  - uid: 'excel!Excel.Interfaces.ConditionalRangeBorderUpdateData:interface'
    name: Interfaces.ConditionalRangeBorderUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.ConditionalRangeBorder#sideIndex~0:complex'
    name: Excel.ConditionalRangeBorderIndex | "EdgeTop" | "EdgeBottom" | "EdgeLeft" | "EdgeRight"
    fullName: Excel.ConditionalRangeBorderIndex | "EdgeTop" | "EdgeBottom" | "EdgeLeft" | "EdgeRight"
    spec.typeScript:
      - uid: 'excel!Excel.ConditionalRangeBorderIndex:enum'
        name: Excel.ConditionalRangeBorderIndex
        fullName: Excel.ConditionalRangeBorderIndex
      - name: ' | "EdgeTop" | "EdgeBottom" | "EdgeLeft" | "EdgeRight"'
        fullName: ' | "EdgeTop" | "EdgeBottom" | "EdgeLeft" | "EdgeRight"'
  - uid: 'excel!Excel.ConditionalRangeBorder#style~0:complex'
    name: Excel.ConditionalRangeBorderLineStyle | "None" | "Continuous" | "Dash" | "DashDot" | "DashDotDot" | "Dot"
    fullName: Excel.ConditionalRangeBorderLineStyle | "None" | "Continuous" | "Dash" | "DashDot" | "DashDotDot" | "Dot"
    spec.typeScript:
      - uid: 'excel!Excel.ConditionalRangeBorderLineStyle:enum'
        name: Excel.ConditionalRangeBorderLineStyle
        fullName: Excel.ConditionalRangeBorderLineStyle
      - name: ' | "None" | "Continuous" | "Dash" | "DashDot" | "DashDotDot" | "Dot"'
        fullName: ' | "None" | "Continuous" | "Dash" | "DashDot" | "DashDotDot" | "Dot"'
  - uid: 'excel!Excel.Interfaces.ConditionalRangeBorderData:interface'
    name: Excel.Interfaces.ConditionalRangeBorderData