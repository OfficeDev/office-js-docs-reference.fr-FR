### YamlMime:UniversalReference
items:
  - uid: excel.Excel.Image
    summary: |-
      <span data-ttu-id="eafe7-101">Représente une image dans la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="eafe7-101">Represents an image in the worksheet.</span></span> <span data-ttu-id="eafe7-102">Pour obtenir l’objet Shape correspondant, utilisez image. Shape.</span><span class="sxs-lookup"><span data-stu-id="eafe7-102">To get the corresponding Shape object, use Image.shape.</span></span>

      <span data-ttu-id="eafe7-103">\[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="eafe7-103">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.Image
    fullName: Excel.Image
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.Image.context
      - excel.Excel.Image.format
      - excel.Excel.Image.id
      - excel.Excel.Image.load
      - excel.Excel.Image.load_1
      - excel.Excel.Image.load_2
      - excel.Excel.Image.shape
      - excel.Excel.Image.toJSON
  - uid: excel.Excel.Image.context
    summary: <span data-ttu-id="eafe7-104">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="eafe7-104">The request context associated with the object.</span></span> <span data-ttu-id="eafe7-105">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="eafe7-105">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.Image.format
    summary: |-
      <span data-ttu-id="eafe7-106">Renvoie le format de l’image.</span><span class="sxs-lookup"><span data-stu-id="eafe7-106">Returns the format of the image.</span></span> <span data-ttu-id="eafe7-107">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="eafe7-107">Read-only.</span></span>

      <span data-ttu-id="eafe7-108">\[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="eafe7-108">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly format: Excel.PictureFormat | "UNKNOWN" | "BMP" | "JPEG" | "GIF" | "PNG" | "SVG";'
      return:
        type:
          - Excel.PictureFormat | "UNKNOWN" | "BMP" | "JPEG" | "GIF" | "PNG" | "SVG"
        description: |-


          #### <a name="examples"></a><span data-ttu-id="eafe7-109">Exemples</span><span class="sxs-lookup"><span data-stu-id="eafe7-109">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Shapes");
              const image = sheet.shapes.getItem("Image").image;
              image.load("format");
              await context.sync();

              console.log("The image's format is: " + image.format);
              await context.sync();
          });
          ```
  - uid: excel.Excel.Image.id
    summary: |-
      <span data-ttu-id="eafe7-110">Représente l’identificateur de forme pour l’objet d’image.</span><span class="sxs-lookup"><span data-stu-id="eafe7-110">Represents the shape identifier for the image object.</span></span> <span data-ttu-id="eafe7-111">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="eafe7-111">Read-only.</span></span>

      <span data-ttu-id="eafe7-112">\[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="eafe7-112">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Image.load
    summary: "<span data-ttu-id=\"eafe7-113\">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"eafe7-113\">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id=\"eafe7-114\">Vous devez appeler «\_context.sync()\_» avant de lire les propriétés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"eafe7-114\">You must call \"context.sync()\" before reading the properties.</span></span>"
    remarks: |-
      <span data-ttu-id="eafe7-115">En plus de cette signature, cette méthode possède les signatures suivantes:</span><span class="sxs-lookup"><span data-stu-id="eafe7-115">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="eafe7-116">`load(option?: string | string[]): Excel.Image`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="eafe7-116">`load(option?: string | string[]): Excel.Image` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="eafe7-117">`load(option?: { select?: string; expand?: string; }): Excel.Image`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="eafe7-117">`load(option?: { select?: string; expand?: string; }): Excel.Image` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="eafe7-118">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Image`-Uniquement disponible sur les types de collection.</span><span class="sxs-lookup"><span data-stu-id="eafe7-118">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Image` - Only available on collection types.</span></span> <span data-ttu-id="eafe7-119">Elle est similaire à la signature précédente.</span><span class="sxs-lookup"><span data-stu-id="eafe7-119">It is similar to the preceding signature.</span></span> <span data-ttu-id="eafe7-120">Option. Top indique le nombre maximal d’éléments de collection qui peuvent être inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="eafe7-120">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="eafe7-121">Option. Skip indique le nombre d’éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="eafe7-121">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="eafe7-122">Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d’éléments.</span><span class="sxs-lookup"><span data-stu-id="eafe7-122">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ImageLoadOptions): Excel.Image;'
      return:
        type:
          - excel.Excel.Image
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.ImageLoadOptions
  - uid: excel.Excel.Image.load_1
    summary: <span data-ttu-id="eafe7-123">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="eafe7-123">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="eafe7-124">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="eafe7-124">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Image;'
      return:
        type:
          - excel.Excel.Image
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="eafe7-125">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="eafe7-125">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.Image.load_2
    summary: <span data-ttu-id="eafe7-126">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="eafe7-126">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="eafe7-127">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="eafe7-127">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Image;'
      return:
        type:
          - excel.Excel.Image
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="eafe7-128">Où propertyNamesAndPaths. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et propertyNamesAndPaths. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="eafe7-128">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.Image.shape
    summary: |-
      <span data-ttu-id="eafe7-129">Renvoie l’objet de la Forme associé à la l’image.</span><span class="sxs-lookup"><span data-stu-id="eafe7-129">Returns the Shape object associated with the image.</span></span> <span data-ttu-id="eafe7-130">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="eafe7-130">Read-only.</span></span>

      <span data-ttu-id="eafe7-131">\[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="eafe7-131">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: shape
    fullName: shape
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly shape: Excel.Shape;'
      return:
        type:
          - excel.Excel.Shape
  - uid: excel.Excel.Image.toJSON
    summary: '<span data-ttu-id="eafe7-132">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="eafe7-132">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="eafe7-133">.</span><span class="sxs-lookup"><span data-stu-id="eafe7-133"></span></span> <span data-ttu-id="eafe7-134">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="eafe7-134"></span></span><!-- --><span data-ttu-id="eafe7-135">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que l’objet Excel. image d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.ImageData`</span><span class="sxs-lookup"><span data-stu-id="eafe7-135">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Image object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ImageData`</span></span><!-- --><span data-ttu-id="eafe7-136">) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l’objet d’origine.</span><span class="sxs-lookup"><span data-stu-id="eafe7-136">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ImageData;'
      return:
        type:
          - excel.Excel.Interfaces.ImageData
        description: ''