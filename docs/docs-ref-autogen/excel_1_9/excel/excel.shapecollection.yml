### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ShapeCollection:class'
    summary: "<span data-ttu-id=\"303b5-101\">Représente une collection de toutes les formes de la feuille de calcul.</span><span class=\"sxs-lookup\"><span data-stu-id=\"303b5-101\">Represents a collection of all the shapes in the worksheet.</span></span>\n\n<span data-ttu-id=\"303b5-102\">\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"303b5-102\">\\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: Excel.ShapeCollection
    fullName: Excel.ShapeCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.ShapeCollection#addGeometricShape:member(1)'
      - 'excel!Excel.ShapeCollection#addGeometricShape:member(2)'
      - 'excel!Excel.ShapeCollection#addGroup:member(1)'
      - 'excel!Excel.ShapeCollection#addImage:member(1)'
      - 'excel!Excel.ShapeCollection#addLine:member(1)'
      - 'excel!Excel.ShapeCollection#addLine:member(2)'
      - 'excel!Excel.ShapeCollection#addTextBox:member(1)'
      - 'excel!Excel.ShapeCollection#context:member'
      - 'excel!Excel.ShapeCollection#getCount:member(1)'
      - 'excel!Excel.ShapeCollection#getItem:member(1)'
      - 'excel!Excel.ShapeCollection#getItemAt:member(1)'
      - 'excel!Excel.ShapeCollection#items:member'
      - 'excel!Excel.ShapeCollection#load:member(1)'
      - 'excel!Excel.ShapeCollection#load:member(2)'
      - 'excel!Excel.ShapeCollection#load:member(3)'
      - 'excel!Excel.ShapeCollection#toJSON:member(1)'
  - uid: 'excel!Excel.ShapeCollection#addGeometricShape:member(1)'
    summary: "<span data-ttu-id=\"303b5-103\">Ajoute une forme géométrique à la feuille de calcul.</span><span class=\"sxs-lookup\"><span data-stu-id=\"303b5-103\">Adds a geometric shape to the worksheet.</span></span> <span data-ttu-id=\"303b5-104\">Renvoie un objet Shape qui représente la nouvelle forme.</span><span class=\"sxs-lookup\"><span data-stu-id=\"303b5-104\">Returns a Shape object that represents the new shape.</span></span>\n\n<span data-ttu-id=\"303b5-105\">\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"303b5-105\">\\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: addGeometricShape(geometricShapeType)
    fullName: addGeometricShape(geometricShapeType)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addGeometricShape(geometricShapeType: Excel.GeometricShapeType): Excel.Shape;'
      return:
        type:
          - 'excel!Excel.Shape:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="303b5-106">Exemples</span><span class="sxs-lookup"><span data-stu-id="303b5-106">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Shapes");
              const shape = sheet.shapes.addGeometricShape(Excel.GeometricShapeType.hexagon);
              shape.left = 5;
              shape.top = 5;
              shape.height = 175;
              shape.width = 200;
              await context.sync();
          });
          ```
      parameters:
        - id: geometricShapeType
          description: <span data-ttu-id="303b5-107">Représente le type de la forme géométrique.</span><span class="sxs-lookup"><span data-stu-id="303b5-107">Represents the type of the geometric shape.</span></span> <span data-ttu-id="303b5-108">Voir Excel.GeometricShapeType pour les détails.</span><span class="sxs-lookup"><span data-stu-id="303b5-108">See Excel.GeometricShapeType for details.</span></span>
          type:
            - 'excel!Excel.GeometricShapeType:enum'
  - uid: 'excel!Excel.ShapeCollection#addGeometricShape:member(2)'
    summary: "<span data-ttu-id=\"303b5-109\">Ajoute une forme géométrique à la feuille de calcul.</span><span class=\"sxs-lookup\"><span data-stu-id=\"303b5-109\">Adds a geometric shape to the worksheet.</span></span> <span data-ttu-id=\"303b5-110\">Renvoie un objet Shape qui représente la nouvelle forme.</span><span class=\"sxs-lookup\"><span data-stu-id=\"303b5-110\">Returns a Shape object that represents the new shape.</span></span>\n\n<span data-ttu-id=\"303b5-111\">\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"303b5-111\">\\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: addGeometricShape(geometricShapeTypeString)
    fullName: addGeometricShape(geometricShapeTypeString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addGeometricShape(geometricShapeTypeString: "LineInverse" | "Triangle" | "RightTriangle" | "Rectangle" | "Diamond" | "Parallelogram" | "Trapezoid" | "NonIsoscelesTrapezoid" | "Pentagon" | "Hexagon" | "Heptagon" | "Octagon" | "Decagon" | "Dodecagon" | "Star4" | "Star5" | "Star6" | "Star7" | "Star8" | "Star10" | "Star12" | "Star16" | "Star24" | "Star32" | "RoundRectangle" | "Round1Rectangle" | "Round2SameRectangle" | "Round2DiagonalRectangle" | "SnipRoundRectangle" | "Snip1Rectangle" | "Snip2SameRectangle" | "Snip2DiagonalRectangle" | "Plaque" | "Ellipse" | "Teardrop" | "HomePlate" | "Chevron" | "PieWedge" | "Pie" | "BlockArc" | "Donut" | "NoSmoking" | "RightArrow" | "LeftArrow" | "UpArrow" | "DownArrow" | "StripedRightArrow" | "NotchedRightArrow" | "BentUpArrow" | "LeftRightArrow" | "UpDownArrow" | "LeftUpArrow" | "LeftRightUpArrow" | "QuadArrow" | "LeftArrowCallout" | "RightArrowCallout" | "UpArrowCallout" | "DownArrowCallout" | "LeftRightArrowCallout" | "UpDownArrowCallout" | "QuadArrowCallout" | "BentArrow" | "UturnArrow" | "CircularArrow" | "LeftCircularArrow" | "LeftRightCircularArrow" | "CurvedRightArrow" | "CurvedLeftArrow" | "CurvedUpArrow" | "CurvedDownArrow" | "SwooshArrow" | "Cube" | "Can" | "LightningBolt" | "Heart" | "Sun" | "Moon" | "SmileyFace" | "IrregularSeal1" | "IrregularSeal2" | "FoldedCorner" | "Bevel" | "Frame" | "HalfFrame" | "Corner" | "DiagonalStripe" | "Chord" | "Arc" | "LeftBracket" | "RightBracket" | "LeftBrace" | "RightBrace" | "BracketPair" | "BracePair" | "Callout1" | "Callout2" | "Callout3" | "AccentCallout1" | "AccentCallout2" | "AccentCallout3" | "BorderCallout1" | "BorderCallout2" | "BorderCallout3" | "AccentBorderCallout1" | "AccentBorderCallout2" | "AccentBorderCallout3" | "WedgeRectCallout" | "WedgeRRectCallout" | "WedgeEllipseCallout" | "CloudCallout" | "Cloud" | "Ribbon" | "Ribbon2" | "EllipseRibbon" | "EllipseRibbon2" | "LeftRightRibbon" | "VerticalScroll" | "HorizontalScroll" | "Wave" | "DoubleWave" | "Plus" | "FlowChartProcess" | "FlowChartDecision" | "FlowChartInputOutput" | "FlowChartPredefinedProcess" | "FlowChartInternalStorage" | "FlowChartDocument" | "FlowChartMultidocument" | "FlowChartTerminator" | "FlowChartPreparation" | "FlowChartManualInput" | "FlowChartManualOperation" | "FlowChartConnector" | "FlowChartPunchedCard" | "FlowChartPunchedTape" | "FlowChartSummingJunction" | "FlowChartOr" | "FlowChartCollate" | "FlowChartSort" | "FlowChartExtract" | "FlowChartMerge" | "FlowChartOfflineStorage" | "FlowChartOnlineStorage" | "FlowChartMagneticTape" | "FlowChartMagneticDisk" | "FlowChartMagneticDrum" | "FlowChartDisplay" | "FlowChartDelay" | "FlowChartAlternateProcess" | "FlowChartOffpageConnector" | "ActionButtonBlank" | "ActionButtonHome" | "ActionButtonHelp" | "ActionButtonInformation" | "ActionButtonForwardNext" | "ActionButtonBackPrevious" | "ActionButtonEnd" | "ActionButtonBeginning" | "ActionButtonReturn" | "ActionButtonDocument" | "ActionButtonSound" | "ActionButtonMovie" | "Gear6" | "Gear9" | "Funnel" | "MathPlus" | "MathMinus" | "MathMultiply" | "MathDivide" | "MathEqual" | "MathNotEqual" | "CornerTabs" | "SquareTabs" | "PlaqueTabs" | "ChartX" | "ChartStar" | "ChartPlus"): Excel.Shape;'
      return:
        type:
          - 'excel!Excel.Shape:class'
        description: ''
      parameters:
        - id: geometricShapeTypeString
          description: <span data-ttu-id="303b5-112">Représente le type de la forme géométrique.</span><span class="sxs-lookup"><span data-stu-id="303b5-112">Represents the type of the geometric shape.</span></span> <span data-ttu-id="303b5-113">Voir Excel.GeometricShapeType pour les détails.</span><span class="sxs-lookup"><span data-stu-id="303b5-113">See Excel.GeometricShapeType for details.</span></span>
          type:
            - '"LineInverse" | "Triangle" | "RightTriangle" | "Rectangle" | "Diamond" | "Parallelogram" | "Trapezoid" | "NonIsoscelesTrapezoid" | "Pentagon" | "Hexagon" | "Heptagon" | "Octagon" | "Decagon" | "Dodecagon" | "Star4" | "Star5" | "Star6" | "Star7" | "Star8" | "Star10" | "Star12" | "Star16" | "Star24" | "Star32" | "RoundRectangle" | "Round1Rectangle" | "Round2SameRectangle" | "Round2DiagonalRectangle" | "SnipRoundRectangle" | "Snip1Rectangle" | "Snip2SameRectangle" | "Snip2DiagonalRectangle" | "Plaque" | "Ellipse" | "Teardrop" | "HomePlate" | "Chevron" | "PieWedge" | "Pie" | "BlockArc" | "Donut" | "NoSmoking" | "RightArrow" | "LeftArrow" | "UpArrow" | "DownArrow" | "StripedRightArrow" | "NotchedRightArrow" | "BentUpArrow" | "LeftRightArrow" | "UpDownArrow" | "LeftUpArrow" | "LeftRightUpArrow" | "QuadArrow" | "LeftArrowCallout" | "RightArrowCallout" | "UpArrowCallout" | "DownArrowCallout" | "LeftRightArrowCallout" | "UpDownArrowCallout" | "QuadArrowCallout" | "BentArrow" | "UturnArrow" | "CircularArrow" | "LeftCircularArrow" | "LeftRightCircularArrow" | "CurvedRightArrow" | "CurvedLeftArrow" | "CurvedUpArrow" | "CurvedDownArrow" | "SwooshArrow" | "Cube" | "Can" | "LightningBolt" | "Heart" | "Sun" | "Moon" | "SmileyFace" | "IrregularSeal1" | "IrregularSeal2" | "FoldedCorner" | "Bevel" | "Frame" | "HalfFrame" | "Corner" | "DiagonalStripe" | "Chord" | "Arc" | "LeftBracket" | "RightBracket" | "LeftBrace" | "RightBrace" | "BracketPair" | "BracePair" | "Callout1" | "Callout2" | "Callout3" | "AccentCallout1" | "AccentCallout2" | "AccentCallout3" | "BorderCallout1" | "BorderCallout2" | "BorderCallout3" | "AccentBorderCallout1" | "AccentBorderCallout2" | "AccentBorderCallout3" | "WedgeRectCallout" | "WedgeRRectCallout" | "WedgeEllipseCallout" | "CloudCallout" | "Cloud" | "Ribbon" | "Ribbon2" | "EllipseRibbon" | "EllipseRibbon2" | "LeftRightRibbon" | "VerticalScroll" | "HorizontalScroll" | "Wave" | "DoubleWave" | "Plus" | "FlowChartProcess" | "FlowChartDecision" | "FlowChartInputOutput" | "FlowChartPredefinedProcess" | "FlowChartInternalStorage" | "FlowChartDocument" | "FlowChartMultidocument" | "FlowChartTerminator" | "FlowChartPreparation" | "FlowChartManualInput" | "FlowChartManualOperation" | "FlowChartConnector" | "FlowChartPunchedCard" | "FlowChartPunchedTape" | "FlowChartSummingJunction" | "FlowChartOr" | "FlowChartCollate" | "FlowChartSort" | "FlowChartExtract" | "FlowChartMerge" | "FlowChartOfflineStorage" | "FlowChartOnlineStorage" | "FlowChartMagneticTape" | "FlowChartMagneticDisk" | "FlowChartMagneticDrum" | "FlowChartDisplay" | "FlowChartDelay" | "FlowChartAlternateProcess" | "FlowChartOffpageConnector" | "ActionButtonBlank" | "ActionButtonHome" | "ActionButtonHelp" | "ActionButtonInformation" | "ActionButtonForwardNext" | "ActionButtonBackPrevious" | "ActionButtonEnd" | "ActionButtonBeginning" | "ActionButtonReturn" | "ActionButtonDocument" | "ActionButtonSound" | "ActionButtonMovie" | "Gear6" | "Gear9" | "Funnel" | "MathPlus" | "MathMinus" | "MathMultiply" | "MathDivide" | "MathEqual" | "MathNotEqual" | "CornerTabs" | "SquareTabs" | "PlaqueTabs" | "ChartX" | "ChartStar" | "ChartPlus"'
  - uid: 'excel!Excel.ShapeCollection#addGroup:member(1)'
    summary: "<span data-ttu-id=\"303b5-114\">Groupes un sous-ensemble de formes dans la feuille de calcul de cette collection de sites.</span><span class=\"sxs-lookup\"><span data-stu-id=\"303b5-114\">Groups a subset of shapes in this collection's worksheet.</span></span> <span data-ttu-id=\"303b5-115\">Renvoie un objet Shape qui représente la nouvelle forme.</span><span class=\"sxs-lookup\"><span data-stu-id=\"303b5-115\">Returns a Shape object that represents the new group of shapes.</span></span>\n\n<span data-ttu-id=\"303b5-116\">\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"303b5-116\">\\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: addGroup(values)
    fullName: addGroup(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addGroup(values: Array<string | Shape>): Excel.Shape;'
      return:
        type:
          - 'excel!Excel.Shape:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="303b5-117">Exemples</span><span class="sxs-lookup"><span data-stu-id="303b5-117">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Shapes");
              const square = sheet.shapes.getItem("Square");
              const pentagon = sheet.shapes.getItem("Pentagon");
              const octagon = sheet.shapes.getItem("Octagon");

              const shapeGroup = sheet.shapes.addGroup([square, pentagon, octagon]);
              shapeGroup.name = "Group";
              console.log("Shapes grouped");

              await context.sync();
          });
          ```
      parameters:
        - id: values
          description: <span data-ttu-id="303b5-118">Tableau d’objets ID ou Shape.</span><span class="sxs-lookup"><span data-stu-id="303b5-118">An array of shape ID or shape objects.</span></span>
          type:
            - 'excel!Excel.ShapeCollection#addGroup~0:complex'
  - uid: 'excel!Excel.ShapeCollection#addImage:member(1)'
    summary: "<span data-ttu-id=\"303b5-119\">Crée une image à partir d’une chaîne en base 64 et il est ajouté à la feuille de calcul.</span><span class=\"sxs-lookup\"><span data-stu-id=\"303b5-119\">Creates an image from a base64-encoded string and adds it to the worksheet.</span></span> <span data-ttu-id=\"303b5-120\">Renvoie un objet Forme qui représente la nouvelle image.</span><span class=\"sxs-lookup\"><span data-stu-id=\"303b5-120\">Returns the Shape object that represents the new image.</span></span>\n\n<span data-ttu-id=\"303b5-121\">\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"303b5-121\">\\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: addImage(base64ImageString)
    fullName: addImage(base64ImageString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addImage(base64ImageString: string): Excel.Shape;'
      return:
        type:
          - 'excel!Excel.Shape:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="303b5-122">Exemples</span><span class="sxs-lookup"><span data-stu-id="303b5-122">Examples</span></span>

          ```javascript
          const myFile = <HTMLInputElement>document.getElementById("selectedFile");
          const reader = new FileReader();

          reader.onload = (event) => {
              Excel.run((context) => {
                  const startIndex = reader.result.toString().indexOf("base64,");
                  const mybase64 = reader.result.toString().substr(startIndex + 7);
                  const sheet = context.workbook.worksheets.getItem("Shapes");
                  const image = sheet.shapes.addImage(mybase64);
                  image.name = "Image";
                  return context.sync();
              });
          };

          // Read in the image file as a data URL.
          reader.readAsDataURL(myFile.files[0]);
          ```
      parameters:
        - id: base64ImageString
          description: <span data-ttu-id="303b5-123">Chaîne codée en base64 représentant une image au format JPEG ou PNG.</span><span class="sxs-lookup"><span data-stu-id="303b5-123">A base64-encoded string representing an image in either JPEG or PNG format.</span></span>
          type:
            - string
  - uid: 'excel!Excel.ShapeCollection#addLine:member(1)'
    summary: "<span data-ttu-id=\"303b5-124\">Ajoute une ligne à la feuille de calcul.</span><span class=\"sxs-lookup\"><span data-stu-id=\"303b5-124\">Adds a line to worksheet.</span></span> <span data-ttu-id=\"303b5-125\">Renvoie un objet Shape qui représente la nouvelle forme.</span><span class=\"sxs-lookup\"><span data-stu-id=\"303b5-125\">Returns a Shape object that represents the new line.</span></span>\n\n<span data-ttu-id=\"303b5-126\">\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"303b5-126\">\\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: 'addLine(startLeft, startTop, endLeft, endTop, connectorType)'
    fullName: 'addLine(startLeft, startTop, endLeft, endTop, connectorType)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addLine(startLeft: number, startTop: number, endLeft: number, endTop: number, connectorType?: Excel.ConnectorType): Excel.Shape;'
      return:
        type:
          - 'excel!Excel.Shape:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="303b5-127">Exemples</span><span class="sxs-lookup"><span data-stu-id="303b5-127">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const shapes = context.workbook.worksheets.getItem("Shapes").shapes;
              const line = shapes.addLine(200, 50, 300, 150, Excel.ConnectorType.straight);
              line.name = "StraightLine";
              await context.sync();
          });
          ```
      parameters:
        - id: startLeft
          description: '<span data-ttu-id="303b5-128">Distance, en points, entre le début de la ligne et le côté gauche de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="303b5-128">The distance, in points, from the start of the line to the left side of the worksheet.</span></span>'
          type:
            - number
        - id: startTop
          description: '<span data-ttu-id="303b5-129">Distance, en points, entre le début de la ligne et le bord supérieur de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="303b5-129">The distance, in points, from the start of the line to the top of the worksheet.</span></span>'
          type:
            - number
        - id: endLeft
          description: '<span data-ttu-id="303b5-130">Distance, en points, à partir de la fin de la ligne à gauche de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="303b5-130">The distance, in points, from the end of the line to the left of the worksheet.</span></span>'
          type:
            - number
        - id: endTop
          description: '<span data-ttu-id="303b5-131">Distance, en points, entre la fin de la ligne et la partie supérieure de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="303b5-131">The distance, in points, from the end of the line to the top of the worksheet.</span></span>'
          type:
            - number
        - id: connectorType
          description: '<span data-ttu-id="303b5-132">Représente le type de connecteur.</span><span class="sxs-lookup"><span data-stu-id="303b5-132">Represents the connector type.</span></span> <span data-ttu-id="303b5-133">Pour plus d’informations, voir Excel. ConnectorType.</span><span class="sxs-lookup"><span data-stu-id="303b5-133">See Excel.ConnectorType for details.</span></span>'
          type:
            - 'excel!Excel.ConnectorType:enum'
  - uid: 'excel!Excel.ShapeCollection#addLine:member(2)'
    summary: "<span data-ttu-id=\"303b5-134\">Ajoute une ligne à la feuille de calcul.</span><span class=\"sxs-lookup\"><span data-stu-id=\"303b5-134\">Adds a line to worksheet.</span></span> <span data-ttu-id=\"303b5-135\">Renvoie un objet Shape qui représente la nouvelle forme.</span><span class=\"sxs-lookup\"><span data-stu-id=\"303b5-135\">Returns a Shape object that represents the new line.</span></span>\n\n<span data-ttu-id=\"303b5-136\">\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"303b5-136\">\\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: 'addLine(startLeft, startTop, endLeft, endTop, connectorTypeString)'
    fullName: 'addLine(startLeft, startTop, endLeft, endTop, connectorTypeString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addLine(startLeft: number, startTop: number, endLeft: number, endTop: number, connectorTypeString?: "Straight" | "Elbow" | "Curve"): Excel.Shape;'
      return:
        type:
          - 'excel!Excel.Shape:class'
        description: ''
      parameters:
        - id: startLeft
          description: '<span data-ttu-id="303b5-137">Distance, en points, entre le début de la ligne et le côté gauche de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="303b5-137">The distance, in points, from the start of the line to the left side of the worksheet.</span></span>'
          type:
            - number
        - id: startTop
          description: '<span data-ttu-id="303b5-138">Distance, en points, entre le début de la ligne et le bord supérieur de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="303b5-138">The distance, in points, from the start of the line to the top of the worksheet.</span></span>'
          type:
            - number
        - id: endLeft
          description: '<span data-ttu-id="303b5-139">Distance, en points, à partir de la fin de la ligne à gauche de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="303b5-139">The distance, in points, from the end of the line to the left of the worksheet.</span></span>'
          type:
            - number
        - id: endTop
          description: '<span data-ttu-id="303b5-140">Distance, en points, entre la fin de la ligne et la partie supérieure de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="303b5-140">The distance, in points, from the end of the line to the top of the worksheet.</span></span>'
          type:
            - number
        - id: connectorTypeString
          description: '<span data-ttu-id="303b5-141">Représente le type de connecteur.</span><span class="sxs-lookup"><span data-stu-id="303b5-141">Represents the connector type.</span></span> <span data-ttu-id="303b5-142">Pour plus d’informations, voir Excel. ConnectorType.</span><span class="sxs-lookup"><span data-stu-id="303b5-142">See Excel.ConnectorType for details.</span></span>'
          type:
            - '"Straight" | "Elbow" | "Curve"'
  - uid: 'excel!Excel.ShapeCollection#addTextBox:member(1)'
    summary: "<span data-ttu-id=\"303b5-143\">Ajoute une zone de texte à la feuille de calcul avec le texte fourni en tant que le contenu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"303b5-143\">Adds a text box to the worksheet with the provided text as the content.</span></span> <span data-ttu-id=\"303b5-144\">Elle renvoie un objet Shape qui représente la nouvelle zone de texte.</span><span class=\"sxs-lookup\"><span data-stu-id=\"303b5-144\">Returns a Shape object that represents the new text box.</span></span>\n\n<span data-ttu-id=\"303b5-145\">\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"303b5-145\">\\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: addTextBox(text)
    fullName: addTextBox(text)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addTextBox(text?: string): Excel.Shape;'
      return:
        type:
          - 'excel!Excel.Shape:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="303b5-146">Exemples</span><span class="sxs-lookup"><span data-stu-id="303b5-146">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const shapes = context.workbook.worksheets.getItem("Shapes").shapes;
              const textbox = shapes.addTextBox("A box with text");
              textbox.left = 100;
              textbox.top = 100;
              textbox.height = 20;
              textbox.width = 175;
              textbox.name = "Textbox";
              await context.sync();
          });
          ```
      parameters:
        - id: text
          description: <span data-ttu-id="303b5-147">Représente le texte qui apparaît dans la zone de texte créé.</span><span class="sxs-lookup"><span data-stu-id="303b5-147">Represents the text that will be shown in the created text box.</span></span>
          type:
            - string
  - uid: 'excel!Excel.ShapeCollection#context:member'
    summary: <span data-ttu-id="303b5-148">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="303b5-148">The request context associated with the object.</span></span> <span data-ttu-id="303b5-149">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="303b5-149">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.ShapeCollection#getCount:member(1)'
    summary: "<span data-ttu-id=\"303b5-150\">Renvoie le nombre de graphiques dans la feuille de calcul.</span><span class=\"sxs-lookup\"><span data-stu-id=\"303b5-150\">Returns the number of shapes in the worksheet.</span></span> <span data-ttu-id=\"303b5-151\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"303b5-151\">Read-only.</span></span>\n\n<span data-ttu-id=\"303b5-152\">\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"303b5-152\">\\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.ShapeCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.ShapeCollection#getItem:member(1)'
    summary: "<span data-ttu-id=\"303b5-153\">Extrait un graphique à l’aide de son Nom ou ID.</span><span class=\"sxs-lookup\"><span data-stu-id=\"303b5-153\">Gets a shape using its Name or ID.</span></span>\n\n<span data-ttu-id=\"303b5-154\">\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"303b5-154\">\\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Excel.Shape;'
      return:
        type:
          - 'excel!Excel.Shape:class'
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="303b5-155">Nom ou ID de la forme à récupérer.</span><span class="sxs-lookup"><span data-stu-id="303b5-155">Name or ID of the shape to be retrieved.</span></span>
          type:
            - string
  - uid: 'excel!Excel.ShapeCollection#getItemAt:member(1)'
    summary: "<span data-ttu-id=\"303b5-156\">Obtient une forme en fonction de sa position dans la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"303b5-156\">Gets a shape using its position in the collection.</span></span>\n\n<span data-ttu-id=\"303b5-157\">\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"303b5-157\">\\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.Shape;'
      return:
        type:
          - 'excel!Excel.Shape:class'
        description: ''
      parameters:
        - id: index
          description: <span data-ttu-id="303b5-158">Index de base zéro de la forme à récupérer.</span><span class="sxs-lookup"><span data-stu-id="303b5-158">The zero-based index of the shape to be retrieved.</span></span>
          type:
            - number
  - uid: 'excel!Excel.ShapeCollection#items:member'
    summary: <span data-ttu-id="303b5-159">Obtient l’élément enfant chargé dans cette collection de sites.</span><span class="sxs-lookup"><span data-stu-id="303b5-159">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Shape[];'
      return:
        type:
          - 'excel!Excel.ShapeCollection#items~0:complex'
  - uid: 'excel!Excel.ShapeCollection#load:member(1)'
    summary: <span data-ttu-id="303b5-160">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="303b5-160">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="303b5-161">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="303b5-161">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.ShapeCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.ShapeCollection;'
      return:
        type:
          - 'excel!Excel.ShapeCollection:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="303b5-162">Fournit des options pour les propriétés de l’objet à charger.</span><span class="sxs-lookup"><span data-stu-id="303b5-162">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.ShapeCollection#load~0:complex'
  - uid: 'excel!Excel.ShapeCollection#load:member(2)'
    summary: <span data-ttu-id="303b5-163">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="303b5-163">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="303b5-164">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="303b5-164">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ShapeCollection;'
      return:
        type:
          - 'excel!Excel.ShapeCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="303b5-165">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="303b5-165">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.ShapeCollection#load:member(3)'
    summary: <span data-ttu-id="303b5-166">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="303b5-166">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="303b5-167">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="303b5-167">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Excel.ShapeCollection;'
      return:
        type:
          - 'excel!Excel.ShapeCollection:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="303b5-168">`propertyNamesAndPaths.select`est une chaîne délimitée par des virgules qui spécifie les propriétés à `propertyNamesAndPaths.expand` charger et une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="303b5-168">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - 'excel!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.ShapeCollection#toJSON:member(1)'
    summary: "<span data-ttu-id=\"303b5-169\">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class=\"sxs-lookup\"><span data-stu-id=\"303b5-169\">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id=\"303b5-170\">.</span><span class=\"sxs-lookup\"><span data-stu-id=\"303b5-170\"></span></span> <span data-ttu-id=\"303b5-171\">(`JSON.stringify`</span><span class=\"sxs-lookup\"><span data-stu-id=\"303b5-171\"></span></span><!-- --><span data-ttu-id=\"303b5-172\">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que `Excel.ShapeCollection` l’objet d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.ShapeCollectionData`</span><span class=\"sxs-lookup\"><span data-stu-id=\"303b5-172\">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.ShapeCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ShapeCollectionData`</span></span><!-- --><span data-ttu-id=\"303b5-173\">) qui contient un tableau «\_éléments\_» avec des copies superficielles de toutes les propriétés chargées des éléments de la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"303b5-173\">) that contains an \"items\" array with shallow copies of any loaded properties from the collection's items.</span></span>"
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ShapeCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.ShapeCollectionData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.Shape:class'
    name: Excel.Shape
  - uid: 'excel!Excel.GeometricShapeType:enum'
    name: Excel.GeometricShapeType
  - uid: 'excel!Excel.ShapeCollection#addGroup~0:complex'
    name: Array<string | Shape>
    fullName: Array<string | Excel.Shape>
    spec.typeScript:
      - uid: '!Array:interface'
        name: Array
        fullName: Array
      - name: '<string | '
        fullName: '<string | '
      - uid: 'excel!Excel.Shape:class'
        name: Shape
        fullName: Excel.Shape
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.ConnectorType:enum'
    name: Excel.ConnectorType
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.ShapeCollection#getCount~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel!Excel.ShapeCollection#items~0:complex'
    name: 'Excel.Shape[]'
    fullName: 'Excel.Shape[]'
    spec.typeScript:
      - uid: 'excel!Excel.Shape:class'
        name: Excel.Shape
        fullName: Excel.Shape
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.ShapeCollection:class'
    name: Excel.ShapeCollection
  - uid: 'excel!Excel.ShapeCollection#load~0:complex'
    name: Excel.Interfaces.ShapeCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.ShapeCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.ShapeCollectionLoadOptions:interface'
        name: Excel.Interfaces.ShapeCollectionLoadOptions
        fullName: Excel.Interfaces.ShapeCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'excel!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.Interfaces.ShapeCollectionData:interface'
    name: Excel.Interfaces.ShapeCollectionData