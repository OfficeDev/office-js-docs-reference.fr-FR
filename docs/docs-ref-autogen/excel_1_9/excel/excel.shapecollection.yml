### YamlMime:UniversalReference
items:
  - uid: excel.Excel.ShapeCollection
    summary: |-
      <span data-ttu-id="edc9f-101">Représente une collection de toutes les formes de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="edc9f-101">Represents a collection of all the shapes in the worksheet.</span></span>

      <span data-ttu-id="edc9f-102">\[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="edc9f-102">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.ShapeCollection
    fullName: Excel.ShapeCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.ShapeCollection.addGeometricShape
      - excel.Excel.ShapeCollection.addGeometricShape_1
      - excel.Excel.ShapeCollection.addGroup
      - excel.Excel.ShapeCollection.addImage
      - excel.Excel.ShapeCollection.addLine
      - excel.Excel.ShapeCollection.addLine_1
      - excel.Excel.ShapeCollection.addTextBox
      - excel.Excel.ShapeCollection.context
      - excel.Excel.ShapeCollection.getCount
      - excel.Excel.ShapeCollection.getItem
      - excel.Excel.ShapeCollection.getItemAt
      - excel.Excel.ShapeCollection.items
      - excel.Excel.ShapeCollection.load
      - excel.Excel.ShapeCollection.load_1
      - excel.Excel.ShapeCollection.load_2
      - excel.Excel.ShapeCollection.toJSON
  - uid: excel.Excel.ShapeCollection.addGeometricShape
    summary: |-
      <span data-ttu-id="edc9f-103">Ajoute une forme géométrique à la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="edc9f-103">Adds a geometric shape to the worksheet.</span></span> <span data-ttu-id="edc9f-104">Renvoie un objet Shape qui représente la nouvelle forme.</span><span class="sxs-lookup"><span data-stu-id="edc9f-104">Returns a Shape object that represents the new shape.</span></span>

      <span data-ttu-id="edc9f-105">\[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="edc9f-105">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: addGeometricShape(geometricShapeType)
    fullName: addGeometricShape(geometricShapeType)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addGeometricShape(geometricShapeType: Excel.GeometricShapeType): Excel.Shape;'
      return:
        type:
          - excel.Excel.Shape
        description: |-


          #### <a name="examples"></a><span data-ttu-id="edc9f-106">Exemples</span><span class="sxs-lookup"><span data-stu-id="edc9f-106">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Shapes");
              const shape = sheet.shapes.addGeometricShape(Excel.GeometricShapeType.hexagon);
              shape.left = 5;
              shape.top = 5;
              shape.height = 175;
              shape.width = 200;
              await context.sync();
          });
          ```
      parameters:
        - id: geometricShapeType
          description: <span data-ttu-id="edc9f-107">Représente le type de la forme géométrique.</span><span class="sxs-lookup"><span data-stu-id="edc9f-107">Represents the type of the geometric shape.</span></span> <span data-ttu-id="edc9f-108">Voir Excel.GeometricShapeType pour les détails.</span><span class="sxs-lookup"><span data-stu-id="edc9f-108">See Excel.GeometricShapeType for details.</span></span>
          type:
            - excel.Excel.GeometricShapeType
  - uid: excel.Excel.ShapeCollection.addGeometricShape_1
    summary: |-
      <span data-ttu-id="edc9f-109">Ajoute une forme géométrique à la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="edc9f-109">Adds a geometric shape to the worksheet.</span></span> <span data-ttu-id="edc9f-110">Renvoie un objet Shape qui représente la nouvelle forme.</span><span class="sxs-lookup"><span data-stu-id="edc9f-110">Returns a Shape object that represents the new shape.</span></span>

      <span data-ttu-id="edc9f-111">\[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="edc9f-111">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: addGeometricShape(geometricShapeTypeString)
    fullName: addGeometricShape(geometricShapeTypeString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addGeometricShape(geometricShapeTypeString: "LineInverse" | "Triangle" | "RightTriangle" | "Rectangle" | "Diamond" | "Parallelogram" | "Trapezoid" | "NonIsoscelesTrapezoid" | "Pentagon" | "Hexagon" | "Heptagon" | "Octagon" | "Decagon" | "Dodecagon" | "Star4" | "Star5" | "Star6" | "Star7" | "Star8" | "Star10" | "Star12" | "Star16" | "Star24" | "Star32" | "RoundRectangle" | "Round1Rectangle" | "Round2SameRectangle" | "Round2DiagonalRectangle" | "SnipRoundRectangle" | "Snip1Rectangle" | "Snip2SameRectangle" | "Snip2DiagonalRectangle" | "Plaque" | "Ellipse" | "Teardrop" | "HomePlate" | "Chevron" | "PieWedge" | "Pie" | "BlockArc" | "Donut" | "NoSmoking" | "RightArrow" | "LeftArrow" | "UpArrow" | "DownArrow" | "StripedRightArrow" | "NotchedRightArrow" | "BentUpArrow" | "LeftRightArrow" | "UpDownArrow" | "LeftUpArrow" | "LeftRightUpArrow" | "QuadArrow" | "LeftArrowCallout" | "RightArrowCallout" | "UpArrowCallout" | "DownArrowCallout" | "LeftRightArrowCallout" | "UpDownArrowCallout" | "QuadArrowCallout" | "BentArrow" | "UturnArrow" | "CircularArrow" | "LeftCircularArrow" | "LeftRightCircularArrow" | "CurvedRightArrow" | "CurvedLeftArrow" | "CurvedUpArrow" | "CurvedDownArrow" | "SwooshArrow" | "Cube" | "Can" | "LightningBolt" | "Heart" | "Sun" | "Moon" | "SmileyFace" | "IrregularSeal1" | "IrregularSeal2" | "FoldedCorner" | "Bevel" | "Frame" | "HalfFrame" | "Corner" | "DiagonalStripe" | "Chord" | "Arc" | "LeftBracket" | "RightBracket" | "LeftBrace" | "RightBrace" | "BracketPair" | "BracePair" | "Callout1" | "Callout2" | "Callout3" | "AccentCallout1" | "AccentCallout2" | "AccentCallout3" | "BorderCallout1" | "BorderCallout2" | "BorderCallout3" | "AccentBorderCallout1" | "AccentBorderCallout2" | "AccentBorderCallout3" | "WedgeRectCallout" | "WedgeRRectCallout" | "WedgeEllipseCallout" | "CloudCallout" | "Cloud" | "Ribbon" | "Ribbon2" | "EllipseRibbon" | "EllipseRibbon2" | "LeftRightRibbon" | "VerticalScroll" | "HorizontalScroll" | "Wave" | "DoubleWave" | "Plus" | "FlowChartProcess" | "FlowChartDecision" | "FlowChartInputOutput" | "FlowChartPredefinedProcess" | "FlowChartInternalStorage" | "FlowChartDocument" | "FlowChartMultidocument" | "FlowChartTerminator" | "FlowChartPreparation" | "FlowChartManualInput" | "FlowChartManualOperation" | "FlowChartConnector" | "FlowChartPunchedCard" | "FlowChartPunchedTape" | "FlowChartSummingJunction" | "FlowChartOr" | "FlowChartCollate" | "FlowChartSort" | "FlowChartExtract" | "FlowChartMerge" | "FlowChartOfflineStorage" | "FlowChartOnlineStorage" | "FlowChartMagneticTape" | "FlowChartMagneticDisk" | "FlowChartMagneticDrum" | "FlowChartDisplay" | "FlowChartDelay" | "FlowChartAlternateProcess" | "FlowChartOffpageConnector" | "ActionButtonBlank" | "ActionButtonHome" | "ActionButtonHelp" | "ActionButtonInformation" | "ActionButtonForwardNext" | "ActionButtonBackPrevious" | "ActionButtonEnd" | "ActionButtonBeginning" | "ActionButtonReturn" | "ActionButtonDocument" | "ActionButtonSound" | "ActionButtonMovie" | "Gear6" | "Gear9" | "Funnel" | "MathPlus" | "MathMinus" | "MathMultiply" | "MathDivide" | "MathEqual" | "MathNotEqual" | "CornerTabs" | "SquareTabs" | "PlaqueTabs" | "ChartX" | "ChartStar" | "ChartPlus"): Excel.Shape;'
      return:
        type:
          - excel.Excel.Shape
        description: ''
      parameters:
        - id: geometricShapeTypeString
          description: <span data-ttu-id="edc9f-112">Représente le type de la forme géométrique.</span><span class="sxs-lookup"><span data-stu-id="edc9f-112">Represents the type of the geometric shape.</span></span> <span data-ttu-id="edc9f-113">Voir Excel.GeometricShapeType pour les détails.</span><span class="sxs-lookup"><span data-stu-id="edc9f-113">See Excel.GeometricShapeType for details.</span></span>
          type:
            - '"LineInverse" | "Triangle" | "RightTriangle" | "Rectangle" | "Diamond" | "Parallelogram" | "Trapezoid" | "NonIsoscelesTrapezoid" | "Pentagon" | "Hexagon" | "Heptagon" | "Octagon" | "Decagon" | "Dodecagon" | "Star4" | "Star5" | "Star6" | "Star7" | "Star8" | "Star10" | "Star12" | "Star16" | "Star24" | "Star32" | "RoundRectangle" | "Round1Rectangle" | "Round2SameRectangle" | "Round2DiagonalRectangle" | "SnipRoundRectangle" | "Snip1Rectangle" | "Snip2SameRectangle" | "Snip2DiagonalRectangle" | "Plaque" | "Ellipse" | "Teardrop" | "HomePlate" | "Chevron" | "PieWedge" | "Pie" | "BlockArc" | "Donut" | "NoSmoking" | "RightArrow" | "LeftArrow" | "UpArrow" | "DownArrow" | "StripedRightArrow" | "NotchedRightArrow" | "BentUpArrow" | "LeftRightArrow" | "UpDownArrow" | "LeftUpArrow" | "LeftRightUpArrow" | "QuadArrow" | "LeftArrowCallout" | "RightArrowCallout" | "UpArrowCallout" | "DownArrowCallout" | "LeftRightArrowCallout" | "UpDownArrowCallout" | "QuadArrowCallout" | "BentArrow" | "UturnArrow" | "CircularArrow" | "LeftCircularArrow" | "LeftRightCircularArrow" | "CurvedRightArrow" | "CurvedLeftArrow" | "CurvedUpArrow" | "CurvedDownArrow" | "SwooshArrow" | "Cube" | "Can" | "LightningBolt" | "Heart" | "Sun" | "Moon" | "SmileyFace" | "IrregularSeal1" | "IrregularSeal2" | "FoldedCorner" | "Bevel" | "Frame" | "HalfFrame" | "Corner" | "DiagonalStripe" | "Chord" | "Arc" | "LeftBracket" | "RightBracket" | "LeftBrace" | "RightBrace" | "BracketPair" | "BracePair" | "Callout1" | "Callout2" | "Callout3" | "AccentCallout1" | "AccentCallout2" | "AccentCallout3" | "BorderCallout1" | "BorderCallout2" | "BorderCallout3" | "AccentBorderCallout1" | "AccentBorderCallout2" | "AccentBorderCallout3" | "WedgeRectCallout" | "WedgeRRectCallout" | "WedgeEllipseCallout" | "CloudCallout" | "Cloud" | "Ribbon" | "Ribbon2" | "EllipseRibbon" | "EllipseRibbon2" | "LeftRightRibbon" | "VerticalScroll" | "HorizontalScroll" | "Wave" | "DoubleWave" | "Plus" | "FlowChartProcess" | "FlowChartDecision" | "FlowChartInputOutput" | "FlowChartPredefinedProcess" | "FlowChartInternalStorage" | "FlowChartDocument" | "FlowChartMultidocument" | "FlowChartTerminator" | "FlowChartPreparation" | "FlowChartManualInput" | "FlowChartManualOperation" | "FlowChartConnector" | "FlowChartPunchedCard" | "FlowChartPunchedTape" | "FlowChartSummingJunction" | "FlowChartOr" | "FlowChartCollate" | "FlowChartSort" | "FlowChartExtract" | "FlowChartMerge" | "FlowChartOfflineStorage" | "FlowChartOnlineStorage" | "FlowChartMagneticTape" | "FlowChartMagneticDisk" | "FlowChartMagneticDrum" | "FlowChartDisplay" | "FlowChartDelay" | "FlowChartAlternateProcess" | "FlowChartOffpageConnector" | "ActionButtonBlank" | "ActionButtonHome" | "ActionButtonHelp" | "ActionButtonInformation" | "ActionButtonForwardNext" | "ActionButtonBackPrevious" | "ActionButtonEnd" | "ActionButtonBeginning" | "ActionButtonReturn" | "ActionButtonDocument" | "ActionButtonSound" | "ActionButtonMovie" | "Gear6" | "Gear9" | "Funnel" | "MathPlus" | "MathMinus" | "MathMultiply" | "MathDivide" | "MathEqual" | "MathNotEqual" | "CornerTabs" | "SquareTabs" | "PlaqueTabs" | "ChartX" | "ChartStar" | "ChartPlus"'
  - uid: excel.Excel.ShapeCollection.addGroup
    summary: |-
      <span data-ttu-id="edc9f-114">Groupes un sous-ensemble de formes dans la feuille de calcul de cette collection de sites.</span><span class="sxs-lookup"><span data-stu-id="edc9f-114">Groups a subset of shapes in this collection's worksheet.</span></span> <span data-ttu-id="edc9f-115">Renvoie un objet Shape qui représente la nouvelle forme.</span><span class="sxs-lookup"><span data-stu-id="edc9f-115">Returns a Shape object that represents the new group of shapes.</span></span>

      <span data-ttu-id="edc9f-116">\[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="edc9f-116">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: addGroup(values)
    fullName: addGroup(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addGroup(values: Array<string | Shape>): Excel.Shape;'
      return:
        type:
          - excel.Excel.Shape
        description: |-


          #### <a name="examples"></a><span data-ttu-id="edc9f-117">Exemples</span><span class="sxs-lookup"><span data-stu-id="edc9f-117">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Shapes");
              const square = sheet.shapes.getItem("Square");
              const pentagon = sheet.shapes.getItem("Pentagon");
              const octagon = sheet.shapes.getItem("Octagon");

              const shapeGroup = sheet.shapes.addGroup([square, pentagon, octagon]);
              shapeGroup.name = "Group";
              console.log("Shapes grouped");

              await context.sync();
          });
          ```
      parameters:
        - id: values
          description: <span data-ttu-id="edc9f-118">Tableau d’objets ID ou Shape.</span><span class="sxs-lookup"><span data-stu-id="edc9f-118">An array of shape ID or shape objects.</span></span>
          type:
            - Array<string | Shape>
  - uid: excel.Excel.ShapeCollection.addImage
    summary: |-
      <span data-ttu-id="edc9f-119">Crée une image à partir d’une chaîne en base 64 et il est ajouté à la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="edc9f-119">Creates an image from a base64-encoded string and adds it to the worksheet.</span></span> <span data-ttu-id="edc9f-120">Renvoie un objet Forme qui représente la nouvelle image.</span><span class="sxs-lookup"><span data-stu-id="edc9f-120">Returns the Shape object that represents the new image.</span></span>

      <span data-ttu-id="edc9f-121">\[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="edc9f-121">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: addImage(base64ImageString)
    fullName: addImage(base64ImageString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addImage(base64ImageString: string): Excel.Shape;'
      return:
        type:
          - excel.Excel.Shape
        description: |-


          #### <a name="examples"></a><span data-ttu-id="edc9f-122">Exemples</span><span class="sxs-lookup"><span data-stu-id="edc9f-122">Examples</span></span>

          ```javascript
          const myFile = <HTMLInputElement>document.getElementById("selectedFile");
          const reader = new FileReader();

          reader.onload = (event) => {
              Excel.run((context) => {
                  const startIndex = (<string>(<FileReader>event.target).result).indexOf("base64,");
                  const mybase64 = (<string>(<FileReader>event.target).result).substr(startIndex + 7);
                  const sheet = context.workbook.worksheets.getItem("Shapes");
                  const image = sheet.shapes.addImage(mybase64);
                  image.name = "Image";
                  return context.sync();
              });
          };

          // Read in the image file as a data URL.
          reader.readAsDataURL(myFile.files[0]);
          ```
      parameters:
        - id: base64ImageString
          description: <span data-ttu-id="edc9f-123">Chaîne codée en base64 représentant une image au format JPEG ou PNG.</span><span class="sxs-lookup"><span data-stu-id="edc9f-123">A base64-encoded string representing an image in either JPEG or PNG format.</span></span>
          type:
            - string
  - uid: excel.Excel.ShapeCollection.addLine
    summary: |-
      <span data-ttu-id="edc9f-124">Ajoute une ligne à la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="edc9f-124">Adds a line to worksheet.</span></span> <span data-ttu-id="edc9f-125">Renvoie un objet Shape qui représente la nouvelle forme.</span><span class="sxs-lookup"><span data-stu-id="edc9f-125">Returns a Shape object that represents the new line.</span></span>

      <span data-ttu-id="edc9f-126">\[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="edc9f-126">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'addLine(startLeft, startTop, endLeft, endTop, connectorType)'
    fullName: 'addLine(startLeft, startTop, endLeft, endTop, connectorType)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addLine(startLeft: number, startTop: number, endLeft: number, endTop: number, connectorType?: Excel.ConnectorType): Excel.Shape;'
      return:
        type:
          - excel.Excel.Shape
        description: |-


          #### <a name="examples"></a><span data-ttu-id="edc9f-127">Exemples</span><span class="sxs-lookup"><span data-stu-id="edc9f-127">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const shapes = context.workbook.worksheets.getItem("Shapes").shapes;
              const line = shapes.addLine(200, 50, 300, 150, Excel.ConnectorType.straight);
              line.name = "StraightLine";
              await context.sync();
          });
          ```
      parameters:
        - id: startLeft
          description: '<span data-ttu-id="edc9f-128">Distance, en points, entre le début de la ligne et le côté gauche de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="edc9f-128">The distance, in points, from the start of the line to the left side of the worksheet.</span></span>'
          type:
            - number
        - id: startTop
          description: '<span data-ttu-id="edc9f-129">Distance, en points, entre le début de la ligne et le bord supérieur de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="edc9f-129">The distance, in points, from the start of the line to the top of the worksheet.</span></span>'
          type:
            - number
        - id: endLeft
          description: '<span data-ttu-id="edc9f-130">Distance, en points, à partir de la fin de la ligne à gauche de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="edc9f-130">The distance, in points, from the end of the line to the left of the worksheet.</span></span>'
          type:
            - number
        - id: endTop
          description: '<span data-ttu-id="edc9f-131">Distance, en points, entre la fin de la ligne et la partie supérieure de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="edc9f-131">The distance, in points, from the end of the line to the top of the worksheet.</span></span>'
          type:
            - number
        - id: connectorType
          description: '<span data-ttu-id="edc9f-132">Représente le type de connecteur.</span><span class="sxs-lookup"><span data-stu-id="edc9f-132">Represents the connector type.</span></span> <span data-ttu-id="edc9f-133">Pour plus d’informations, voir Excel. ConnectorType.</span><span class="sxs-lookup"><span data-stu-id="edc9f-133">See Excel.ConnectorType for details.</span></span>'
          type:
            - excel.Excel.ConnectorType
  - uid: excel.Excel.ShapeCollection.addLine_1
    summary: |-
      <span data-ttu-id="edc9f-134">Ajoute une ligne à la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="edc9f-134">Adds a line to worksheet.</span></span> <span data-ttu-id="edc9f-135">Renvoie un objet Shape qui représente la nouvelle forme.</span><span class="sxs-lookup"><span data-stu-id="edc9f-135">Returns a Shape object that represents the new line.</span></span>

      <span data-ttu-id="edc9f-136">\[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="edc9f-136">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'addLine(startLeft, startTop, endLeft, endTop, connectorTypeString)'
    fullName: 'addLine(startLeft, startTop, endLeft, endTop, connectorTypeString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addLine(startLeft: number, startTop: number, endLeft: number, endTop: number, connectorTypeString?: "Straight" | "Elbow" | "Curve"): Excel.Shape;'
      return:
        type:
          - excel.Excel.Shape
        description: ''
      parameters:
        - id: startLeft
          description: '<span data-ttu-id="edc9f-137">Distance, en points, entre le début de la ligne et le côté gauche de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="edc9f-137">The distance, in points, from the start of the line to the left side of the worksheet.</span></span>'
          type:
            - number
        - id: startTop
          description: '<span data-ttu-id="edc9f-138">Distance, en points, entre le début de la ligne et le bord supérieur de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="edc9f-138">The distance, in points, from the start of the line to the top of the worksheet.</span></span>'
          type:
            - number
        - id: endLeft
          description: '<span data-ttu-id="edc9f-139">Distance, en points, à partir de la fin de la ligne à gauche de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="edc9f-139">The distance, in points, from the end of the line to the left of the worksheet.</span></span>'
          type:
            - number
        - id: endTop
          description: '<span data-ttu-id="edc9f-140">Distance, en points, entre la fin de la ligne et la partie supérieure de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="edc9f-140">The distance, in points, from the end of the line to the top of the worksheet.</span></span>'
          type:
            - number
        - id: connectorTypeString
          description: '<span data-ttu-id="edc9f-141">Représente le type de connecteur.</span><span class="sxs-lookup"><span data-stu-id="edc9f-141">Represents the connector type.</span></span> <span data-ttu-id="edc9f-142">Pour plus d’informations, voir Excel. ConnectorType.</span><span class="sxs-lookup"><span data-stu-id="edc9f-142">See Excel.ConnectorType for details.</span></span>'
          type:
            - '"Straight" | "Elbow" | "Curve"'
  - uid: excel.Excel.ShapeCollection.addTextBox
    summary: |-
      <span data-ttu-id="edc9f-143">Ajoute une zone de texte à la feuille de calcul avec le texte fourni en tant que le contenu.</span><span class="sxs-lookup"><span data-stu-id="edc9f-143">Adds a text box to the worksheet with the provided text as the content.</span></span> <span data-ttu-id="edc9f-144">Elle renvoie un objet Shape qui représente la nouvelle zone de texte.</span><span class="sxs-lookup"><span data-stu-id="edc9f-144">Returns a Shape object that represents the new text box.</span></span>

      <span data-ttu-id="edc9f-145">\[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="edc9f-145">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: addTextBox(text)
    fullName: addTextBox(text)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addTextBox(text?: string): Excel.Shape;'
      return:
        type:
          - excel.Excel.Shape
        description: |-


          #### <a name="examples"></a><span data-ttu-id="edc9f-146">Exemples</span><span class="sxs-lookup"><span data-stu-id="edc9f-146">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const shapes = context.workbook.worksheets.getItem("Shapes").shapes;
              const textbox = shapes.addTextBox("A box with text");
              textbox.left = 100;
              textbox.top = 100;
              textbox.height = 20;
              textbox.width = 175;
              textbox.name = "Textbox";
              await context.sync();
          });
          ```
      parameters:
        - id: text
          description: <span data-ttu-id="edc9f-147">Représente le texte qui apparaît dans la zone de texte créé.</span><span class="sxs-lookup"><span data-stu-id="edc9f-147">Represents the text that will be shown in the created text box.</span></span>
          type:
            - string
  - uid: excel.Excel.ShapeCollection.context
    summary: <span data-ttu-id="edc9f-148">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="edc9f-148">The request context associated with the object.</span></span> <span data-ttu-id="edc9f-149">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="edc9f-149">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.ShapeCollection.getCount
    summary: |-
      <span data-ttu-id="edc9f-150">Renvoie le nombre de graphiques dans la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="edc9f-150">Returns the number of shapes in the worksheet.</span></span> <span data-ttu-id="edc9f-151">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="edc9f-151">Read-only.</span></span>

      <span data-ttu-id="edc9f-152">\[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="edc9f-152">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: excel.Excel.ShapeCollection.getItem
    summary: |-
      <span data-ttu-id="edc9f-153">Extrait un graphique à l’aide de son Nom ou ID.</span><span class="sxs-lookup"><span data-stu-id="edc9f-153">Gets a shape using its Name or ID.</span></span>

      <span data-ttu-id="edc9f-154">\[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="edc9f-154">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Excel.Shape;'
      return:
        type:
          - excel.Excel.Shape
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="edc9f-155">Nom ou ID de la forme à récupérer.</span><span class="sxs-lookup"><span data-stu-id="edc9f-155">Name or ID of the shape to be retrieved.</span></span>
          type:
            - string
  - uid: excel.Excel.ShapeCollection.getItemAt
    summary: |-
      <span data-ttu-id="edc9f-156">Obtient une forme en fonction de sa position dans la collection.</span><span class="sxs-lookup"><span data-stu-id="edc9f-156">Gets a shape using its position in the collection.</span></span>

      <span data-ttu-id="edc9f-157">\[[Ensemble d’API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="edc9f-157">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.Shape;'
      return:
        type:
          - excel.Excel.Shape
        description: ''
      parameters:
        - id: index
          description: <span data-ttu-id="edc9f-158">Index de base zéro de la forme à récupérer.</span><span class="sxs-lookup"><span data-stu-id="edc9f-158">The zero-based index of the shape to be retrieved.</span></span>
          type:
            - number
  - uid: excel.Excel.ShapeCollection.items
    summary: <span data-ttu-id="edc9f-159">Obtient l’élément enfant chargé dans cette collection de sites.</span><span class="sxs-lookup"><span data-stu-id="edc9f-159">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Shape[];'
      return:
        type:
          - 'Excel.Shape[]'
  - uid: excel.Excel.ShapeCollection.load
    summary: "<span data-ttu-id=\"edc9f-160\">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"edc9f-160\">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id=\"edc9f-161\">Vous devez appeler «\_context.sync()\_» avant de lire les propriétés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"edc9f-161\">You must call \"context.sync()\" before reading the properties.</span></span>"
    remarks: |-
      <span data-ttu-id="edc9f-162">En plus de cette signature, cette méthode possède les signatures suivantes:</span><span class="sxs-lookup"><span data-stu-id="edc9f-162">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="edc9f-163">`load(option?: string | string[]): Excel.ShapeCollection`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="edc9f-163">`load(option?: string | string[]): Excel.ShapeCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="edc9f-164">`load(option?: { select?: string; expand?: string; }): Excel.ShapeCollection`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="edc9f-164">`load(option?: { select?: string; expand?: string; }): Excel.ShapeCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="edc9f-165">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ShapeCollection`-Uniquement disponible sur les types de collection.</span><span class="sxs-lookup"><span data-stu-id="edc9f-165">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ShapeCollection` - Only available on collection types.</span></span> <span data-ttu-id="edc9f-166">Elle est similaire à la signature précédente.</span><span class="sxs-lookup"><span data-stu-id="edc9f-166">It is similar to the preceding signature.</span></span> <span data-ttu-id="edc9f-167">Option. Top indique le nombre maximal d’éléments de collection qui peuvent être inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="edc9f-167">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="edc9f-168">Option. Skip indique le nombre d’éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="edc9f-168">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="edc9f-169">Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d’éléments.</span><span class="sxs-lookup"><span data-stu-id="edc9f-169">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ShapeCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.ShapeCollection;'
      return:
        type:
          - excel.Excel.ShapeCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.ShapeCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel.Excel.ShapeCollection.load_1
    summary: <span data-ttu-id="edc9f-170">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="edc9f-170">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="edc9f-171">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="edc9f-171">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ShapeCollection;'
      return:
        type:
          - excel.Excel.ShapeCollection
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="edc9f-172">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="edc9f-172">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.ShapeCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.ShapeCollection;'
      return:
        type:
          - excel.Excel.ShapeCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - OfficeExtension.LoadOption
  - uid: excel.Excel.ShapeCollection.toJSON
    summary: '<span data-ttu-id="edc9f-173">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="edc9f-173">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="edc9f-174">.</span><span class="sxs-lookup"><span data-stu-id="edc9f-174"></span></span> <span data-ttu-id="edc9f-175">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="edc9f-175"></span></span><!-- --><span data-ttu-id="edc9f-176">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que `Excel.ShapeCollection` l’objet d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.ShapeCollectionData`</span><span class="sxs-lookup"><span data-stu-id="edc9f-176">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.ShapeCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ShapeCollectionData`</span></span><!-- --><span data-ttu-id="edc9f-177">) qui contient un tableau «éléments» avec des copies superficielles de toutes les propriétés chargées des éléments de la collection.</span><span class="sxs-lookup"><span data-stu-id="edc9f-177">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ShapeCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.ShapeCollectionData
        description: ''