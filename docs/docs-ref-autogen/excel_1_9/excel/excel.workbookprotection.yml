### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.WorkbookProtection:class'
    summary: "<span data-ttu-id=\"cfac9-101\">Représente la protection d’un objet Workbook.</span><span class=\"sxs-lookup\"><span data-stu-id=\"cfac9-101\">Represents the protection of a workbook object.</span></span>\n\n<span data-ttu-id=\"cfac9-102\">\\[[Ensemble d’API\_: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"cfac9-102\">\\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: Excel.WorkbookProtection
    fullName: Excel.WorkbookProtection
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.WorkbookProtection#context:member'
      - 'excel!Excel.WorkbookProtection#load:member(1)'
      - 'excel!Excel.WorkbookProtection#load:member(2)'
      - 'excel!Excel.WorkbookProtection#load:member(3)'
      - 'excel!Excel.WorkbookProtection#protect:member(1)'
      - 'excel!Excel.WorkbookProtection#protected:member'
      - 'excel!Excel.WorkbookProtection#toJSON:member(1)'
      - 'excel!Excel.WorkbookProtection#unprotect:member(1)'
  - uid: 'excel!Excel.WorkbookProtection#context:member'
    summary: <span data-ttu-id="cfac9-103">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="cfac9-103">The request context associated with the object.</span></span> <span data-ttu-id="cfac9-104">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="cfac9-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.WorkbookProtection#load:member(1)'
    summary: <span data-ttu-id="cfac9-105">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="cfac9-105">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="cfac9-106">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="cfac9-106">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.WorkbookProtectionLoadOptions): Excel.WorkbookProtection;'
      return:
        type:
          - 'excel!Excel.WorkbookProtection:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="cfac9-107">Fournit des options pour les propriétés de l’objet à charger.</span><span class="sxs-lookup"><span data-stu-id="cfac9-107">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.Interfaces.WorkbookProtectionLoadOptions:interface'
  - uid: 'excel!Excel.WorkbookProtection#load:member(2)'
    summary: <span data-ttu-id="cfac9-108">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="cfac9-108">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="cfac9-109">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="cfac9-109">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.WorkbookProtection;'
      return:
        type:
          - 'excel!Excel.WorkbookProtection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="cfac9-110">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="cfac9-110">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.WorkbookProtection#load:member(3)'
    summary: <span data-ttu-id="cfac9-111">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="cfac9-111">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="cfac9-112">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="cfac9-112">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.WorkbookProtection;
      return:
        type:
          - 'excel!Excel.WorkbookProtection:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="cfac9-113">`propertyNamesAndPaths.select`est une chaîne délimitée par des virgules qui spécifie les propriétés à `propertyNamesAndPaths.expand` charger et une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="cfac9-113">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.WorkbookProtection#protect:member(1)'
    summary: "<span data-ttu-id=\"cfac9-114\">Protège un classeur.</span><span class=\"sxs-lookup\"><span data-stu-id=\"cfac9-114\">Protects a workbook.</span></span> <span data-ttu-id=\"cfac9-115\">Échoue si le classeur est protégé.</span><span class=\"sxs-lookup\"><span data-stu-id=\"cfac9-115\">Fails if the workbook has been protected.</span></span>\n\n<span data-ttu-id=\"cfac9-116\">\\[[Ensemble d’API\_: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"cfac9-116\">\\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: protect(password)
    fullName: protect(password)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'protect(password?: string): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="cfac9-117">Exemples</span><span class="sxs-lookup"><span data-stu-id="cfac9-117">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let workbook = context.workbook;
              workbook.load("protection/protected");

              await context.sync();

              if (!workbook.protection.protected) {
                  workbook.protection.protect();
              }
          });
          ```
          ```typescript
          let password = await passwordHandler();
          passwordHelper(password);
          await Excel.run(async (context) => {
              let workbook = context.workbook;
              workbook.load("protection/protected");

              await context.sync();

              if (!workbook.protection.protected) {
                  workbook.protection.protect(password);
              }
          });
          ```
      parameters:
        - id: password
          description: <span data-ttu-id="cfac9-118">mot de passe de protection du classeur.</span><span class="sxs-lookup"><span data-stu-id="cfac9-118">workbook protection password.</span></span>
          type:
            - string
  - uid: 'excel!Excel.WorkbookProtection#protected:member'
    summary: "<span data-ttu-id=\"cfac9-119\">Indique si le classeur est protégé.</span><span class=\"sxs-lookup\"><span data-stu-id=\"cfac9-119\">Indicates if the workbook is protected.</span></span> <span data-ttu-id=\"cfac9-120\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"cfac9-120\">Read-Only.</span></span>\n\n<span data-ttu-id=\"cfac9-121\">\\[[Ensemble d’API\_: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"cfac9-121\">\\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: protected
    fullName: protected
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly protected: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.WorkbookProtection#toJSON:member(1)'
    summary: '<span data-ttu-id="cfac9-122">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="cfac9-122">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="cfac9-123">.</span><span class="sxs-lookup"><span data-stu-id="cfac9-123"></span></span> <span data-ttu-id="cfac9-124">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="cfac9-124"></span></span><!-- --><span data-ttu-id="cfac9-125">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que l’objet Excel. Objetworkbookprotection d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.WorkbookProtectionData`</span><span class="sxs-lookup"><span data-stu-id="cfac9-125">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.WorkbookProtection object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.WorkbookProtectionData`</span></span><!-- --><span data-ttu-id="cfac9-126">) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l’objet d’origine.</span><span class="sxs-lookup"><span data-stu-id="cfac9-126">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.WorkbookProtectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.WorkbookProtectionData:interface'
        description: ''
  - uid: 'excel!Excel.WorkbookProtection#unprotect:member(1)'
    summary: "<span data-ttu-id=\"cfac9-127\">Annule la protection un classeur.</span><span class=\"sxs-lookup\"><span data-stu-id=\"cfac9-127\">Unprotects a workbook.</span></span>\n\n<span data-ttu-id=\"cfac9-128\">\\[[Ensemble d’API\_: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"cfac9-128\">\\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: unprotect(password)
    fullName: unprotect(password)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'unprotect(password?: string): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="cfac9-129">Exemples</span><span class="sxs-lookup"><span data-stu-id="cfac9-129">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let workbook = context.workbook;
              workbook.protection.unprotect();
          });
          ```
          ```typescript
          let password = await passwordHandler();
          passwordHelper(password);
          await Excel.run(async (context) => {
              let workbook = context.workbook;
              workbook.protection.unprotect(password);
          });
          ```
      parameters:
        - id: password
          description: <span data-ttu-id="cfac9-130">mot de passe de protection du classeur.</span><span class="sxs-lookup"><span data-stu-id="cfac9-130">workbook protection password.</span></span>
          type:
            - string
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.WorkbookProtection:class'
    name: Excel.WorkbookProtection
  - uid: 'excel!Excel.Interfaces.WorkbookProtectionLoadOptions:interface'
    name: Excel.Interfaces.WorkbookProtectionLoadOptions
  - uid: 'excel!Excel.Interfaces.WorkbookProtectionData:interface'
    name: Excel.Interfaces.WorkbookProtectionData