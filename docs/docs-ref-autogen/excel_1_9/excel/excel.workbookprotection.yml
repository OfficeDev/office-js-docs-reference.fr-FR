### YamlMime:UniversalReference
items:
  - uid: excel.Excel.WorkbookProtection
    summary: |-
      <span data-ttu-id="1ac98-101">Représente la protection d’un objet Workbook.</span><span class="sxs-lookup"><span data-stu-id="1ac98-101">Represents the protection of a workbook object.</span></span>

      <span data-ttu-id="1ac98-102">\[[Ensemble d’API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1ac98-102">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.WorkbookProtection
    fullName: Excel.WorkbookProtection
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.WorkbookProtection.context
      - excel.Excel.WorkbookProtection.load
      - excel.Excel.WorkbookProtection.load_1
      - excel.Excel.WorkbookProtection.load_2
      - excel.Excel.WorkbookProtection.protect
      - excel.Excel.WorkbookProtection.protected
      - excel.Excel.WorkbookProtection.toJSON
      - excel.Excel.WorkbookProtection.unprotect
  - uid: excel.Excel.WorkbookProtection.context
    summary: <span data-ttu-id="1ac98-103">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="1ac98-103">The request context associated with the object.</span></span> <span data-ttu-id="1ac98-104">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="1ac98-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.WorkbookProtection.load
    summary: "<span data-ttu-id=\"1ac98-105\">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1ac98-105\">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id=\"1ac98-106\">Vous devez appeler «\_context.sync()\_» avant de lire les propriétés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1ac98-106\">You must call \"context.sync()\" before reading the properties.</span></span>"
    remarks: |-
      <span data-ttu-id="1ac98-107">En plus de cette signature, cette méthode possède les signatures suivantes:</span><span class="sxs-lookup"><span data-stu-id="1ac98-107">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="1ac98-108">`load(option?: string | string[]): Excel.WorkbookProtection`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="1ac98-108">`load(option?: string | string[]): Excel.WorkbookProtection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="1ac98-109">`load(option?: { select?: string; expand?: string; }): Excel.WorkbookProtection`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="1ac98-109">`load(option?: { select?: string; expand?: string; }): Excel.WorkbookProtection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="1ac98-110">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.WorkbookProtection`-Uniquement disponible sur les types de collection.</span><span class="sxs-lookup"><span data-stu-id="1ac98-110">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.WorkbookProtection` - Only available on collection types.</span></span> <span data-ttu-id="1ac98-111">Elle est similaire à la signature précédente.</span><span class="sxs-lookup"><span data-stu-id="1ac98-111">It is similar to the preceding signature.</span></span> <span data-ttu-id="1ac98-112">Option. Top indique le nombre maximal d’éléments de collection qui peuvent être inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="1ac98-112">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="1ac98-113">Option. Skip indique le nombre d’éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="1ac98-113">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="1ac98-114">Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d’éléments.</span><span class="sxs-lookup"><span data-stu-id="1ac98-114">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.WorkbookProtectionLoadOptions): Excel.WorkbookProtection;'
      return:
        type:
          - excel.Excel.WorkbookProtection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.WorkbookProtectionLoadOptions
  - uid: excel.Excel.WorkbookProtection.load_1
    summary: <span data-ttu-id="1ac98-115">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="1ac98-115">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1ac98-116">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="1ac98-116">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.WorkbookProtection;'
      return:
        type:
          - excel.Excel.WorkbookProtection
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="1ac98-117">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="1ac98-117">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.WorkbookProtection.load_2
    summary: <span data-ttu-id="1ac98-118">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="1ac98-118">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1ac98-119">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="1ac98-119">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.WorkbookProtection;'
      return:
        type:
          - excel.Excel.WorkbookProtection
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="1ac98-120">Où propertyNamesAndPaths. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et propertyNamesAndPaths. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="1ac98-120">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.WorkbookProtection.protect
    summary: |-
      <span data-ttu-id="1ac98-121">Protège un classeur.</span><span class="sxs-lookup"><span data-stu-id="1ac98-121">Protects a workbook.</span></span> <span data-ttu-id="1ac98-122">Échoue si le classeur est protégé.</span><span class="sxs-lookup"><span data-stu-id="1ac98-122">Fails if the workbook has been protected.</span></span>

      <span data-ttu-id="1ac98-123">\[[Ensemble d’API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1ac98-123">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: protect(password)
    fullName: protect(password)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'protect(password?: string): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="1ac98-124">Exemples</span><span class="sxs-lookup"><span data-stu-id="1ac98-124">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let workbook = context.workbook;
              workbook.load("protection/protected");

              await context.sync();

              if (!workbook.protection.protected) {
                  workbook.protection.protect();
              }
          });
          ```
          ```typescript
          let password = await passwordHandler();
          passwordHelper(password);
          await Excel.run(async (context) => {
              let workbook = context.workbook;
              workbook.load("protection/protected");

              await context.sync();

              if (!workbook.protection.protected) {
                  workbook.protection.protect(password);
              }
          });
          ```
      parameters:
        - id: password
          description: <span data-ttu-id="1ac98-125">mot de passe de protection du classeur.</span><span class="sxs-lookup"><span data-stu-id="1ac98-125">workbook protection password.</span></span>
          type:
            - string
  - uid: excel.Excel.WorkbookProtection.protected
    summary: |-
      <span data-ttu-id="1ac98-126">Indique si le classeur est protégé.</span><span class="sxs-lookup"><span data-stu-id="1ac98-126">Indicates if the workbook is protected.</span></span> <span data-ttu-id="1ac98-127">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="1ac98-127">Read-Only.</span></span>

      <span data-ttu-id="1ac98-128">\[[Ensemble d’API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1ac98-128">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: protected
    fullName: protected
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly protected: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.WorkbookProtection.toJSON
    summary: '<span data-ttu-id="1ac98-129">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="1ac98-129">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="1ac98-130">.</span><span class="sxs-lookup"><span data-stu-id="1ac98-130"></span></span> <span data-ttu-id="1ac98-131">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="1ac98-131"></span></span><!-- --><span data-ttu-id="1ac98-132">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que l’objet Excel. Objetworkbookprotection d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.WorkbookProtectionData`</span><span class="sxs-lookup"><span data-stu-id="1ac98-132">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.WorkbookProtection object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.WorkbookProtectionData`</span></span><!-- --><span data-ttu-id="1ac98-133">) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l’objet d’origine.</span><span class="sxs-lookup"><span data-stu-id="1ac98-133">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.WorkbookProtectionData;'
      return:
        type:
          - excel.Excel.Interfaces.WorkbookProtectionData
        description: ''
  - uid: excel.Excel.WorkbookProtection.unprotect
    summary: |-
      <span data-ttu-id="1ac98-134">Annule la protection un classeur.</span><span class="sxs-lookup"><span data-stu-id="1ac98-134">Unprotects a workbook.</span></span>

      <span data-ttu-id="1ac98-135">\[[Ensemble d’API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1ac98-135">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: unprotect(password)
    fullName: unprotect(password)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'unprotect(password?: string): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="1ac98-136">Exemples</span><span class="sxs-lookup"><span data-stu-id="1ac98-136">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let workbook = context.workbook;
              workbook.protection.unprotect();
          });
          ```
          ```typescript
          let password = await passwordHandler();
          passwordHelper(password);
          await Excel.run(async (context) => {
              let workbook = context.workbook;
              workbook.protection.unprotect(password);
          });
          ```
      parameters:
        - id: password
          description: <span data-ttu-id="1ac98-137">mot de passe de protection du classeur.</span><span class="sxs-lookup"><span data-stu-id="1ac98-137">workbook protection password.</span></span>
          type:
            - string