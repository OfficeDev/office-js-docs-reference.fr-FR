### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.PivotItemCollection:class'
    summary: "<span data-ttu-id=\"7c5b1-101\">Représente une collection de tous les éléments de tableau croisé dynamique liés à leur champ PivotField parent.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7c5b1-101\">Represents a collection of all the PivotItems related to their parent PivotField.</span></span>\n\n<span data-ttu-id=\"7c5b1-102\">\\[[Ensemble d’API\_: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"7c5b1-102\">\\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: Excel.PivotItemCollection
    fullName: Excel.PivotItemCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.PivotItemCollection#context:member'
      - 'excel!Excel.PivotItemCollection#getCount:member(1)'
      - 'excel!Excel.PivotItemCollection#getItem:member(1)'
      - 'excel!Excel.PivotItemCollection#getItemOrNullObject:member(1)'
      - 'excel!Excel.PivotItemCollection#items:member'
      - 'excel!Excel.PivotItemCollection#load:member(1)'
      - 'excel!Excel.PivotItemCollection#load:member(2)'
      - 'excel!Excel.PivotItemCollection#load:member(3)'
      - 'excel!Excel.PivotItemCollection#toJSON:member(1)'
  - uid: 'excel!Excel.PivotItemCollection#context:member'
    summary: <span data-ttu-id="7c5b1-103">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="7c5b1-103">The request context associated with the object.</span></span> <span data-ttu-id="7c5b1-104">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="7c5b1-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.PivotItemCollection#getCount:member(1)'
    summary: "<span data-ttu-id=\"7c5b1-105\">Obtient le nombre de PivotItems dans la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7c5b1-105\">Gets the number of PivotItems in the collection.</span></span>\n\n<span data-ttu-id=\"7c5b1-106\">\\[[Ensemble d’API\_: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"7c5b1-106\">\\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.PivotItemCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.PivotItemCollection#getItem:member(1)'
    summary: "<span data-ttu-id=\"7c5b1-107\">Obtient un PivotItem par son nom ou son ID.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7c5b1-107\">Gets a PivotItem by its name or id.</span></span>\n\n<span data-ttu-id=\"7c5b1-108\">\\[[Ensemble d’API\_: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"7c5b1-108\">\\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: getItem(name)
    fullName: getItem(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(name: string): Excel.PivotItem;'
      return:
        type:
          - 'excel!Excel.PivotItem:class'
        description: ''
      parameters:
        - id: name
          description: <span data-ttu-id="7c5b1-109">Nom du PivotItem à récupérer.</span><span class="sxs-lookup"><span data-stu-id="7c5b1-109">Name of the PivotItem to be retrieved.</span></span>
          type:
            - string
  - uid: 'excel!Excel.PivotItemCollection#getItemOrNullObject:member(1)'
    summary: "<span data-ttu-id=\"7c5b1-110\">Obtient un PivotItem par nom.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7c5b1-110\">Gets a PivotItem by name.</span></span> <span data-ttu-id=\"7c5b1-111\">Si PivotItem n’existe pas, renvoie un objet null.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7c5b1-111\">If the PivotItem does not exist, will return a null object.</span></span>\n\n<span data-ttu-id=\"7c5b1-112\">\\[[Ensemble d’API\_: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"7c5b1-112\">\\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: getItemOrNullObject(name)
    fullName: getItemOrNullObject(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(name: string): Excel.PivotItem;'
      return:
        type:
          - 'excel!Excel.PivotItem:class'
        description: ''
      parameters:
        - id: name
          description: <span data-ttu-id="7c5b1-113">Nom du PivotItem à récupérer.</span><span class="sxs-lookup"><span data-stu-id="7c5b1-113">Name of the PivotItem to be retrieved.</span></span>
          type:
            - string
  - uid: 'excel!Excel.PivotItemCollection#items:member'
    summary: <span data-ttu-id="7c5b1-114">Obtient l’élément enfant chargé dans cette collection de sites.</span><span class="sxs-lookup"><span data-stu-id="7c5b1-114">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.PivotItem[];'
      return:
        type:
          - 'excel!Excel.PivotItemCollection#items~0:complex'
  - uid: 'excel!Excel.PivotItemCollection#load:member(1)'
    summary: "<span data-ttu-id=\"7c5b1-115\">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7c5b1-115\">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id=\"7c5b1-116\">Vous devez appeler «\_context.sync()\_» avant de lire les propriétés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7c5b1-116\">You must call \"context.sync()\" before reading the properties.</span></span>"
    remarks: "<span data-ttu-id=\"7c5b1-117\">En plus de cette signature, cette méthode possède les signatures suivantes\_:</span><span class=\"sxs-lookup\"><span data-stu-id=\"7c5b1-117\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"7c5b1-118\">`load(option?: string | string[]): Excel.PivotItemCollection`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7c5b1-118\">`load(option?: string | string[]): Excel.PivotItemCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>\n\n<span data-ttu-id=\"7c5b1-119\">`load(option?: { select?: string; expand?: string; }): Excel.PivotItemCollection`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7c5b1-119\">`load(option?: { select?: string; expand?: string; }): Excel.PivotItemCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"7c5b1-120\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotItemCollection`-Uniquement disponible sur les types de collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7c5b1-120\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotItemCollection` - Only available on collection types.</span></span> <span data-ttu-id=\"7c5b1-121\">Elle est similaire à la signature précédente.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7c5b1-121\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"7c5b1-122\">Option. Top indique le nombre maximal d’éléments de collection qui peuvent être inclus dans le résultat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7c5b1-122\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"7c5b1-123\">Option. Skip indique le nombre d’éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7c5b1-123\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"7c5b1-124\">Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d’éléments.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7c5b1-124\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>"
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.PivotItemCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.PivotItemCollection;'
      return:
        type:
          - 'excel!Excel.PivotItemCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.PivotItemCollection#load~0:complex'
  - uid: 'excel!Excel.PivotItemCollection#load:member(2)'
    summary: <span data-ttu-id="7c5b1-125">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="7c5b1-125">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="7c5b1-126">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="7c5b1-126">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.PivotItemCollection;'
      return:
        type:
          - 'excel!Excel.PivotItemCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="7c5b1-127">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="7c5b1-127">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.PivotItemCollection#load:member(3)'
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.PivotItemCollection;'
      return:
        type:
          - 'excel!Excel.PivotItemCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.PivotItemCollection#toJSON:member(1)'
    summary: "<span data-ttu-id=\"7c5b1-128\">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class=\"sxs-lookup\"><span data-stu-id=\"7c5b1-128\">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id=\"7c5b1-129\">.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7c5b1-129\"></span></span> <span data-ttu-id=\"7c5b1-130\">(`JSON.stringify`</span><span class=\"sxs-lookup\"><span data-stu-id=\"7c5b1-130\"></span></span><!-- --><span data-ttu-id=\"7c5b1-131\">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que `Excel.PivotItemCollection` l’objet d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.PivotItemCollectionData`</span><span class=\"sxs-lookup\"><span data-stu-id=\"7c5b1-131\">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.PivotItemCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.PivotItemCollectionData`</span></span><!-- --><span data-ttu-id=\"7c5b1-132\">) qui contient un tableau «\_éléments\_» avec des copies superficielles de toutes les propriétés chargées des éléments de la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7c5b1-132\">) that contains an \"items\" array with shallow copies of any loaded properties from the collection's items.</span></span>"
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.PivotItemCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.PivotItemCollectionData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.PivotItemCollection#getCount~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel!Excel.PivotItem:class'
    name: Excel.PivotItem
  - uid: 'excel!Excel.PivotItemCollection#items~0:complex'
    name: 'Excel.PivotItem[]'
    fullName: 'Excel.PivotItem[]'
    spec.typeScript:
      - uid: 'excel!Excel.PivotItem:class'
        name: Excel.PivotItem
        fullName: Excel.PivotItem
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.PivotItemCollection:class'
    name: Excel.PivotItemCollection
  - uid: 'excel!Excel.PivotItemCollection#load~0:complex'
    name: Excel.Interfaces.PivotItemCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.PivotItemCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.PivotItemCollectionLoadOptions:interface'
        name: Excel.Interfaces.PivotItemCollectionLoadOptions
        fullName: Excel.Interfaces.PivotItemCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'excel!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.Interfaces.PivotItemCollectionData:interface'
    name: Excel.Interfaces.PivotItemCollectionData