### YamlMime:UniversalReference
ms.openlocfilehash: dc1b30c8d34e497175a8de4db5299287a455c2e3
ms.sourcegitcommit: 2dcedf6deec4167dca476a42dad411e28cc92a97
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 01/23/2019
ms.locfileid: "29385349"
items:
- uid: onenote.OneNote.NotebookCollection
  summary: >-
    <span data-ttu-id="28101-101">Représente une collection de blocs-notes.</span><span class="sxs-lookup"><span data-stu-id="28101-101">Represents a collection of notebooks.</span></span>


    <span data-ttu-id="28101-102">\[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="28101-102">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: OneNote.NotebookCollection
  fullName: OneNote.NotebookCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: onenote
  children:
  - onenote.OneNote.NotebookCollection.context
  - onenote.OneNote.NotebookCollection.count
  - onenote.OneNote.NotebookCollection.getByName
  - onenote.OneNote.NotebookCollection.getItem
  - onenote.OneNote.NotebookCollection.getItemAt
  - onenote.OneNote.NotebookCollection.items
  - onenote.OneNote.NotebookCollection.load
  - onenote.OneNote.NotebookCollection.toJSON
  - onenote.OneNote.NotebookCollection.track
  - onenote.OneNote.NotebookCollection.untrack
- uid: onenote.OneNote.NotebookCollection.context
  summary: <span data-ttu-id="28101-103">Contexte de la requête associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="28101-103">The request context associated with the object.</span></span> <span data-ttu-id="28101-104">Il connecte processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="28101-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: onenote.OneNote.NotebookCollection.count
  summary: >-
    <span data-ttu-id="28101-p102">Renvoie le nombre de blocs-notes de la collection. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="28101-p102">Returns the number of notebooks in the collection. Read-only.</span></span>


    <span data-ttu-id="28101-107">\[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="28101-107">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: count
  fullName: count
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly count: number;'
    return:
      type:
      - number
- uid: onenote.OneNote.NotebookCollection.getByName
  summary: >-
    <span data-ttu-id="28101-108">Obtient la collection de blocs-notes portant le nom spécifié qui sont ouverts dans l’instance de l’application.</span><span class="sxs-lookup"><span data-stu-id="28101-108">Gets the collection of notebooks with the specified name that are open in the application instance.</span></span>


    <span data-ttu-id="28101-109">\[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="28101-109">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getByName(name)
  fullName: getByName
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getByName(name: string): OneNote.NotebookCollection;'
    return:
      type:
      - onenote.OneNote.NotebookCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"28101-110\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"28101-110\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the notebooks that are open in the application instance and have the specified name.\n    var notebooks = context.application.notebooks.getByName(\"Homework\");\n\n    // Queue a command to load the notebooks. \n    // For best performance, request specific properties.           \n    notebooks.load(\"id,name\");\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            // Iterate through the collection or access items individually by index,\n            // for example: notebooks.items[0]\n            if (notebooks.items.length > 0) {\n                console.log(\"Notebook name: \" + notebooks.items[0].name);\n                console.log(\"Notebook ID: \" + notebooks.items[0].id);\n            }\n                \n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: name
      description: <span data-ttu-id="28101-111">Nom du bloc-notes.</span><span class="sxs-lookup"><span data-stu-id="28101-111">The name of the notebook.</span></span>
      type:
      - string
- uid: onenote.OneNote.NotebookCollection.getItem
  summary: >-
    <span data-ttu-id="28101-p103">Obtient un bloc-notes en fonction de son ID ou de son index dans la collection. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="28101-p103">Gets a notebook by ID or by its index in the collection. Read-only.</span></span>


    <span data-ttu-id="28101-114">\[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="28101-114">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getItem(index)
  fullName: getItem
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(index: number | string): OneNote.Notebook;'
    return:
      type:
      - onenote.OneNote.Notebook
      description: ''
    parameters:
    - id: index
      description: <span data-ttu-id="28101-115">ID ou emplacement d’index du bloc-notes dans la collection.</span><span class="sxs-lookup"><span data-stu-id="28101-115">The ID of the notebook, or the index location of the notebook in the collection.</span></span>
      type:
      - number | string
- uid: onenote.OneNote.NotebookCollection.getItemAt
  summary: >-
    <span data-ttu-id="28101-116">Obtient un bloc-notes en fonction de sa position dans la collection.</span><span class="sxs-lookup"><span data-stu-id="28101-116">Gets a notebook on its position in the collection.</span></span>


    <span data-ttu-id="28101-117">\[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="28101-117">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getItemAt(index)
  fullName: getItemAt
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): OneNote.Notebook;'
    return:
      type:
      - onenote.OneNote.Notebook
      description: ''
    parameters:
    - id: index
      description: <span data-ttu-id="28101-p104">Valeur d’indice de l’objet à récupérer. Avec indice zéro.</span><span class="sxs-lookup"><span data-stu-id="28101-p104">Index value of the object to be retrieved. Zero-indexed.</span></span>
      type:
      - number
- uid: onenote.OneNote.NotebookCollection.items
  summary: <span data-ttu-id="28101-120">Obtient l’enfant chargé éléments dans cette collection.</span><span class="sxs-lookup"><span data-stu-id="28101-120">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: OneNote.Notebook[];'
    return:
      type:
      - OneNote.Notebook[]
- uid: onenote.OneNote.NotebookCollection.load
  summary: <span data-ttu-id="28101-121">Files d’attente d’une commande pour charger les propriétés de l’objet spécifiées.</span><span class="sxs-lookup"><span data-stu-id="28101-121">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="28101-122">Vous devez appeler « context.sync() » avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="28101-122">You must call "context.sync()" before reading the properties.</span></span>
  remarks: "<span data-ttu-id=\"28101-123\">Outre cette signature, cette méthode présente les signatures suivantes :</span><span class=\"sxs-lookup\"><span data-stu-id=\"28101-123\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"28101-124\">`load(option?: { select?: string; expand?: string; }): OneNote.NotebookCollection`-Où option.select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options.expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class=\"sxs-lookup\"><span data-stu-id=\"28101-124\">`load(option?: { select?: string; expand?: string; }): OneNote.NotebookCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"28101-125\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.NotebookCollection`-Uniquement disponible sur les types de la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"28101-125\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.NotebookCollection` - Only available on collection types.</span></span> <span data-ttu-id=\"28101-126\">Il est similaire à la signature précédente.</span><span class=\"sxs-lookup\"><span data-stu-id=\"28101-126\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"28101-127\">Option.Top Spécifie le nombre maximal d’éléments pouvant être inclus dans le résultat de la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"28101-127\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"28101-128\">Option.Skip Spécifie le nombre d’éléments qui doivent être ignoré et non inclus dans le résultat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"28101-128\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"28101-129\">Si option.top est spécifié, le jeu de résultats démarre après l’ignorer le nombre spécifié d’éléments.</span><span class=\"sxs-lookup\"><span data-stu-id=\"28101-129\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"28101-130\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"28101-130\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the notebooks that are open in the application instance and have the specified name.\n    var notebooks = context.application.notebooks.getByName(\"Homework\");\n\n    // Queue a command to load the notebooks. \n    // For best performance, request specific properties.           \n    notebooks.load(\"id\");\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            // Iterate through the collection or access items individually by index, \n            // for example: notebooks.items[0]\n            $.each(notebooks.items, function(index, notebook) {\n                notebook.addSection(\"Biology\");\n                notebook.addSection(\"Spanish\");\n                notebook.addSection(\"Computer Science\");\n            });\n            \n            return context.sync();\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): OneNote.NotebookCollection;'
    return:
      type:
      - onenote.OneNote.NotebookCollection
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="28101-131">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="28101-131">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: onenote.OneNote.NotebookCollection.toJSON
  summary: <span data-ttu-id="28101-132">Remplace le code JavaScript `toJSON()` méthode afin de fournir une sortie plus utile lorsqu’un objet API est passé à `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="28101-132">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="28101-133">(`JSON.stringify`<!-- -->, à son tour, appelle le `toJSON` méthode de l’objet qui lui est passé.) Tandis que l’original `OneNote.NotebookCollection` objet est un objet d’API, la `toJSON` méthode renvoie un objet JavaScript brut (typée en tant que `OneNote.Interfaces.NotebookCollectionData` <!-- -->) qui contient un tableau « éléments » avec copies superficielles de toutes les propriétés chargées à partir des éléments de la collection.</span><span class="sxs-lookup"><span data-stu-id="28101-133">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `OneNote.NotebookCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `OneNote.Interfaces.NotebookCollectionData`<!-- -->) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): OneNote.Interfaces.NotebookCollectionData;'
    return:
      type:
      - onenote.OneNote.Interfaces.NotebookCollectionData
      description: ''
- uid: onenote.OneNote.NotebookCollection.track
  summary: <span data-ttu-id="28101-134">Suivre l’objet pour l’ajustement automatique selon entourant les modifications dans le document.</span><span class="sxs-lookup"><span data-stu-id="28101-134">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="28101-135">Cet appel est une abréviation de context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="28101-135">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="28101-136">Si vous utilisez cet objet dans les appels de « .sync » et en dehors de l’exécution séquentielle d’un lot de « .run » et obtenir une erreur « InvalidObjectPath » lors de la définition d’une propriété ou d’appeler une méthode sur l’objet, vous devez avoir ajouté l’objet à l’objet suivi collection lorsque l’objet a été créé tout d’abord.</span><span class="sxs-lookup"><span data-stu-id="28101-136">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>
  name: track()
  fullName: track
  langs:
  - typeScript
  type: method
  syntax:
    content: 'track(): OneNote.NotebookCollection;'
    return:
      type:
      - onenote.OneNote.NotebookCollection
      description: ''
- uid: onenote.OneNote.NotebookCollection.untrack
  summary: <span data-ttu-id="28101-137">Version de la mémoire associée à cet objet, si elle a été précédemment suivi.</span><span class="sxs-lookup"><span data-stu-id="28101-137">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="28101-138">Cet appel est l’abréviation de context.trackedObjects.remove(thisObject).</span><span class="sxs-lookup"><span data-stu-id="28101-138">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="28101-139">Comportant de nombreux objets suivis ralentit l’application hôte, donc pensez à libérer les objets que vous ajoutez, une fois que vous avez terminé les utiliser.</span><span class="sxs-lookup"><span data-stu-id="28101-139">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them.</span></span> <span data-ttu-id="28101-140">Vous devrez appeler « context.sync() » avant que la version de mémoire prenne effet.</span><span class="sxs-lookup"><span data-stu-id="28101-140">You will need to call "context.sync()" before the memory release takes effect.</span></span>
  name: untrack()
  fullName: untrack
  langs:
  - typeScript
  type: method
  syntax:
    content: 'untrack(): OneNote.NotebookCollection;'
    return:
      type:
      - onenote.OneNote.NotebookCollection
      description: ''
