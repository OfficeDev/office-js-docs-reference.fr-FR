### YamlMime:UniversalReference
ms.openlocfilehash: 10737336d011fe6c5a29f0e1e139c8ba5061732e
ms.sourcegitcommit: 262b7c417245b7b61a57d53eee33a477a722ca6e
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 09/28/2018
ms.locfileid: "24043664"
items:
- uid: onenote.OneNote.NotebookCollection
  summary: >-
    Représente une collection de blocs-notes.


    \[[Du jeu d’API : OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets)\]
  name: OneNote.NotebookCollection
  fullName: onenote.OneNote.NotebookCollection
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: onenote
  children:
  - onenote.OneNote.NotebookCollection.count
  - onenote.OneNote.NotebookCollection.getByName
  - onenote.OneNote.NotebookCollection.getItem
  - onenote.OneNote.NotebookCollection.getItemAt
  - onenote.OneNote.NotebookCollection.items
  - onenote.OneNote.NotebookCollection.load
  - onenote.OneNote.NotebookCollection.toJSON
  - onenote.OneNote.NotebookCollection.track
  - onenote.OneNote.NotebookCollection.untrack
- uid: onenote.OneNote.NotebookCollection.count
  summary: >-
    Renvoie le nombre de blocs-notes de la collection. En lecture seule.


    \[[Du jeu d’API : OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets)\]
  name: count
  fullName: onenote.OneNote.NotebookCollection.count
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly count: number;'
    return:
      type:
      - number
- uid: onenote.OneNote.NotebookCollection.getByName
  summary: >-
    Obtient la collection de blocs-notes portant le nom spécifié qui sont ouverts dans l’instance de l’application.


    \[[Du jeu d’API : OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets)\]
  name: getByName(name)
  fullName: onenote.OneNote.NotebookCollection.getByName
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getByName(name: string): OneNote.NotebookCollection;'
    return:
      type:
      - onenote.OneNote.NotebookCollection
      description: "\n#### <a name=\"examples\"></a>Exemples\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the notebooks that are open in the application instance and have the specified name.\n    var notebooks = context.application.notebooks.getByName(\"Homework\");\n\n    // Queue a command to load the notebooks. \n    // For best performance, request specific properties.           \n    notebooks.load(\"id,name\");\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            // Iterate through the collection or access items individually by index,\n            // for example: notebooks.items[0]\n            if (notebooks.items.length > 0) {\n                console.log(\"Notebook name: \" + notebooks.items[0].name);\n                console.log(\"Notebook ID: \" + notebooks.items[0].id);\n            }\n                \n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: name
      description: Nom du bloc-notes.
      type:
      - string
- uid: onenote.OneNote.NotebookCollection.getItem
  summary: >-
    Obtient un bloc-notes en fonction de son ID ou de son index dans la collection. En lecture seule.


    \[[Du jeu d’API : OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets)\]
  name: getItem(index)
  fullName: onenote.OneNote.NotebookCollection.getItem
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(index: number | string): OneNote.Notebook;'
    return:
      type:
      - onenote.OneNote.Notebook
      description: ''
    parameters:
    - id: index
      description: ID ou emplacement d’index du bloc-notes dans la collection.
      type:
      - number | string
- uid: onenote.OneNote.NotebookCollection.getItemAt
  summary: >-
    Obtient un bloc-notes en fonction de sa position dans la collection.


    \[[Du jeu d’API : OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets)\]
  name: getItemAt(index)
  fullName: onenote.OneNote.NotebookCollection.getItemAt
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): OneNote.Notebook;'
    return:
      type:
      - onenote.OneNote.Notebook
      description: ''
    parameters:
    - id: index
      description: Valeur d’indice de l’objet à récupérer. Avec indice zéro.
      type:
      - number
- uid: onenote.OneNote.NotebookCollection.items
  summary: Obtient l’enfant chargé éléments dans cette collection.
  name: items
  fullName: onenote.OneNote.NotebookCollection.items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: OneNote.Notebook[];'
    return:
      type:
      - OneNote.Notebook[]
- uid: onenote.OneNote.NotebookCollection.load
  summary: Files d’attente d’une commande pour charger les propriétés de l’objet spécifiées. Vous devez appeler « context.sync() » avant de lire les propriétés.
  remarks: "Outre cette signature, cette méthode présente les signatures suivantes :\n\n`load(option?: { select?: string; expand?: string; }): OneNote.NotebookCollection`-Où option.select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options.expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.\n\n`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.NotebookCollection`-Uniquement disponible sur les types de la collection. Il est similaire à la signature précédente. Option.Top Spécifie le nombre maximal d’éléments pouvant être inclus dans le résultat de la collection. Option.Skip Spécifie le nombre d’éléments qui doivent être ignoré et non inclus dans le résultat. Si option.top est spécifié, le jeu de résultats démarre après l’ignorer le nombre spécifié d’éléments.\n#### <a name=\"examples\"></a>Exemples\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the notebooks that are open in the application instance and have the specified name.\n    var notebooks = context.application.notebooks.getByName(\"Homework\");\n\n    // Queue a command to load the notebooks. \n    // For best performance, request specific properties.           \n    notebooks.load(\"id\");\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            // Iterate through the collection or access items individually by index, \n            // for example: notebooks.items[0]\n            $.each(notebooks.items, function(index, notebook) {\n                notebook.addSection(\"Biology\");\n                notebook.addSection(\"Spanish\");\n                notebook.addSection(\"Computer Science\");\n            });\n            \n            return context.sync();\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  name: load(option)
  fullName: onenote.OneNote.NotebookCollection.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): OneNote.NotebookCollection;'
    return:
      type:
      - onenote.OneNote.NotebookCollection
      description: ''
    parameters:
    - id: option
      description: Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.
      type:
      - string | string[]
- uid: onenote.OneNote.NotebookCollection.toJSON
  name: toJSON()
  fullName: onenote.OneNote.NotebookCollection.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): OneNote.Interfaces.NotebookCollectionData;'
    return:
      type:
      - onenote.OneNote.Interfaces.NotebookCollectionData
      description: ''
- uid: onenote.OneNote.NotebookCollection.track
  summary: Suivre l’objet pour l’ajustement automatique selon entourant les modifications dans le document. Cet appel est une abréviation de context.trackedObjects.add(thisObject). Si vous utilisez cet objet dans les appels de « .sync » et en dehors de l’exécution séquentielle d’un lot de « .run » et obtenir une erreur « InvalidObjectPath » lors de la définition d’une propriété ou d’appeler une méthode sur l’objet, vous devez avoir ajouté l’objet à l’objet suivi collection lorsque l’objet a été créé tout d’abord.
  name: track()
  fullName: onenote.OneNote.NotebookCollection.track
  langs:
  - typeScript
  type: method
  syntax:
    content: 'track(): OneNote.NotebookCollection;'
    return:
      type:
      - onenote.OneNote.NotebookCollection
      description: ''
- uid: onenote.OneNote.NotebookCollection.untrack
  summary: Version de la mémoire associée à cet objet, si elle a été précédemment suivi. Cet appel est l’abréviation de context.trackedObjects.remove(thisObject). Comportant de nombreux objets suivis ralentit l’application hôte, donc pensez à libérer les objets que vous ajoutez, une fois que vous avez terminé les utiliser. Vous devrez appeler « context.sync() » avant que la version de mémoire prenne effet.
  name: untrack()
  fullName: onenote.OneNote.NotebookCollection.untrack
  langs:
  - typeScript
  type: method
  syntax:
    content: 'untrack(): OneNote.NotebookCollection;'
    return:
      type:
      - onenote.OneNote.NotebookCollection
      description: ''
