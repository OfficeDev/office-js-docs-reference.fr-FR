### YamlMime:UniversalReference
ms.openlocfilehash: 136943e3ef0f2b1c2f98e549301a8b9fbc8bcead
ms.sourcegitcommit: 31847d2ea6be78b8f473dfbfb0a575fdecd877be
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 11/13/2018
ms.locfileid: "26298224"
items:
- uid: onenote.OneNote.Paragraph
  summary: >-
    <span data-ttu-id="36533-p101">Conteneur pour le contenu visible d’une page. Un paragraphe peut contenir n’importe quel type de contenu ParagraphType.</span><span class="sxs-lookup"><span data-stu-id="36533-p101">A container for the visible content on a page. A Paragraph can contain any one ParagraphType type of content.</span></span>


    <span data-ttu-id="36533-103">\[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="36533-103">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: OneNote.Paragraph
  fullName: OneNote.Paragraph
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: onenote
  children:
  - onenote.OneNote.Paragraph.addNoteTag
  - onenote.OneNote.Paragraph.delete
  - onenote.OneNote.Paragraph.getParagraphInfo
  - onenote.OneNote.Paragraph.id
  - onenote.OneNote.Paragraph.image
  - onenote.OneNote.Paragraph.inkWords
  - onenote.OneNote.Paragraph.insertHtmlAsSibling
  - onenote.OneNote.Paragraph.insertImageAsSibling
  - onenote.OneNote.Paragraph.insertRichTextAsSibling
  - onenote.OneNote.Paragraph.insertTableAsSibling
  - onenote.OneNote.Paragraph.load
  - onenote.OneNote.Paragraph.outline
  - onenote.OneNote.Paragraph.paragraphs
  - onenote.OneNote.Paragraph.parentParagraph
  - onenote.OneNote.Paragraph.parentParagraphOrNull
  - onenote.OneNote.Paragraph.parentTableCell
  - onenote.OneNote.Paragraph.parentTableCellOrNull
  - onenote.OneNote.Paragraph.richText
  - onenote.OneNote.Paragraph.table
  - onenote.OneNote.Paragraph.toJSON
  - onenote.OneNote.Paragraph.track
  - onenote.OneNote.Paragraph.type
  - onenote.OneNote.Paragraph.untrack
- uid: onenote.OneNote.Paragraph.addNoteTag
  summary: >-
    <span data-ttu-id="36533-104">Ajoutez NoteTag au paragraphe.</span><span class="sxs-lookup"><span data-stu-id="36533-104">Add NoteTag to the paragraph.</span></span>


    <span data-ttu-id="36533-105">\[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="36533-105">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: addNoteTag(type, status)
  fullName: addNoteTag
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addNoteTag(type: OneNote.NoteTagType, status: OneNote.NoteTagStatus): OneNote.NoteTag;'
    return:
      type:
      - onenote.OneNote.NoteTag
      description: ''
    parameters:
    - id: type
      description: <span data-ttu-id="36533-106">Le type de la NoteTag.</span><span class="sxs-lookup"><span data-stu-id="36533-106">The type of the NoteTag.</span></span>
      type:
      - onenote.OneNote.NoteTagType
    - id: status
      description: <span data-ttu-id="36533-107">L’état de la NoteTag.</span><span class="sxs-lookup"><span data-stu-id="36533-107">The status of the NoteTag.</span></span>
      type:
      - onenote.OneNote.NoteTagStatus
- uid: onenote.OneNote.Paragraph.delete
  summary: >-
    <span data-ttu-id="36533-108">Supprime le paragraphe.</span><span class="sxs-lookup"><span data-stu-id="36533-108">Deletes the paragraph</span></span>


    <span data-ttu-id="36533-109">\[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="36533-109">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: delete()
  fullName: delete
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"36533-110\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"36533-110\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n\n    // Get the first PageContent on the page\n    // Assuming its an outline, get the outline's paragraphs.\n    var pageContent = pageContents.getItemAt(0);\n    \n    var paragraphs = pageContent.outline.paragraphs;\n    \n    var firstParagraph = paragraphs.getItemAt(0);\n    \n    // Queue a command to load the id and type of the first paragraph\n    firstParagraph.load(\"id,type\");\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n            \n            // Queue a command to delete the first paragraph                 \n            firstParagraph.delete();\n            \n            // Run the command to delete it\n            return context.sync();\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: onenote.OneNote.Paragraph.getParagraphInfo
  summary: >-
    <span data-ttu-id="36533-111">Obtenir des informations sur la liste du paragraphe</span><span class="sxs-lookup"><span data-stu-id="36533-111">Get list information of paragraph</span></span>


    <span data-ttu-id="36533-112">\[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="36533-112">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getParagraphInfo()
  fullName: getParagraphInfo
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getParagraphInfo(): OfficeExtension.ClientResult<OneNote.ParagraphInfo>;'
    return:
      type:
      - OfficeExtension.ClientResult<OneNote.ParagraphInfo>
      description: ''
- uid: onenote.OneNote.Paragraph.id
  summary: >-
    <span data-ttu-id="36533-p102">Obtient l’ID de l’objet Paragraph. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="36533-p102">Gets the ID of the Paragraph object. Read-only.</span></span>


    <span data-ttu-id="36533-115">\[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="36533-115">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
- uid: onenote.OneNote.Paragraph.image
  summary: >-
    <span data-ttu-id="36533-p103">Renvoie l’objet Image dans le paragraphe. Renvoie une exception si ParagraphType n’est pas défini sur Image. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="36533-p103">Gets the Image object in the Paragraph. Throws an exception if ParagraphType is not Image. Read-only.</span></span>


    <span data-ttu-id="36533-119">\[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="36533-119">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: image
  fullName: image
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly image: OneNote.Image;'
    return:
      type:
      - onenote.OneNote.Image
- uid: onenote.OneNote.Paragraph.inkWords
  summary: >-
    <span data-ttu-id="36533-p104">Obtient la collection Ink dans le paragraphe. Renvoie une exception si ParagraphType n’est pas défini sur Ink. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="36533-p104">Gets the Ink collection in the Paragraph. Throws an exception if ParagraphType is not Ink. Read-only.</span></span>


    <span data-ttu-id="36533-123">\[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="36533-123">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: inkWords
  fullName: inkWords
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly inkWords: OneNote.InkWordCollection;'
    return:
      type:
      - onenote.OneNote.InkWordCollection
- uid: onenote.OneNote.Paragraph.insertHtmlAsSibling
  summary: >-
    <span data-ttu-id="36533-124">Insère le contenu HTML spécifié.</span><span class="sxs-lookup"><span data-stu-id="36533-124">Inserts the specified HTML content</span></span>


    <span data-ttu-id="36533-125">\[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="36533-125">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertHtmlAsSibling(insertLocation, html)
  fullName: insertHtmlAsSibling
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertHtmlAsSibling(insertLocation: OneNote.InsertLocation, html: string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"36533-126\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"36533-126\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n\n    // Get the first PageContent on the page\n    // Assuming its an outline, get the outline's paragraphs.\n    var pageContent = pageContents.getItemAt(0);\n    var paragraphs = pageContent.outline.paragraphs;\n    var firstParagraph = paragraphs.getItemAt(0);\n\n    // Queue a command to load the id and type of the first paragraph\n    firstParagraph.load(\"id,type\");\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            // Queue commands to insert before and after the first paragraph\n            firstParagraph.insertHtmlAsSibling(\"Before\", \"<p>ContentBeforeFirstParagraph</p>\");\n            firstParagraph.insertHtmlAsSibling(\"After\", \"<p>ContentAfterFirstParagraph</p>\");\n            \n            // Run the command to run inserts\n            return context.sync();\n        });\n))\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: insertLocation
      description: <span data-ttu-id="36533-127">Emplacement du nouveau contenu relatif au paragraphe actif.</span><span class="sxs-lookup"><span data-stu-id="36533-127">The location of new contents relative to the current Paragraph.</span></span>
      type:
      - onenote.OneNote.InsertLocation
    - id: html
      description: <span data-ttu-id="36533-128">Chaîne HTML qui décrit la présentation visuelle du contenu.</span><span class="sxs-lookup"><span data-stu-id="36533-128">An HTML string that describes the visual presentation of the content.</span></span> <span data-ttu-id="36533-129">Voir [HTML pris en charge](https://docs.microsoft.com/office/dev/add-ins/onenote/onenote-add-ins-page-content#supported-html) pour l’API JavaScript de compléments OneNote.</span><span class="sxs-lookup"><span data-stu-id="36533-129">See [Supported HTML](https://docs.microsoft.com/office/dev/add-ins/onenote/onenote-add-ins-page-content#supported-html) for the OneNote add-ins JavaScript API.</span></span>
      type:
      - string
- uid: onenote.OneNote.Paragraph.insertImageAsSibling
  summary: >-
    <span data-ttu-id="36533-130">Insère l’image à l’emplacement d’insertion spécifié.</span><span class="sxs-lookup"><span data-stu-id="36533-130">Inserts the image at the specified insert location..</span></span>


    <span data-ttu-id="36533-131">\[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="36533-131">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertImageAsSibling(insertLocation, base64EncodedImage, width, height)
  fullName: insertImageAsSibling
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertImageAsSibling(insertLocation: OneNote.InsertLocation, base64EncodedImage: string, width: number, height: number): OneNote.Image;'
    return:
      type:
      - onenote.OneNote.Image
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"36533-132\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"36533-132\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n\n    // Get the first PageContent on the page\n    // Assuming its an outline, get the outline's paragraphs.\n    var pageContent = pageContents.getItemAt(0);\n    var paragraphs = pageContent.outline.paragraphs;\n    var firstParagraph = paragraphs.getItemAt(0);\n\n    // Queue a command to load the id and type of the first paragraph\n    firstParagraph.load(\"id,type\");\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            // Queue commands to insert before and after the first paragraph\n            firstParagraph.insertImageAsSibling(\"Before\", \"R0lGODlhDwAPAKECAAAAzMzM/////wAAACwAAAAADwAPAAACIISPeQHsrZ5ModrLlN48CXF8m2iQ3YmmKqVlRtW4MLwWACH+H09wdGltaXplZCBieSBVbGVhZCBTbWFydFNhdmVyIQAAOw==\");\n            firstParagraph.insertImageAsSibling(\"After\", \"R0lGODlhDwAPAKECAAAAzMzM/////wAAACwAAAAADwAPAAACIISPeQHsrZ5ModrLlN48CXF8m2iQ3YmmKqVlRtW4MLwWACH+H09wdGltaXplZCBieSBVbGVhZCBTbWFydFNhdmVyIQAAOw==\");\n            \n            // Run the command to insert images\n            return context.sync();\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: insertLocation
      description: <span data-ttu-id="36533-133">Emplacement du tableau relatif au paragraphe actif.</span><span class="sxs-lookup"><span data-stu-id="36533-133">The location of the table relative to the current Paragraph.</span></span>
      type:
      - onenote.OneNote.InsertLocation
    - id: base64EncodedImage
      description: <span data-ttu-id="36533-134">Chaîne HTML à ajouter.</span><span class="sxs-lookup"><span data-stu-id="36533-134">HTML string to append.</span></span>
      type:
      - string
    - id: width
      description: <span data-ttu-id="36533-p106">Facultatif. Largeur de l’unité des points. La valeur par défaut est Null et la largeur d’image est respectée.</span><span class="sxs-lookup"><span data-stu-id="36533-p106">Optional. Width in the unit of Points. The default value is null and image width will be respected.</span></span>
      type:
      - number
    - id: height
      description: <span data-ttu-id="36533-p107">Facultatif. Hauteur de l’unité des points. La valeur par défaut est Null et la hauteur d’image est respectée.</span><span class="sxs-lookup"><span data-stu-id="36533-p107">Optional. Height in the unit of Points. The default value is null and image height will be respected.</span></span>
      type:
      - number
- uid: onenote.OneNote.Paragraph.insertRichTextAsSibling
  summary: >-
    <span data-ttu-id="36533-141">Insère le texte du paragraphe à l’emplacement d’insertion spécifié.</span><span class="sxs-lookup"><span data-stu-id="36533-141">Inserts the paragraph text at the specifiec insert location.</span></span>


    <span data-ttu-id="36533-142">\[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="36533-142">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertRichTextAsSibling(insertLocation, paragraphText)
  fullName: insertRichTextAsSibling
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertRichTextAsSibling(insertLocation: OneNote.InsertLocation, paragraphText: string): OneNote.RichText;'
    return:
      type:
      - onenote.OneNote.RichText
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"36533-143\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"36533-143\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n\n    // Get the first PageContent on the page\n    // Assuming its an outline, get the outline's paragraphs.\n    var pageContent = pageContents.getItemAt(0);\n    var paragraphs = pageContent.outline.paragraphs;\n    var firstParagraph = paragraphs.getItemAt(0);\n\n    // Queue a command to load the id and type of the first paragraph\n    firstParagraph.load(\"id,type\");\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            // Queue commands to insert before and after the first paragraph\n            firstParagraph.insertRichTextAsSibling(\"Before\", \"Text Appears Before Paragraph\");\n            firstParagraph.insertRichTextAsSibling(\"After\", \"Text Appears After Paragraph\");\n            \n            // Run the command to insert text contents\n            return context.sync();\n        });\n})    \n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n}); \n```"
    parameters:
    - id: insertLocation
      description: <span data-ttu-id="36533-144">Emplacement du tableau relatif au paragraphe actif.</span><span class="sxs-lookup"><span data-stu-id="36533-144">The location of the table relative to the current Paragraph.</span></span>
      type:
      - onenote.OneNote.InsertLocation
    - id: paragraphText
      description: <span data-ttu-id="36533-145">Chaîne HTML à ajouter.</span><span class="sxs-lookup"><span data-stu-id="36533-145">HTML string to append.</span></span>
      type:
      - string
- uid: onenote.OneNote.Paragraph.insertTableAsSibling
  summary: >-
    <span data-ttu-id="36533-146">Ajoute un tableau avec le nombre spécifié de lignes et de colonnes avant ou après le paragraphe en cours.</span><span class="sxs-lookup"><span data-stu-id="36533-146">Adds a table with the specified number of rows and columns before or after the current paragraph.</span></span>


    <span data-ttu-id="36533-147">\[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="36533-147">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertTableAsSibling(insertLocation, rowCount, columnCount, values)
  fullName: insertTableAsSibling
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertTableAsSibling(insertLocation: OneNote.InsertLocation, rowCount: number, columnCount: number, values?: string[][]): OneNote.Table;'
    return:
      type:
      - OneNote.Table
      description: ''
    parameters:
    - id: insertLocation
      description: <span data-ttu-id="36533-148">Emplacement du tableau relatif au paragraphe actif.</span><span class="sxs-lookup"><span data-stu-id="36533-148">The location of the table relative to the current Paragraph.</span></span>
      type:
      - onenote.OneNote.InsertLocation
    - id: rowCount
      description: <span data-ttu-id="36533-149">Nombre de lignes du tableau.</span><span class="sxs-lookup"><span data-stu-id="36533-149">The number of rows in the table.</span></span>
      type:
      - number
    - id: columnCount
      description: <span data-ttu-id="36533-150">Nombre de colonnes du tableau.</span><span class="sxs-lookup"><span data-stu-id="36533-150">The number of columns in the table.</span></span>
      type:
      - number
    - id: values
      description: <span data-ttu-id="36533-151">Tableau 2D facultatif.</span><span class="sxs-lookup"><span data-stu-id="36533-151">Optional 2D array.</span></span> <span data-ttu-id="36533-152">Les cellules sont remplies si les chaînes correspondantes sont spécifiées dans le tableau.</span><span class="sxs-lookup"><span data-stu-id="36533-152">Cells are filled if the corresponding strings are specified in the array.</span></span>
      type:
      - string[][]
- uid: onenote.OneNote.Paragraph.load
  summary: <span data-ttu-id="36533-153">Files d’attente d’une commande pour charger les propriétés de l’objet spécifiées.</span><span class="sxs-lookup"><span data-stu-id="36533-153">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="36533-154">Vous devez appeler « context.sync() » avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="36533-154">You must call "context.sync()" before reading the properties.</span></span>
  remarks: "<span data-ttu-id=\"36533-155\">Outre cette signature, cette méthode présente les signatures suivantes :</span><span class=\"sxs-lookup\"><span data-stu-id=\"36533-155\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"36533-156\">`load(option?: { select?: string; expand?: string; }): OneNote.Paragraph`-Où option.select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options.expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class=\"sxs-lookup\"><span data-stu-id=\"36533-156\">`load(option?: { select?: string; expand?: string; }): OneNote.Paragraph` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"36533-157\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Paragraph`-Uniquement disponible sur les types de la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"36533-157\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Paragraph` - Only available on collection types.</span></span> <span data-ttu-id=\"36533-158\">Il est similaire à la signature précédente.</span><span class=\"sxs-lookup\"><span data-stu-id=\"36533-158\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"36533-159\">Option.Top Spécifie le nombre maximal d’éléments pouvant être inclus dans le résultat de la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"36533-159\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"36533-160\">Option.Skip Spécifie le nombre d’éléments qui doivent être ignoré et non inclus dans le résultat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"36533-160\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"36533-161\">Si option.top est spécifié, le jeu de résultats démarre après l’ignorer le nombre spécifié d’éléments.</span><span class=\"sxs-lookup\"><span data-stu-id=\"36533-161\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"36533-162\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"36533-162\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n    \n    // Queue a command to load the outline property of each pageContent.\n    pageContents.load(\"outline\");\n        \n    // Get the first PageContent on the page, and then get its Outline.\n    var pageContent = pageContents._GetItem(0);\n    var paragraphs = pageContent.outline.paragraphs;\n            \n    // Queue a command to load the id and type of each paragraph.\n    paragraphs.load(\"id,type\");\n            \n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n            \n            // Write the text.                  \n            $.each(paragraphs.items, function(index, paragraph) {\n                console.log(\"Paragraph type: \" + paragraph.type);\n                console.log(\"Paragraph ID: \" + paragraph.id);\n            });\n        });\n})        \n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n}); \n```\n```javascript\nOneNote.run(function(context) {\n    var app = context.application;\n    \n    // Gets the active outline\n    var outline = app.getActiveOutline();\n    \n    // load nested paragraphs and their types.\n    outline.load(\"paragraphs/type\");\n    \n    return context.sync().then(function () {\n        var paragraphs = outline.paragraphs.items;\n        \n        var promise;\n        // for each nested paragraphs, load tables only\n        for (var i = 0; i < paragraphs.length; i++) {\n            var paragraph = paragraphs[i];\n            if (paragraph.type == \"Table\") {\n                paragraph.load(\"table/id\");\n                promise =  context.sync().then(function() {\n                    console.log(paragraph.table.id);\n                });\n            }\n        }\n        return promise;\n    })\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="36533-163">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="36533-163">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: onenote.OneNote.Paragraph.outline
  summary: >-
    <span data-ttu-id="36533-p111">Renvoie l’objet Outline qui contient le paragraphe. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="36533-p111">Gets the Outline object that contains the Paragraph. Read-only.</span></span>


    <span data-ttu-id="36533-166">\[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="36533-166">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: outline
  fullName: outline
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly outline: OneNote.Outline;'
    return:
      type:
      - onenote.OneNote.Outline
- uid: onenote.OneNote.Paragraph.paragraphs
  summary: >-
    <span data-ttu-id="36533-167">Collection de paragraphes sous ce paragraphe.</span><span class="sxs-lookup"><span data-stu-id="36533-167">The collection of paragraphs under this paragraph.</span></span> <span data-ttu-id="36533-168">En lecture seule</span><span class="sxs-lookup"><span data-stu-id="36533-168">Read only</span></span>


    <span data-ttu-id="36533-169">\[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="36533-169">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: paragraphs
  fullName: paragraphs
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly paragraphs: OneNote.ParagraphCollection;'
    return:
      type:
      - onenote.OneNote.ParagraphCollection
- uid: onenote.OneNote.Paragraph.parentParagraph
  summary: >-
    <span data-ttu-id="36533-p113">Obtient l’objet de paragraphe parent. Indique si un paragraphe parent n’existe pas. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="36533-p113">Gets the parent paragraph object. Throws if a parent paragraph does not exist. Read-only.</span></span>


    <span data-ttu-id="36533-173">\[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="36533-173">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: parentParagraph
  fullName: parentParagraph
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentParagraph: OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
- uid: onenote.OneNote.Paragraph.parentParagraphOrNull
  summary: >-
    <span data-ttu-id="36533-p114">Obtient l’objet de paragraphe parent. Renvoie la valeur null si un paragraphe parent n’existe pas. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="36533-p114">Gets the parent paragraph object. Returns null if a parent paragraph does not exist. Read-only.</span></span>


    <span data-ttu-id="36533-177">\[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="36533-177">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: parentParagraphOrNull
  fullName: parentParagraphOrNull
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentParagraphOrNull: OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
- uid: onenote.OneNote.Paragraph.parentTableCell
  summary: >-
    <span data-ttu-id="36533-p115">Obtient l’objet TableCell qui contient le paragraphe s’il en existe un. Si le parent n’est pas un objet TableCell, renvoie ItemNotFound. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="36533-p115">Gets the TableCell object that contains the Paragraph if one exists. If parent is not a TableCell, throws ItemNotFound. Read-only.</span></span>


    <span data-ttu-id="36533-181">\[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="36533-181">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: parentTableCell
  fullName: parentTableCell
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentTableCell: OneNote.TableCell;'
    return:
      type:
      - onenote.OneNote.TableCell
- uid: onenote.OneNote.Paragraph.parentTableCellOrNull
  summary: >-
    <span data-ttu-id="36533-p116">Obtient l’objet TableCell qui contient le paragraphe s’il en existe un. Si le parent n’est pas un objet TableCell, renvoie la valeur null. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="36533-p116">Gets the TableCell object that contains the Paragraph if one exists. If parent is not a TableCell, returns null. Read-only.</span></span>


    <span data-ttu-id="36533-185">\[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="36533-185">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: parentTableCellOrNull
  fullName: parentTableCellOrNull
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentTableCellOrNull: OneNote.TableCell;'
    return:
      type:
      - onenote.OneNote.TableCell
- uid: onenote.OneNote.Paragraph.richText
  summary: >-
    <span data-ttu-id="36533-186">Renvoie l’objet RichText du paragraphe.</span><span class="sxs-lookup"><span data-stu-id="36533-186">Gets the RichText object in the Paragraph.</span></span> <span data-ttu-id="36533-187">Renvoie une exception si ParagraphType n’est pas défini sur RichText.</span><span class="sxs-lookup"><span data-stu-id="36533-187">Throws an exception if ParagraphType is not RichText.</span></span> <span data-ttu-id="36533-188">Lecture seule</span><span class="sxs-lookup"><span data-stu-id="36533-188">Read-only</span></span>


    <span data-ttu-id="36533-189">\[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="36533-189">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: richText
  fullName: richText
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly richText: OneNote.RichText;'
    return:
      type:
      - onenote.OneNote.RichText
- uid: onenote.OneNote.Paragraph.table
  summary: >-
    <span data-ttu-id="36533-p118">Obtient l’objet Table dans le paragraphe. Renvoie une exception si ParagraphType n’est pas défini sur Table. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="36533-p118">Gets the Table object in the Paragraph. Throws an exception if ParagraphType is not Table. Read-only.</span></span>


    <span data-ttu-id="36533-193">\[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="36533-193">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: table
  fullName: table
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly table: OneNote.Table;'
    return:
      type:
      - OneNote.Table
- uid: onenote.OneNote.Paragraph.toJSON
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): OneNote.Interfaces.ParagraphData;'
    return:
      type:
      - onenote.OneNote.Interfaces.ParagraphData
      description: ''
- uid: onenote.OneNote.Paragraph.track
  summary: <span data-ttu-id="36533-194">Suivre l’objet pour l’ajustement automatique selon entourant les modifications dans le document.</span><span class="sxs-lookup"><span data-stu-id="36533-194">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="36533-195">Cet appel est une abréviation de context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="36533-195">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="36533-196">Si vous utilisez cet objet dans les appels de « .sync » et en dehors de l’exécution séquentielle d’un lot de « .run » et obtenir une erreur « InvalidObjectPath » lors de la définition d’une propriété ou d’appeler une méthode sur l’objet, vous devez avoir ajouté l’objet à l’objet suivi collection lorsque l’objet a été créé tout d’abord.</span><span class="sxs-lookup"><span data-stu-id="36533-196">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>
  name: track()
  fullName: track
  langs:
  - typeScript
  type: method
  syntax:
    content: 'track(): OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
      description: ''
- uid: onenote.OneNote.Paragraph.type
  summary: >-
    <span data-ttu-id="36533-197">Obtient le type de l’objet Paragraph.</span><span class="sxs-lookup"><span data-stu-id="36533-197">Gets the type of the Paragraph object.</span></span> <span data-ttu-id="36533-198">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="36533-198">Read-only.</span></span>


    <span data-ttu-id="36533-199">\[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="36533-199">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: type
  fullName: type
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly type: OneNote.ParagraphType | "RichText" | "Image" | "Table" | "Ink" | "Other";'
    return:
      type:
      - OneNote.ParagraphType | "RichText" | "Image" | "Table" | "Ink" | "Other"
- uid: onenote.OneNote.Paragraph.untrack
  summary: <span data-ttu-id="36533-200">Version de la mémoire associée à cet objet, si elle a été précédemment suivi.</span><span class="sxs-lookup"><span data-stu-id="36533-200">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="36533-201">Cet appel est l’abréviation de context.trackedObjects.remove(thisObject).</span><span class="sxs-lookup"><span data-stu-id="36533-201">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="36533-202">Comportant de nombreux objets suivis ralentit l’application hôte, donc pensez à libérer les objets que vous ajoutez, une fois que vous avez terminé les utiliser.</span><span class="sxs-lookup"><span data-stu-id="36533-202">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them.</span></span> <span data-ttu-id="36533-203">Vous devrez appeler « context.sync() » avant que la version de mémoire prenne effet.</span><span class="sxs-lookup"><span data-stu-id="36533-203">You will need to call "context.sync()" before the memory release takes effect.</span></span>
  name: untrack()
  fullName: untrack
  langs:
  - typeScript
  type: method
  syntax:
    content: 'untrack(): OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
      description: ''
