### YamlMime:UniversalReference
ms.openlocfilehash: 9a6e59603f2a27f3b0b9f35931fe253c07c89d3a
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 02/20/2019
ms.locfileid: "30093272"
items:
- uid: onenote.OneNote.Paragraph
  summary: >-
    <span data-ttu-id="33a65-p101">Conteneur pour le contenu visible d’une page. Un paragraphe peut contenir n’importe quel type de contenu ParagraphType.</span><span class="sxs-lookup"><span data-stu-id="33a65-p101">A container for the visible content on a page. A Paragraph can contain any one ParagraphType type of content.</span></span>


    <span data-ttu-id="33a65-103">\[[Ensemble d'API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="33a65-103">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: OneNote.Paragraph
  fullName: OneNote.Paragraph
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: onenote
  children:
  - onenote.OneNote.Paragraph.addNoteTag
  - onenote.OneNote.Paragraph.addNoteTag_1
  - onenote.OneNote.Paragraph.context
  - onenote.OneNote.Paragraph.delete
  - onenote.OneNote.Paragraph.getParagraphInfo
  - onenote.OneNote.Paragraph.id
  - onenote.OneNote.Paragraph.image
  - onenote.OneNote.Paragraph.inkWords
  - onenote.OneNote.Paragraph.insertHtmlAsSibling
  - onenote.OneNote.Paragraph.insertHtmlAsSibling_1
  - onenote.OneNote.Paragraph.insertImageAsSibling
  - onenote.OneNote.Paragraph.insertImageAsSibling_1
  - onenote.OneNote.Paragraph.insertRichTextAsSibling
  - onenote.OneNote.Paragraph.insertRichTextAsSibling_1
  - onenote.OneNote.Paragraph.insertTableAsSibling
  - onenote.OneNote.Paragraph.insertTableAsSibling_1
  - onenote.OneNote.Paragraph.load
  - onenote.OneNote.Paragraph.load_1
  - onenote.OneNote.Paragraph.load_2
  - onenote.OneNote.Paragraph.outline
  - onenote.OneNote.Paragraph.paragraphs
  - onenote.OneNote.Paragraph.parentParagraph
  - onenote.OneNote.Paragraph.parentParagraphOrNull
  - onenote.OneNote.Paragraph.parentTableCell
  - onenote.OneNote.Paragraph.parentTableCellOrNull
  - onenote.OneNote.Paragraph.richText
  - onenote.OneNote.Paragraph.set
  - onenote.OneNote.Paragraph.set_1
  - onenote.OneNote.Paragraph.table
  - onenote.OneNote.Paragraph.toJSON
  - onenote.OneNote.Paragraph.track
  - onenote.OneNote.Paragraph.type
  - onenote.OneNote.Paragraph.untrack
- uid: onenote.OneNote.Paragraph.addNoteTag
  summary: >-
    <span data-ttu-id="33a65-104">Ajouter NoteTag au paragraphe.</span><span class="sxs-lookup"><span data-stu-id="33a65-104">Add NoteTag to the paragraph.</span></span>


    <span data-ttu-id="33a65-105">\[[Ensemble d'API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="33a65-105">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: addNoteTag(type, status)
  fullName: addNoteTag(type, status)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addNoteTag(type: OneNote.NoteTagType, status: OneNote.NoteTagStatus): OneNote.NoteTag;'
    return:
      type:
      - onenote.OneNote.NoteTag
      description: ''
    parameters:
    - id: type
      description: <span data-ttu-id="33a65-106">Type du NoteTag.</span><span class="sxs-lookup"><span data-stu-id="33a65-106">The type of the NoteTag.</span></span>
      type:
      - onenote.OneNote.NoteTagType
    - id: status
      description: <span data-ttu-id="33a65-107">État du NoteTag.</span><span class="sxs-lookup"><span data-stu-id="33a65-107">The status of the NoteTag.</span></span>
      type:
      - onenote.OneNote.NoteTagStatus
- uid: onenote.OneNote.Paragraph.addNoteTag_1
  summary: >-
    <span data-ttu-id="33a65-108">Ajouter NoteTag au paragraphe.</span><span class="sxs-lookup"><span data-stu-id="33a65-108">Add NoteTag to the paragraph.</span></span>


    <span data-ttu-id="33a65-109">\[[Ensemble d'API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="33a65-109">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: addNoteTag(typeString, status)
  fullName: addNoteTag(typeString, status)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addNoteTag(typeString: "Unknown" | "ToDo" | "Important" | "Question" | "Contact" | "Address" | "PhoneNumber" | "Website" | "Idea" | "Critical" | "ToDoPriority1" | "ToDoPriority2", status: "Unknown" | "Normal" | "Completed" | "Disabled" | "OutlookTask" | "TaskNotSyncedYet" | "TaskRemoved"): OneNote.NoteTag;'
    return:
      type:
      - onenote.OneNote.NoteTag
      description: ''
    parameters:
    - id: typeString
      description: <span data-ttu-id="33a65-110">Type du NoteTag.</span><span class="sxs-lookup"><span data-stu-id="33a65-110">The type of the NoteTag.</span></span>
      type:
      - "\"Unknown\" | \"ToDo\" | \"Important\" | \"Question\" | \"Contact\" | \"Address\" | \"PhoneNumber\" | \"Website\" | \"Idea\" | \"Critical\" | \"ToDoPriority1\" | \"ToDoPriority2\""
    - id: status
      description: <span data-ttu-id="33a65-111">État du NoteTag.</span><span class="sxs-lookup"><span data-stu-id="33a65-111">The status of the NoteTag.</span></span>
      type:
      - "\"Unknown\" | \"Normal\" | \"Completed\" | \"Disabled\" | \"OutlookTask\" | \"TaskNotSyncedYet\" | \"TaskRemoved\""
- uid: onenote.OneNote.Paragraph.context
  summary: <span data-ttu-id="33a65-112">Contexte de demande associé à l'objet.</span><span class="sxs-lookup"><span data-stu-id="33a65-112">The request context associated with the object.</span></span> <span data-ttu-id="33a65-113">Cette opération connecte le processus du complément au processus de l'application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="33a65-113">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: onenote.OneNote.Paragraph.delete
  summary: >-
    <span data-ttu-id="33a65-114">Supprime le paragraphe.</span><span class="sxs-lookup"><span data-stu-id="33a65-114">Deletes the paragraph</span></span>


    <span data-ttu-id="33a65-115">\[[Ensemble d'API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="33a65-115">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: delete()
  fullName: delete()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"33a65-116\">範例</span><span class=\"sxs-lookup\"><span data-stu-id=\"33a65-116\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n\n    // Get the first PageContent on the page\n    // Assuming its an outline, get the outline's paragraphs.\n    var pageContent = pageContents.getItemAt(0);\n    \n    var paragraphs = pageContent.outline.paragraphs;\n    \n    var firstParagraph = paragraphs.getItemAt(0);\n    \n    // Queue a command to load the id and type of the first paragraph\n    firstParagraph.load(\"id,type\");\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n            \n            // Queue a command to delete the first paragraph                 \n            firstParagraph.delete();\n            \n            // Run the command to delete it\n            return context.sync();\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: onenote.OneNote.Paragraph.getParagraphInfo
  summary: >-
    <span data-ttu-id="33a65-117">Obtenir les informations de liste du paragraphe</span><span class="sxs-lookup"><span data-stu-id="33a65-117">Get list information of paragraph</span></span>


    <span data-ttu-id="33a65-118">\[[Ensemble d'API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="33a65-118">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getParagraphInfo()
  fullName: getParagraphInfo()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getParagraphInfo(): OfficeExtension.ClientResult<OneNote.ParagraphInfo>;'
    return:
      type:
      - OfficeExtension.ClientResult<OneNote.ParagraphInfo>
      description: ''
- uid: onenote.OneNote.Paragraph.id
  summary: >-
    <span data-ttu-id="33a65-p103">Obtient l’ID de l’objet Paragraph. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="33a65-p103">Gets the ID of the Paragraph object. Read-only.</span></span>


    <span data-ttu-id="33a65-121">\[[Ensemble d'API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="33a65-121">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
- uid: onenote.OneNote.Paragraph.image
  summary: >-
    <span data-ttu-id="33a65-p104">Renvoie l’objet Image dans le paragraphe. Renvoie une exception si ParagraphType n’est pas défini sur Image. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="33a65-p104">Gets the Image object in the Paragraph. Throws an exception if ParagraphType is not Image. Read-only.</span></span>


    <span data-ttu-id="33a65-125">\[[Ensemble d'API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="33a65-125">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: image
  fullName: image
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly image: OneNote.Image;'
    return:
      type:
      - OneNote.Image
- uid: onenote.OneNote.Paragraph.inkWords
  summary: >-
    <span data-ttu-id="33a65-p105">Obtient la collection Ink dans le paragraphe. Renvoie une exception si ParagraphType n’est pas défini sur Ink. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="33a65-p105">Gets the Ink collection in the Paragraph. Throws an exception if ParagraphType is not Ink. Read-only.</span></span>


    <span data-ttu-id="33a65-129">\[[Ensemble d'API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="33a65-129">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: inkWords
  fullName: inkWords
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly inkWords: OneNote.InkWordCollection;'
    return:
      type:
      - onenote.OneNote.InkWordCollection
- uid: onenote.OneNote.Paragraph.insertHtmlAsSibling
  summary: >-
    <span data-ttu-id="33a65-130">Insère le contenu HTML spécifié.</span><span class="sxs-lookup"><span data-stu-id="33a65-130">Inserts the specified HTML content</span></span>


    <span data-ttu-id="33a65-131">\[[Ensemble d'API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="33a65-131">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertHtmlAsSibling(insertLocation, html)
  fullName: insertHtmlAsSibling(insertLocation, html)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertHtmlAsSibling(insertLocation: OneNote.InsertLocation, html: string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"33a65-132\">範例</span><span class=\"sxs-lookup\"><span data-stu-id=\"33a65-132\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n\n    // Get the first PageContent on the page\n    // Assuming its an outline, get the outline's paragraphs.\n    var pageContent = pageContents.getItemAt(0);\n    var paragraphs = pageContent.outline.paragraphs;\n    var firstParagraph = paragraphs.getItemAt(0);\n\n    // Queue a command to load the id and type of the first paragraph\n    firstParagraph.load(\"id,type\");\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            // Queue commands to insert before and after the first paragraph\n            firstParagraph.insertHtmlAsSibling(\"Before\", \"<p>ContentBeforeFirstParagraph</p>\");\n            firstParagraph.insertHtmlAsSibling(\"After\", \"<p>ContentAfterFirstParagraph</p>\");\n            \n            // Run the command to run inserts\n            return context.sync();\n        });\n))\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: insertLocation
      description: <span data-ttu-id="33a65-133">Emplacement du nouveau contenu relatif au paragraphe actif.</span><span class="sxs-lookup"><span data-stu-id="33a65-133">The location of new contents relative to the current Paragraph.</span></span>
      type:
      - onenote.OneNote.InsertLocation
    - id: html
      description: <span data-ttu-id="33a65-134">Chaîne HTML qui décrit la présentation visuelle du contenu.</span><span class="sxs-lookup"><span data-stu-id="33a65-134">An HTML string that describes the visual presentation of the content.</span></span> <span data-ttu-id="33a65-135">Voir [HTML pris en charge](https://docs.microsoft.com/office/dev/add-ins/onenote/onenote-add-ins-page-content#supported-html) pour l'API JavaScript des compléments OneNote.</span><span class="sxs-lookup"><span data-stu-id="33a65-135">See [Supported HTML](https://docs.microsoft.com/office/dev/add-ins/onenote/onenote-add-ins-page-content#supported-html) for the OneNote add-ins JavaScript API.</span></span>
      type:
      - string
- uid: onenote.OneNote.Paragraph.insertHtmlAsSibling_1
  summary: >-
    <span data-ttu-id="33a65-136">Insère le contenu HTML spécifié.</span><span class="sxs-lookup"><span data-stu-id="33a65-136">Inserts the specified HTML content</span></span>


    <span data-ttu-id="33a65-137">\[[Ensemble d'API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="33a65-137">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertHtmlAsSibling(insertLocationString, html)
  fullName: insertHtmlAsSibling(insertLocationString, html)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertHtmlAsSibling(insertLocationString: "Before" | "After", html: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: insertLocationString
      description: <span data-ttu-id="33a65-138">Emplacement du nouveau contenu relatif au paragraphe actif.</span><span class="sxs-lookup"><span data-stu-id="33a65-138">The location of new contents relative to the current Paragraph.</span></span>
      type:
      - "\"Before\" | \"After\""
    - id: html
      description: <span data-ttu-id="33a65-139">Chaîne HTML qui décrit la présentation visuelle du contenu.</span><span class="sxs-lookup"><span data-stu-id="33a65-139">An HTML string that describes the visual presentation of the content.</span></span> <span data-ttu-id="33a65-140">Voir [HTML pris en charge](https://docs.microsoft.com/office/dev/add-ins/onenote/onenote-add-ins-page-content#supported-html) pour l'API JavaScript des compléments OneNote.</span><span class="sxs-lookup"><span data-stu-id="33a65-140">See [Supported HTML](https://docs.microsoft.com/office/dev/add-ins/onenote/onenote-add-ins-page-content#supported-html) for the OneNote add-ins JavaScript API.</span></span>
      type:
      - string
- uid: onenote.OneNote.Paragraph.insertImageAsSibling
  summary: >-
    <span data-ttu-id="33a65-141">Insère l’image à l’emplacement d’insertion spécifié.</span><span class="sxs-lookup"><span data-stu-id="33a65-141">Inserts the image at the specified insert location..</span></span>


    <span data-ttu-id="33a65-142">\[[Ensemble d'API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="33a65-142">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertImageAsSibling(insertLocation, base64EncodedImage, width, height)
  fullName: insertImageAsSibling(insertLocation, base64EncodedImage, width, height)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertImageAsSibling(insertLocation: OneNote.InsertLocation, base64EncodedImage: string, width: number, height: number): OneNote.Image;'
    return:
      type:
      - OneNote.Image
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"33a65-143\">範例</span><span class=\"sxs-lookup\"><span data-stu-id=\"33a65-143\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n\n    // Get the first PageContent on the page\n    // Assuming its an outline, get the outline's paragraphs.\n    var pageContent = pageContents.getItemAt(0);\n    var paragraphs = pageContent.outline.paragraphs;\n    var firstParagraph = paragraphs.getItemAt(0);\n\n    // Queue a command to load the id and type of the first paragraph\n    firstParagraph.load(\"id,type\");\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            // Queue commands to insert before and after the first paragraph\n            firstParagraph.insertImageAsSibling(\"Before\", \"R0lGODlhDwAPAKECAAAAzMzM/////wAAACwAAAAADwAPAAACIISPeQHsrZ5ModrLlN48CXF8m2iQ3YmmKqVlRtW4MLwWACH+H09wdGltaXplZCBieSBVbGVhZCBTbWFydFNhdmVyIQAAOw==\");\n            firstParagraph.insertImageAsSibling(\"After\", \"R0lGODlhDwAPAKECAAAAzMzM/////wAAACwAAAAADwAPAAACIISPeQHsrZ5ModrLlN48CXF8m2iQ3YmmKqVlRtW4MLwWACH+H09wdGltaXplZCBieSBVbGVhZCBTbWFydFNhdmVyIQAAOw==\");\n            \n            // Run the command to insert images\n            return context.sync();\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: insertLocation
      description: <span data-ttu-id="33a65-144">Emplacement du tableau relatif au paragraphe actif.</span><span class="sxs-lookup"><span data-stu-id="33a65-144">The location of the table relative to the current Paragraph.</span></span>
      type:
      - onenote.OneNote.InsertLocation
    - id: base64EncodedImage
      description: <span data-ttu-id="33a65-145">Chaîne HTML à ajouter.</span><span class="sxs-lookup"><span data-stu-id="33a65-145">HTML string to append.</span></span>
      type:
      - string
    - id: width
      description: <span data-ttu-id="33a65-p108">Facultatif. Largeur de l’unité des points. La valeur par défaut est Null et la largeur d’image est respectée.</span><span class="sxs-lookup"><span data-stu-id="33a65-p108">Optional. Width in the unit of Points. The default value is null and image width will be respected.</span></span>
      type:
      - number
    - id: height
      description: <span data-ttu-id="33a65-p109">Facultatif. Hauteur de l’unité des points. La valeur par défaut est Null et la hauteur d’image est respectée.</span><span class="sxs-lookup"><span data-stu-id="33a65-p109">Optional. Height in the unit of Points. The default value is null and image height will be respected.</span></span>
      type:
      - number
- uid: onenote.OneNote.Paragraph.insertImageAsSibling_1
  summary: >-
    <span data-ttu-id="33a65-152">Insère l’image à l’emplacement d’insertion spécifié.</span><span class="sxs-lookup"><span data-stu-id="33a65-152">Inserts the image at the specified insert location..</span></span>


    <span data-ttu-id="33a65-153">\[[Ensemble d'API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="33a65-153">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertImageAsSibling(insertLocationString, base64EncodedImage, width, height)
  fullName: insertImageAsSibling(insertLocationString, base64EncodedImage, width, height)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertImageAsSibling(insertLocationString: "Before" | "After", base64EncodedImage: string, width: number, height: number): OneNote.Image;'
    return:
      type:
      - OneNote.Image
      description: ''
    parameters:
    - id: insertLocationString
      description: <span data-ttu-id="33a65-154">Emplacement du tableau relatif au paragraphe actif.</span><span class="sxs-lookup"><span data-stu-id="33a65-154">The location of the table relative to the current Paragraph.</span></span>
      type:
      - "\"Before\" | \"After\""
    - id: base64EncodedImage
      description: <span data-ttu-id="33a65-155">Chaîne HTML à ajouter.</span><span class="sxs-lookup"><span data-stu-id="33a65-155">HTML string to append.</span></span>
      type:
      - string
    - id: width
      description: <span data-ttu-id="33a65-p110">Facultatif. Largeur de l’unité des points. La valeur par défaut est Null et la largeur d’image est respectée.</span><span class="sxs-lookup"><span data-stu-id="33a65-p110">Optional. Width in the unit of Points. The default value is null and image width will be respected.</span></span>
      type:
      - number
    - id: height
      description: <span data-ttu-id="33a65-p111">Facultatif. Hauteur de l’unité des points. La valeur par défaut est Null et la hauteur d’image est respectée.</span><span class="sxs-lookup"><span data-stu-id="33a65-p111">Optional. Height in the unit of Points. The default value is null and image height will be respected.</span></span>
      type:
      - number
- uid: onenote.OneNote.Paragraph.insertRichTextAsSibling
  summary: >-
    <span data-ttu-id="33a65-162">Insère le texte du paragraphe à l’emplacement d’insertion spécifié.</span><span class="sxs-lookup"><span data-stu-id="33a65-162">Inserts the paragraph text at the specifiec insert location.</span></span>


    <span data-ttu-id="33a65-163">\[[Ensemble d'API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="33a65-163">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertRichTextAsSibling(insertLocation, paragraphText)
  fullName: insertRichTextAsSibling(insertLocation, paragraphText)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertRichTextAsSibling(insertLocation: OneNote.InsertLocation, paragraphText: string): OneNote.RichText;'
    return:
      type:
      - onenote.OneNote.RichText
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"33a65-164\">範例</span><span class=\"sxs-lookup\"><span data-stu-id=\"33a65-164\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n\n    // Get the first PageContent on the page\n    // Assuming its an outline, get the outline's paragraphs.\n    var pageContent = pageContents.getItemAt(0);\n    var paragraphs = pageContent.outline.paragraphs;\n    var firstParagraph = paragraphs.getItemAt(0);\n\n    // Queue a command to load the id and type of the first paragraph\n    firstParagraph.load(\"id,type\");\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            // Queue commands to insert before and after the first paragraph\n            firstParagraph.insertRichTextAsSibling(\"Before\", \"Text Appears Before Paragraph\");\n            firstParagraph.insertRichTextAsSibling(\"After\", \"Text Appears After Paragraph\");\n            \n            // Run the command to insert text contents\n            return context.sync();\n        });\n})    \n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n}); \n```"
    parameters:
    - id: insertLocation
      description: <span data-ttu-id="33a65-165">Emplacement du tableau relatif au paragraphe actif.</span><span class="sxs-lookup"><span data-stu-id="33a65-165">The location of the table relative to the current Paragraph.</span></span>
      type:
      - onenote.OneNote.InsertLocation
    - id: paragraphText
      description: <span data-ttu-id="33a65-166">Chaîne HTML à ajouter.</span><span class="sxs-lookup"><span data-stu-id="33a65-166">HTML string to append.</span></span>
      type:
      - string
- uid: onenote.OneNote.Paragraph.insertRichTextAsSibling_1
  summary: >-
    <span data-ttu-id="33a65-167">Insère le texte du paragraphe à l’emplacement d’insertion spécifié.</span><span class="sxs-lookup"><span data-stu-id="33a65-167">Inserts the paragraph text at the specifiec insert location.</span></span>


    <span data-ttu-id="33a65-168">\[[Ensemble d'API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="33a65-168">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertRichTextAsSibling(insertLocationString, paragraphText)
  fullName: insertRichTextAsSibling(insertLocationString, paragraphText)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertRichTextAsSibling(insertLocationString: "Before" | "After", paragraphText: string): OneNote.RichText;'
    return:
      type:
      - onenote.OneNote.RichText
      description: ''
    parameters:
    - id: insertLocationString
      description: <span data-ttu-id="33a65-169">Emplacement du tableau relatif au paragraphe actif.</span><span class="sxs-lookup"><span data-stu-id="33a65-169">The location of the table relative to the current Paragraph.</span></span>
      type:
      - "\"Before\" | \"After\""
    - id: paragraphText
      description: <span data-ttu-id="33a65-170">Chaîne HTML à ajouter.</span><span class="sxs-lookup"><span data-stu-id="33a65-170">HTML string to append.</span></span>
      type:
      - string
- uid: onenote.OneNote.Paragraph.insertTableAsSibling
  summary: >-
    <span data-ttu-id="33a65-171">Ajoute un tableau avec le nombre spécifié de lignes et de colonnes avant ou après le paragraphe en cours.</span><span class="sxs-lookup"><span data-stu-id="33a65-171">Adds a table with the specified number of rows and columns before or after the current paragraph.</span></span>


    <span data-ttu-id="33a65-172">\[[Ensemble d'API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="33a65-172">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertTableAsSibling(insertLocation, rowCount, columnCount, values)
  fullName: insertTableAsSibling(insertLocation, rowCount, columnCount, values)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertTableAsSibling(insertLocation: OneNote.InsertLocation, rowCount: number, columnCount: number, values?: string[][]): OneNote.Table;'
    return:
      type:
      - OneNote.Table
      description: ''
    parameters:
    - id: insertLocation
      description: <span data-ttu-id="33a65-173">Emplacement du tableau relatif au paragraphe actif.</span><span class="sxs-lookup"><span data-stu-id="33a65-173">The location of the table relative to the current Paragraph.</span></span>
      type:
      - onenote.OneNote.InsertLocation
    - id: rowCount
      description: <span data-ttu-id="33a65-174">Nombre de lignes du tableau.</span><span class="sxs-lookup"><span data-stu-id="33a65-174">The number of rows in the table.</span></span>
      type:
      - number
    - id: columnCount
      description: <span data-ttu-id="33a65-175">Nombre de colonnes du tableau.</span><span class="sxs-lookup"><span data-stu-id="33a65-175">The number of columns in the table.</span></span>
      type:
      - number
    - id: values
      description: <span data-ttu-id="33a65-176">Tableau 2D facultatif.</span><span class="sxs-lookup"><span data-stu-id="33a65-176">Optional 2D array.</span></span> <span data-ttu-id="33a65-177">Les cellules sont remplies si les chaînes correspondantes sont spécifiées dans le tableau.</span><span class="sxs-lookup"><span data-stu-id="33a65-177">Cells are filled if the corresponding strings are specified in the array.</span></span>
      type:
      - string[][]
- uid: onenote.OneNote.Paragraph.insertTableAsSibling_1
  summary: >-
    <span data-ttu-id="33a65-178">Ajoute un tableau avec le nombre spécifié de lignes et de colonnes avant ou après le paragraphe en cours.</span><span class="sxs-lookup"><span data-stu-id="33a65-178">Adds a table with the specified number of rows and columns before or after the current paragraph.</span></span>


    <span data-ttu-id="33a65-179">\[[Ensemble d'API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="33a65-179">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertTableAsSibling(insertLocationString, rowCount, columnCount, values)
  fullName: insertTableAsSibling(insertLocationString, rowCount, columnCount, values)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertTableAsSibling(insertLocationString: "Before" | "After", rowCount: number, columnCount: number, values?: string[][]): OneNote.Table;'
    return:
      type:
      - OneNote.Table
      description: ''
    parameters:
    - id: insertLocationString
      description: <span data-ttu-id="33a65-180">Emplacement du tableau relatif au paragraphe actif.</span><span class="sxs-lookup"><span data-stu-id="33a65-180">The location of the table relative to the current Paragraph.</span></span>
      type:
      - "\"Before\" | \"After\""
    - id: rowCount
      description: <span data-ttu-id="33a65-181">Nombre de lignes du tableau.</span><span class="sxs-lookup"><span data-stu-id="33a65-181">The number of rows in the table.</span></span>
      type:
      - number
    - id: columnCount
      description: <span data-ttu-id="33a65-182">Nombre de colonnes du tableau.</span><span class="sxs-lookup"><span data-stu-id="33a65-182">The number of columns in the table.</span></span>
      type:
      - number
    - id: values
      description: <span data-ttu-id="33a65-183">Tableau 2D facultatif.</span><span class="sxs-lookup"><span data-stu-id="33a65-183">Optional 2D array.</span></span> <span data-ttu-id="33a65-184">Les cellules sont remplies si les chaînes correspondantes sont spécifiées dans le tableau.</span><span class="sxs-lookup"><span data-stu-id="33a65-184">Cells are filled if the corresponding strings are specified in the array.</span></span>
      type:
      - string[][]
- uid: onenote.OneNote.Paragraph.load
  summary: <span data-ttu-id="33a65-185">Met en file d'attente une commande pour charger les propriétés spécifiées de l'objet.</span><span class="sxs-lookup"><span data-stu-id="33a65-185">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="33a65-186">Vous devez appeler «Context. Sync ()» avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="33a65-186">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="33a65-187">En plus de cette signature, cette méthode possède les signatures suivantes:</span><span class="sxs-lookup"><span data-stu-id="33a65-187">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="33a65-188">`load(option?: string | string[]): OneNote.Paragraph`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="33a65-188">`load(option?: string | string[]): OneNote.Paragraph` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="33a65-189">`load(option?: { select?: string; expand?: string; }): OneNote.Paragraph`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="33a65-189">`load(option?: { select?: string; expand?: string; }): OneNote.Paragraph` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="33a65-190">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Paragraph`-Uniquement disponible sur les types de collection.</span><span class="sxs-lookup"><span data-stu-id="33a65-190">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Paragraph` - Only available on collection types.</span></span> <span data-ttu-id="33a65-191">Elle est similaire à la signature précédente.</span><span class="sxs-lookup"><span data-stu-id="33a65-191">It is similar to the preceding signature.</span></span> <span data-ttu-id="33a65-192">Option. Top indique le nombre maximal d'éléments de collection qui peuvent être inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="33a65-192">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="33a65-193">Option. Skip indique le nombre d'éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="33a65-193">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="33a65-194">Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d'éléments.</span><span class="sxs-lookup"><span data-stu-id="33a65-194">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OneNote.Interfaces.ParagraphLoadOptions): OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - onenote.OneNote.Interfaces.ParagraphLoadOptions
- uid: onenote.OneNote.Paragraph.load_1
  summary: <span data-ttu-id="33a65-195">Met en file d'attente une commande pour charger les propriétés spécifiées de l'objet.</span><span class="sxs-lookup"><span data-stu-id="33a65-195">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="33a65-196">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="33a65-196">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"33a65-197\">範例</span><span class=\"sxs-lookup\"><span data-stu-id=\"33a65-197\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n    \n    // Queue a command to load the outline property of each pageContent.\n    pageContents.load(\"outline\");\n        \n    // Get the first PageContent on the page, and then get its Outline.\n    var pageContent = pageContents._GetItem(0);\n    var paragraphs = pageContent.outline.paragraphs;\n            \n    // Queue a command to load the id and type of each paragraph.\n    paragraphs.load(\"id,type\");\n            \n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n            \n            // Write the text.                  \n            $.each(paragraphs.items, function(index, paragraph) {\n                console.log(\"Paragraph type: \" + paragraph.type);\n                console.log(\"Paragraph ID: \" + paragraph.id);\n            });\n        });\n})        \n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n}); \n```\n```javascript\nOneNote.run(function(context) {\n    var app = context.application;\n    \n    // Gets the active outline\n    var outline = app.getActiveOutline();\n    \n    // load nested paragraphs and their types.\n    outline.load(\"paragraphs/type\");\n    \n    return context.sync().then(function () {\n        var paragraphs = outline.paragraphs.items;\n        \n        var promise;\n        // for each nested paragraphs, load tables only\n        for (var i = 0; i < paragraphs.length; i++) {\n            var paragraph = paragraphs[i];\n            if (paragraph.type == \"Table\") {\n                paragraph.load(\"table/id\");\n                promise =  context.sync().then(function() {\n                    console.log(paragraph.table.id);\n                });\n            }\n        }\n        return promise;\n    })\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="33a65-198">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="33a65-198">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: onenote.OneNote.Paragraph.load_2
  summary: <span data-ttu-id="33a65-199">Met en file d'attente une commande pour charger les propriétés spécifiées de l'objet.</span><span class="sxs-lookup"><span data-stu-id="33a65-199">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="33a65-200">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="33a65-200">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="33a65-201">Où propertyNamesAndPaths. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et propertyNamesAndPaths. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="33a65-201">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: onenote.OneNote.Paragraph.outline
  summary: >-
    <span data-ttu-id="33a65-p118">Renvoie l’objet Outline qui contient le paragraphe. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="33a65-p118">Gets the Outline object that contains the Paragraph. Read-only.</span></span>


    <span data-ttu-id="33a65-204">\[[Ensemble d'API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="33a65-204">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: outline
  fullName: outline
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly outline: OneNote.Outline;'
    return:
      type:
      - onenote.OneNote.Outline
- uid: onenote.OneNote.Paragraph.paragraphs
  summary: >-
    <span data-ttu-id="33a65-205">Collection de paragraphes sous ce paragraphe.</span><span class="sxs-lookup"><span data-stu-id="33a65-205">The collection of paragraphs under this paragraph.</span></span> <span data-ttu-id="33a65-206">Lecture seule</span><span class="sxs-lookup"><span data-stu-id="33a65-206">Read only</span></span>


    <span data-ttu-id="33a65-207">\[[Ensemble d'API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="33a65-207">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: paragraphs
  fullName: paragraphs
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly paragraphs: OneNote.ParagraphCollection;'
    return:
      type:
      - onenote.OneNote.ParagraphCollection
- uid: onenote.OneNote.Paragraph.parentParagraph
  summary: >-
    <span data-ttu-id="33a65-p120">Obtient l’objet de paragraphe parent. Indique si un paragraphe parent n’existe pas. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="33a65-p120">Gets the parent paragraph object. Throws if a parent paragraph does not exist. Read-only.</span></span>


    <span data-ttu-id="33a65-211">\[[Ensemble d'API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="33a65-211">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: parentParagraph
  fullName: parentParagraph
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentParagraph: OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
- uid: onenote.OneNote.Paragraph.parentParagraphOrNull
  summary: >-
    <span data-ttu-id="33a65-p121">Obtient l’objet de paragraphe parent. Renvoie la valeur null si un paragraphe parent n’existe pas. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="33a65-p121">Gets the parent paragraph object. Returns null if a parent paragraph does not exist. Read-only.</span></span>


    <span data-ttu-id="33a65-215">\[[Ensemble d'API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="33a65-215">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: parentParagraphOrNull
  fullName: parentParagraphOrNull
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentParagraphOrNull: OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
- uid: onenote.OneNote.Paragraph.parentTableCell
  summary: >-
    <span data-ttu-id="33a65-p122">Obtient l’objet TableCell qui contient le paragraphe s’il en existe un. Si le parent n’est pas un objet TableCell, renvoie ItemNotFound. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="33a65-p122">Gets the TableCell object that contains the Paragraph if one exists. If parent is not a TableCell, throws ItemNotFound. Read-only.</span></span>


    <span data-ttu-id="33a65-219">\[[Ensemble d'API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="33a65-219">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: parentTableCell
  fullName: parentTableCell
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentTableCell: OneNote.TableCell;'
    return:
      type:
      - onenote.OneNote.TableCell
- uid: onenote.OneNote.Paragraph.parentTableCellOrNull
  summary: >-
    <span data-ttu-id="33a65-p123">Obtient l’objet TableCell qui contient le paragraphe s’il en existe un. Si le parent n’est pas un objet TableCell, renvoie la valeur null. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="33a65-p123">Gets the TableCell object that contains the Paragraph if one exists. If parent is not a TableCell, returns null. Read-only.</span></span>


    <span data-ttu-id="33a65-223">\[[Ensemble d'API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="33a65-223">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: parentTableCellOrNull
  fullName: parentTableCellOrNull
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentTableCellOrNull: OneNote.TableCell;'
    return:
      type:
      - onenote.OneNote.TableCell
- uid: onenote.OneNote.Paragraph.richText
  summary: >-
    <span data-ttu-id="33a65-224">Renvoie l’objet RichText du paragraphe.</span><span class="sxs-lookup"><span data-stu-id="33a65-224">Gets the RichText object in the Paragraph.</span></span> <span data-ttu-id="33a65-225">Renvoie une exception si ParagraphType n’est pas défini sur RichText.</span><span class="sxs-lookup"><span data-stu-id="33a65-225">Throws an exception if ParagraphType is not RichText.</span></span> <span data-ttu-id="33a65-226">Lecture seule</span><span class="sxs-lookup"><span data-stu-id="33a65-226">Read-only</span></span>


    <span data-ttu-id="33a65-227">\[[Ensemble d'API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="33a65-227">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: richText
  fullName: richText
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly richText: OneNote.RichText;'
    return:
      type:
      - onenote.OneNote.RichText
- uid: onenote.OneNote.Paragraph.set
  summary: <span data-ttu-id="33a65-228">Définit plusieurs propriétés d'un objet en même temps.</span><span class="sxs-lookup"><span data-stu-id="33a65-228">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="33a65-229">Vous pouvez transmettre un objet plain avec les propriétés appropriées, ou un autre objet API du même type.</span><span class="sxs-lookup"><span data-stu-id="33a65-229">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="33a65-230">Cette méthode est dotée de la signature supplémentaire suivante:</span><span class="sxs-lookup"><span data-stu-id="33a65-230">This method has the following additional signature:</span></span>


    `set(properties: OneNote.Paragraph): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.ParagraphUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="33a65-231">Objet JavaScript avec des propriétés qui sont structurées isomorphically vers les propriétés de l'objet sur lequel la méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="33a65-231">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.ParagraphUpdateData
    - id: options
      description: <span data-ttu-id="33a65-232">Fournit une option permettant de supprimer les erreurs si l'objet Properties tente de définir des propriétés en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="33a65-232">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: onenote.OneNote.Paragraph.set_1
  summary: <span data-ttu-id="33a65-233">Définit plusieurs propriétés de l'objet en même temps, en fonction d'un objet chargé existant.</span><span class="sxs-lookup"><span data-stu-id="33a65-233">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: OneNote.Paragraph): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - onenote.OneNote.Paragraph
- uid: onenote.OneNote.Paragraph.table
  summary: >-
    <span data-ttu-id="33a65-p126">Obtient l’objet Table dans le paragraphe. Renvoie une exception si ParagraphType n’est pas défini sur Table. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="33a65-p126">Gets the Table object in the Paragraph. Throws an exception if ParagraphType is not Table. Read-only.</span></span>


    <span data-ttu-id="33a65-237">\[[Ensemble d'API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="33a65-237">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: table
  fullName: table
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly table: OneNote.Table;'
    return:
      type:
      - OneNote.Table
- uid: onenote.OneNote.Paragraph.toJSON
  summary: <span data-ttu-id="33a65-238">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu'un objet d'API est transmis à. `JSON.stringify()` <!-- --></span><span class="sxs-lookup"><span data-stu-id="33a65-238">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="33a65-239">(`JSON.stringify`<!-- -->, à son tour, appelle `toJSON` la méthode de l'objet qui lui est passé.) Tandis que l'objet OneNote. Paragraph d'origine est un objet `toJSON` d'API, la méthode renvoie un objet JavaScript `OneNote.Interfaces.ParagraphData` <!-- -->simple (tapé sous la forme) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l'objet d'origine.</span><span class="sxs-lookup"><span data-stu-id="33a65-239">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original OneNote.Paragraph object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `OneNote.Interfaces.ParagraphData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): OneNote.Interfaces.ParagraphData;'
    return:
      type:
      - onenote.OneNote.Interfaces.ParagraphData
      description: ''
- uid: onenote.OneNote.Paragraph.track
  summary: <span data-ttu-id="33a65-240">Effectuer le suivi de l'objet pour un ajustement automatique en fonction des modifications apportées au document.</span><span class="sxs-lookup"><span data-stu-id="33a65-240">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="33a65-241">Cet appel est un raccourci pour Context. trackedObjects. Add (thisObject).</span><span class="sxs-lookup"><span data-stu-id="33a65-241">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="33a65-242">Si vous utilisez cet objet dans les appels «. Sync» et en dehors de l'exécution séquentielle d'un lot «. Run», et si vous obtenez une erreur «InvalidObjectPath» lors de la définition d'une propriété ou de l'appel d'une méthode sur l'objet, vous deviez ajouter l'objet à l'objet suivi. collection lors de la création initiale de l'objet.</span><span class="sxs-lookup"><span data-stu-id="33a65-242">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>
  name: track()
  fullName: track()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'track(): OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
      description: ''
- uid: onenote.OneNote.Paragraph.type
  summary: >-
    <span data-ttu-id="33a65-243">Obtient le type de l’objet Paragraph.</span><span class="sxs-lookup"><span data-stu-id="33a65-243">Gets the type of the Paragraph object.</span></span> <span data-ttu-id="33a65-244">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="33a65-244">Read-only.</span></span>


    <span data-ttu-id="33a65-245">\[[Ensemble d'API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="33a65-245">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: type
  fullName: type
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly type: OneNote.ParagraphType | "RichText" | "Image" | "Table" | "Ink" | "Other";'
    return:
      type:
      - OneNote.ParagraphType | "RichText" | "Image" | "Table" | "Ink" | "Other"
- uid: onenote.OneNote.Paragraph.untrack
  summary: <span data-ttu-id="33a65-246">Libère la mémoire associée à cet objet, si elle a déjà été suivie.</span><span class="sxs-lookup"><span data-stu-id="33a65-246">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="33a65-247">Cet appel est un raccourci pour Context. trackedObjects. Remove (thisObject).</span><span class="sxs-lookup"><span data-stu-id="33a65-247">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="33a65-248">Étant donné que de nombreux objets suivis ralentissent l'application hôte, n'oubliez pas de libérer les objets que vous ajoutez, une fois que vous les utilisez.</span><span class="sxs-lookup"><span data-stu-id="33a65-248">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them.</span></span> <span data-ttu-id="33a65-249">Vous devrez appeler «Context. Sync ()» avant que la version de mémoire ne prenne effet.</span><span class="sxs-lookup"><span data-stu-id="33a65-249">You will need to call "context.sync()" before the memory release takes effect.</span></span>
  name: untrack()
  fullName: untrack()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'untrack(): OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
      description: ''
