### YamlMime:UniversalReference
ms.openlocfilehash: 68a69b2e5da5c0ad154fb5626395bd8faf942fab
ms.sourcegitcommit: beffe9455dace422e85b92f0105c54ff7b594cbf
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 09/20/2018
ms.locfileid: "24043252"
items:
- uid: onenote.OneNote.SectionCollection
  summary: >-
    <span data-ttu-id="30d0d-101">Représente une collection de sections.</span><span class="sxs-lookup"><span data-stu-id="30d0d-101">Represents a collection of sections.</span></span>


    <span data-ttu-id="30d0d-102">\[[Du jeu d’API : OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30d0d-102">\[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: OneNote.SectionCollection
  fullName: onenote.OneNote.SectionCollection
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: onenote
  children:
  - onenote.OneNote.SectionCollection.count
  - onenote.OneNote.SectionCollection.getByName
  - onenote.OneNote.SectionCollection.getItem
  - onenote.OneNote.SectionCollection.getItemAt
  - onenote.OneNote.SectionCollection.items
  - onenote.OneNote.SectionCollection.load
  - onenote.OneNote.SectionCollection.toJSON
  - onenote.OneNote.SectionCollection.track
  - onenote.OneNote.SectionCollection.untrack
- uid: onenote.OneNote.SectionCollection.count
  summary: >-
    <span data-ttu-id="30d0d-p101">Renvoie le nombre de sections de la collection. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="30d0d-p101">Returns the number of sections in the collection. Read-only.</span></span>


    <span data-ttu-id="30d0d-105">\[[Du jeu d’API : OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30d0d-105">\[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: count
  fullName: onenote.OneNote.SectionCollection.count
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly count: number;'
    return:
      type:
      - number
- uid: onenote.OneNote.SectionCollection.getByName
  summary: >-
    <span data-ttu-id="30d0d-106">Obtient la collection de sections portant le nom spécifié.</span><span class="sxs-lookup"><span data-stu-id="30d0d-106">Gets the collection of sections with the specified name.</span></span>


    <span data-ttu-id="30d0d-107">\[[Du jeu d’API : OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30d0d-107">\[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getByName(name)
  fullName: onenote.OneNote.SectionCollection.getByName
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getByName(name: string): OneNote.SectionCollection;'
    return:
      type:
      - onenote.OneNote.SectionCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"30d0d-108\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"30d0d-108\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the sections in the current notebook.\n    var sections = context.application.getActiveNotebook().sections;\n\n    // Queue a command to load the sections. \n    // For best performance, request specific properties.\n    sections.load(\"id\"); \n    \n    // Get the sections with the specified name.\n    var groceriesSections = sections.getByName(\"Groceries\");\n    \n    // Queue a command to load the sections with the specified name.\n    groceriesSections.load(\"id,name\");\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            // Iterate through the collection or access items individually by index.\n            if (groceriesSections.items.length > 0) {\n                console.log(\"Section name: \" + groceriesSections.items[0].name);\n                console.log(\"Section ID: \" + groceriesSections.items[0].id);\n            }\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: name
      description: <span data-ttu-id="30d0d-109">Nom de la section.</span><span class="sxs-lookup"><span data-stu-id="30d0d-109">The name of the section.</span></span>
      type:
      - string
- uid: onenote.OneNote.SectionCollection.getItem
  summary: >-
    <span data-ttu-id="30d0d-p102">Obtient une section en fonction de son ID ou de son index dans la collection. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="30d0d-p102">Gets a section by ID or by its index in the collection. Read-only.</span></span>


    <span data-ttu-id="30d0d-112">\[[Du jeu d’API : OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30d0d-112">\[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getItem(index)
  fullName: onenote.OneNote.SectionCollection.getItem
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(index: number | string): OneNote.Section;'
    return:
      type:
      - onenote.OneNote.Section
      description: ''
    parameters:
    - id: index
      description: <span data-ttu-id="30d0d-113">ID ou emplacement d’index de la section de la collection.</span><span class="sxs-lookup"><span data-stu-id="30d0d-113">The ID of the section, or the index location of the section in the collection.</span></span>
      type:
      - number | string
- uid: onenote.OneNote.SectionCollection.getItemAt
  summary: >-
    <span data-ttu-id="30d0d-114">Obtient une section en fonction de sa position dans la collection.</span><span class="sxs-lookup"><span data-stu-id="30d0d-114">Gets a section on its position in the collection.</span></span>


    <span data-ttu-id="30d0d-115">\[[Du jeu d’API : OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30d0d-115">\[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getItemAt(index)
  fullName: onenote.OneNote.SectionCollection.getItemAt
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): OneNote.Section;'
    return:
      type:
      - onenote.OneNote.Section
      description: ''
    parameters:
    - id: index
      description: <span data-ttu-id="30d0d-p103">Valeur d’indice de l’objet à récupérer. Avec indice zéro.</span><span class="sxs-lookup"><span data-stu-id="30d0d-p103">Index value of the object to be retrieved. Zero-indexed.</span></span>
      type:
      - number
- uid: onenote.OneNote.SectionCollection.items
  summary: <span data-ttu-id="30d0d-118">Obtient l’enfant chargé éléments dans cette collection.</span><span class="sxs-lookup"><span data-stu-id="30d0d-118">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: onenote.OneNote.SectionCollection.items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: OneNote.Section[];'
    return:
      type:
      - OneNote.Section[]
- uid: onenote.OneNote.SectionCollection.load
  summary: <span data-ttu-id="30d0d-119">Files d’attente d’une commande pour charger les propriétés de l’objet spécifiées.</span><span class="sxs-lookup"><span data-stu-id="30d0d-119">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="30d0d-120">Vous devez appeler « context.sync() » avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="30d0d-120">You must call "context.sync()" before reading the properties.</span></span>
  remarks: "<span data-ttu-id=\"30d0d-121\">Outre cette signature, cette méthode présente les signatures suivantes :</span><span class=\"sxs-lookup\"><span data-stu-id=\"30d0d-121\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"30d0d-122\">`load(option?: { select?: string; expand?: string; }): OneNote.SectionCollection`-Où option.select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options.expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class=\"sxs-lookup\"><span data-stu-id=\"30d0d-122\">`load(option?: { select?: string; expand?: string; }): OneNote.SectionCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"30d0d-123\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.SectionCollection`-Uniquement disponible sur les types de la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"30d0d-123\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.SectionCollection` - Only available on collection types.</span></span> <span data-ttu-id=\"30d0d-124\">Il est similaire à la signature précédente.</span><span class=\"sxs-lookup\"><span data-stu-id=\"30d0d-124\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"30d0d-125\">Option.Top Spécifie le nombre maximal d’éléments pouvant être inclus dans le résultat de la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"30d0d-125\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"30d0d-126\">Option.Skip Spécifie le nombre d’éléments qui doivent être ignoré et non inclus dans le résultat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"30d0d-126\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"30d0d-127\">Si option.top est spécifié, le jeu de résultats démarre après l’ignorer le nombre spécifié d’éléments.</span><span class=\"sxs-lookup\"><span data-stu-id=\"30d0d-127\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"30d0d-128\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"30d0d-128\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the sections in the current notebook.\n    var sections = context.application.getActiveNotebook().sections;\n\n    // Queue a command to load the sections. \n    // For best performance, request specific properties.\n    sections.load(\"name\"); \n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n            \n            // Iterate through the collection or access items individually by index, for example: sections.items[0]\n            $.each(sections.items, function(index, section) {\n                if (section.name === \"Homework\") {\n                    section.addPage(\"Biology\");\n                    section.addPage(\"Spanish\");\n                    section.addPage(\"Computer Science\");\n                }\n            });\n            return context.sync();\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  name: load(option)
  fullName: onenote.OneNote.SectionCollection.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): OneNote.SectionCollection;'
    return:
      type:
      - onenote.OneNote.SectionCollection
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="30d0d-129">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="30d0d-129">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: onenote.OneNote.SectionCollection.toJSON
  name: toJSON()
  fullName: onenote.OneNote.SectionCollection.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): OneNote.Interfaces.SectionCollectionData;'
    return:
      type:
      - onenote.OneNote.Interfaces.SectionCollectionData
      description: ''
- uid: onenote.OneNote.SectionCollection.track
  summary: <span data-ttu-id="30d0d-130">Suivre l’objet pour l’ajustement automatique selon entourant les modifications dans le document.</span><span class="sxs-lookup"><span data-stu-id="30d0d-130">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="30d0d-131">Cet appel est une abréviation de context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="30d0d-131">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="30d0d-132">Si vous utilisez cet objet dans les appels de « .sync » et en dehors de l’exécution séquentielle d’un lot de « .run » et obtenir une erreur « InvalidObjectPath » lors de la définition d’une propriété ou d’appeler une méthode sur l’objet, vous devez avoir ajouté l’objet à l’objet suivi collection lorsque l’objet a été créé tout d’abord.</span><span class="sxs-lookup"><span data-stu-id="30d0d-132">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>
  name: track()
  fullName: onenote.OneNote.SectionCollection.track
  langs:
  - typeScript
  type: method
  syntax:
    content: 'track(): OneNote.SectionCollection;'
    return:
      type:
      - onenote.OneNote.SectionCollection
      description: ''
- uid: onenote.OneNote.SectionCollection.untrack
  summary: <span data-ttu-id="30d0d-133">Version de la mémoire associée à cet objet, si elle a été précédemment suivi.</span><span class="sxs-lookup"><span data-stu-id="30d0d-133">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="30d0d-134">Cet appel est l’abréviation de context.trackedObjects.remove(thisObject).</span><span class="sxs-lookup"><span data-stu-id="30d0d-134">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="30d0d-135">Comportant de nombreux objets suivis ralentit l’application hôte, donc pensez à libérer les objets que vous ajoutez, une fois que vous avez terminé les utiliser.</span><span class="sxs-lookup"><span data-stu-id="30d0d-135">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them.</span></span> <span data-ttu-id="30d0d-136">Vous devrez appeler « context.sync() » avant que la version de mémoire prenne effet.</span><span class="sxs-lookup"><span data-stu-id="30d0d-136">You will need to call "context.sync()" before the memory release takes effect.</span></span>
  name: untrack()
  fullName: onenote.OneNote.SectionCollection.untrack
  langs:
  - typeScript
  type: method
  syntax:
    content: 'untrack(): OneNote.SectionCollection;'
    return:
      type:
      - onenote.OneNote.SectionCollection
      description: ''
