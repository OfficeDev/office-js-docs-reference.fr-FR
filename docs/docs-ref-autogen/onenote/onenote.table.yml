### YamlMime:UniversalReference
ms.openlocfilehash: 6cfd114b3623589b0f4bb3e15476784473b23919
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 02/13/2019
ms.locfileid: "29980974"
items:
- uid: onenote.OneNote.Table
  summary: >-
    <span data-ttu-id="203b5-101">Représente une table dans une page OneNote.</span><span class="sxs-lookup"><span data-stu-id="203b5-101">Represents a table in a OneNote page.</span></span>


    <span data-ttu-id="203b5-102">\[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="203b5-102">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: OneNote.Table
  fullName: OneNote.Table
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: onenote
  children:
  - onenote.OneNote.Table.appendColumn
  - onenote.OneNote.Table.appendRow
  - onenote.OneNote.Table.borderVisible
  - onenote.OneNote.Table.clear
  - onenote.OneNote.Table.columnCount
  - onenote.OneNote.Table.context
  - onenote.OneNote.Table.getCell
  - onenote.OneNote.Table.id
  - onenote.OneNote.Table.insertColumn
  - onenote.OneNote.Table.insertRow
  - onenote.OneNote.Table.load
  - onenote.OneNote.Table.load_1
  - onenote.OneNote.Table.load_2
  - onenote.OneNote.Table.paragraph
  - onenote.OneNote.Table.rowCount
  - onenote.OneNote.Table.rows
  - onenote.OneNote.Table.set
  - onenote.OneNote.Table.set_1
  - onenote.OneNote.Table.setShadingColor
  - onenote.OneNote.Table.toJSON
  - onenote.OneNote.Table.track
  - onenote.OneNote.Table.untrack
- uid: onenote.OneNote.Table.appendColumn
  summary: >-
    <span data-ttu-id="203b5-p101">Ajoute une colonne à la fin du tableau. Si elles sont spécifiées, les valeurs sont définies dans la nouvelle colonne. Dans le cas contraire, la colonne est vide.</span><span class="sxs-lookup"><span data-stu-id="203b5-p101">Adds a column to the end of the table. Values, if specified, are set in the new column. Otherwise the column is empty.</span></span>


    <span data-ttu-id="203b5-106">\[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="203b5-106">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: appendColumn(values)
  fullName: appendColumn(values)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'appendColumn(values?: string[]): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"203b5-107\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"203b5-107\">Examples</span></span>\n\n```javascript\nOneNote.run(function(ctx) {\n    var app = ctx.application;\n    var outline = app.getActiveOutline();\n    \n    // Queue a command to load outline.paragraphs and their types.\n    ctx.load(outline, \"paragraphs, paragraphs/type\");\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        var paragraphs = outline.paragraphs;\n        \n        // for each table, append a column.\n        for (var i = 0; i < paragraphs.items.length; i++) {\n            var paragraph = paragraphs.items[i];\n            if (paragraph.type == \"Table\") {\n                var table = paragraph.table;\n                table.appendColumn([\"cell0\", \"cell1\"]);\n            }\n        }\n        return ctx.sync();\n    })\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: values
      description: <span data-ttu-id="203b5-108">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="203b5-108">Optional.</span></span> <span data-ttu-id="203b5-109">Chaînes à insérer dans la nouvelle colonne, spécifiées sous forme de tableau.</span><span class="sxs-lookup"><span data-stu-id="203b5-109">Strings to insert in the new column, specified as an array.</span></span> <span data-ttu-id="203b5-110">Elles ne doivent pas contenir plus de valeurs que de lignes dans le tableau.</span><span class="sxs-lookup"><span data-stu-id="203b5-110">Must not have more values than rows in the table.</span></span>
      type:
      - string[]
- uid: onenote.OneNote.Table.appendRow
  summary: >-
    <span data-ttu-id="203b5-p103">Ajoute une ligne à la fin du tableau. Si elles sont spécifiées, les valeurs sont définies dans la nouvelle ligne. Dans le cas contraire, la ligne est vide.</span><span class="sxs-lookup"><span data-stu-id="203b5-p103">Adds a row to the end of the table. Values, if specified, are set in the new row. Otherwise the row is empty.</span></span>


    <span data-ttu-id="203b5-114">\[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="203b5-114">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: appendRow(values)
  fullName: appendRow(values)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'appendRow(values?: string[]): OneNote.TableRow;'
    return:
      type:
      - OneNote.TableRow
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"203b5-115\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"203b5-115\">Examples</span></span>\n\n```javascript\nOneNote.run(function(ctx) {\n    var app = ctx.application;\n    var outline = app.getActiveOutline();\n    \n    // Queue a command to load outline.paragraphs and their types.\n    ctx.load(outline, \"paragraphs, paragraphs/type\");\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        var paragraphs = outline.paragraphs;\n        \n        // for each table, append a column.\n        for (var i = 0; i < paragraphs.items.length; i++) {\n            var paragraph = paragraphs.items[i];\n            if (paragraph.type == \"Table\") {\n                var table = paragraph.table;\n                var row = table.appendRow([\"cell0\", \"cell1\"]);\n            }\n        }\n        return ctx.sync();\n    })\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: values
      description: <span data-ttu-id="203b5-116">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="203b5-116">Optional.</span></span> <span data-ttu-id="203b5-117">Chaînes à insérer dans la nouvelle ligne, spécifiées sous forme de tableau.</span><span class="sxs-lookup"><span data-stu-id="203b5-117">Strings to insert in the new row, specified as an array.</span></span> <span data-ttu-id="203b5-118">Elles ne doivent pas contenir plus de valeurs que de colonnes dans le tableau.</span><span class="sxs-lookup"><span data-stu-id="203b5-118">Must not have more values than columns in the table.</span></span>
      type:
      - string[]
- uid: onenote.OneNote.Table.borderVisible
  summary: >-
    <span data-ttu-id="203b5-p105">Obtient ou définit si les bordures sont visibles ou non. True si elles sont visibles, false si elles sont masquées.</span><span class="sxs-lookup"><span data-stu-id="203b5-p105">Gets or sets whether the borders are visible or not. True if they are visible, false if they are hidden.</span></span>


    <span data-ttu-id="203b5-121">\[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="203b5-121">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: borderVisible
  fullName: borderVisible
  langs:
  - typeScript
  type: property
  syntax:
    content: 'borderVisible: boolean;'
    return:
      type:
      - boolean
- uid: onenote.OneNote.Table.clear
  summary: >-
    <span data-ttu-id="203b5-122">Efface le contenu du tableau.</span><span class="sxs-lookup"><span data-stu-id="203b5-122">Clears the contents of the table.</span></span>


    <span data-ttu-id="203b5-123">\[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="203b5-123">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: clear()
  fullName: clear()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clear(): void;'
    return:
      type:
      - void
      description: ''
- uid: onenote.OneNote.Table.columnCount
  summary: >-
    <span data-ttu-id="203b5-124">Obtient le nombre de colonnes dans le tableau.</span><span class="sxs-lookup"><span data-stu-id="203b5-124">Gets the number of columns in the table.</span></span>


    <span data-ttu-id="203b5-125">\[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="203b5-125">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: columnCount
  fullName: columnCount
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly columnCount: number;'
    return:
      type:
      - number
- uid: onenote.OneNote.Table.context
  summary: <span data-ttu-id="203b5-126">Contexte de la requête associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="203b5-126">The request context associated with the object.</span></span> <span data-ttu-id="203b5-127">Il connecte processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="203b5-127">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: onenote.OneNote.Table.getCell
  summary: >-
    <span data-ttu-id="203b5-128">Obtient la cellule du tableau à une ligne et une colonne spécifiées.</span><span class="sxs-lookup"><span data-stu-id="203b5-128">Gets the table cell at a specified row and column.</span></span>


    <span data-ttu-id="203b5-129">\[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="203b5-129">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getCell(rowIndex, cellIndex)
  fullName: getCell(rowIndex, cellIndex)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCell(rowIndex: number, cellIndex: number): OneNote.TableCell;'
    return:
      type:
      - onenote.OneNote.TableCell
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"203b5-130\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"203b5-130\">Examples</span></span>\n\n```javascript\nOneNote.run(function(ctx) {\n    var app = ctx.application;\n    var outline = app.getActiveOutline();\n    \n    // Queue a command to load outline.paragraphs and their types.\n    ctx.load(outline, \"paragraphs, paragraphs/type\");\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        var paragraphs = outline.paragraphs;\n        \n        // for each table, get a cell in the second row and third column.\n        for (var i = 0; i < paragraphs.items.length; i++) {\n            var paragraph = paragraphs.items[i];\n            if (paragraph.type == \"Table\") {\n                var table = paragraph.table;\n                var cell = table.getCell(2 /*Row Index*/, 3 /*Column Index*/);\n            }\n        }\n        return ctx.sync();\n    })\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: rowIndex
      description: <span data-ttu-id="203b5-131">Index de la ligne.</span><span class="sxs-lookup"><span data-stu-id="203b5-131">The index of the row.</span></span>
      type:
      - number
    - id: cellIndex
      description: <span data-ttu-id="203b5-132">Index de la cellule dans la ligne.</span><span class="sxs-lookup"><span data-stu-id="203b5-132">The index of the cell in the row.</span></span>
      type:
      - number
- uid: onenote.OneNote.Table.id
  summary: >-
    <span data-ttu-id="203b5-p107">Obtient l’ID du tableau. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="203b5-p107">Gets the ID of the table. Read-only.</span></span>


    <span data-ttu-id="203b5-135">\[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="203b5-135">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
- uid: onenote.OneNote.Table.insertColumn
  summary: >-
    <span data-ttu-id="203b5-p108">Insère une colonne au niveau de l’index donné dans le tableau. Si elles sont spécifiées, les valeurs sont définies dans la nouvelle colonne. Dans le cas contraire, la colonne est vide.</span><span class="sxs-lookup"><span data-stu-id="203b5-p108">Inserts a column at the given index in the table. Values, if specified, are set in the new column. Otherwise the column is empty.</span></span>


    <span data-ttu-id="203b5-139">\[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="203b5-139">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertColumn(index, values)
  fullName: insertColumn(index, values)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertColumn(index: number, values?: string[]): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"203b5-140\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"203b5-140\">Examples</span></span>\n\n```javascript\nOneNote.run(function(ctx) {\n    var app = ctx.application;\n    var outline = app.getActiveOutline();\n    \n    // Queue a command to load outline.paragraphs and their types.\n    ctx.load(outline, \"paragraphs, paragraphs/type\");\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        var paragraphs = outline.paragraphs;\n        \n        // for each table, insert a column at index two.\n        for (var i = 0; i < paragraphs.items.length; i++) {\n            var paragraph = paragraphs.items[i];\n            if (paragraph.type == \"Table\") {\n                var table = paragraph.table;\n                table.insertColumn(2, [\"cell0\", \"cell1\"]);\n            }\n        }\n        return ctx.sync();\n    })\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="203b5-141">Index au niveau duquel la colonne est insérée dans le tableau.</span><span class="sxs-lookup"><span data-stu-id="203b5-141">Index where the column will be inserted in the table.</span></span>
      type:
      - number
    - id: values
      description: <span data-ttu-id="203b5-142">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="203b5-142">Optional.</span></span> <span data-ttu-id="203b5-143">Chaînes à insérer dans la nouvelle colonne, spécifiées sous forme de tableau.</span><span class="sxs-lookup"><span data-stu-id="203b5-143">Strings to insert in the new column, specified as an array.</span></span> <span data-ttu-id="203b5-144">Elles ne doivent pas contenir plus de valeurs que de lignes dans le tableau.</span><span class="sxs-lookup"><span data-stu-id="203b5-144">Must not have more values than rows in the table.</span></span>
      type:
      - string[]
- uid: onenote.OneNote.Table.insertRow
  summary: >-
    <span data-ttu-id="203b5-p110">Insère une ligne à l’index donné dans le tableau. Si elles sont spécifiées, les valeurs sont définies dans la nouvelle ligne. Dans le cas contraire, la ligne est vide.</span><span class="sxs-lookup"><span data-stu-id="203b5-p110">Inserts a row at the given index in the table. Values, if specified, are set in the new row. Otherwise the row is empty.</span></span>


    <span data-ttu-id="203b5-148">\[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="203b5-148">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertRow(index, values)
  fullName: insertRow(index, values)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertRow(index: number, values?: string[]): OneNote.TableRow;'
    return:
      type:
      - OneNote.TableRow
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"203b5-149\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"203b5-149\">Examples</span></span>\n\n```javascript\nOneNote.run(function(ctx) {\n    var app = ctx.application;\n    var outline = app.getActiveOutline();\n    \n    // Queue a command to load outline.paragraphs and their types.\n    ctx.load(outline, \"paragraphs, paragraphs/type\");\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        var paragraphs = outline.paragraphs;\n        \n        // for each table, insert a row at index two.\n        for (var i = 0; i < paragraphs.items.length; i++) {\n            var paragraph = paragraphs.items[i];\n            if (paragraph.type == \"Table\") {\n                var table = paragraph.table;\n                var row = table.insertRow(2, [\"cell0\", \"cell1\"]);\n            }\n        }\n        return ctx.sync();\n    })\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="203b5-150">Index au niveau duquel la ligne est insérée dans le tableau.</span><span class="sxs-lookup"><span data-stu-id="203b5-150">Index where the row will be inserted in the table.</span></span>
      type:
      - number
    - id: values
      description: <span data-ttu-id="203b5-151">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="203b5-151">Optional.</span></span> <span data-ttu-id="203b5-152">Chaînes à insérer dans la nouvelle ligne, spécifiées sous forme de tableau.</span><span class="sxs-lookup"><span data-stu-id="203b5-152">Strings to insert in the new row, specified as an array.</span></span> <span data-ttu-id="203b5-153">Elles ne doivent pas contenir plus de valeurs que de colonnes dans le tableau.</span><span class="sxs-lookup"><span data-stu-id="203b5-153">Must not have more values than columns in the table.</span></span>
      type:
      - string[]
- uid: onenote.OneNote.Table.load
  summary: <span data-ttu-id="203b5-154">Files d’attente d’une commande pour charger les propriétés de l’objet spécifiées.</span><span class="sxs-lookup"><span data-stu-id="203b5-154">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="203b5-155">Vous devez appeler « context.sync() » avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="203b5-155">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="203b5-156">Outre cette signature, cette méthode présente les signatures suivantes :</span><span class="sxs-lookup"><span data-stu-id="203b5-156">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="203b5-157">`load(option?: string | string[]): OneNote.Table`-Où option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="203b5-157">`load(option?: string | string[]): OneNote.Table` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="203b5-158">`load(option?: { select?: string; expand?: string; }): OneNote.Table`-Où option.select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options.expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="203b5-158">`load(option?: { select?: string; expand?: string; }): OneNote.Table` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="203b5-159">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Table`-Uniquement disponible sur les types de la collection.</span><span class="sxs-lookup"><span data-stu-id="203b5-159">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Table` - Only available on collection types.</span></span> <span data-ttu-id="203b5-160">Il est similaire à la signature précédente.</span><span class="sxs-lookup"><span data-stu-id="203b5-160">It is similar to the preceding signature.</span></span> <span data-ttu-id="203b5-161">Option.Top Spécifie le nombre maximal d’éléments pouvant être inclus dans le résultat de la collection.</span><span class="sxs-lookup"><span data-stu-id="203b5-161">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="203b5-162">Option.Skip Spécifie le nombre d’éléments qui doivent être ignoré et non inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="203b5-162">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="203b5-163">Si option.top est spécifié, le jeu de résultats démarre après l’ignorer le nombre spécifié d’éléments.</span><span class="sxs-lookup"><span data-stu-id="203b5-163">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OneNote.Interfaces.TableLoadOptions): OneNote.Table;'
    return:
      type:
      - OneNote.Table
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - OneNote.Interfaces.TableLoadOptions
- uid: onenote.OneNote.Table.load_1
  summary: <span data-ttu-id="203b5-164">Files d’attente d’une commande pour charger les propriétés de l’objet spécifiées.</span><span class="sxs-lookup"><span data-stu-id="203b5-164">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="203b5-165">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="203b5-165">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): OneNote.Table;'
    return:
      type:
      - OneNote.Table
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"203b5-166\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"203b5-166\">Examples</span></span>\n\n```javascript\nOneNote.run(function(ctx) {\n    var app = ctx.application;\n    var outline = app.getActiveOutline();\n    \n    // Queue a command to load outline.paragraphs and their types.\n    ctx.load(outline, \"paragraphs/type\");\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        var paragraphs = outline.paragraphs;\n        \n        // For each table, log properties.\n        for (var i = 0; i < paragraphs.items.length; i++) {\n            var paragraph = paragraphs.items[i];\n            if (paragraph.type == \"Table\") {\n                var table = paragraph.table;\n                ctx.load(table);\n                return ctx.sync().then(function() {\n                    console.log(\"Table Id: \" + table.id);\n                    console.log(\"Row Count: \" + table.rowCount);\n                    console.log(\"Column Count: \" + table.columnCount);\n                    return ctx.sync();\n                });\n            }\n        }\n    });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nOneNote.run(function(ctx) {\n    var app = ctx.application;\n    var outline = app.getActiveOutline();\n    \n    // Queue a command to load outline.paragraphs and their types.\n    ctx.load(outline, \"paragraphs, paragraphs/type\");\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        var paragraphs = outline.paragraphs;\n        \n        // for each table, log its paragraph id.\n        for (var i = 0; i < paragraphs.items.length; i++) {\n            var paragraph = paragraphs.items[i];\n            if (paragraph.type == \"Table\") {\n                var table = paragraph.table;\n                ctx.load(table, \"paragraph/id, rows/id\");\n                return ctx.sync().then(function() {\n                    console.log(\"Paragraph Id: \" + table.paragraph.id);\n                    var rows = table.rows;\n                    \n                    // for each rows in the table, log row index and id.\n                    for (var i = 0; i < rows.items.length; i++) {\n                        console.log(\"Row \" + i + \" Id: \" + rows.items[i].id);\n                    }\n                    return ctx.sync();\n                });\n            }\n        }\n    })\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="203b5-167">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="203b5-167">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: onenote.OneNote.Table.load_2
  summary: <span data-ttu-id="203b5-168">Files d’attente d’une commande pour charger les propriétés de l’objet spécifiées.</span><span class="sxs-lookup"><span data-stu-id="203b5-168">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="203b5-169">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="203b5-169">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): OneNote.Table;'
    return:
      type:
      - OneNote.Table
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="203b5-170">Où propertyNamesAndPaths.select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et propertyNamesAndPaths.expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="203b5-170">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: onenote.OneNote.Table.paragraph
  summary: >-
    <span data-ttu-id="203b5-p116">Obtient l’objet Paragraph qui contient l’objet Table. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="203b5-p116">Gets the Paragraph object that contains the Table object. Read-only.</span></span>


    <span data-ttu-id="203b5-173">\[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="203b5-173">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: paragraph
  fullName: paragraph
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly paragraph: OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
- uid: onenote.OneNote.Table.rowCount
  summary: >-
    <span data-ttu-id="203b5-174">Obtient le nombre de lignes dans le tableau.</span><span class="sxs-lookup"><span data-stu-id="203b5-174">Gets the number of rows in the table.</span></span>


    <span data-ttu-id="203b5-175">\[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="203b5-175">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: rowCount
  fullName: rowCount
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly rowCount: number;'
    return:
      type:
      - number
- uid: onenote.OneNote.Table.rows
  summary: >-
    <span data-ttu-id="203b5-p117">Obtient toutes les lignes du tableau. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="203b5-p117">Gets all of the table rows. Read-only.</span></span>


    <span data-ttu-id="203b5-178">\[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="203b5-178">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: rows
  fullName: rows
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly rows: OneNote.TableRowCollection;'
    return:
      type:
      - OneNote.TableRowCollection
- uid: onenote.OneNote.Table.set
  summary: <span data-ttu-id="203b5-179">Définir plusieurs propriétés d’un objet en même temps.</span><span class="sxs-lookup"><span data-stu-id="203b5-179">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="203b5-180">Vous pouvez passer un objet brut avec les propriétés appropriées, ou un autre objet API du même type.</span><span class="sxs-lookup"><span data-stu-id="203b5-180">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="203b5-181">Cette méthode a la signature supplémentaire suivante :</span><span class="sxs-lookup"><span data-stu-id="203b5-181">This method has the following additional signature:</span></span>


    `set(properties: OneNote.Table): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.TableUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="203b5-182">Un objet JavaScript avec des propriétés qui sont structurés isomorphically pour les propriétés de l’objet sur lequel la méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="203b5-182">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.TableUpdateData
    - id: options
      description: <span data-ttu-id="203b5-183">Fournit une option permettant de supprimer des erreurs si l’objet propriétés tente de définir des propriétés en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="203b5-183">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: onenote.OneNote.Table.set_1
  summary: <span data-ttu-id="203b5-184">Définit plusieurs propriétés de l’objet en même temps, basé sur un objet chargé existant.</span><span class="sxs-lookup"><span data-stu-id="203b5-184">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: OneNote.Table): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - OneNote.Table
- uid: onenote.OneNote.Table.setShadingColor
  summary: >-
    <span data-ttu-id="203b5-185">Définit la couleur d’ombrage de toutes les cellules du tableau.</span><span class="sxs-lookup"><span data-stu-id="203b5-185">Sets the shading color of all cells in the table.</span></span> <span data-ttu-id="203b5-186">Code couleur appliqué aux cellules.</span><span class="sxs-lookup"><span data-stu-id="203b5-186">The color code to set the cells to.</span></span>


    <span data-ttu-id="203b5-187">\[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="203b5-187">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: setShadingColor(colorCode)
  fullName: setShadingColor(colorCode)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setShadingColor(colorCode: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: colorCode
      description: ''
      type:
      - string
- uid: onenote.OneNote.Table.toJSON
  summary: <span data-ttu-id="203b5-188">Remplace le code JavaScript `toJSON()` méthode afin de fournir une sortie plus utile lorsqu’un objet API est passé à `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="203b5-188">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="203b5-189">(`JSON.stringify`<!-- -->, à son tour, appelle le `toJSON` méthode de l’objet qui lui est passé.) Tandis que l’objet OneNote.Table d’origine est un objet d’API, la `toJSON` méthode renvoie un objet JavaScript brut (typée en tant que `OneNote.Interfaces.TableData` <!-- -->) qui contient des copies superficielles de toutes les propriétés enfant chargé à partir de l’objet d’origine.</span><span class="sxs-lookup"><span data-stu-id="203b5-189">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original OneNote.Table object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `OneNote.Interfaces.TableData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): OneNote.Interfaces.TableData;'
    return:
      type:
      - OneNote.Interfaces.TableData
      description: ''
- uid: onenote.OneNote.Table.track
  summary: <span data-ttu-id="203b5-190">Suivre l’objet pour l’ajustement automatique selon entourant les modifications dans le document.</span><span class="sxs-lookup"><span data-stu-id="203b5-190">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="203b5-191">Cet appel est une abréviation de context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="203b5-191">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="203b5-192">Si vous utilisez cet objet dans les appels de « .sync » et en dehors de l’exécution séquentielle d’un lot de « .run » et obtenir une erreur « InvalidObjectPath » lors de la définition d’une propriété ou d’appeler une méthode sur l’objet, vous devez avoir ajouté l’objet à l’objet suivi collection lorsque l’objet a été créé tout d’abord.</span><span class="sxs-lookup"><span data-stu-id="203b5-192">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>
  name: track()
  fullName: track()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'track(): OneNote.Table;'
    return:
      type:
      - OneNote.Table
      description: ''
- uid: onenote.OneNote.Table.untrack
  summary: <span data-ttu-id="203b5-193">Version de la mémoire associée à cet objet, si elle a été précédemment suivi.</span><span class="sxs-lookup"><span data-stu-id="203b5-193">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="203b5-194">Cet appel est l’abréviation de context.trackedObjects.remove(thisObject).</span><span class="sxs-lookup"><span data-stu-id="203b5-194">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="203b5-195">Comportant de nombreux objets suivis ralentit l’application hôte, donc pensez à libérer les objets que vous ajoutez, une fois que vous avez terminé les utiliser.</span><span class="sxs-lookup"><span data-stu-id="203b5-195">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them.</span></span> <span data-ttu-id="203b5-196">Vous devrez appeler « context.sync() » avant que la version de mémoire prenne effet.</span><span class="sxs-lookup"><span data-stu-id="203b5-196">You will need to call "context.sync()" before the memory release takes effect.</span></span>
  name: untrack()
  fullName: untrack()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'untrack(): OneNote.Table;'
    return:
      type:
      - OneNote.Table
      description: ''
