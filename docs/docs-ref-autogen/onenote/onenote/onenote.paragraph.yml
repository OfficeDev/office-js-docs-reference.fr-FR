### YamlMime:TSType
name: OneNote.Paragraph
uid: onenote!OneNote.Paragraph:class
package: onenote!
fullName: OneNote.Paragraph
summary: >-
  Conteneur pour le contenu visible d’une page. Un paragraphe peut contenir n’importe quel type de contenu ParagraphType.


  \[[Ensemble d’API : OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: context
  uid: onenote!OneNote.Paragraph#context:member
  package: onenote!
  fullName: context
  summary: Contexte de demande associé à l’objet. Cette opération connecte le processus du complément au processus de l’application hôte Office.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="onenote!OneNote.RequestContext:class" />
- name: id
  uid: onenote!OneNote.Paragraph#id:member
  package: onenote!
  fullName: id
  summary: >-
    Obtient l’ID de l’objet Paragraph. En lecture seule.


    \[[Ensemble d’API : OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly id: string;'
    return:
      type: string
- name: image
  uid: onenote!OneNote.Paragraph#image:member
  package: onenote!
  fullName: image
  summary: >-
    Renvoie l’objet Image dans le paragraphe. Renvoie une exception si ParagraphType n’est pas défini sur Image. En lecture seule.


    \[[Ensemble d’API : OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly image: OneNote.Image;'
    return:
      type: <xref uid="onenote!OneNote.Image:class" />
- name: inkWords
  uid: onenote!OneNote.Paragraph#inkWords:member
  package: onenote!
  fullName: inkWords
  summary: >-
    Obtient la collection Ink dans le paragraphe. Renvoie une exception si ParagraphType n’est pas défini sur Ink. En lecture seule.


    \[[Ensemble d’API : OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly inkWords: OneNote.InkWordCollection;'
    return:
      type: <xref uid="onenote!OneNote.InkWordCollection:class" />
- name: outline
  uid: onenote!OneNote.Paragraph#outline:member
  package: onenote!
  fullName: outline
  summary: >-
    Renvoie l’objet Outline qui contient le paragraphe. En lecture seule.


    \[[Ensemble d’API : OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly outline: OneNote.Outline;'
    return:
      type: <xref uid="onenote!OneNote.Outline:class" />
- name: paragraphs
  uid: onenote!OneNote.Paragraph#paragraphs:member
  package: onenote!
  fullName: paragraphs
  summary: >-
    Collection de paragraphes sous ce paragraphe. Lecture seule


    \[[Ensemble d’API : OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly paragraphs: OneNote.ParagraphCollection;'
    return:
      type: <xref uid="onenote!OneNote.ParagraphCollection:class" />
- name: parentParagraph
  uid: onenote!OneNote.Paragraph#parentParagraph:member
  package: onenote!
  fullName: parentParagraph
  summary: >-
    Obtient l’objet de paragraphe parent. Indique si un paragraphe parent n’existe pas. En lecture seule.


    \[[Ensemble d’API : OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentParagraph: OneNote.Paragraph;'
    return:
      type: <xref uid="onenote!OneNote.Paragraph:class" />
- name: parentParagraphOrNull
  uid: onenote!OneNote.Paragraph#parentParagraphOrNull:member
  package: onenote!
  fullName: parentParagraphOrNull
  summary: >-
    Obtient l’objet de paragraphe parent. Renvoie la valeur null si un paragraphe parent n’existe pas. En lecture seule.


    \[[Ensemble d’API : OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentParagraphOrNull: OneNote.Paragraph;'
    return:
      type: <xref uid="onenote!OneNote.Paragraph:class" />
- name: parentTableCell
  uid: onenote!OneNote.Paragraph#parentTableCell:member
  package: onenote!
  fullName: parentTableCell
  summary: >-
    Obtient l’objet TableCell qui contient le paragraphe s’il en existe un. Si le parent n’est pas un objet TableCell, renvoie ItemNotFound. En lecture seule.


    \[[Ensemble d’API : OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentTableCell: OneNote.TableCell;'
    return:
      type: <xref uid="onenote!OneNote.TableCell:class" />
- name: parentTableCellOrNull
  uid: onenote!OneNote.Paragraph#parentTableCellOrNull:member
  package: onenote!
  fullName: parentTableCellOrNull
  summary: >-
    Obtient l’objet TableCell qui contient le paragraphe s’il en existe un. Si le parent n’est pas un objet TableCell, renvoie la valeur null. En lecture seule.


    \[[Ensemble d’API : OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentTableCellOrNull: OneNote.TableCell;'
    return:
      type: <xref uid="onenote!OneNote.TableCell:class" />
- name: richText
  uid: onenote!OneNote.Paragraph#richText:member
  package: onenote!
  fullName: richText
  summary: >-
    Renvoie l’objet RichText du paragraphe. Renvoie une exception si ParagraphType n’est pas défini sur RichText. Lecture seule


    \[[Ensemble d’API : OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly richText: OneNote.RichText;'
    return:
      type: <xref uid="onenote!OneNote.RichText:class" />
- name: table
  uid: onenote!OneNote.Paragraph#table:member
  package: onenote!
  fullName: table
  summary: >-
    Obtient l’objet Table dans le paragraphe. Renvoie une exception si ParagraphType n’est pas défini sur Table. En lecture seule.


    \[[Ensemble d’API : OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly table: OneNote.Table;'
    return:
      type: <xref uid="onenote!OneNote.Table:class" />
- name: type
  uid: onenote!OneNote.Paragraph#type:member
  package: onenote!
  fullName: type
  summary: >-
    Obtient le type de l’objet Paragraph. En lecture seule.


    \[[Ensemble d’API : OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly type: OneNote.ParagraphType | "RichText" | "Image" | "Table" | "Ink" | "Other";'
    return:
      type: <xref uid="onenote!OneNote.ParagraphType:enum" /> | "RichText" | "Image" | "Table" | "Ink" | "Other"
methods:
- name: addNoteTag(type, status)
  uid: onenote!OneNote.Paragraph#addNoteTag:member(1)
  package: onenote!
  fullName: addNoteTag(type, status)
  summary: >-
    Ajouter NoteTag au paragraphe.


    \[[Ensemble d’API : OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'addNoteTag(type: OneNote.NoteTagType, status: OneNote.NoteTagStatus): OneNote.NoteTag;'
    parameters:
    - id: type
      description: Type du NoteTag.
      type: <xref uid="onenote!OneNote.NoteTagType:enum" />
    - id: status
      description: État du NoteTag.
      type: <xref uid="onenote!OneNote.NoteTagStatus:enum" />
    return:
      type: <xref uid="onenote!OneNote.NoteTag:class" />
      description: ''
- name: addNoteTag(typeString, status)
  uid: onenote!OneNote.Paragraph#addNoteTag:member(2)
  package: onenote!
  fullName: addNoteTag(typeString, status)
  summary: >-
    Ajouter NoteTag au paragraphe.


    \[[Ensemble d’API : OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'addNoteTag(typeString: "Unknown" | "ToDo" | "Important" | "Question" | "Contact" | "Address" | "PhoneNumber" | "Website" | "Idea" | "Critical" | "ToDoPriority1" | "ToDoPriority2", status: "Unknown" | "Normal" | "Completed" | "Disabled" | "OutlookTask" | "TaskNotSyncedYet" | "TaskRemoved"): OneNote.NoteTag;'
    parameters:
    - id: typeString
      description: Type du NoteTag.
      type: "\"Unknown\" | \"ToDo\" | \"Important\" | \"Question\" | \"Contact\" | \"Address\" | \"PhoneNumber\" | \"Website\" | \"Idea\" | \"Critical\" | \"ToDoPriority1\" | \"ToDoPriority2\""
    - id: status
      description: État du NoteTag.
      type: "\"Unknown\" | \"Normal\" | \"Completed\" | \"Disabled\" | \"OutlookTask\" | \"TaskNotSyncedYet\" | \"TaskRemoved\""
    return:
      type: <xref uid="onenote!OneNote.NoteTag:class" />
      description: ''
- name: delete()
  uid: onenote!OneNote.Paragraph#delete:member(1)
  package: onenote!
  fullName: delete()
  summary: >-
    Supprime le paragraphe.


    \[[Ensemble d’API : OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'delete(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>範例\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n\n    // Get the first PageContent on the page\n    // Assuming its an outline, get the outline's paragraphs.\n    var pageContent = pageContents.getItemAt(0);\n    \n    var paragraphs = pageContent.outline.paragraphs;\n    \n    var firstParagraph = paragraphs.getItemAt(0);\n    \n    // Queue a command to load the id and type of the first paragraph\n    firstParagraph.load(\"id,type\");\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n            \n            // Queue a command to delete the first paragraph                 \n            firstParagraph.delete();\n            \n            // Run the command to delete it\n            return context.sync();\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: getParagraphInfo()
  uid: onenote!OneNote.Paragraph#getParagraphInfo:member(1)
  package: onenote!
  fullName: getParagraphInfo()
  summary: >-
    Obtenir les informations de liste du paragraphe


    \[[Ensemble d’API : OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getParagraphInfo(): OfficeExtension.ClientResult<OneNote.ParagraphInfo>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;<xref uid="onenote!OneNote.ParagraphInfo:interface" />&gt;
      description: ''
- name: insertHtmlAsSibling(insertLocation, html)
  uid: onenote!OneNote.Paragraph#insertHtmlAsSibling:member(1)
  package: onenote!
  fullName: insertHtmlAsSibling(insertLocation, html)
  summary: >-
    Insère le contenu HTML spécifié.


    \[[Ensemble d’API : OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertHtmlAsSibling(insertLocation: OneNote.InsertLocation, html: string): void;'
    parameters:
    - id: insertLocation
      description: Emplacement du nouveau contenu relatif au paragraphe actif.
      type: <xref uid="onenote!OneNote.InsertLocation:enum" />
    - id: html
      description: Chaîne HTML qui décrit la présentation visuelle du contenu. Voir [HTML pris en charge](https://docs.microsoft.com/office/dev/add-ins/onenote/onenote-add-ins-page-content#supported-html) pour l’API JavaScript des compléments OneNote.
      type: string
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>範例\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n\n    // Get the first PageContent on the page\n    // Assuming its an outline, get the outline's paragraphs.\n    var pageContent = pageContents.getItemAt(0);\n    var paragraphs = pageContent.outline.paragraphs;\n    var firstParagraph = paragraphs.getItemAt(0);\n\n    // Queue a command to load the id and type of the first paragraph\n    firstParagraph.load(\"id,type\");\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            // Queue commands to insert before and after the first paragraph\n            firstParagraph.insertHtmlAsSibling(\"Before\", \"<p>ContentBeforeFirstParagraph</p>\");\n            firstParagraph.insertHtmlAsSibling(\"After\", \"<p>ContentAfterFirstParagraph</p>\");\n            \n            // Run the command to run inserts\n            return context.sync();\n        });\n))\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: insertHtmlAsSibling(insertLocationString, html)
  uid: onenote!OneNote.Paragraph#insertHtmlAsSibling:member(2)
  package: onenote!
  fullName: insertHtmlAsSibling(insertLocationString, html)
  summary: >-
    Insère le contenu HTML spécifié.


    \[[Ensemble d’API : OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertHtmlAsSibling(insertLocationString: "Before" | "After", html: string): void;'
    parameters:
    - id: insertLocationString
      description: Emplacement du nouveau contenu relatif au paragraphe actif.
      type: "\"Before\" | \"After\""
    - id: html
      description: Chaîne HTML qui décrit la présentation visuelle du contenu. Voir [HTML pris en charge](https://docs.microsoft.com/office/dev/add-ins/onenote/onenote-add-ins-page-content#supported-html) pour l’API JavaScript des compléments OneNote.
      type: string
    return:
      type: void
      description: ''
- name: insertImageAsSibling(insertLocation, base64EncodedImage, width, height)
  uid: onenote!OneNote.Paragraph#insertImageAsSibling:member(1)
  package: onenote!
  fullName: insertImageAsSibling(insertLocation, base64EncodedImage, width, height)
  summary: >-
    Insère l’image à l’emplacement d’insertion spécifié.


    \[[Ensemble d’API : OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertImageAsSibling(insertLocation: OneNote.InsertLocation, base64EncodedImage: string, width: number, height: number): OneNote.Image;'
    parameters:
    - id: insertLocation
      description: Emplacement du tableau relatif au paragraphe actif.
      type: <xref uid="onenote!OneNote.InsertLocation:enum" />
    - id: base64EncodedImage
      description: Chaîne HTML à ajouter.
      type: string
    - id: width
      description: Facultatif. Largeur de l’unité des points. La valeur par défaut est Null et la largeur d’image est respectée.
      type: number
    - id: height
      description: Facultatif. Hauteur de l’unité des points. La valeur par défaut est Null et la hauteur d’image est respectée.
      type: number
    return:
      type: <xref uid="onenote!OneNote.Image:class" />
      description: "\n\n#### <a name=\"examples\"></a>範例\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n\n    // Get the first PageContent on the page\n    // Assuming its an outline, get the outline's paragraphs.\n    var pageContent = pageContents.getItemAt(0);\n    var paragraphs = pageContent.outline.paragraphs;\n    var firstParagraph = paragraphs.getItemAt(0);\n\n    // Queue a command to load the id and type of the first paragraph\n    firstParagraph.load(\"id,type\");\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            // Queue commands to insert before and after the first paragraph\n            firstParagraph.insertImageAsSibling(\"Before\", \"R0lGODlhDwAPAKECAAAAzMzM/////wAAACwAAAAADwAPAAACIISPeQHsrZ5ModrLlN48CXF8m2iQ3YmmKqVlRtW4MLwWACH+H09wdGltaXplZCBieSBVbGVhZCBTbWFydFNhdmVyIQAAOw==\");\n            firstParagraph.insertImageAsSibling(\"After\", \"R0lGODlhDwAPAKECAAAAzMzM/////wAAACwAAAAADwAPAAACIISPeQHsrZ5ModrLlN48CXF8m2iQ3YmmKqVlRtW4MLwWACH+H09wdGltaXplZCBieSBVbGVhZCBTbWFydFNhdmVyIQAAOw==\");\n            \n            // Run the command to insert images\n            return context.sync();\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: insertImageAsSibling(insertLocationString, base64EncodedImage, width, height)
  uid: onenote!OneNote.Paragraph#insertImageAsSibling:member(2)
  package: onenote!
  fullName: insertImageAsSibling(insertLocationString, base64EncodedImage, width, height)
  summary: >-
    Insère l’image à l’emplacement d’insertion spécifié.


    \[[Ensemble d’API : OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertImageAsSibling(insertLocationString: "Before" | "After", base64EncodedImage: string, width: number, height: number): OneNote.Image;'
    parameters:
    - id: insertLocationString
      description: Emplacement du tableau relatif au paragraphe actif.
      type: "\"Before\" | \"After\""
    - id: base64EncodedImage
      description: Chaîne HTML à ajouter.
      type: string
    - id: width
      description: Facultatif. Largeur de l’unité des points. La valeur par défaut est Null et la largeur d’image est respectée.
      type: number
    - id: height
      description: Facultatif. Hauteur de l’unité des points. La valeur par défaut est Null et la hauteur d’image est respectée.
      type: number
    return:
      type: <xref uid="onenote!OneNote.Image:class" />
      description: ''
- name: insertRichTextAsSibling(insertLocation, paragraphText)
  uid: onenote!OneNote.Paragraph#insertRichTextAsSibling:member(1)
  package: onenote!
  fullName: insertRichTextAsSibling(insertLocation, paragraphText)
  summary: >-
    Insère le texte du paragraphe à l’emplacement d’insertion spécifié.


    \[[Ensemble d’API : OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertRichTextAsSibling(insertLocation: OneNote.InsertLocation, paragraphText: string): OneNote.RichText;'
    parameters:
    - id: insertLocation
      description: Emplacement du tableau relatif au paragraphe actif.
      type: <xref uid="onenote!OneNote.InsertLocation:enum" />
    - id: paragraphText
      description: Chaîne HTML à ajouter.
      type: string
    return:
      type: <xref uid="onenote!OneNote.RichText:class" />
      description: "\n\n#### <a name=\"examples\"></a>範例\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n\n    // Get the first PageContent on the page\n    // Assuming its an outline, get the outline's paragraphs.\n    var pageContent = pageContents.getItemAt(0);\n    var paragraphs = pageContent.outline.paragraphs;\n    var firstParagraph = paragraphs.getItemAt(0);\n\n    // Queue a command to load the id and type of the first paragraph\n    firstParagraph.load(\"id,type\");\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            // Queue commands to insert before and after the first paragraph\n            firstParagraph.insertRichTextAsSibling(\"Before\", \"Text Appears Before Paragraph\");\n            firstParagraph.insertRichTextAsSibling(\"After\", \"Text Appears After Paragraph\");\n            \n            // Run the command to insert text contents\n            return context.sync();\n        });\n})    \n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n}); \n```"
- name: insertRichTextAsSibling(insertLocationString, paragraphText)
  uid: onenote!OneNote.Paragraph#insertRichTextAsSibling:member(2)
  package: onenote!
  fullName: insertRichTextAsSibling(insertLocationString, paragraphText)
  summary: >-
    Insère le texte du paragraphe à l’emplacement d’insertion spécifié.


    \[[Ensemble d’API : OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertRichTextAsSibling(insertLocationString: "Before" | "After", paragraphText: string): OneNote.RichText;'
    parameters:
    - id: insertLocationString
      description: Emplacement du tableau relatif au paragraphe actif.
      type: "\"Before\" | \"After\""
    - id: paragraphText
      description: Chaîne HTML à ajouter.
      type: string
    return:
      type: <xref uid="onenote!OneNote.RichText:class" />
      description: ''
- name: insertTableAsSibling(insertLocation, rowCount, columnCount, values)
  uid: onenote!OneNote.Paragraph#insertTableAsSibling:member(1)
  package: onenote!
  fullName: insertTableAsSibling(insertLocation, rowCount, columnCount, values)
  summary: >-
    Ajoute un tableau avec le nombre spécifié de lignes et de colonnes avant ou après le paragraphe en cours.


    \[[Ensemble d’API : OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertTableAsSibling(insertLocation: OneNote.InsertLocation, rowCount: number, columnCount: number, values?: string[][]): OneNote.Table;'
    parameters:
    - id: insertLocation
      description: Emplacement du tableau relatif au paragraphe actif.
      type: <xref uid="onenote!OneNote.InsertLocation:enum" />
    - id: rowCount
      description: Nombre de lignes du tableau.
      type: number
    - id: columnCount
      description: Nombre de colonnes du tableau.
      type: number
    - id: values
      description: Tableau 2D facultatif. Les cellules sont remplies si les chaînes correspondantes sont spécifiées dans le tableau.
      type: string[][]
    return:
      type: <xref uid="onenote!OneNote.Table:class" />
      description: ''
- name: insertTableAsSibling(insertLocationString, rowCount, columnCount, values)
  uid: onenote!OneNote.Paragraph#insertTableAsSibling:member(2)
  package: onenote!
  fullName: insertTableAsSibling(insertLocationString, rowCount, columnCount, values)
  summary: >-
    Ajoute un tableau avec le nombre spécifié de lignes et de colonnes avant ou après le paragraphe en cours.


    \[[Ensemble d’API : OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertTableAsSibling(insertLocationString: "Before" | "After", rowCount: number, columnCount: number, values?: string[][]): OneNote.Table;'
    parameters:
    - id: insertLocationString
      description: Emplacement du tableau relatif au paragraphe actif.
      type: "\"Before\" | \"After\""
    - id: rowCount
      description: Nombre de lignes du tableau.
      type: number
    - id: columnCount
      description: Nombre de colonnes du tableau.
      type: number
    - id: values
      description: Tableau 2D facultatif. Les cellules sont remplies si les chaînes correspondantes sont spécifiées dans le tableau.
      type: string[][]
    return:
      type: <xref uid="onenote!OneNote.Table:class" />
      description: ''
- name: load(option)
  uid: onenote!OneNote.Paragraph#load:member(1)
  package: onenote!
  fullName: load(option)
  summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez appeler « context.sync() » avant de lire les propriétés.
  remarks: >-
    En plus de cette signature, cette méthode possède les signatures suivantes :


    `load(option?: string | string[]): OneNote.Paragraph` -WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.


    `load(option?: { select?: string; expand?: string; }): OneNote.Paragraph` Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Paragraph` -Uniquement disponible sur les types de collection. Elle est similaire à la signature précédente. Option. Top indique le nombre maximal d’éléments de collection qui peuvent être inclus dans le résultat. Option. Skip indique le nombre d’éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat. Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d’éléments.
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(option?: OneNote.Interfaces.ParagraphLoadOptions): OneNote.Paragraph;'
    parameters:
    - id: option
      description: ''
      type: <xref uid="onenote!OneNote.Interfaces.ParagraphLoadOptions:interface" />
    return:
      type: <xref uid="onenote!OneNote.Paragraph:class" />
      description: ''
- name: load(propertyNames)
  uid: onenote!OneNote.Paragraph#load:member(2)
  package: onenote!
  fullName: load(propertyNames)
  summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): OneNote.Paragraph;'
    parameters:
    - id: propertyNames
      description: Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.
      type: string | string[]
    return:
      type: <xref uid="onenote!OneNote.Paragraph:class" />
      description: "\n\n#### <a name=\"examples\"></a>範例\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n    \n    // Queue a command to load the outline property of each pageContent.\n    pageContents.load(\"outline\");\n        \n    // Get the first PageContent on the page, and then get its Outline.\n    var pageContent = pageContents._GetItem(0);\n    var paragraphs = pageContent.outline.paragraphs;\n            \n    // Queue a command to load the id and type of each paragraph.\n    paragraphs.load(\"id,type\");\n            \n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n            \n            // Write the text.                  \n            $.each(paragraphs.items, function(index, paragraph) {\n                console.log(\"Paragraph type: \" + paragraph.type);\n                console.log(\"Paragraph ID: \" + paragraph.id);\n            });\n        });\n})        \n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n}); \n```\n```javascript\nOneNote.run(function(context) {\n    var app = context.application;\n    \n    // Gets the active outline\n    var outline = app.getActiveOutline();\n    \n    // load nested paragraphs and their types.\n    outline.load(\"paragraphs/type\");\n    \n    return context.sync().then(function () {\n        var paragraphs = outline.paragraphs.items;\n        \n        var promise;\n        // for each nested paragraphs, load tables only\n        for (var i = 0; i < paragraphs.length; i++) {\n            var paragraph = paragraphs[i];\n            if (paragraph.type == \"Table\") {\n                paragraph.load(\"table/id\");\n                promise =  context.sync().then(function() {\n                    console.log(paragraph.table.id);\n                });\n            }\n        }\n        return promise;\n    })\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: load(propertyNamesAndPaths)
  uid: onenote!OneNote.Paragraph#load:member(3)
  package: onenote!
  fullName: load(propertyNamesAndPaths)
  summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): OneNote.Paragraph;'
    parameters:
    - id: propertyNamesAndPaths
      description: Où propertyNamesAndPaths. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et propertyNamesAndPaths. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.
      type: '{ select?: string; expand?: string; }'
    return:
      type: <xref uid="onenote!OneNote.Paragraph:class" />
      description: ''
- name: set(properties, options)
  uid: onenote!OneNote.Paragraph#set:member(1)
  package: onenote!
  fullName: set(properties, options)
  summary: Définit plusieurs propriétés d’un objet en même temps. Vous pouvez transmettre un objet plain avec les propriétés appropriées, ou un autre objet API du même type.
  remarks: >-
    Cette méthode est dotée de la signature supplémentaire suivante :


    `set(properties: OneNote.Paragraph): void`
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Interfaces.ParagraphUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    parameters:
    - id: properties
      description: Objet JavaScript avec des propriétés qui sont structurées isomorphically vers les propriétés de l’objet sur lequel la méthode est appelée.
      type: <xref uid="onenote!OneNote.Interfaces.ParagraphUpdateData:interface" />
    - id: options
      description: Fournit une option permettant de supprimer les erreurs si l’objet Properties tente de définir des propriétés en lecture seule.
      type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
    return:
      type: void
      description: ''
- name: set(properties)
  uid: onenote!OneNote.Paragraph#set:member(2)
  package: onenote!
  fullName: set(properties)
  summary: Définit plusieurs propriétés de l’objet en même temps, en fonction d’un objet chargé existant.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: OneNote.Paragraph): void;'
    parameters:
    - id: properties
      description: ''
      type: <xref uid="onenote!OneNote.Paragraph:class" />
    return:
      type: void
      description: ''
- name: toJSON()
  uid: onenote!OneNote.Paragraph#toJSON:member(1)
  package: onenote!
  fullName: toJSON()
  summary: Remplace la méthode JavaScript afin `toJSON()` de fournir une sortie plus utile lorsqu’un objet d’API est transmis à `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, à son tour, appelle la `toJSON` méthode de l’objet qui lui est passé.) Tandis que l’objet OneNote. Paragraph d’origine est un objet d’API, la `toJSON` méthode renvoie un objet JavaScript simple (tapé comme `OneNote.Interfaces.ParagraphData`<!-- -->) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l’objet d’origine.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): OneNote.Interfaces.ParagraphData;'
    return:
      type: <xref uid="onenote!OneNote.Interfaces.ParagraphData:interface" />
      description: ''
- name: track()
  uid: onenote!OneNote.Paragraph#track:member(1)
  package: onenote!
  fullName: track()
  summary: Effectuer le suivi de l’objet pour l’ajustement automatique en fonction environnant des modifications dans le document. Cet appel est abréviations context.trackedObjects.add(thisObject). Si vous utilisez cet objet au sein de « .sync » appels et en dehors de l’exécution séquentielle d’un lot de « .run » et rencontrez un message d’erreur « InvalidObjectPath » lors de la définition d’une propriété ou appeler une méthode sur l’objet, vous devez ajouter l’objet à l’objet de suivi collection de sites lors de l’objet a été créé.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'track(): OneNote.Paragraph;'
    return:
      type: <xref uid="onenote!OneNote.Paragraph:class" />
      description: ''
- name: untrack()
  uid: onenote!OneNote.Paragraph#untrack:member(1)
  package: onenote!
  fullName: untrack()
  summary: Publication mémoire associée à cet objet si elle a été précédemment suivie. Cet appel est abréviations context.trackedObjects.add(thisObject). Vous rencontrez de nombreux objets suivies ralentit l’application hôte, donc n’oubliez pas de libérer les objets que l'on ajoute, une fois que vous avez terminé à les utiliser. Vous devez appeler « context.sync() » avant la publication de mémoire prend effet.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'untrack(): OneNote.Paragraph;'
    return:
      type: <xref uid="onenote!OneNote.Paragraph:class" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: c8303cba7c4342f1cc89a2d99e9c12f89ccd4d4b
  ms.sourcegitcommit: 3bab97ab3b91da7cca497f6fc895408a76bd8b46
  ms.translationtype: MT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 11/18/2020
  ms.locfileid: "49136672"
