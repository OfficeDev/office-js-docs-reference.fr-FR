### YamlMime:UniversalReference
items:
  - uid: 'onenote!OneNote.Notebook:class'
    summary: "<span data-ttu-id=\"fffdc-101\">Représente un bloc-notes OneNote.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fffdc-101\">Represents a OneNote notebook.</span></span> <span data-ttu-id=\"fffdc-102\">Les blocs-notes contiennent des groupes de sections et des sections.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fffdc-102\">Notebooks contain section groups and sections.</span></span>\n\n<span data-ttu-id=\"fffdc-103\">\\[[Ensemble d’API\_: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"fffdc-103\">\\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \\]</span></span>"
    name: OneNote.Notebook
    fullName: OneNote.Notebook
    langs:
      - typeScript
    type: class
    extends:
      - 'onenote!OfficeExtension.ClientObject:class'
    package: onenote!
    children:
      - 'onenote!OneNote.Notebook#addSection:member(1)'
      - 'onenote!OneNote.Notebook#addSectionGroup:member(1)'
      - 'onenote!OneNote.Notebook#baseUrl:member'
      - 'onenote!OneNote.Notebook#clientUrl:member'
      - 'onenote!OneNote.Notebook#context:member'
      - 'onenote!OneNote.Notebook#getRestApiId:member(1)'
      - 'onenote!OneNote.Notebook#id:member'
      - 'onenote!OneNote.Notebook#isVirtual:member'
      - 'onenote!OneNote.Notebook#load:member(1)'
      - 'onenote!OneNote.Notebook#load:member(2)'
      - 'onenote!OneNote.Notebook#load:member(3)'
      - 'onenote!OneNote.Notebook#name:member'
      - 'onenote!OneNote.Notebook#sectionGroups:member'
      - 'onenote!OneNote.Notebook#sections:member'
      - 'onenote!OneNote.Notebook#toJSON:member(1)'
      - 'onenote!OneNote.Notebook#track:member(1)'
      - 'onenote!OneNote.Notebook#untrack:member(1)'
  - uid: 'onenote!OneNote.Notebook#addSection:member(1)'
    summary: "<span data-ttu-id=\"fffdc-104\">Ajoute une nouvelle section à la fin du bloc-notes.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fffdc-104\">Adds a new section to the end of the notebook.</span></span>\n\n<span data-ttu-id=\"fffdc-105\">\\[[Ensemble d’API\_: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"fffdc-105\">\\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \\]</span></span>"
    name: addSection(name)
    fullName: addSection(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addSection(name: string): OneNote.Section;'
      return:
        type:
          - 'onenote!OneNote.Section:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="fffdc-106">Exemples</span><span class="sxs-lookup"><span data-stu-id="fffdc-106">Examples</span></span>

          ```javascript
          OneNote.run(function (context) {

              // Gets the active notebook.
              var notebook = context.application.getActiveNotebook();

              // Queue a command to add a new section. 
              var section = notebook.addSection("Sample section");
              
              // Queue a command to load the new section. This example reads the name property later.
              section.load("name");

              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function() {
                      console.log("New section name is " + section.name);
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          }); 
          ```
      parameters:
        - id: name
          description: <span data-ttu-id="fffdc-107">Nom de la nouvelle section.</span><span class="sxs-lookup"><span data-stu-id="fffdc-107">The name of the new section.</span></span>
          type:
            - string
  - uid: 'onenote!OneNote.Notebook#addSectionGroup:member(1)'
    summary: "<span data-ttu-id=\"fffdc-108\">Ajoute un nouveau groupe de sections à la fin du bloc-notes.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fffdc-108\">Adds a new section group to the end of the notebook.</span></span>\n\n<span data-ttu-id=\"fffdc-109\">\\[[Ensemble d’API\_: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"fffdc-109\">\\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \\]</span></span>"
    name: addSectionGroup(name)
    fullName: addSectionGroup(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addSectionGroup(name: string): OneNote.SectionGroup;'
      return:
        type:
          - 'onenote!OneNote.SectionGroup:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="fffdc-110">Exemples</span><span class="sxs-lookup"><span data-stu-id="fffdc-110">Examples</span></span>

          ```javascript
          OneNote.run(function (context) {

              // Gets the active notebook.
              var notebook = context.application.getActiveNotebook();

              // Queue a command to add a new section group.
              var sectionGroup = notebook.addSectionGroup("Sample section group");

              // Queue a command to load the new section group.
              sectionGroup.load();

              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function() {
                      console.log("New section group name is " + sectionGroup.name);
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          }); 
          ```
      parameters:
        - id: name
          description: <span data-ttu-id="fffdc-111">Nom de la nouvelle section.</span><span class="sxs-lookup"><span data-stu-id="fffdc-111">The name of the new section.</span></span>
          type:
            - string
  - uid: 'onenote!OneNote.Notebook#baseUrl:member'
    summary: "<span data-ttu-id=\"fffdc-112\">URL du site sur lequel se trouve ce bloc-notes.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fffdc-112\">The url of the site that this notebook is located.</span></span> <span data-ttu-id=\"fffdc-113\">Lecture seule</span><span class=\"sxs-lookup\"><span data-stu-id=\"fffdc-113\">Read only</span></span>\n\n<span data-ttu-id=\"fffdc-114\">\\[[Ensemble d’API\_: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"fffdc-114\">\\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \\]</span></span>"
    name: baseUrl
    fullName: baseUrl
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly baseUrl: string;'
      return:
        type:
          - string
  - uid: 'onenote!OneNote.Notebook#clientUrl:member'
    summary: "<span data-ttu-id=\"fffdc-115\">URL du client du bloc-notes.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fffdc-115\">The client url of the notebook.</span></span> <span data-ttu-id=\"fffdc-116\">Lecture seule</span><span class=\"sxs-lookup\"><span data-stu-id=\"fffdc-116\">Read only</span></span>\n\n<span data-ttu-id=\"fffdc-117\">\\[[Ensemble d’API\_: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"fffdc-117\">\\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \\]</span></span>"
    name: clientUrl
    fullName: clientUrl
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly clientUrl: string;'
      return:
        type:
          - string
  - uid: 'onenote!OneNote.Notebook#context:member'
    summary: <span data-ttu-id="fffdc-118">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="fffdc-118">The request context associated with the object.</span></span> <span data-ttu-id="fffdc-119">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="fffdc-119">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'onenote!OneNote.RequestContext:class'
  - uid: 'onenote!OneNote.Notebook#getRestApiId:member(1)'
    summary: "<span data-ttu-id=\"fffdc-120\">Obtient l’ID de l’API REST.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fffdc-120\">Gets the REST API ID.</span></span>\n\n<span data-ttu-id=\"fffdc-121\">\\[[Ensemble d’API\_: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"fffdc-121\">\\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \\]</span></span>"
    name: getRestApiId()
    fullName: getRestApiId()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRestApiId(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - 'onenote!OneNote.Notebook#getRestApiId~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="fffdc-122">Exemples</span><span class="sxs-lookup"><span data-stu-id="fffdc-122">Examples</span></span>

          ```javascript
          OneNote.run(function(ctx){
              // Get the current notebook.         
              var notebook = ctx.application.getActiveNotebook();
              var restApiId = notebook.getRestApiId();

              return ctx.sync().
                  then(function(){
                      console.log("The REST API ID is " + restApiId.value);
                      // Note that the REST API ID isn't all you need to interact with the OneNote REST API. 
                      // This is only required for SharePoint notebooks. baseUrl will be null for OneDrive notebooks.
                      // For SharePoint notebooks, the notebook baseUrl should be used to talk to the OneNote REST API
                      // according to the OneNote Development Blog.
                      // https://blogs.msdn.microsoft.com/onenotedev/2015/06/11/and-sharepoint-makes-three/
                  });
          });
          ```
  - uid: 'onenote!OneNote.Notebook#id:member'
    summary: "<span data-ttu-id=\"fffdc-123\">Obtient l’ID du bloc-notes.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fffdc-123\">Gets the ID of the notebook.</span></span> <span data-ttu-id=\"fffdc-124\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fffdc-124\">Read-only.</span></span>\n\n<span data-ttu-id=\"fffdc-125\">\\[[Ensemble d’API\_: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"fffdc-125\">\\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \\]</span></span>"
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'onenote!OneNote.Notebook#isVirtual:member'
    summary: "<span data-ttu-id=\"fffdc-126\">True si le bloc-notes n’est pas créé par l’utilisateur (par exemple, «\_sections déplacées\_»).</span><span class=\"sxs-lookup\"><span data-stu-id=\"fffdc-126\">True if the Notebook is not created by the user (i.e. 'Misplaced Sections').</span></span> <span data-ttu-id=\"fffdc-127\">Lecture seule</span><span class=\"sxs-lookup\"><span data-stu-id=\"fffdc-127\">Read only</span></span>\n\n<span data-ttu-id=\"fffdc-128\">\\[[Ensemble d’API\_: OneNoteApi 1,2](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"fffdc-128\">\\[ [API set: OneNoteApi 1.2](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \\]</span></span>"
    name: isVirtual
    fullName: isVirtual
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isVirtual: boolean;'
      return:
        type:
          - boolean
  - uid: 'onenote!OneNote.Notebook#load:member(1)'
    summary: "<span data-ttu-id=\"fffdc-129\">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fffdc-129\">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id=\"fffdc-130\">Vous devez appeler «\_context.sync()\_» avant de lire les propriétés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fffdc-130\">You must call \"context.sync()\" before reading the properties.</span></span>"
    remarks: "<span data-ttu-id=\"fffdc-131\">En plus de cette signature, cette méthode possède les signatures suivantes\_:</span><span class=\"sxs-lookup\"><span data-stu-id=\"fffdc-131\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"fffdc-132\">`load(option?: string | string[]): OneNote.Notebook`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fffdc-132\">`load(option?: string | string[]): OneNote.Notebook` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>\n\n<span data-ttu-id=\"fffdc-133\">`load(option?: { select?: string; expand?: string; }): OneNote.Notebook`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fffdc-133\">`load(option?: { select?: string; expand?: string; }): OneNote.Notebook` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"fffdc-134\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Notebook`-Uniquement disponible sur les types de collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fffdc-134\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Notebook` - Only available on collection types.</span></span> <span data-ttu-id=\"fffdc-135\">Elle est similaire à la signature précédente.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fffdc-135\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"fffdc-136\">Option. Top indique le nombre maximal d’éléments de collection qui peuvent être inclus dans le résultat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fffdc-136\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"fffdc-137\">Option. Skip indique le nombre d’éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fffdc-137\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"fffdc-138\">Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d’éléments.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fffdc-138\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>"
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OneNote.Interfaces.NotebookLoadOptions): OneNote.Notebook;'
      return:
        type:
          - 'onenote!OneNote.Notebook:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'onenote!OneNote.Interfaces.NotebookLoadOptions:interface'
  - uid: 'onenote!OneNote.Notebook#load:member(2)'
    summary: <span data-ttu-id="fffdc-139">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="fffdc-139">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="fffdc-140">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="fffdc-140">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): OneNote.Notebook;'
      return:
        type:
          - 'onenote!OneNote.Notebook:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="fffdc-141">Exemples</span><span class="sxs-lookup"><span data-stu-id="fffdc-141">Examples</span></span>

          ```javascript
          OneNote.run(function (context) {
                  
              // Get the current notebook.
              var notebook = context.application.getActiveNotebook();
                      
              // Queue a command to load the notebook. 
              // For best performance, request specific properties.           
              notebook.load('baseUrl');
                      
              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {
                      console.log("Base url: " + notebook.baseUrl);
                      // This is only required for SharePoint notebooks, and will be null for OneDrive notebooks.
                      // This baseUrl should be used to talk to OneNote REST APIs according to the OneNote Development Blog.
                      // https://blogs.msdn.microsoft.com/onenotedev/2015/06/11/and-sharepoint-makes-three/
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          OneNote.run(function (context) {
                  
              // Get the current notebook.
              var notebook = context.application.getActiveNotebook();
                      
              // Queue a command to load the notebook. 
              // For best performance, request specific properties.           
              notebook.load('id');
                      
              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {
                      console.log("Notebook ID: " + notebook.id);
                      
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          OneNote.run(function (context) {
                  
              // Get the current notebook.
              var notebook = context.application.getActiveNotebook();
                      
              // Queue a command to load the notebook. 
              // For best performance, request specific properties.           
              notebook.load('name');
                      
              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {
                      console.log("Notebook name: " + notebook.name);
                      
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          OneNote.run(function (context) {

              // Get the section groups in the notebook. 
              var sectionGroups = context.application.getActiveNotebook().sectionGroups;

              // Queue a command to load the sectionGroups. 
              sectionGroups.load("name");

              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function() {
                      $.each(sectionGroups.items, function(index, sectionGroup) {
                          console.log("Section group name: " + sectionGroup.name);
                      });
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          OneNote.run(function (context) {

              // Gets the active notebook.
              var notebook = context.application.getActiveNotebook();
              
              // Queue a command to get immediate child sections of the notebook. 
              var childSections = notebook.sections;

              // Queue a command to load the childSections. 
              context.load(childSections);

              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function() {
                      $.each(childSections.items, function(index, childSection) {
                          console.log("Immediate child section name: " + childSection.name);
                      });            
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });   
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="fffdc-142">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="fffdc-142">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'onenote!OneNote.Notebook#load:member(3)'
    summary: <span data-ttu-id="fffdc-143">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="fffdc-143">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="fffdc-144">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="fffdc-144">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): OneNote.Notebook;'
      return:
        type:
          - 'onenote!OneNote.Notebook:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="fffdc-145">Où propertyNamesAndPaths. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et propertyNamesAndPaths. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="fffdc-145">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'onenote!OneNote.Notebook#name:member'
    summary: "<span data-ttu-id=\"fffdc-146\">Obtient le nom du bloc-notes.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fffdc-146\">Gets the name of the notebook.</span></span> <span data-ttu-id=\"fffdc-147\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fffdc-147\">Read-only.</span></span>\n\n<span data-ttu-id=\"fffdc-148\">\\[[Ensemble d’API\_: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"fffdc-148\">\\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \\]</span></span>"
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly name: string;'
      return:
        type:
          - string
  - uid: 'onenote!OneNote.Notebook#sectionGroups:member'
    summary: "<span data-ttu-id=\"fffdc-149\">Obtient les groupes de sections dans le bloc-notes.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fffdc-149\">The section groups in the notebook.</span></span> <span data-ttu-id=\"fffdc-150\">Lecture seule</span><span class=\"sxs-lookup\"><span data-stu-id=\"fffdc-150\">Read only</span></span>\n\n<span data-ttu-id=\"fffdc-151\">\\[[Ensemble d’API\_: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"fffdc-151\">\\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \\]</span></span>"
    name: sectionGroups
    fullName: sectionGroups
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly sectionGroups: OneNote.SectionGroupCollection;'
      return:
        type:
          - 'onenote!OneNote.SectionGroupCollection:class'
  - uid: 'onenote!OneNote.Notebook#sections:member'
    summary: "<span data-ttu-id=\"fffdc-152\">Sections du bloc-notes.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fffdc-152\">The the sections of the notebook.</span></span> <span data-ttu-id=\"fffdc-153\">Lecture seule</span><span class=\"sxs-lookup\"><span data-stu-id=\"fffdc-153\">Read only</span></span>\n\n<span data-ttu-id=\"fffdc-154\">\\[[Ensemble d’API\_: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"fffdc-154\">\\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \\]</span></span>"
    name: sections
    fullName: sections
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly sections: OneNote.SectionCollection;'
      return:
        type:
          - 'onenote!OneNote.SectionCollection:class'
  - uid: 'onenote!OneNote.Notebook#toJSON:member(1)'
    summary: '<span data-ttu-id="fffdc-155">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="fffdc-155">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="fffdc-156">.</span><span class="sxs-lookup"><span data-stu-id="fffdc-156"></span></span> <span data-ttu-id="fffdc-157">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="fffdc-157"></span></span><!-- --><span data-ttu-id="fffdc-158">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que l’objet OneNote. Notebook d’origine est un objet `toJSON` API, la méthode renvoie un objet JavaScript simple (tapé comme`OneNote.Interfaces.NotebookData`</span><span class="sxs-lookup"><span data-stu-id="fffdc-158">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original OneNote.Notebook object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `OneNote.Interfaces.NotebookData`</span></span><!-- --><span data-ttu-id="fffdc-159">) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l’objet d’origine.</span><span class="sxs-lookup"><span data-stu-id="fffdc-159">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): OneNote.Interfaces.NotebookData;'
      return:
        type:
          - 'onenote!OneNote.Interfaces.NotebookData:interface'
        description: ''
  - uid: 'onenote!OneNote.Notebook#track:member(1)'
    summary: "<span data-ttu-id=\"fffdc-160\">Effectuer le suivi de l’objet pour l’ajustement automatique en fonction environnant des modifications dans le document.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fffdc-160\">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id=\"fffdc-161\">Cet appel est abréviations context.trackedObjects.add(thisObject).</span><span class=\"sxs-lookup\"><span data-stu-id=\"fffdc-161\">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id=\"fffdc-162\">Si vous utilisez cet objet au sein de «\_.sync\_» appels et en dehors de l’exécution séquentielle d’un lot de «\_.run\_» et rencontrez un message d’erreur «\_InvalidObjectPath\_» lors de la définition d’une propriété ou appeler une méthode sur l’objet, vous devez ajouter l’objet à l’objet de suivi collection de sites lors de l’objet a été créé.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fffdc-162\">If you are using this object across \".sync\" calls and outside the sequential execution of a \".run\" batch, and get an \"InvalidObjectPath\" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>"
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): OneNote.Notebook;'
      return:
        type:
          - 'onenote!OneNote.Notebook:class'
        description: ''
  - uid: 'onenote!OneNote.Notebook#untrack:member(1)'
    summary: "<span data-ttu-id=\"fffdc-163\">Publication mémoire associée à cet objet si elle a été précédemment suivie.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fffdc-163\">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id=\"fffdc-164\">Cet appel est abréviations context.trackedObjects.add(thisObject).</span><span class=\"sxs-lookup\"><span data-stu-id=\"fffdc-164\">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id=\"fffdc-165\">Vous rencontrez de nombreux objets suivies ralentit l’application hôte, donc n’oubliez pas de libérer les objets que l'on ajoute, une fois que vous avez terminé à les utiliser.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fffdc-165\">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them.</span></span> <span data-ttu-id=\"fffdc-166\">Vous devez appeler «\_context.sync()\_» avant la publication de mémoire prend effet.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fffdc-166\">You will need to call \"context.sync()\" before the memory release takes effect.</span></span>"
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): OneNote.Notebook;'
      return:
        type:
          - 'onenote!OneNote.Notebook:class'
        description: ''
references:
  - uid: 'onenote!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'onenote!OneNote.Section:class'
    name: OneNote.Section
  - uid: 'onenote!OneNote.SectionGroup:class'
    name: OneNote.SectionGroup
  - uid: 'onenote!OneNote.RequestContext:class'
    name: RequestContext
  - uid: 'onenote!OneNote.Notebook#getRestApiId~0:complex'
    name: OfficeExtension.ClientResult<string>
    fullName: OfficeExtension.ClientResult<string>
    spec.typeScript:
      - uid: 'onenote!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <string>
        fullName: <string>
  - uid: 'onenote!OneNote.Notebook:class'
    name: OneNote.Notebook
  - uid: 'onenote!OneNote.Interfaces.NotebookLoadOptions:interface'
    name: OneNote.Interfaces.NotebookLoadOptions
  - uid: 'onenote!OneNote.SectionGroupCollection:class'
    name: OneNote.SectionGroupCollection
  - uid: 'onenote!OneNote.SectionCollection:class'
    name: OneNote.SectionCollection
  - uid: 'onenote!OneNote.Interfaces.NotebookData:interface'
    name: OneNote.Interfaces.NotebookData