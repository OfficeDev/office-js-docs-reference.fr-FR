### YamlMime:UniversalReference
items:
  - uid: onenote.OneNote.Outline
    summary: |-
      Représente un conteneur pour les objets Paragraph.

      \[[Ensemble d’API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: OneNote.Outline
    fullName: OneNote.Outline
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: onenote
    children:
      - onenote.OneNote.Outline.appendHtml
      - onenote.OneNote.Outline.appendImage
      - onenote.OneNote.Outline.appendRichText
      - onenote.OneNote.Outline.appendTable
      - onenote.OneNote.Outline.context
      - onenote.OneNote.Outline.id
      - onenote.OneNote.Outline.isTitle
      - onenote.OneNote.Outline.load
      - onenote.OneNote.Outline.load_1
      - onenote.OneNote.Outline.load_2
      - onenote.OneNote.Outline.pageContent
      - onenote.OneNote.Outline.paragraphs
      - onenote.OneNote.Outline.toJSON
      - onenote.OneNote.Outline.track
      - onenote.OneNote.Outline.untrack
  - uid: onenote.OneNote.Outline.appendHtml
    summary: |-
      Ajoute le code HTML spécifié dans la partie inférieure du plan.

      \[[Ensemble d’API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: appendHtml(html)
    fullName: appendHtml(html)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'appendHtml(html: string): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Exemples

          ```javascript
          OneNote.run(function (context) {

              // Gets the active page.
              var activePage = context.application.getActivePage();

              // Get pageContents of the activePage. 
              var pageContents = activePage.contents;

              // Queue a command to load the pageContents to access its data.
              context.load(pageContents);

              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function() {
                      if (pageContents.items.length != 0 && pageContents.items[0].type == "Outline")
                      {
                          // First item is an outline.
                          outline = pageContents.items[0].outline;

                          // Queue a command to append a paragraph to the outline.
                          outline.appendHtml("<p>new paragraph</p>");

                          // Run the queued commands.
                          return context.sync();
                      }
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: html
          description: 'Chaîne HTML à ajouter. Voir [HTML pris en charge](https://docs.microsoft.com/office/dev/add-ins/onenote/onenote-add-ins-page-content#supported-html) pour l’API JavaScript des compléments OneNote.'
          type:
            - string
  - uid: onenote.OneNote.Outline.appendImage
    summary: |-
      Ajoute l’image spécifiée dans la partie inférieure du plan.

      \[[Ensemble d’API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: 'appendImage(base64EncodedImage, width, height)'
    fullName: 'appendImage(base64EncodedImage, width, height)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'appendImage(base64EncodedImage: string, width: number, height: number): OneNote.Image;'
      return:
        type:
          - onenote.OneNote.Image
        description: ''
      parameters:
        - id: base64EncodedImage
          description: Chaîne HTML à ajouter.
          type:
            - string
        - id: width
          description: Facultatif. Largeur de l’unité des points. La valeur par défaut est Null et la largeur d’image est respectée.
          type:
            - number
        - id: height
          description: Facultatif. Hauteur de l’unité des points. La valeur par défaut est Null et la hauteur d’image est respectée.
          type:
            - number
  - uid: onenote.OneNote.Outline.appendRichText
    summary: |-
      Ajoute le texte spécifié dans la partie inférieure du plan.

      \[[Ensemble d’API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: appendRichText(paragraphText)
    fullName: appendRichText(paragraphText)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'appendRichText(paragraphText: string): OneNote.RichText;'
      return:
        type:
          - onenote.OneNote.RichText
        description: ''
      parameters:
        - id: paragraphText
          description: Chaîne HTML à ajouter.
          type:
            - string
  - uid: onenote.OneNote.Outline.appendTable
    summary: |-
      Ajoute un tableau avec le nombre spécifié de lignes et de colonnes dans la partie inférieure du plan.

      \[[Ensemble d’API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: 'appendTable(rowCount, columnCount, values)'
    fullName: 'appendTable(rowCount, columnCount, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'appendTable(rowCount: number, columnCount: number, values?: string[][]): OneNote.Table;'
      return:
        type:
          - onenote.OneNote.Table
        description: |-


          #### <a name="examples"></a>Exemples

          ```javascript
          OneNote.run(function (context) {

              // Gets the active page.
              var activePage = context.application.getActivePage();

              // Get pageContents of the activePage. 
              var pageContents = activePage.contents;

              // Queue a command to load the pageContents to access its data.
              context.load(pageContents);

              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function() {
                      if (pageContents.items.length != 0 && pageContents.items[0].type == "Outline") {
                          // First item is an outline.
                          var outline = pageContents.items[0].outline;

                          // Queue a command to append a paragraph to the outline.
                          outline.appendTable(2, 2, [[1, 2],[3, 4]]);

                          // Run the queued commands.
                          return context.sync();
                      }
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: rowCount
          description: Obligatoire. Nombre de lignes dans le tableau.
          type:
            - number
        - id: columnCount
          description: Obligatoire. Nombre de colonnes dans le tableau.
          type:
            - number
        - id: values
          description: Tableau 2D facultatif. Les cellules sont remplies si les chaînes correspondantes sont spécifiées dans le tableau.
          type:
            - 'string[][]'
  - uid: onenote.OneNote.Outline.context
    summary: Contexte de demande associé à l’objet. Cette opération connecte le processus du complément au processus de l’application hôte Office.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - onenote.OneNote.RequestContext
  - uid: onenote.OneNote.Outline.id
    summary: |-
      Obtient l’ID de l’objet Outline. En lecture seule.

      \[[Ensemble d’API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: onenote.OneNote.Outline.isTitle
    summary: |-
      Vérifiez si le plan est un contour de titre.

      \[[Ensemble d’API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: isTitle()
    fullName: isTitle()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'isTitle(): OfficeExtension.ClientResult<boolean>;'
      return:
        type:
          - OfficeExtension.ClientResult<boolean>
        description: ''
  - uid: onenote.OneNote.Outline.load
    summary: "Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez appeler «\_context.sync()\_» avant de lire les propriétés."
    remarks: |-
      En plus de cette signature, cette méthode possède les signatures suivantes:

      `load(option?: string | string[]): OneNote.Outline`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.

      `load(option?: { select?: string; expand?: string; }): OneNote.Outline`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Outline`-Uniquement disponible sur les types de collection. Elle est similaire à la signature précédente. Option. Top indique le nombre maximal d’éléments de collection qui peuvent être inclus dans le résultat. Option. Skip indique le nombre d’éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat. Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d’éléments.
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OneNote.Interfaces.OutlineLoadOptions): OneNote.Outline;'
      return:
        type:
          - onenote.OneNote.Outline
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - onenote.OneNote.Interfaces.OutlineLoadOptions
  - uid: onenote.OneNote.Outline.load_1
    summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez appeler `context.sync()` avant de lire les propriétés.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): OneNote.Outline;'
      return:
        type:
          - onenote.OneNote.Outline
        description: ''
      parameters:
        - id: propertyNames
          description: Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.
          type:
            - 'string | string[]'
  - uid: onenote.OneNote.Outline.load_2
    summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez appeler `context.sync()` avant de lire les propriétés.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): OneNote.Outline;'
      return:
        type:
          - onenote.OneNote.Outline
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: Où propertyNamesAndPaths. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et propertyNamesAndPaths. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.
          type:
            - '{ select?: string; expand?: string; }'
  - uid: onenote.OneNote.Outline.pageContent
    summary: |-
      Obtient l’objet PageContent qui contient le plan. Cet objet définit la position du plan sur la page. En lecture seule.

      \[[Ensemble d’API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: pageContent
    fullName: pageContent
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly pageContent: OneNote.PageContent;'
      return:
        type:
          - onenote.OneNote.PageContent
  - uid: onenote.OneNote.Outline.paragraphs
    summary: |-
      Obtient la collection d’objets Paragraph dans le plan. En lecture seule.

      \[[Ensemble d’API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: paragraphs
    fullName: paragraphs
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly paragraphs: OneNote.ParagraphCollection;'
      return:
        type:
          - onenote.OneNote.ParagraphCollection
  - uid: onenote.OneNote.Outline.toJSON
    summary: 'Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que l’objet OneNote. Outline d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`OneNote.Interfaces.OutlineData`<!-- -->) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l’objet d’origine.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): OneNote.Interfaces.OutlineData;'
      return:
        type:
          - onenote.OneNote.Interfaces.OutlineData
        description: ''
  - uid: onenote.OneNote.Outline.track
    summary: "Effectuer le suivi de l’objet pour l’ajustement automatique en fonction environnant des modifications dans le document. Cet appel est abréviations context.trackedObjects.add(thisObject). Si vous utilisez cet objet au sein de «\_.sync\_» appels et en dehors de l’exécution séquentielle d’un lot de «\_.run\_» et rencontrez un message d’erreur «\_InvalidObjectPath\_» lors de la définition d’une propriété ou appeler une méthode sur l’objet, vous devez ajouter l’objet à l’objet de suivi collection de sites lors de l’objet a été créé."
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): OneNote.Outline;'
      return:
        type:
          - onenote.OneNote.Outline
        description: ''
  - uid: onenote.OneNote.Outline.untrack
    summary: "Publication mémoire associée à cet objet si elle a été précédemment suivie. Cet appel est abréviations context.trackedObjects.add(thisObject). Vous rencontrez de nombreux objets suivies ralentit l’application hôte, donc n’oubliez pas de libérer les objets que l'on ajoute, une fois que vous avez terminé à les utiliser. Vous devez appeler «\_context.sync()\_» avant la publication de mémoire prend effet."
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): OneNote.Outline;'
      return:
        type:
          - onenote.OneNote.Outline
        description: ''