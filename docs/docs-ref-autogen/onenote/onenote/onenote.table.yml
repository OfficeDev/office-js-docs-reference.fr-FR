### YamlMime:UniversalReference
items:
  - uid: 'onenote!OneNote.Table:class'
    summary: "<span data-ttu-id=\"db451-101\">Représente une table dans une page OneNote.</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-101\">Represents a table in a OneNote page.</span></span>\n\n<span data-ttu-id=\"db451-102\">\\[[Ensemble d’API\_: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-102\">\\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \\]</span></span>"
    name: OneNote.Table
    fullName: OneNote.Table
    langs:
      - typeScript
    type: class
    extends:
      - 'onenote!OfficeExtension.ClientObject:class'
    package: onenote!
    children:
      - 'onenote!OneNote.Table#appendColumn:member(1)'
      - 'onenote!OneNote.Table#appendRow:member(1)'
      - 'onenote!OneNote.Table#borderVisible:member'
      - 'onenote!OneNote.Table#clear:member(1)'
      - 'onenote!OneNote.Table#columnCount:member'
      - 'onenote!OneNote.Table#context:member'
      - 'onenote!OneNote.Table#getCell:member(1)'
      - 'onenote!OneNote.Table#id:member'
      - 'onenote!OneNote.Table#insertColumn:member(1)'
      - 'onenote!OneNote.Table#insertRow:member(1)'
      - 'onenote!OneNote.Table#load:member(1)'
      - 'onenote!OneNote.Table#load:member(2)'
      - 'onenote!OneNote.Table#load:member(3)'
      - 'onenote!OneNote.Table#paragraph:member'
      - 'onenote!OneNote.Table#rowCount:member'
      - 'onenote!OneNote.Table#rows:member'
      - 'onenote!OneNote.Table#set:member(1)'
      - 'onenote!OneNote.Table#set:member(2)'
      - 'onenote!OneNote.Table#setShadingColor:member(1)'
      - 'onenote!OneNote.Table#toJSON:member(1)'
      - 'onenote!OneNote.Table#track:member(1)'
      - 'onenote!OneNote.Table#untrack:member(1)'
  - uid: 'onenote!OneNote.Table#appendColumn:member(1)'
    summary: "<span data-ttu-id=\"db451-103\">Ajoute une colonne à la fin du tableau.</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-103\">Adds a column to the end of the table.</span></span> <span data-ttu-id=\"db451-104\">Si elles sont spécifiées, les valeurs sont définies dans la nouvelle colonne.</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-104\">Values, if specified, are set in the new column.</span></span> <span data-ttu-id=\"db451-105\">Dans le cas contraire, la colonne est vide.</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-105\">Otherwise the column is empty.</span></span>\n\n<span data-ttu-id=\"db451-106\">\\[[Ensemble d’API\_: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-106\">\\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \\]</span></span>"
    name: appendColumn(values)
    fullName: appendColumn(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'appendColumn(values?: string[]): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="db451-107">Exemples</span><span class="sxs-lookup"><span data-stu-id="db451-107">Examples</span></span>

          ```javascript
          OneNote.run(function(ctx) {
              var app = ctx.application;
              var outline = app.getActiveOutline();
              
              // Queue a command to load outline.paragraphs and their types.
              ctx.load(outline, "paragraphs, paragraphs/type");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  var paragraphs = outline.paragraphs;
                  
                  // for each table, append a column.
                  for (var i = 0; i < paragraphs.items.length; i++) {
                      var paragraph = paragraphs.items[i];
                      if (paragraph.type == "Table") {
                          var table = paragraph.table;
                          table.appendColumn(["cell0", "cell1"]);
                      }
                  }
                  return ctx.sync();
              })
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: values
          description: '<span data-ttu-id="db451-108">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="db451-108">Optional.</span></span> <span data-ttu-id="db451-109">Chaînes à insérer dans la nouvelle colonne, spécifiées sous forme de tableau.</span><span class="sxs-lookup"><span data-stu-id="db451-109">Strings to insert in the new column, specified as an array.</span></span> <span data-ttu-id="db451-110">Elles ne doivent pas contenir plus de valeurs que de lignes dans le tableau.</span><span class="sxs-lookup"><span data-stu-id="db451-110">Must not have more values than rows in the table.</span></span>'
          type:
            - 'string[]'
  - uid: 'onenote!OneNote.Table#appendRow:member(1)'
    summary: "<span data-ttu-id=\"db451-111\">Ajoute une ligne à la fin du tableau.</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-111\">Adds a row to the end of the table.</span></span> <span data-ttu-id=\"db451-112\">Si elles sont spécifiées, les valeurs sont définies dans la nouvelle ligne.</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-112\">Values, if specified, are set in the new row.</span></span> <span data-ttu-id=\"db451-113\">Dans le cas contraire, la ligne est vide.</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-113\">Otherwise the row is empty.</span></span>\n\n<span data-ttu-id=\"db451-114\">\\[[Ensemble d’API\_: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-114\">\\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \\]</span></span>"
    name: appendRow(values)
    fullName: appendRow(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'appendRow(values?: string[]): OneNote.TableRow;'
      return:
        type:
          - 'onenote!OneNote.TableRow:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="db451-115">Exemples</span><span class="sxs-lookup"><span data-stu-id="db451-115">Examples</span></span>

          ```javascript
          OneNote.run(function(ctx) {
              var app = ctx.application;
              var outline = app.getActiveOutline();
              
              // Queue a command to load outline.paragraphs and their types.
              ctx.load(outline, "paragraphs, paragraphs/type");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  var paragraphs = outline.paragraphs;
                  
                  // for each table, append a column.
                  for (var i = 0; i < paragraphs.items.length; i++) {
                      var paragraph = paragraphs.items[i];
                      if (paragraph.type == "Table") {
                          var table = paragraph.table;
                          var row = table.appendRow(["cell0", "cell1"]);
                      }
                  }
                  return ctx.sync();
              })
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: values
          description: '<span data-ttu-id="db451-116">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="db451-116">Optional.</span></span> <span data-ttu-id="db451-117">Chaînes à insérer dans la nouvelle ligne, spécifiées sous forme de tableau.</span><span class="sxs-lookup"><span data-stu-id="db451-117">Strings to insert in the new row, specified as an array.</span></span> <span data-ttu-id="db451-118">Elles ne doivent pas contenir plus de valeurs que de colonnes dans le tableau.</span><span class="sxs-lookup"><span data-stu-id="db451-118">Must not have more values than columns in the table.</span></span>'
          type:
            - 'string[]'
  - uid: 'onenote!OneNote.Table#borderVisible:member'
    summary: "<span data-ttu-id=\"db451-119\">Obtient ou définit si les bordures sont visibles ou non.</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-119\">Gets or sets whether the borders are visible or not.</span></span> <span data-ttu-id=\"db451-120\">True si elles sont visibles, false si elles sont masquées.</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-120\">True if they are visible, false if they are hidden.</span></span>\n\n<span data-ttu-id=\"db451-121\">\\[[Ensemble d’API\_: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-121\">\\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \\]</span></span>"
    name: borderVisible
    fullName: borderVisible
    langs:
      - typeScript
    type: property
    syntax:
      content: 'borderVisible: boolean;'
      return:
        type:
          - boolean
  - uid: 'onenote!OneNote.Table#clear:member(1)'
    summary: "<span data-ttu-id=\"db451-122\">Efface le contenu du tableau.</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-122\">Clears the contents of the table.</span></span>\n\n<span data-ttu-id=\"db451-123\">\\[[Ensemble d’API\_: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-123\">\\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \\]</span></span>"
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'onenote!OneNote.Table#columnCount:member'
    summary: "<span data-ttu-id=\"db451-124\">Obtient le nombre de colonnes dans le tableau.</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-124\">Gets the number of columns in the table.</span></span>\n\n<span data-ttu-id=\"db451-125\">\\[[Ensemble d’API\_: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-125\">\\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \\]</span></span>"
    name: columnCount
    fullName: columnCount
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly columnCount: number;'
      return:
        type:
          - number
  - uid: 'onenote!OneNote.Table#context:member'
    summary: <span data-ttu-id="db451-126">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="db451-126">The request context associated with the object.</span></span> <span data-ttu-id="db451-127">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="db451-127">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'onenote!OneNote.RequestContext:class'
  - uid: 'onenote!OneNote.Table#getCell:member(1)'
    summary: "<span data-ttu-id=\"db451-128\">Obtient la cellule du tableau à une ligne et une colonne spécifiées.</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-128\">Gets the table cell at a specified row and column.</span></span>\n\n<span data-ttu-id=\"db451-129\">\\[[Ensemble d’API\_: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-129\">\\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \\]</span></span>"
    name: 'getCell(rowIndex, cellIndex)'
    fullName: 'getCell(rowIndex, cellIndex)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCell(rowIndex: number, cellIndex: number): OneNote.TableCell;'
      return:
        type:
          - 'onenote!OneNote.TableCell:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="db451-130">Exemples</span><span class="sxs-lookup"><span data-stu-id="db451-130">Examples</span></span>

          ```javascript
          OneNote.run(function(ctx) {
              var app = ctx.application;
              var outline = app.getActiveOutline();
              
              // Queue a command to load outline.paragraphs and their types.
              ctx.load(outline, "paragraphs, paragraphs/type");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  var paragraphs = outline.paragraphs;
                  
                  // for each table, get a cell in the second row and third column.
                  for (var i = 0; i < paragraphs.items.length; i++) {
                      var paragraph = paragraphs.items[i];
                      if (paragraph.type == "Table") {
                          var table = paragraph.table;
                          var cell = table.getCell(2 /*Row Index*/, 3 /*Column Index*/);
                      }
                  }
                  return ctx.sync();
              })
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: rowIndex
          description: <span data-ttu-id="db451-131">Index de la ligne.</span><span class="sxs-lookup"><span data-stu-id="db451-131">The index of the row.</span></span>
          type:
            - number
        - id: cellIndex
          description: <span data-ttu-id="db451-132">Index de la cellule dans la ligne.</span><span class="sxs-lookup"><span data-stu-id="db451-132">The index of the cell in the row.</span></span>
          type:
            - number
  - uid: 'onenote!OneNote.Table#id:member'
    summary: "<span data-ttu-id=\"db451-133\">Obtient l’ID du tableau.</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-133\">Gets the ID of the table.</span></span> <span data-ttu-id=\"db451-134\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-134\">Read-only.</span></span>\n\n<span data-ttu-id=\"db451-135\">\\[[Ensemble d’API\_: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-135\">\\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \\]</span></span>"
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'onenote!OneNote.Table#insertColumn:member(1)'
    summary: "<span data-ttu-id=\"db451-p108\">Insère une colonne au niveau de l’index donné dans le tableau. Si elles sont spécifiées, les valeurs sont définies dans la nouvelle colonne. Dans le cas contraire, la colonne est vide.</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-p108\">Inserts a column at the given index in the table. Values, if specified, are set in the new column. Otherwise the column is empty.</span></span>\n\n<span data-ttu-id=\"db451-139\">\\[[Ensemble d’API\_: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-139\">\\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \\]</span></span>"
    name: 'insertColumn(index, values)'
    fullName: 'insertColumn(index, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertColumn(index: number, values?: string[]): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="db451-140">Exemples</span><span class="sxs-lookup"><span data-stu-id="db451-140">Examples</span></span>

          ```javascript
          OneNote.run(function(ctx) {
              var app = ctx.application;
              var outline = app.getActiveOutline();
              
              // Queue a command to load outline.paragraphs and their types.
              ctx.load(outline, "paragraphs, paragraphs/type");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  var paragraphs = outline.paragraphs;
                  
                  // for each table, insert a column at index two.
                  for (var i = 0; i < paragraphs.items.length; i++) {
                      var paragraph = paragraphs.items[i];
                      if (paragraph.type == "Table") {
                          var table = paragraph.table;
                          table.insertColumn(2, ["cell0", "cell1"]);
                      }
                  }
                  return ctx.sync();
              })
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: <span data-ttu-id="db451-141">Index au niveau duquel la colonne est insérée dans le tableau.</span><span class="sxs-lookup"><span data-stu-id="db451-141">Index where the column will be inserted in the table.</span></span>
          type:
            - number
        - id: values
          description: '<span data-ttu-id="db451-142">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="db451-142">Optional.</span></span> <span data-ttu-id="db451-143">Chaînes à insérer dans la nouvelle colonne, spécifiées sous forme de tableau.</span><span class="sxs-lookup"><span data-stu-id="db451-143">Strings to insert in the new column, specified as an array.</span></span> <span data-ttu-id="db451-144">Elles ne doivent pas contenir plus de valeurs que de lignes dans le tableau.</span><span class="sxs-lookup"><span data-stu-id="db451-144">Must not have more values than rows in the table.</span></span>'
          type:
            - 'string[]'
  - uid: 'onenote!OneNote.Table#insertRow:member(1)'
    summary: "<span data-ttu-id=\"db451-p110\">Insère une ligne à l’index donné dans le tableau. Si elles sont spécifiées, les valeurs sont définies dans la nouvelle ligne. Dans le cas contraire, la ligne est vide.</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-p110\">Inserts a row at the given index in the table. Values, if specified, are set in the new row. Otherwise the row is empty.</span></span>\n\n<span data-ttu-id=\"db451-148\">\\[[Ensemble d’API\_: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-148\">\\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \\]</span></span>"
    name: 'insertRow(index, values)'
    fullName: 'insertRow(index, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertRow(index: number, values?: string[]): OneNote.TableRow;'
      return:
        type:
          - 'onenote!OneNote.TableRow:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="db451-149">Exemples</span><span class="sxs-lookup"><span data-stu-id="db451-149">Examples</span></span>

          ```javascript
          OneNote.run(function(ctx) {
              var app = ctx.application;
              var outline = app.getActiveOutline();
              
              // Queue a command to load outline.paragraphs and their types.
              ctx.load(outline, "paragraphs, paragraphs/type");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  var paragraphs = outline.paragraphs;
                  
                  // for each table, insert a row at index two.
                  for (var i = 0; i < paragraphs.items.length; i++) {
                      var paragraph = paragraphs.items[i];
                      if (paragraph.type == "Table") {
                          var table = paragraph.table;
                          var row = table.insertRow(2, ["cell0", "cell1"]);
                      }
                  }
                  return ctx.sync();
              })
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: <span data-ttu-id="db451-150">Index au niveau duquel la ligne est insérée dans le tableau.</span><span class="sxs-lookup"><span data-stu-id="db451-150">Index where the row will be inserted in the table.</span></span>
          type:
            - number
        - id: values
          description: '<span data-ttu-id="db451-151">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="db451-151">Optional.</span></span> <span data-ttu-id="db451-152">Chaînes à insérer dans la nouvelle ligne, spécifiées sous forme de tableau.</span><span class="sxs-lookup"><span data-stu-id="db451-152">Strings to insert in the new row, specified as an array.</span></span> <span data-ttu-id="db451-153">Elles ne doivent pas contenir plus de valeurs que de colonnes dans le tableau.</span><span class="sxs-lookup"><span data-stu-id="db451-153">Must not have more values than columns in the table.</span></span>'
          type:
            - 'string[]'
  - uid: 'onenote!OneNote.Table#load:member(1)'
    summary: "<span data-ttu-id=\"db451-154\">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-154\">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id=\"db451-155\">Vous devez appeler «\_context.sync()\_» avant de lire les propriétés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-155\">You must call \"context.sync()\" before reading the properties.</span></span>"
    remarks: "<span data-ttu-id=\"db451-156\">En plus de cette signature, cette méthode possède les signatures suivantes\_:</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-156\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"db451-157\">`load(option?: string | string[]): OneNote.Table`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-157\">`load(option?: string | string[]): OneNote.Table` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>\n\n<span data-ttu-id=\"db451-158\">`load(option?: { select?: string; expand?: string; }): OneNote.Table`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-158\">`load(option?: { select?: string; expand?: string; }): OneNote.Table` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"db451-159\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Table`-Uniquement disponible sur les types de collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-159\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Table` - Only available on collection types.</span></span> <span data-ttu-id=\"db451-160\">Elle est similaire à la signature précédente.</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-160\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"db451-161\">Option. Top indique le nombre maximal d’éléments de collection qui peuvent être inclus dans le résultat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-161\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"db451-162\">Option. Skip indique le nombre d’éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-162\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"db451-163\">Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d’éléments.</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-163\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>"
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OneNote.Interfaces.TableLoadOptions): OneNote.Table;'
      return:
        type:
          - 'onenote!OneNote.Table:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'onenote!OneNote.Interfaces.TableLoadOptions:interface'
  - uid: 'onenote!OneNote.Table#load:member(2)'
    summary: <span data-ttu-id="db451-164">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="db451-164">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="db451-165">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="db451-165">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): OneNote.Table;'
      return:
        type:
          - 'onenote!OneNote.Table:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="db451-166">Exemples</span><span class="sxs-lookup"><span data-stu-id="db451-166">Examples</span></span>

          ```javascript
          OneNote.run(function(ctx) {
              var app = ctx.application;
              var outline = app.getActiveOutline();
              
              // Queue a command to load outline.paragraphs and their types.
              ctx.load(outline, "paragraphs/type");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  var paragraphs = outline.paragraphs;
                  
                  // For each table, log properties.
                  for (var i = 0; i < paragraphs.items.length; i++) {
                      var paragraph = paragraphs.items[i];
                      if (paragraph.type == "Table") {
                          var table = paragraph.table;
                          ctx.load(table);
                          return ctx.sync().then(function() {
                              console.log("Table Id: " + table.id);
                              console.log("Row Count: " + table.rowCount);
                              console.log("Column Count: " + table.columnCount);
                              return ctx.sync();
                          });
                      }
                  }
              });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          OneNote.run(function(ctx) {
              var app = ctx.application;
              var outline = app.getActiveOutline();
              
              // Queue a command to load outline.paragraphs and their types.
              ctx.load(outline, "paragraphs, paragraphs/type");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  var paragraphs = outline.paragraphs;
                  
                  // for each table, log its paragraph id.
                  for (var i = 0; i < paragraphs.items.length; i++) {
                      var paragraph = paragraphs.items[i];
                      if (paragraph.type == "Table") {
                          var table = paragraph.table;
                          ctx.load(table, "paragraph/id, rows/id");
                          return ctx.sync().then(function() {
                              console.log("Paragraph Id: " + table.paragraph.id);
                              var rows = table.rows;
                              
                              // for each rows in the table, log row index and id.
                              for (var i = 0; i < rows.items.length; i++) {
                                  console.log("Row " + i + " Id: " + rows.items[i].id);
                              }
                              return ctx.sync();
                          });
                      }
                  }
              })
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="db451-167">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="db451-167">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'onenote!OneNote.Table#load:member(3)'
    summary: <span data-ttu-id="db451-168">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="db451-168">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="db451-169">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="db451-169">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): OneNote.Table;'
      return:
        type:
          - 'onenote!OneNote.Table:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="db451-170">Où propertyNamesAndPaths. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et propertyNamesAndPaths. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="db451-170">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'onenote!OneNote.Table#paragraph:member'
    summary: "<span data-ttu-id=\"db451-171\">Obtient l’objet Paragraph qui contient l’objet Table.</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-171\">Gets the Paragraph object that contains the Table object.</span></span> <span data-ttu-id=\"db451-172\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-172\">Read-only.</span></span>\n\n<span data-ttu-id=\"db451-173\">\\[[Ensemble d’API\_: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-173\">\\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \\]</span></span>"
    name: paragraph
    fullName: paragraph
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly paragraph: OneNote.Paragraph;'
      return:
        type:
          - 'onenote!OneNote.Paragraph:class'
  - uid: 'onenote!OneNote.Table#rowCount:member'
    summary: "<span data-ttu-id=\"db451-174\">Obtient le nombre de lignes dans le tableau.</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-174\">Gets the number of rows in the table.</span></span>\n\n<span data-ttu-id=\"db451-175\">\\[[Ensemble d’API\_: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-175\">\\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \\]</span></span>"
    name: rowCount
    fullName: rowCount
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly rowCount: number;'
      return:
        type:
          - number
  - uid: 'onenote!OneNote.Table#rows:member'
    summary: "<span data-ttu-id=\"db451-176\">Obtient toutes les lignes du tableau.</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-176\">Gets all of the table rows.</span></span> <span data-ttu-id=\"db451-177\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-177\">Read-only.</span></span>\n\n<span data-ttu-id=\"db451-178\">\\[[Ensemble d’API\_: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-178\">\\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \\]</span></span>"
    name: rows
    fullName: rows
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly rows: OneNote.TableRowCollection;'
      return:
        type:
          - 'onenote!OneNote.TableRowCollection:class'
  - uid: 'onenote!OneNote.Table#set:member(1)'
    summary: '<span data-ttu-id="db451-179">Définit plusieurs propriétés d’un objet en même temps.</span><span class="sxs-lookup"><span data-stu-id="db451-179">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="db451-180">Vous pouvez transmettre un objet plain avec les propriétés appropriées, ou un autre objet API du même type.</span><span class="sxs-lookup"><span data-stu-id="db451-180">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: "<span data-ttu-id=\"db451-181\">Cette méthode est dotée de la signature supplémentaire suivante\_:</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-181\">This method has the following additional signature:</span></span>\n\n`set(properties: OneNote.Table): void`"
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.TableUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="db451-182">Objet JavaScript avec des propriétés qui sont structurées isomorphically vers les propriétés de l’objet sur lequel la méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="db451-182">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'onenote!OneNote.Interfaces.TableUpdateData:interface'
        - id: options
          description: <span data-ttu-id="db451-183">Fournit une option permettant de supprimer les erreurs si l’objet Properties tente de définir des propriétés en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="db451-183">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'onenote!OfficeExtension.UpdateOptions:interface'
  - uid: 'onenote!OneNote.Table#set:member(2)'
    summary: '<span data-ttu-id="db451-184">Définit plusieurs propriétés de l’objet en même temps, en fonction d’un objet chargé existant.</span><span class="sxs-lookup"><span data-stu-id="db451-184">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: OneNote.Table): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'onenote!OneNote.Table:class'
  - uid: 'onenote!OneNote.Table#setShadingColor:member(1)'
    summary: "<span data-ttu-id=\"db451-185\">Définit la couleur d’ombrage de toutes les cellules du tableau.</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-185\">Sets the shading color of all cells in the table.</span></span> <span data-ttu-id=\"db451-186\">Code couleur appliqué aux cellules.</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-186\">The color code to set the cells to.</span></span>\n\n<span data-ttu-id=\"db451-187\">\\[[Ensemble d’API\_: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-187\">\\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \\]</span></span>"
    name: setShadingColor(colorCode)
    fullName: setShadingColor(colorCode)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setShadingColor(colorCode: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: colorCode
          description: ''
          type:
            - string
  - uid: 'onenote!OneNote.Table#toJSON:member(1)'
    summary: '<span data-ttu-id="db451-188">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="db451-188">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="db451-189">.</span><span class="sxs-lookup"><span data-stu-id="db451-189"></span></span> <span data-ttu-id="db451-190">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="db451-190"></span></span><!-- --><span data-ttu-id="db451-191">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que l’objet OneNote. table d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`OneNote.Interfaces.TableData`</span><span class="sxs-lookup"><span data-stu-id="db451-191">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original OneNote.Table object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `OneNote.Interfaces.TableData`</span></span><!-- --><span data-ttu-id="db451-192">) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l’objet d’origine.</span><span class="sxs-lookup"><span data-stu-id="db451-192">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): OneNote.Interfaces.TableData;'
      return:
        type:
          - 'onenote!OneNote.Interfaces.TableData:interface'
        description: ''
  - uid: 'onenote!OneNote.Table#track:member(1)'
    summary: "<span data-ttu-id=\"db451-193\">Effectuer le suivi de l’objet pour l’ajustement automatique en fonction environnant des modifications dans le document.</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-193\">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id=\"db451-194\">Cet appel est abréviations context.trackedObjects.add(thisObject).</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-194\">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id=\"db451-195\">Si vous utilisez cet objet au sein de «\_.sync\_» appels et en dehors de l’exécution séquentielle d’un lot de «\_.run\_» et rencontrez un message d’erreur «\_InvalidObjectPath\_» lors de la définition d’une propriété ou appeler une méthode sur l’objet, vous devez ajouter l’objet à l’objet de suivi collection de sites lors de l’objet a été créé.</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-195\">If you are using this object across \".sync\" calls and outside the sequential execution of a \".run\" batch, and get an \"InvalidObjectPath\" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>"
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): OneNote.Table;'
      return:
        type:
          - 'onenote!OneNote.Table:class'
        description: ''
  - uid: 'onenote!OneNote.Table#untrack:member(1)'
    summary: "<span data-ttu-id=\"db451-196\">Publication mémoire associée à cet objet si elle a été précédemment suivie.</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-196\">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id=\"db451-197\">Cet appel est abréviations context.trackedObjects.add(thisObject).</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-197\">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id=\"db451-198\">Vous rencontrez de nombreux objets suivies ralentit l’application hôte, donc n’oubliez pas de libérer les objets que l'on ajoute, une fois que vous avez terminé à les utiliser.</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-198\">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them.</span></span> <span data-ttu-id=\"db451-199\">Vous devez appeler «\_context.sync()\_» avant la publication de mémoire prend effet.</span><span class=\"sxs-lookup\"><span data-stu-id=\"db451-199\">You will need to call \"context.sync()\" before the memory release takes effect.</span></span>"
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): OneNote.Table;'
      return:
        type:
          - 'onenote!OneNote.Table:class'
        description: ''
references:
  - uid: 'onenote!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'onenote!OneNote.TableRow:class'
    name: OneNote.TableRow
  - uid: 'onenote!OneNote.RequestContext:class'
    name: RequestContext
  - uid: 'onenote!OneNote.TableCell:class'
    name: OneNote.TableCell
  - uid: 'onenote!OneNote.Table:class'
    name: OneNote.Table
  - uid: 'onenote!OneNote.Interfaces.TableLoadOptions:interface'
    name: OneNote.Interfaces.TableLoadOptions
  - uid: 'onenote!OneNote.Paragraph:class'
    name: OneNote.Paragraph
  - uid: 'onenote!OneNote.TableRowCollection:class'
    name: OneNote.TableRowCollection
  - uid: 'onenote!OneNote.Interfaces.TableUpdateData:interface'
    name: Interfaces.TableUpdateData
  - uid: 'onenote!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'onenote!OneNote.Interfaces.TableData:interface'
    name: OneNote.Interfaces.TableData