### YamlMime:UniversalReference
items:
  - uid: 'onenote!OneNote.TableRow:class'
    summary: "<span data-ttu-id=\"7d090-101\">Représente une ligne dans un tableau.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7d090-101\">Represents a row in a table.</span></span>\n\n<span data-ttu-id=\"7d090-102\">\\[[Ensemble d’API\_: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"7d090-102\">\\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \\]</span></span>"
    name: OneNote.TableRow
    fullName: OneNote.TableRow
    langs:
      - typeScript
    type: class
    extends:
      - 'onenote!OfficeExtension.ClientObject:class'
    package: onenote!
    children:
      - 'onenote!OneNote.TableRow#cellCount:member'
      - 'onenote!OneNote.TableRow#cells:member'
      - 'onenote!OneNote.TableRow#clear:member(1)'
      - 'onenote!OneNote.TableRow#context:member'
      - 'onenote!OneNote.TableRow#id:member'
      - 'onenote!OneNote.TableRow#insertRowAsSibling:member(1)'
      - 'onenote!OneNote.TableRow#insertRowAsSibling:member(2)'
      - 'onenote!OneNote.TableRow#load:member(1)'
      - 'onenote!OneNote.TableRow#load:member(2)'
      - 'onenote!OneNote.TableRow#load:member(3)'
      - 'onenote!OneNote.TableRow#parentTable:member'
      - 'onenote!OneNote.TableRow#rowIndex:member'
      - 'onenote!OneNote.TableRow#setShadingColor:member(1)'
      - 'onenote!OneNote.TableRow#toJSON:member(1)'
      - 'onenote!OneNote.TableRow#track:member(1)'
      - 'onenote!OneNote.TableRow#untrack:member(1)'
  - uid: 'onenote!OneNote.TableRow#cellCount:member'
    summary: "<span data-ttu-id=\"7d090-103\">Obtient le nombre de cellules dans la ligne.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7d090-103\">Gets the number of cells in the row.</span></span> <span data-ttu-id=\"7d090-104\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7d090-104\">Read-only.</span></span>\n\n<span data-ttu-id=\"7d090-105\">\\[[Ensemble d’API\_: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"7d090-105\">\\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \\]</span></span>"
    name: cellCount
    fullName: cellCount
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly cellCount: number;'
      return:
        type:
          - number
  - uid: 'onenote!OneNote.TableRow#cells:member'
    summary: "<span data-ttu-id=\"7d090-106\">Obtient les cellules de la ligne.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7d090-106\">Gets the cells in the row.</span></span> <span data-ttu-id=\"7d090-107\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7d090-107\">Read-only.</span></span>\n\n<span data-ttu-id=\"7d090-108\">\\[[Ensemble d’API\_: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"7d090-108\">\\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \\]</span></span>"
    name: cells
    fullName: cells
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly cells: OneNote.TableCellCollection;'
      return:
        type:
          - 'onenote!OneNote.TableCellCollection:class'
  - uid: 'onenote!OneNote.TableRow#clear:member(1)'
    summary: "<span data-ttu-id=\"7d090-109\">Efface le contenu de la ligne.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7d090-109\">Clears the contents of the row.</span></span>\n\n<span data-ttu-id=\"7d090-110\">\\[[Ensemble d’API\_: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"7d090-110\">\\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \\]</span></span>"
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'onenote!OneNote.TableRow#context:member'
    summary: <span data-ttu-id="7d090-111">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="7d090-111">The request context associated with the object.</span></span> <span data-ttu-id="7d090-112">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="7d090-112">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'onenote!OneNote.RequestContext:class'
  - uid: 'onenote!OneNote.TableRow#id:member'
    summary: "<span data-ttu-id=\"7d090-113\">Obtient l’ID de la ligne.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7d090-113\">Gets the ID of the row.</span></span> <span data-ttu-id=\"7d090-114\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7d090-114\">Read-only.</span></span>\n\n<span data-ttu-id=\"7d090-115\">\\[[Ensemble d’API\_: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"7d090-115\">\\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \\]</span></span>"
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'onenote!OneNote.TableRow#insertRowAsSibling:member(1)'
    summary: "<span data-ttu-id=\"7d090-116\">Insère une ligne avant ou après la ligne active.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7d090-116\">Inserts a row before or after the current row.</span></span>\n\n<span data-ttu-id=\"7d090-117\">\\[[Ensemble d’API\_: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"7d090-117\">\\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \\]</span></span>"
    name: 'insertRowAsSibling(insertLocation, values)'
    fullName: 'insertRowAsSibling(insertLocation, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertRowAsSibling(insertLocation: OneNote.InsertLocation, values?: string[]): OneNote.TableRow;'
      return:
        type:
          - 'onenote!OneNote.TableRow:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7d090-118">Exemples</span><span class="sxs-lookup"><span data-stu-id="7d090-118">Examples</span></span>

          ```javascript
          OneNote.run(function(ctx) {
              var app = ctx.application;
              var outline = app.getActiveOutline();
              
              // Queue a command to load outline.paragraphs and their types.
              ctx.load(outline, "paragraphs, paragraphs/type");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  var paragraphs = outline.paragraphs;
                  
                  // for each table, get table rows.
                  for (var i = 0; i < paragraphs.items.length; i++) {
                      var paragraph = paragraphs.items[i];
                      if (paragraph.type == "Table") {
                          var table = paragraph.table;
                          
                          // Queue a command to load table.rows.
                          ctx.load(table, "rows");
                          
                          // Run the queued commands
                          return ctx.sync().then(function() {
                              var rows = table.rows;
                              rows.items[1].insertRowAsSibling("Before", ["cell0", "cell1"]);
                              return ctx.sync();
                          });
                      }
                  }
              })
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: insertLocation
          description: <span data-ttu-id="7d090-119">Où les nouvelles lignes doivent être insérées par rapport à la ligne active.</span><span class="sxs-lookup"><span data-stu-id="7d090-119">Where the new rows should be inserted relative to the current row.</span></span>
          type:
            - 'onenote!OneNote.InsertLocation:enum'
        - id: values
          description: '<span data-ttu-id="7d090-120">Chaînes à insérer dans la nouvelle ligne, spécifiées sous forme de tableau.</span><span class="sxs-lookup"><span data-stu-id="7d090-120">Strings to insert in the new row, specified as an array.</span></span> <span data-ttu-id="7d090-121">Elles ne doivent pas comporter plus de cellules que dans la ligne active.</span><span class="sxs-lookup"><span data-stu-id="7d090-121">Must not have more cells than in the current row.</span></span> <span data-ttu-id="7d090-122">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="7d090-122">Optional.</span></span>'
          type:
            - 'string[]'
  - uid: 'onenote!OneNote.TableRow#insertRowAsSibling:member(2)'
    summary: "<span data-ttu-id=\"7d090-123\">Insère une ligne avant ou après la ligne active.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7d090-123\">Inserts a row before or after the current row.</span></span>\n\n<span data-ttu-id=\"7d090-124\">\\[[Ensemble d’API\_: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"7d090-124\">\\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \\]</span></span>"
    name: 'insertRowAsSibling(insertLocationString, values)'
    fullName: 'insertRowAsSibling(insertLocationString, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertRowAsSibling(insertLocationString: "Before" | "After", values?: string[]): OneNote.TableRow;'
      return:
        type:
          - 'onenote!OneNote.TableRow:class'
        description: ''
      parameters:
        - id: insertLocationString
          description: <span data-ttu-id="7d090-125">Où les nouvelles lignes doivent être insérées par rapport à la ligne active.</span><span class="sxs-lookup"><span data-stu-id="7d090-125">Where the new rows should be inserted relative to the current row.</span></span>
          type:
            - '"Before" | "After"'
        - id: values
          description: '<span data-ttu-id="7d090-126">Chaînes à insérer dans la nouvelle ligne, spécifiées sous forme de tableau.</span><span class="sxs-lookup"><span data-stu-id="7d090-126">Strings to insert in the new row, specified as an array.</span></span> <span data-ttu-id="7d090-127">Elles ne doivent pas comporter plus de cellules que dans la ligne active.</span><span class="sxs-lookup"><span data-stu-id="7d090-127">Must not have more cells than in the current row.</span></span> <span data-ttu-id="7d090-128">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="7d090-128">Optional.</span></span>'
          type:
            - 'string[]'
  - uid: 'onenote!OneNote.TableRow#load:member(1)'
    summary: "<span data-ttu-id=\"7d090-129\">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7d090-129\">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id=\"7d090-130\">Vous devez appeler «\_context.sync()\_» avant de lire les propriétés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7d090-130\">You must call \"context.sync()\" before reading the properties.</span></span>"
    remarks: "<span data-ttu-id=\"7d090-131\">En plus de cette signature, cette méthode possède les signatures suivantes\_:</span><span class=\"sxs-lookup\"><span data-stu-id=\"7d090-131\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"7d090-132\">`load(option?: string | string[]): OneNote.TableRow`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7d090-132\">`load(option?: string | string[]): OneNote.TableRow` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>\n\n<span data-ttu-id=\"7d090-133\">`load(option?: { select?: string; expand?: string; }): OneNote.TableRow`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7d090-133\">`load(option?: { select?: string; expand?: string; }): OneNote.TableRow` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"7d090-134\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.TableRow`-Uniquement disponible sur les types de collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7d090-134\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.TableRow` - Only available on collection types.</span></span> <span data-ttu-id=\"7d090-135\">Elle est similaire à la signature précédente.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7d090-135\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"7d090-136\">Option. Top indique le nombre maximal d’éléments de collection qui peuvent être inclus dans le résultat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7d090-136\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"7d090-137\">Option. Skip indique le nombre d’éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7d090-137\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"7d090-138\">Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d’éléments.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7d090-138\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>"
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OneNote.Interfaces.TableRowLoadOptions): OneNote.TableRow;'
      return:
        type:
          - 'onenote!OneNote.TableRow:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'onenote!OneNote.Interfaces.TableRowLoadOptions:interface'
  - uid: 'onenote!OneNote.TableRow#load:member(2)'
    summary: <span data-ttu-id="7d090-139">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="7d090-139">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="7d090-140">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="7d090-140">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): OneNote.TableRow;'
      return:
        type:
          - 'onenote!OneNote.TableRow:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7d090-141">Exemples</span><span class="sxs-lookup"><span data-stu-id="7d090-141">Examples</span></span>

          ```javascript
          OneNote.run(function(ctx) {
              var app = ctx.application;
              var outline = app.getActiveOutline();
              
              // Queue a command to load outline.paragraphs and their types.
              ctx.load(outline, "paragraphs, paragraphs/type");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  var paragraphs = outline.paragraphs;
                  
                  // for each table, get table rows.
                  for (var i = 0; i < paragraphs.items.length; i++) {
                      var paragraph = paragraphs.items[i];
                      if (paragraph.type == "Table") {
                          var table = paragraph.table;
                          
                          // Queue a command to load table.rows.
                          ctx.load(table, "rows");
                          return ctx.sync().then(function() {
                              var rows = table.rows;
                              
                              // for each table row, log cell count and row index.
                              for (var i = 0; i < rows.items.length; i++) {
                                  console.log("Row " + i + " Id: " + rows.items[i].id);
                                  console.log("Row " + i + " Cell Count: " + rows.items[i].cellCount);
                                  console.log("Row " + i + " Row Index: " + rows.items[i].rowIndex);
                              }
                              return ctx.sync();
                          });
                      }
                  }
              })
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          OneNote.run(function(ctx) {
              var app = ctx.application;
              var outline = app.getActiveOutline();
              
              // Queue a command to load outline.paragraphs and their types.
              ctx.load(outline, "paragraphs, paragraphs/type");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  var paragraphs = outline.paragraphs;
                  
                  // for each table, get table rows.
                  for (var i = 0; i < paragraphs.items.length; i++) {
                      var paragraph = paragraphs.items[i];
                      if (paragraph.type == "Table") {
                          var table = paragraph.table;
                          
                          // Queue a command to load parentTable and cells of each row in the table.
                          ctx.load(table, "rows/parentTable, rows/cells");
                          return ctx.sync().then(function() {
                              var rows = table.rows;
                              
                              // for each row, log parentTable and cells
                              for (var i = 0; i < rows.items.length; i++) {
                                  console.log("Row " + i + " Parent Table Id: " + rows.items[i].parentTable.id);
                                  var cells = rows.items[i].cells;
                                  for (var j = 0 ; j < cells.items.length; j++) {
                                      console.log("Row " + i + " Cell " + j + " Id: " + cells.items[j].id);
                                  }
                              }
                              return ctx.sync();
                          });
                      }
                  }
              })
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="7d090-142">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="7d090-142">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'onenote!OneNote.TableRow#load:member(3)'
    summary: <span data-ttu-id="7d090-143">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="7d090-143">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="7d090-144">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="7d090-144">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): OneNote.TableRow;'
      return:
        type:
          - 'onenote!OneNote.TableRow:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="7d090-145">Où propertyNamesAndPaths. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et propertyNamesAndPaths. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="7d090-145">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'onenote!OneNote.TableRow#parentTable:member'
    summary: "<span data-ttu-id=\"7d090-146\">Obtient le tableau parent.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7d090-146\">Gets the parent table.</span></span> <span data-ttu-id=\"7d090-147\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7d090-147\">Read-only.</span></span>\n\n<span data-ttu-id=\"7d090-148\">\\[[Ensemble d’API\_: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"7d090-148\">\\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \\]</span></span>"
    name: parentTable
    fullName: parentTable
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentTable: OneNote.Table;'
      return:
        type:
          - 'onenote!OneNote.Table:class'
  - uid: 'onenote!OneNote.TableRow#rowIndex:member'
    summary: "<span data-ttu-id=\"7d090-149\">Obtient l’index de la ligne dans le tableau parent correspondant.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7d090-149\">Gets the index of the row in its parent table.</span></span> <span data-ttu-id=\"7d090-150\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7d090-150\">Read-only.</span></span>\n\n<span data-ttu-id=\"7d090-151\">\\[[Ensemble d’API\_: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"7d090-151\">\\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \\]</span></span>"
    name: rowIndex
    fullName: rowIndex
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly rowIndex: number;'
      return:
        type:
          - number
  - uid: 'onenote!OneNote.TableRow#setShadingColor:member(1)'
    summary: "<span data-ttu-id=\"7d090-152\">Définit la couleur d’ombrage de toutes les cellules dans la ligne.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7d090-152\">Sets the shading color of all cells in the row.</span></span> <span data-ttu-id=\"7d090-153\">Code couleur appliqué aux cellules.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7d090-153\">The color code to set the cells to.</span></span>\n\n<span data-ttu-id=\"7d090-154\">\\[[Ensemble d’API\_: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"7d090-154\">\\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \\]</span></span>"
    name: setShadingColor(colorCode)
    fullName: setShadingColor(colorCode)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setShadingColor(colorCode: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: colorCode
          description: ''
          type:
            - string
  - uid: 'onenote!OneNote.TableRow#toJSON:member(1)'
    summary: '<span data-ttu-id="7d090-155">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="7d090-155">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="7d090-156">.</span><span class="sxs-lookup"><span data-stu-id="7d090-156"></span></span> <span data-ttu-id="7d090-157">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="7d090-157"></span></span><!-- --><span data-ttu-id="7d090-158">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que l’objet OneNote. TableRow d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`OneNote.Interfaces.TableRowData`</span><span class="sxs-lookup"><span data-stu-id="7d090-158">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original OneNote.TableRow object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `OneNote.Interfaces.TableRowData`</span></span><!-- --><span data-ttu-id="7d090-159">) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l’objet d’origine.</span><span class="sxs-lookup"><span data-stu-id="7d090-159">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): OneNote.Interfaces.TableRowData;'
      return:
        type:
          - 'onenote!OneNote.Interfaces.TableRowData:interface'
        description: ''
  - uid: 'onenote!OneNote.TableRow#track:member(1)'
    summary: "<span data-ttu-id=\"7d090-160\">Effectuer le suivi de l’objet pour l’ajustement automatique en fonction environnant des modifications dans le document.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7d090-160\">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id=\"7d090-161\">Cet appel est abréviations context.trackedObjects.add(thisObject).</span><span class=\"sxs-lookup\"><span data-stu-id=\"7d090-161\">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id=\"7d090-162\">Si vous utilisez cet objet au sein de «\_.sync\_» appels et en dehors de l’exécution séquentielle d’un lot de «\_.run\_» et rencontrez un message d’erreur «\_InvalidObjectPath\_» lors de la définition d’une propriété ou appeler une méthode sur l’objet, vous devez ajouter l’objet à l’objet de suivi collection de sites lors de l’objet a été créé.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7d090-162\">If you are using this object across \".sync\" calls and outside the sequential execution of a \".run\" batch, and get an \"InvalidObjectPath\" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>"
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): OneNote.TableRow;'
      return:
        type:
          - 'onenote!OneNote.TableRow:class'
        description: ''
  - uid: 'onenote!OneNote.TableRow#untrack:member(1)'
    summary: "<span data-ttu-id=\"7d090-163\">Publication mémoire associée à cet objet si elle a été précédemment suivie.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7d090-163\">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id=\"7d090-164\">Cet appel est abréviations context.trackedObjects.add(thisObject).</span><span class=\"sxs-lookup\"><span data-stu-id=\"7d090-164\">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id=\"7d090-165\">Vous rencontrez de nombreux objets suivies ralentit l’application hôte, donc n’oubliez pas de libérer les objets que l'on ajoute, une fois que vous avez terminé à les utiliser.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7d090-165\">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them.</span></span> <span data-ttu-id=\"7d090-166\">Vous devez appeler «\_context.sync()\_» avant la publication de mémoire prend effet.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7d090-166\">You will need to call \"context.sync()\" before the memory release takes effect.</span></span>"
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): OneNote.TableRow;'
      return:
        type:
          - 'onenote!OneNote.TableRow:class'
        description: ''
references:
  - uid: 'onenote!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'onenote!OneNote.TableCellCollection:class'
    name: OneNote.TableCellCollection
  - uid: 'onenote!OneNote.RequestContext:class'
    name: RequestContext
  - uid: 'onenote!OneNote.TableRow:class'
    name: OneNote.TableRow
  - uid: 'onenote!OneNote.InsertLocation:enum'
    name: OneNote.InsertLocation
  - uid: 'onenote!OneNote.Interfaces.TableRowLoadOptions:interface'
    name: OneNote.Interfaces.TableRowLoadOptions
  - uid: 'onenote!OneNote.Table:class'
    name: OneNote.Table
  - uid: 'onenote!OneNote.Interfaces.TableRowData:interface'
    name: OneNote.Interfaces.TableRowData