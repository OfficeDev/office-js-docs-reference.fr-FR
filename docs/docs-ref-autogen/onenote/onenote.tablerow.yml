### YamlMime:UniversalReference
ms.openlocfilehash: 45ab76a46f0cf045af09e9813833f571ae5ef515
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 02/13/2019
ms.locfileid: "29979511"
items:
- uid: onenote.OneNote.TableRow
  summary: >-
    <span data-ttu-id="09f2c-101">Représente une ligne d’un tableau.</span><span class="sxs-lookup"><span data-stu-id="09f2c-101">Represents a row in a table.</span></span>


    <span data-ttu-id="09f2c-102">\[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="09f2c-102">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: OneNote.TableRow
  fullName: OneNote.TableRow
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: onenote
  children:
  - onenote.OneNote.TableRow.cellCount
  - onenote.OneNote.TableRow.cells
  - onenote.OneNote.TableRow.clear
  - onenote.OneNote.TableRow.context
  - onenote.OneNote.TableRow.id
  - onenote.OneNote.TableRow.insertRowAsSibling
  - onenote.OneNote.TableRow.insertRowAsSibling_1
  - onenote.OneNote.TableRow.load
  - onenote.OneNote.TableRow.load_1
  - onenote.OneNote.TableRow.load_2
  - onenote.OneNote.TableRow.parentTable
  - onenote.OneNote.TableRow.rowIndex
  - onenote.OneNote.TableRow.setShadingColor
  - onenote.OneNote.TableRow.toJSON
  - onenote.OneNote.TableRow.track
  - onenote.OneNote.TableRow.untrack
- uid: onenote.OneNote.TableRow.cellCount
  summary: >-
    <span data-ttu-id="09f2c-p101">Obtient le nombre de cellules dans la ligne. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="09f2c-p101">Gets the number of cells in the row. Read-only.</span></span>


    <span data-ttu-id="09f2c-105">\[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="09f2c-105">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: cellCount
  fullName: cellCount
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly cellCount: number;'
    return:
      type:
      - number
- uid: onenote.OneNote.TableRow.cells
  summary: >-
    <span data-ttu-id="09f2c-p102">Obtient les cellules de la ligne. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="09f2c-p102">Gets the cells in the row. Read-only.</span></span>


    <span data-ttu-id="09f2c-108">\[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="09f2c-108">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: cells
  fullName: cells
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly cells: OneNote.TableCellCollection;'
    return:
      type:
      - onenote.OneNote.TableCellCollection
- uid: onenote.OneNote.TableRow.clear
  summary: >-
    <span data-ttu-id="09f2c-109">Efface le contenu de la ligne.</span><span class="sxs-lookup"><span data-stu-id="09f2c-109">Clears the contents of the row.</span></span>


    <span data-ttu-id="09f2c-110">\[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="09f2c-110">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: clear()
  fullName: clear()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clear(): void;'
    return:
      type:
      - void
      description: ''
- uid: onenote.OneNote.TableRow.context
  summary: <span data-ttu-id="09f2c-111">Contexte de la requête associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="09f2c-111">The request context associated with the object.</span></span> <span data-ttu-id="09f2c-112">Il connecte processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="09f2c-112">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: onenote.OneNote.TableRow.id
  summary: >-
    <span data-ttu-id="09f2c-p104">Obtient l’ID de la ligne. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="09f2c-p104">Gets the ID of the row. Read-only.</span></span>


    <span data-ttu-id="09f2c-115">\[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="09f2c-115">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
- uid: onenote.OneNote.TableRow.insertRowAsSibling
  summary: >-
    <span data-ttu-id="09f2c-116">Insère une ligne avant ou après la ligne active.</span><span class="sxs-lookup"><span data-stu-id="09f2c-116">Inserts a row before or after the current row.</span></span>


    <span data-ttu-id="09f2c-117">\[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="09f2c-117">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertRowAsSibling(insertLocation, values)
  fullName: insertRowAsSibling(insertLocation, values)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertRowAsSibling(insertLocation: OneNote.InsertLocation, values?: string[]): OneNote.TableRow;'
    return:
      type:
      - OneNote.TableRow
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"09f2c-118\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"09f2c-118\">Examples</span></span>\n\n```javascript\nOneNote.run(function(ctx) {\n    var app = ctx.application;\n    var outline = app.getActiveOutline();\n    \n    // Queue a command to load outline.paragraphs and their types.\n    ctx.load(outline, \"paragraphs, paragraphs/type\");\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        var paragraphs = outline.paragraphs;\n        \n        // for each table, get table rows.\n        for (var i = 0; i < paragraphs.items.length; i++) {\n            var paragraph = paragraphs.items[i];\n            if (paragraph.type == \"Table\") {\n                var table = paragraph.table;\n                \n                // Queue a command to load table.rows.\n                ctx.load(table, \"rows\");\n                \n                // Run the queued commands\n                return ctx.sync().then(function() {\n                    var rows = table.rows;\n                    rows.items[1].insertRowAsSibling(\"Before\", [\"cell0\", \"cell1\"]);\n                    return ctx.sync();\n                });\n            }\n        }\n    })\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: insertLocation
      description: <span data-ttu-id="09f2c-119">Où les nouvelles lignes doivent être insérées par rapport à la ligne active.</span><span class="sxs-lookup"><span data-stu-id="09f2c-119">Where the new rows should be inserted relative to the current row.</span></span>
      type:
      - onenote.OneNote.InsertLocation
    - id: values
      description: <span data-ttu-id="09f2c-120">Chaînes à insérer dans la nouvelle ligne, spécifiées sous forme de tableau.</span><span class="sxs-lookup"><span data-stu-id="09f2c-120">Strings to insert in the new row, specified as an array.</span></span> <span data-ttu-id="09f2c-121">Elles ne doivent pas comporter plus de cellules que dans la ligne active.</span><span class="sxs-lookup"><span data-stu-id="09f2c-121">Must not have more cells than in the current row.</span></span> <span data-ttu-id="09f2c-122">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="09f2c-122">Optional.</span></span>
      type:
      - string[]
- uid: onenote.OneNote.TableRow.insertRowAsSibling_1
  summary: >-
    <span data-ttu-id="09f2c-123">Insère une ligne avant ou après la ligne active.</span><span class="sxs-lookup"><span data-stu-id="09f2c-123">Inserts a row before or after the current row.</span></span>


    <span data-ttu-id="09f2c-124">\[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="09f2c-124">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertRowAsSibling(insertLocationString, values)
  fullName: insertRowAsSibling(insertLocationString, values)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertRowAsSibling(insertLocationString: "Before" | "After", values?: string[]): OneNote.TableRow;'
    return:
      type:
      - OneNote.TableRow
      description: ''
    parameters:
    - id: insertLocationString
      description: <span data-ttu-id="09f2c-125">Où les nouvelles lignes doivent être insérées par rapport à la ligne active.</span><span class="sxs-lookup"><span data-stu-id="09f2c-125">Where the new rows should be inserted relative to the current row.</span></span>
      type:
      - "\"Before\" | \"After\""
    - id: values
      description: <span data-ttu-id="09f2c-126">Chaînes à insérer dans la nouvelle ligne, spécifiées sous forme de tableau.</span><span class="sxs-lookup"><span data-stu-id="09f2c-126">Strings to insert in the new row, specified as an array.</span></span> <span data-ttu-id="09f2c-127">Elles ne doivent pas comporter plus de cellules que dans la ligne active.</span><span class="sxs-lookup"><span data-stu-id="09f2c-127">Must not have more cells than in the current row.</span></span> <span data-ttu-id="09f2c-128">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="09f2c-128">Optional.</span></span>
      type:
      - string[]
- uid: onenote.OneNote.TableRow.load
  summary: <span data-ttu-id="09f2c-129">Files d’attente d’une commande pour charger les propriétés de l’objet spécifiées.</span><span class="sxs-lookup"><span data-stu-id="09f2c-129">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="09f2c-130">Vous devez appeler « context.sync() » avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="09f2c-130">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="09f2c-131">Outre cette signature, cette méthode présente les signatures suivantes :</span><span class="sxs-lookup"><span data-stu-id="09f2c-131">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="09f2c-132">`load(option?: string | string[]): OneNote.TableRow`-Où option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="09f2c-132">`load(option?: string | string[]): OneNote.TableRow` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="09f2c-133">`load(option?: { select?: string; expand?: string; }): OneNote.TableRow`-Où option.select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options.expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="09f2c-133">`load(option?: { select?: string; expand?: string; }): OneNote.TableRow` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="09f2c-134">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.TableRow`-Uniquement disponible sur les types de la collection.</span><span class="sxs-lookup"><span data-stu-id="09f2c-134">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.TableRow` - Only available on collection types.</span></span> <span data-ttu-id="09f2c-135">Il est similaire à la signature précédente.</span><span class="sxs-lookup"><span data-stu-id="09f2c-135">It is similar to the preceding signature.</span></span> <span data-ttu-id="09f2c-136">Option.Top Spécifie le nombre maximal d’éléments pouvant être inclus dans le résultat de la collection.</span><span class="sxs-lookup"><span data-stu-id="09f2c-136">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="09f2c-137">Option.Skip Spécifie le nombre d’éléments qui doivent être ignoré et non inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="09f2c-137">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="09f2c-138">Si option.top est spécifié, le jeu de résultats démarre après l’ignorer le nombre spécifié d’éléments.</span><span class="sxs-lookup"><span data-stu-id="09f2c-138">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OneNote.Interfaces.TableRowLoadOptions): OneNote.TableRow;'
    return:
      type:
      - OneNote.TableRow
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - OneNote.Interfaces.TableRowLoadOptions
- uid: onenote.OneNote.TableRow.load_1
  summary: <span data-ttu-id="09f2c-139">Files d’attente d’une commande pour charger les propriétés de l’objet spécifiées.</span><span class="sxs-lookup"><span data-stu-id="09f2c-139">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="09f2c-140">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="09f2c-140">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): OneNote.TableRow;'
    return:
      type:
      - OneNote.TableRow
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"09f2c-141\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"09f2c-141\">Examples</span></span>\n\n```javascript\nOneNote.run(function(ctx) {\n    var app = ctx.application;\n    var outline = app.getActiveOutline();\n    \n    // Queue a command to load outline.paragraphs and their types.\n    ctx.load(outline, \"paragraphs, paragraphs/type\");\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        var paragraphs = outline.paragraphs;\n        \n        // for each table, get table rows.\n        for (var i = 0; i < paragraphs.items.length; i++) {\n            var paragraph = paragraphs.items[i];\n            if (paragraph.type == \"Table\") {\n                var table = paragraph.table;\n                \n                // Queue a command to load table.rows.\n                ctx.load(table, \"rows\");\n                return ctx.sync().then(function() {\n                    var rows = table.rows;\n                    \n                    // for each table row, log cell count and row index.\n                    for (var i = 0; i < rows.items.length; i++) {\n                        console.log(\"Row \" + i + \" Id: \" + rows.items[i].id);\n                        console.log(\"Row \" + i + \" Cell Count: \" + rows.items[i].cellCount);\n                        console.log(\"Row \" + i + \" Row Index: \" + rows.items[i].rowIndex);\n                    }\n                    return ctx.sync();\n                });\n            }\n        }\n    })\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nOneNote.run(function(ctx) {\n    var app = ctx.application;\n    var outline = app.getActiveOutline();\n    \n    // Queue a command to load outline.paragraphs and their types.\n    ctx.load(outline, \"paragraphs, paragraphs/type\");\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        var paragraphs = outline.paragraphs;\n        \n        // for each table, get table rows.\n        for (var i = 0; i < paragraphs.items.length; i++) {\n            var paragraph = paragraphs.items[i];\n            if (paragraph.type == \"Table\") {\n                var table = paragraph.table;\n                \n                // Queue a command to load parentTable and cells of each row in the table.\n                ctx.load(table, \"rows/parentTable, rows/cells\");\n                return ctx.sync().then(function() {\n                    var rows = table.rows;\n                    \n                    // for each row, log parentTable and cells\n                    for (var i = 0; i < rows.items.length; i++) {\n                        console.log(\"Row \" + i + \" Parent Table Id: \" + rows.items[i].parentTable.id);\n                        var cells = rows.items[i].cells;\n                        for (var j = 0 ; j < cells.items.length; j++) {\n                            console.log(\"Row \" + i + \" Cell \" + j + \" Id: \" + cells.items[j].id);\n                        }\n                    }\n                    return ctx.sync();\n                });\n            }\n        }\n    })\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="09f2c-142">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="09f2c-142">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: onenote.OneNote.TableRow.load_2
  summary: <span data-ttu-id="09f2c-143">Files d’attente d’une commande pour charger les propriétés de l’objet spécifiées.</span><span class="sxs-lookup"><span data-stu-id="09f2c-143">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="09f2c-144">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="09f2c-144">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): OneNote.TableRow;'
    return:
      type:
      - OneNote.TableRow
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="09f2c-145">Où propertyNamesAndPaths.select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et propertyNamesAndPaths.expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="09f2c-145">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: onenote.OneNote.TableRow.parentTable
  summary: >-
    <span data-ttu-id="09f2c-p111">Obtient le tableau parent. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="09f2c-p111">Gets the parent table. Read-only.</span></span>


    <span data-ttu-id="09f2c-148">\[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="09f2c-148">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: parentTable
  fullName: parentTable
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentTable: OneNote.Table;'
    return:
      type:
      - OneNote.Table
- uid: onenote.OneNote.TableRow.rowIndex
  summary: >-
    <span data-ttu-id="09f2c-p112">Obtient l’index de la ligne dans le tableau parent correspondant. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="09f2c-p112">Gets the index of the row in its parent table. Read-only.</span></span>


    <span data-ttu-id="09f2c-151">\[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="09f2c-151">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: rowIndex
  fullName: rowIndex
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly rowIndex: number;'
    return:
      type:
      - number
- uid: onenote.OneNote.TableRow.setShadingColor
  summary: >-
    <span data-ttu-id="09f2c-152">Définit la couleur d’ombrage de toutes les cellules dans la ligne.</span><span class="sxs-lookup"><span data-stu-id="09f2c-152">Sets the shading color of all cells in the row.</span></span> <span data-ttu-id="09f2c-153">Code couleur appliqué aux cellules.</span><span class="sxs-lookup"><span data-stu-id="09f2c-153">The color code to set the cells to.</span></span>


    <span data-ttu-id="09f2c-154">\[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="09f2c-154">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: setShadingColor(colorCode)
  fullName: setShadingColor(colorCode)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setShadingColor(colorCode: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: colorCode
      description: ''
      type:
      - string
- uid: onenote.OneNote.TableRow.toJSON
  summary: <span data-ttu-id="09f2c-155">Remplace le code JavaScript `toJSON()` méthode afin de fournir une sortie plus utile lorsqu’un objet API est passé à `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="09f2c-155">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="09f2c-156">(`JSON.stringify`<!-- -->, à son tour, appelle le `toJSON` méthode de l’objet qui lui est passé.) Tandis que l’objet OneNote.TableRow d’origine est un objet d’API, la `toJSON` méthode renvoie un objet JavaScript brut (typée en tant que `OneNote.Interfaces.TableRowData` <!-- -->) qui contient des copies superficielles de toutes les propriétés enfant chargé à partir de l’objet d’origine.</span><span class="sxs-lookup"><span data-stu-id="09f2c-156">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original OneNote.TableRow object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `OneNote.Interfaces.TableRowData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): OneNote.Interfaces.TableRowData;'
    return:
      type:
      - OneNote.Interfaces.TableRowData
      description: ''
- uid: onenote.OneNote.TableRow.track
  summary: <span data-ttu-id="09f2c-157">Suivre l’objet pour l’ajustement automatique selon entourant les modifications dans le document.</span><span class="sxs-lookup"><span data-stu-id="09f2c-157">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="09f2c-158">Cet appel est une abréviation de context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="09f2c-158">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="09f2c-159">Si vous utilisez cet objet dans les appels de « .sync » et en dehors de l’exécution séquentielle d’un lot de « .run » et obtenir une erreur « InvalidObjectPath » lors de la définition d’une propriété ou d’appeler une méthode sur l’objet, vous devez avoir ajouté l’objet à l’objet suivi collection lorsque l’objet a été créé tout d’abord.</span><span class="sxs-lookup"><span data-stu-id="09f2c-159">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>
  name: track()
  fullName: track()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'track(): OneNote.TableRow;'
    return:
      type:
      - OneNote.TableRow
      description: ''
- uid: onenote.OneNote.TableRow.untrack
  summary: <span data-ttu-id="09f2c-160">Version de la mémoire associée à cet objet, si elle a été précédemment suivi.</span><span class="sxs-lookup"><span data-stu-id="09f2c-160">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="09f2c-161">Cet appel est l’abréviation de context.trackedObjects.remove(thisObject).</span><span class="sxs-lookup"><span data-stu-id="09f2c-161">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="09f2c-162">Comportant de nombreux objets suivis ralentit l’application hôte, donc pensez à libérer les objets que vous ajoutez, une fois que vous avez terminé les utiliser.</span><span class="sxs-lookup"><span data-stu-id="09f2c-162">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them.</span></span> <span data-ttu-id="09f2c-163">Vous devrez appeler « context.sync() » avant que la version de mémoire prenne effet.</span><span class="sxs-lookup"><span data-stu-id="09f2c-163">You will need to call "context.sync()" before the memory release takes effect.</span></span>
  name: untrack()
  fullName: untrack()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'untrack(): OneNote.TableRow;'
    return:
      type:
      - OneNote.TableRow
      description: ''
