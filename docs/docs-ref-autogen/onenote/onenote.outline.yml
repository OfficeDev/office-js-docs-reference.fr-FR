### YamlMime:UniversalReference
ms.openlocfilehash: f34b697a24062068b10fa266d99ceaa356934e85
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 02/13/2019
ms.locfileid: "29979903"
items:
- uid: onenote.OneNote.Outline
  summary: >-
    Représente un conteneur pour les objets Paragraph.


    \[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  name: OneNote.Outline
  fullName: OneNote.Outline
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: onenote
  children:
  - onenote.OneNote.Outline.appendHtml
  - onenote.OneNote.Outline.appendImage
  - onenote.OneNote.Outline.appendRichText
  - onenote.OneNote.Outline.appendTable
  - onenote.OneNote.Outline.context
  - onenote.OneNote.Outline.id
  - onenote.OneNote.Outline.isTitle
  - onenote.OneNote.Outline.load
  - onenote.OneNote.Outline.load_1
  - onenote.OneNote.Outline.load_2
  - onenote.OneNote.Outline.pageContent
  - onenote.OneNote.Outline.paragraphs
  - onenote.OneNote.Outline.toJSON
  - onenote.OneNote.Outline.track
  - onenote.OneNote.Outline.untrack
- uid: onenote.OneNote.Outline.appendHtml
  summary: >-
    Ajoute le code HTML spécifié dans la partie inférieure du plan.


    \[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  name: appendHtml(html)
  fullName: appendHtml(html)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'appendHtml(html: string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a>Exemples\n\n```javascript\nOneNote.run(function (context) {\n\n    // Gets the active page.\n    var activePage = context.application.getActivePage();\n\n    // Get pageContents of the activePage. \n    var pageContents = activePage.contents;\n\n    // Queue a command to load the pageContents to access its data.\n    context.load(pageContents);\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function() {\n            if (pageContents.items.length != 0 && pageContents.items[0].type == \"Outline\")\n            {\n                // First item is an outline.\n                outline = pageContents.items[0].outline;\n\n                // Queue a command to append a paragraph to the outline.\n                outline.appendHtml(\"<p>new paragraph</p>\");\n\n                // Run the queued commands.\n                return context.sync();\n            }\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: html
      description: Chaîne HTML à ajouter. Voir [HTML pris en charge](https://docs.microsoft.com/office/dev/add-ins/onenote/onenote-add-ins-page-content#supported-html) pour l’API JavaScript de compléments OneNote.
      type:
      - string
- uid: onenote.OneNote.Outline.appendImage
  summary: >-
    Ajoute l’image spécifiée dans la partie inférieure du plan.


    \[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  name: appendImage(base64EncodedImage, width, height)
  fullName: appendImage(base64EncodedImage, width, height)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'appendImage(base64EncodedImage: string, width: number, height: number): OneNote.Image;'
    return:
      type:
      - onenote.OneNote.Image
      description: ''
    parameters:
    - id: base64EncodedImage
      description: Chaîne HTML à ajouter.
      type:
      - string
    - id: width
      description: Facultatif. Largeur de l’unité des points. La valeur par défaut est Null et la largeur d’image est respectée.
      type:
      - number
    - id: height
      description: Facultatif. Hauteur de l’unité des points. La valeur par défaut est Null et la hauteur d’image est respectée.
      type:
      - number
- uid: onenote.OneNote.Outline.appendRichText
  summary: >-
    Ajoute le texte spécifié dans la partie inférieure du plan.


    \[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  name: appendRichText(paragraphText)
  fullName: appendRichText(paragraphText)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'appendRichText(paragraphText: string): OneNote.RichText;'
    return:
      type:
      - onenote.OneNote.RichText
      description: ''
    parameters:
    - id: paragraphText
      description: Chaîne HTML à ajouter.
      type:
      - string
- uid: onenote.OneNote.Outline.appendTable
  summary: >-
    Ajoute un tableau avec le nombre spécifié de lignes et de colonnes dans la partie inférieure du plan.


    \[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  name: appendTable(rowCount, columnCount, values)
  fullName: appendTable(rowCount, columnCount, values)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'appendTable(rowCount: number, columnCount: number, values?: string[][]): OneNote.Table;'
    return:
      type:
      - OneNote.Table
      description: "\n#### <a name=\"examples\"></a>Exemples\n\n```javascript\nOneNote.run(function (context) {\n\n    // Gets the active page.\n    var activePage = context.application.getActivePage();\n\n    // Get pageContents of the activePage. \n    var pageContents = activePage.contents;\n\n    // Queue a command to load the pageContents to access its data.\n    context.load(pageContents);\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function() {\n            if (pageContents.items.length != 0 && pageContents.items[0].type == \"Outline\") {\n                // First item is an outline.\n                var outline = pageContents.items[0].outline;\n\n                // Queue a command to append a paragraph to the outline.\n                outline.appendTable(2, 2, [[1, 2],[3, 4]]);\n\n                // Run the queued commands.\n                return context.sync();\n            }\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: rowCount
      description: Obligatoire. Nombre de lignes dans le tableau.
      type:
      - number
    - id: columnCount
      description: Obligatoire. Nombre de colonnes dans le tableau.
      type:
      - number
    - id: values
      description: Tableau 2D facultatif. Les cellules sont remplies si les chaînes correspondantes sont spécifiées dans le tableau.
      type:
      - string[][]
- uid: onenote.OneNote.Outline.context
  summary: Contexte de la requête associé à l’objet. Il connecte processus du complément au processus de l’application hôte Office.
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: onenote.OneNote.Outline.id
  summary: >-
    Obtient l’ID de l’objet Outline. En lecture seule.


    \[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
- uid: onenote.OneNote.Outline.isTitle
  summary: >-
    Vérifier si le plan est plan de titre.


    \[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  name: isTitle()
  fullName: isTitle()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'isTitle(): OfficeExtension.ClientResult<boolean>;'
    return:
      type:
      - OfficeExtension.ClientResult<boolean>
      description: ''
- uid: onenote.OneNote.Outline.load
  summary: Files d’attente d’une commande pour charger les propriétés de l’objet spécifiées. Vous devez appeler « context.sync() » avant de lire les propriétés.
  remarks: >-
    Outre cette signature, cette méthode présente les signatures suivantes :


    `load(option?: string | string[]): OneNote.Outline`-Où option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.


    `load(option?: { select?: string; expand?: string; }): OneNote.Outline`-Où option.select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options.expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Outline`-Uniquement disponible sur les types de la collection. Il est similaire à la signature précédente. Option.Top Spécifie le nombre maximal d’éléments pouvant être inclus dans le résultat de la collection. Option.Skip Spécifie le nombre d’éléments qui doivent être ignoré et non inclus dans le résultat. Si option.top est spécifié, le jeu de résultats démarre après l’ignorer le nombre spécifié d’éléments.
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OneNote.Interfaces.OutlineLoadOptions): OneNote.Outline;'
    return:
      type:
      - onenote.OneNote.Outline
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - onenote.OneNote.Interfaces.OutlineLoadOptions
- uid: onenote.OneNote.Outline.load_1
  summary: Files d’attente d’une commande pour charger les propriétés de l’objet spécifiées. Vous devez appeler `context.sync()` avant de lire les propriétés.
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): OneNote.Outline;'
    return:
      type:
      - onenote.OneNote.Outline
      description: ''
    parameters:
    - id: propertyNames
      description: Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.
      type:
      - string | string[]
- uid: onenote.OneNote.Outline.load_2
  summary: Files d’attente d’une commande pour charger les propriétés de l’objet spécifiées. Vous devez appeler `context.sync()` avant de lire les propriétés.
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): OneNote.Outline;'
    return:
      type:
      - onenote.OneNote.Outline
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: Où propertyNamesAndPaths.select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et propertyNamesAndPaths.expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.
      type:
      - '{ select?: string; expand?: string; }'
- uid: onenote.OneNote.Outline.pageContent
  summary: >-
    Obtient l’objet PageContent qui contient le plan. Cet objet définit la position du plan sur la page. En lecture seule.


    \[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  name: pageContent
  fullName: pageContent
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly pageContent: OneNote.PageContent;'
    return:
      type:
      - onenote.OneNote.PageContent
- uid: onenote.OneNote.Outline.paragraphs
  summary: >-
    Obtient la collection d’objets Paragraph dans le plan. En lecture seule.


    \[[Du jeu d’API : OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  name: paragraphs
  fullName: paragraphs
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly paragraphs: OneNote.ParagraphCollection;'
    return:
      type:
      - onenote.OneNote.ParagraphCollection
- uid: onenote.OneNote.Outline.toJSON
  summary: Remplace le code JavaScript `toJSON()` méthode afin de fournir une sortie plus utile lorsqu’un objet API est passé à `JSON.stringify()` <!-- -->. (`JSON.stringify`<!-- -->, à son tour, appelle le `toJSON` méthode de l’objet qui lui est passé.) Tandis que l’objet OneNote.Outline d’origine est un objet d’API, la `toJSON` méthode renvoie un objet JavaScript brut (typée en tant que `OneNote.Interfaces.OutlineData` <!-- -->) qui contient des copies superficielles de toutes les propriétés enfant chargé à partir de l’objet d’origine.
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): OneNote.Interfaces.OutlineData;'
    return:
      type:
      - onenote.OneNote.Interfaces.OutlineData
      description: ''
- uid: onenote.OneNote.Outline.track
  summary: Suivre l’objet pour l’ajustement automatique selon entourant les modifications dans le document. Cet appel est une abréviation de context.trackedObjects.add(thisObject). Si vous utilisez cet objet dans les appels de « .sync » et en dehors de l’exécution séquentielle d’un lot de « .run » et obtenir une erreur « InvalidObjectPath » lors de la définition d’une propriété ou d’appeler une méthode sur l’objet, vous devez avoir ajouté l’objet à l’objet suivi collection lorsque l’objet a été créé tout d’abord.
  name: track()
  fullName: track()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'track(): OneNote.Outline;'
    return:
      type:
      - onenote.OneNote.Outline
      description: ''
- uid: onenote.OneNote.Outline.untrack
  summary: Version de la mémoire associée à cet objet, si elle a été précédemment suivi. Cet appel est l’abréviation de context.trackedObjects.remove(thisObject). Comportant de nombreux objets suivis ralentit l’application hôte, donc pensez à libérer les objets que vous ajoutez, une fois que vous avez terminé les utiliser. Vous devrez appeler « context.sync() » avant que la version de mémoire prenne effet.
  name: untrack()
  fullName: untrack()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'untrack(): OneNote.Outline;'
    return:
      type:
      - onenote.OneNote.Outline
      description: ''
