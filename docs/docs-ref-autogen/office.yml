### YamlMime:UniversalReference
ms.openlocfilehash: 1563fb49f3857d9921f5df8cfdf4bfe25bcafd48
ms.sourcegitcommit: a36161c2113d94680dc68150d024e68bdf0390fa
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 10/10/2018
ms.locfileid: "25458235"
items:
- uid: office
  name: office
  fullName: office
  langs:
  - typeScript
  type: package
  children:
  - office.Office.ActiveView
  - office.Office.AddBindingFromNamedItemOptions
  - office.Office.AddBindingFromPromptOptions
  - office.Office.AddBindingFromSelectionOptions
  - office.Office.AddinCommands.Event
  - office.Office.AddinCommands.Source
  - office.Office.AsyncContextOptions
  - office.Office.AsyncResult
  - office.Office.AsyncResultStatus
  - office.Office.Binding
  - office.Office.BindingDataChangedEventArgs
  - office.Office.Bindings
  - office.Office.BindingSelectionChangedEventArgs
  - office.Office.BindingType
  - office.Office.CoercionType
  - office.Office.Context
  - office.Office.ContextInformation
  - office.Office.CustomXmlNode
  - office.Office.CustomXMLNodeType
  - office.Office.CustomXmlPart
  - office.Office.CustomXmlParts
  - office.Office.CustomXmlPrefixMappings
  - office.Office.Dialog
  - office.Office.DialogOptions
  - office.Office.Document
  - office.Office.DocumentMode
  - office.Office.DocumentSelectionChangedEventArgs
  - office.Office.Error
  - office.Office.EventType
  - office.Office.File
  - office.Office.FileProperties
  - office.Office.FileType
  - office.Office.FilterType
  - office.Office.GetBindingDataOptions
  - office.Office.GetFileOptions
  - office.Office.GetSelectedDataOptions
  - office.Office.GoToByIdOptions
  - office.Office.GoToType
  - office.Office.HostType
  - office.Office.Index
  - office.Office.InitializationReason
  - office.Office.initialize
  - office.Office.IPromiseConstructor
  - office.Office.MatrixBinding
  - office.Office.NodeDeletedEventArgs
  - office.Office.NodeInsertedEventArgs
  - office.Office.NodeReplacedEventArgs
  - office.Office.OfficeTheme
  - office.Office.onReady
  - office.Office.PlatformType
  - office.Office.ProjectProjectFields
  - office.Office.ProjectResourceFields
  - office.Office.ProjectTaskFields
  - office.Office.ProjectViewTypes
  - office.Office.RangeCoordinates
  - office.Office.RangeFormatConfiguration
  - office.Office.RemoveHandlerOptions
  - office.Office.RequirementSetSupport
  - office.Office.SaveSettingsOptions
  - office.Office.select
  - office.Office.SelectionMode
  - office.Office.SetBindingDataOptions
  - office.Office.SetSelectedDataOptions
  - office.Office.Settings
  - office.Office.SettingsChangedEventArgs
  - office.Office.Slice
  - office.Office.Table
  - office.Office.TableBinding
  - office.Office.TableData
  - office.Office.TextBinding
  - office.Office.UI
  - office.Office.useShortNamespace
  - office.Office.ValueFormat
  - office.OfficeExtension.ClientObject
  - office.OfficeExtension.ClientRequestContext
  - office.OfficeExtension.ClientResult
  - office.OfficeExtension.DebugInfo
  - office.OfficeExtension.EmbeddedOptions
  - office.OfficeExtension.EmbeddedSession
  - office.OfficeExtension.Error
  - office.OfficeExtension.ErrorCodes
  - office.OfficeExtension.EventHandlerResult
  - office.OfficeExtension.EventHandlers
  - office.OfficeExtension.EventInfo
  - office.OfficeExtension.LoadOption
  - office.OfficeExtension.RequestContextDebugInfo
  - office.OfficeExtension.RequestUrlAndHeaderInfo
  - office.OfficeExtension.RunOptions
  - office.OfficeExtension.TrackedObjects
  - office.OfficeExtension.UpdateOptions
- uid: office.Office.initialize
  summary: >-
    Se produit quand l’environnement d’exécution est chargé et que le complément est prêt à interagir avec l’application et le document hébergé.


    Le paramètre de la raison de la fonction d’écouteur événement initialize renvoie une `InitializationReason` valeur d’énumération qui spécifie comment l’initialisation s’est produite. Un volet Office ou un complément de contenu peut être initialisé de deux manières :


    - L’utilisateur insérée uniquement à partir de la section Add-ins récemment utilisés de la liste déroulante complément sous l’onglet Insertion du ruban dans l’application hôte Office ou à partir de la boîte de dialogue macro complémentaire insérer.


    - L’utilisateur a ouvert un document qui contient déjà le complément.


    *Remarque*: le paramètre reason de l’écouteur d’événement initialize fonction uniquement renvoie une `InitializationReason` valeur d’énumération pour la tâche volet et le contenu des compléments. Il ne retourne pas de valeur pour les compléments Outlook.
  remarks: "**Informations de prise en charge**\n\nUn Y majuscule dans la matrice suivante indique que cette méthode est prise en charge dans l'application hôte Office correspondante. Une cellule vide indique que l'application hôte Office ne prend pas en charge cette méthode.\n\nPour plus d’informations sur les exigences des applications et le serveur hôte Office, voir [Configuration requise pour exécuter des compléments Office](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.\n\n*Hôtes pris en charge par la plateforme* <table> <tr><th> </th><th> Office pour Bureau Windows </th><th> Office Online (dans un navigateur) </th><th> Office pour iPad </th><th> OWA pour périphériques </th><th> Office pour Mac </th></tr> <tr><td><strong>Access</strong></td><td> </td><td> Y </td><td> </td><td> </td><td> </td></tr> <tr><td><strong>Excel</strong></td><td> Y </td><td> Y </td><td> Y </td><td> </td><td> </td></tr> <tr><td><strong>Outlook</strong></td><td> Y </td><td> Y </td><td> </td><td> Y </td><td> Y </td></tr> <tr><td><strong>PowerPoint</strong></td><td> Y </td><td> Y </td><td> Y </td><td> </td><td> </td></tr> <tr><td><strong>Projet</strong></td><td> Y </td><td> </td><td> </td><td> </td><td> </td></tr> <tr><td><strong>Word</strong></td><td> Y </td><td> Y </td><td> Y </td><td> </td><td> </td></tr> </table>\n#### <a name=\"examples\"></a>Exemples\n\n```javascript\n// You can use the value of the InitializationEnumeration to implement different logic for\n// when the add-in is first inserted versus when it is already part of the document.\n// The following example shows some simple logic that uses the value of the reason parameter\n// to display how the task pane or content add-in was initialized.\nOffice.initialize = function (reason) {\n    // Checks for the DOM to load using the jQuery ready function.\n    $(document).ready(function () {\n    // After the DOM is loaded, code specific to the add-in can run.\n    // Display initialization reason.\n    if (reason == \"inserted\")\n    write(\"The add-in was just inserted.\");\n\n    if (reason == \"documentOpened\")\n    write(\"The add-in is already part of the document.\");\n    });\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: initialize(reason)
  fullName: office.Office.initialize
  langs:
  - typeScript
  type: function
  syntax:
    content: 'export function initialize(reason: InitializationReason): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: reason
      description: Indique la façon dont l’application a été initialisée.
      type:
      - office.Office.InitializationReason
- uid: office.Office.onReady
  summary: Garantit que les Office APIs JavaScript sont prêts à être appelées par le complément. Si l’infrastructure n’a pas encore initialisé, le rappel ou une promesse attendra jusqu'à ce que l’hôte Office est prêt à accepter les appels d’API. Notez que même si cette API est destinée à être utilisé à l’intérieur d’un complément Office, il peut également servir à l’extérieur de la macro complémentaire. Dans ce cas, lorsque Office.js détermine qu’il s’exécute en dehors d’une application Office hôte, il appelle le rappel et résoudre promesse avec « vide » pour l’hôte et la plateforme.
  name: onReady(callback)
  fullName: office.Office.onReady
  langs:
  - typeScript
  type: function
  syntax:
    content: 'export function onReady(callback?: (info: { host: HostType, platform: PlatformType }) => any): Promise<{ host: HostType, platform: PlatformType }>;'
    return:
      type:
      - 'Promise<{ host: HostType, platform: PlatformType }>'
      description: Une promesse qui contient les informations d’hôte et de plateforme, une fois que l’initialisation est terminée.
    parameters:
    - id: callback
      description: Une méthode de rappel facultatif, qui recevra les informations d’hôte et de la plateforme. Également, au lieu d’utiliser un rappel, un complément peut simplement attendre promesse renvoyée par la fonction à résoudre.
      type:
      - '(info: { host: HostType, platform: PlatformType }) => any'
- uid: office.Office.select
  summary: Renvoie une promesse d’un objet indiqué dans l’expression. Rappel est appelée uniquement si la méthode échoue.
  remarks: >-
    **Informations de prise en charge**


    Un Y majuscule dans la matrice suivante indique que cette méthode est prise en charge dans l'application hôte Office correspondante. Une cellule vide indique que l'application hôte Office ne prend pas en charge cette méthode.


    Pour plus d’informations sur les exigences des applications et le serveur hôte Office, voir [Configuration requise pour exécuter des compléments Office](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.


    *Hôtes pris en charge par la plateforme* <table> <tr><th> </th><th> Office pour Bureau Windows </th><th> Office Online (dans un navigateur) </th><th> Office pour iPad </th></tr> <tr><td><strong>Access</strong></td><td> </td><td> Y </td><td> </td></tr> <tr><td><strong>Excel</strong></td><td> Y </td><td> Y </td><td> Y </td></tr> <tr><td><strong>Word</strong></td><td> Y </td><td> </td><td> Y </td></tr> </table>

    #### <a name="examples"></a>Exemples


    ```javascript

    // The following code example uses the select method to retrieve a binding with the id "cities" from

    // the Bindings collection, and then calls the addHandlerAsync method to add an event handler for the

    // dataChanged event of the binding.

    function addBindingDataChangedEventHandler() {
        Office.select("bindings#cities", function onError(){}).addHandlerAsync(Office.EventType.BindingDataChanged,
        function (eventArgs) {
            doSomethingWithBinding(eventArgs.binding);
        });
    }

    ```
  name: select(expression, callback)
  fullName: office.Office.select
  langs:
  - typeScript
  type: function
  syntax:
    content: 'export function select(expression: string, callback?: (result: AsyncResult<any>) => void): Binding;'
    return:
      type:
      - Binding
      description: ''
    parameters:
    - id: expression
      description: L’objet à récupérer. Exemple de « liaisons\#BindingName », récupère une promesse de liaison pour une liaison nommée « BindingName »
      type:
      - string
    - id: callback
      description: Facultatif. Une fonction qui est appelée quand le rappel retourné, dont le seul paramètre est de type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.
      type:
      - '(result: AsyncResult<any>) => void'
- uid: office.Office.useShortNamespace
  summary: Active et désactive le `Office` alias pour l’intégralité de la `Microsoft.Office.WebExtension` espace de noms.
  remarks: "**Informations de prise en charge**\n\nUn Y majuscule dans la matrice suivante indique que cette méthode est prise en charge dans l'application hôte Office correspondante. Une cellule vide indique que l'application hôte Office ne prend pas en charge cette méthode.\n\nPour plus d’informations sur les exigences des applications et le serveur hôte Office, voir [Configuration requise pour exécuter des compléments Office](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.\n\n*Hôtes pris en charge par la plateforme* <table> <tr><th> </th><th> Office pour Bureau Windows </th><th> Office Online (dans un navigateur) </th><th> Office pour iPad </th><th> OWA pour périphériques </th><th> Office pour Mac </th></tr> <tr><td><strong>Access</strong></td><td> </td><td> Y </td><td> </td><td> </td><td> </td></tr> <tr><td><strong>Excel</strong></td><td> Y </td><td> Y </td><td> Y </td><td> </td><td> </td></tr> <tr><td><strong>Outlook</strong></td><td> Y </td><td> Y </td><td> </td><td> Y </td><td> Y </td></tr> <tr><td><strong>PowerPoint</strong></td><td> Y </td><td> Y </td><td> Y </td><td> </td><td> </td></tr> <tr><td><strong>Projet</strong></td><td> Y </td><td> </td><td> </td><td> </td><td> </td></tr> <tr><td><strong>Word</strong></td><td> Y </td><td> Y </td><td> Y </td><td> </td><td> </td></tr> </table>\n#### <a name=\"examples\"></a>Exemples\n\n```javascript\nfunction startUsingShortNamespace() {\n    if (typeof Office === 'undefined') {\n        Microsoft.Office.WebExtension.useShortNamespace(true);\n    }\n    else {\n        Office.useShortNamespace(true);\n    }\n    write('Office alias is now ' + typeof Office);\n}\n\nfunction stopUsingShortNamespace() {\n    if (typeof Office === 'undefined') {\n        Microsoft.Office.WebExtension.useShortNamespace(false);\n    }\n    else {\n        Office.useShortNamespace(false);\n    }\n    write('Office alias is now ' + typeof Office);\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: useShortNamespace(useShortNamespace)
  fullName: office.Office.useShortNamespace
  langs:
  - typeScript
  type: function
  syntax:
    content: 'export function useShortNamespace(useShortNamespace: boolean): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: useShortNamespace
      description: 'True : pour utiliser l’alias de raccourci ; Renvoie la valeur false pour la désactiver. La valeur par défaut est true.'
      type:
      - boolean
references:
- uid: office.Office.ActiveView
  name: Office.ActiveView
- uid: office.Office.AddBindingFromNamedItemOptions
  name: Office.AddBindingFromNamedItemOptions
- uid: office.Office.AddBindingFromPromptOptions
  name: Office.AddBindingFromPromptOptions
- uid: office.Office.AddBindingFromSelectionOptions
  name: Office.AddBindingFromSelectionOptions
- uid: office.Office.AddinCommands.Event
  name: Office.AddinCommands.Event
- uid: office.Office.AddinCommands.Source
  name: Office.AddinCommands.Source
- uid: office.Office.AsyncContextOptions
  name: Office.AsyncContextOptions
- uid: office.Office.AsyncResult
  name: Office.AsyncResult
- uid: office.Office.AsyncResultStatus
  name: Office.AsyncResultStatus
- uid: office.Office.Binding
  name: Office.Binding
- uid: office.Office.BindingDataChangedEventArgs
  name: Office.BindingDataChangedEventArgs
- uid: office.Office.Bindings
  name: Office.Bindings
- uid: office.Office.BindingSelectionChangedEventArgs
  name: Office.BindingSelectionChangedEventArgs
- uid: office.Office.BindingType
  name: Office.BindingType
- uid: office.Office.CoercionType
  name: Office.CoercionType
- uid: office.Office.Context
  name: Office.Context
- uid: office.Office.ContextInformation
  name: Office.ContextInformation
- uid: office.Office.CustomXmlNode
  name: Office.CustomXmlNode
- uid: office.Office.CustomXMLNodeType
  name: Office.CustomXMLNodeType
- uid: office.Office.CustomXmlPart
  name: Office.CustomXmlPart
- uid: office.Office.CustomXmlParts
  name: Office.CustomXmlParts
- uid: office.Office.CustomXmlPrefixMappings
  name: Office.CustomXmlPrefixMappings
- uid: office.Office.Dialog
  name: Office.Dialog
- uid: office.Office.DialogOptions
  name: Office.DialogOptions
- uid: office.Office.Document
  name: Office.Document
- uid: office.Office.DocumentMode
  name: Office.DocumentMode
- uid: office.Office.DocumentSelectionChangedEventArgs
  name: Office.DocumentSelectionChangedEventArgs
- uid: office.Office.Error
  name: Office.Error
- uid: office.Office.EventType
  name: Office.EventType
- uid: office.Office.File
  name: Office.File
- uid: office.Office.FileProperties
  name: Office.FileProperties
- uid: office.Office.FileType
  name: Office.FileType
- uid: office.Office.FilterType
  name: Office.FilterType
- uid: office.Office.GetBindingDataOptions
  name: Office.GetBindingDataOptions
- uid: office.Office.GetFileOptions
  name: Office.GetFileOptions
- uid: office.Office.GetSelectedDataOptions
  name: Office.GetSelectedDataOptions
- uid: office.Office.GoToByIdOptions
  name: Office.GoToByIdOptions
- uid: office.Office.GoToType
  name: Office.GoToType
- uid: office.Office.HostType
  name: Office.HostType
- uid: office.Office.Index
  name: Office.Index
- uid: office.Office.InitializationReason
  name: Office.InitializationReason
- uid: office.Office.IPromiseConstructor
  name: Office.IPromiseConstructor
- uid: office.Office.MatrixBinding
  name: Office.MatrixBinding
- uid: office.Office.NodeDeletedEventArgs
  name: Office.NodeDeletedEventArgs
- uid: office.Office.NodeInsertedEventArgs
  name: Office.NodeInsertedEventArgs
- uid: office.Office.NodeReplacedEventArgs
  name: Office.NodeReplacedEventArgs
- uid: office.Office.OfficeTheme
  name: Office.OfficeTheme
- uid: office.Office.PlatformType
  name: Office.PlatformType
- uid: office.Office.ProjectProjectFields
  name: Office.ProjectProjectFields
- uid: office.Office.ProjectResourceFields
  name: Office.ProjectResourceFields
- uid: office.Office.ProjectTaskFields
  name: Office.ProjectTaskFields
- uid: office.Office.ProjectViewTypes
  name: Office.ProjectViewTypes
- uid: office.Office.RangeCoordinates
  name: Office.RangeCoordinates
- uid: office.Office.RangeFormatConfiguration
  name: Office.RangeFormatConfiguration
- uid: office.Office.RemoveHandlerOptions
  name: Office.RemoveHandlerOptions
- uid: office.Office.RequirementSetSupport
  name: Office.RequirementSetSupport
- uid: office.Office.SaveSettingsOptions
  name: Office.SaveSettingsOptions
- uid: office.Office.SelectionMode
  name: Office.SelectionMode
- uid: office.Office.SetBindingDataOptions
  name: Office.SetBindingDataOptions
- uid: office.Office.SetSelectedDataOptions
  name: Office.SetSelectedDataOptions
- uid: office.Office.Settings
  name: Office.Settings
- uid: office.Office.SettingsChangedEventArgs
  name: Office.SettingsChangedEventArgs
- uid: office.Office.Slice
  name: Office.Slice
- uid: office.Office.Table
  name: Office.Table
- uid: office.Office.TableBinding
  name: Office.TableBinding
- uid: office.Office.TableData
  name: Office.TableData
- uid: office.Office.TextBinding
  name: Office.TextBinding
- uid: office.Office.UI
  name: Office.UI
- uid: office.Office.ValueFormat
  name: Office.ValueFormat
- uid: office.OfficeExtension.ClientObject
  name: OfficeExtension.ClientObject
- uid: office.OfficeExtension.ClientRequestContext
  name: OfficeExtension.ClientRequestContext
- uid: office.OfficeExtension.ClientResult
  name: OfficeExtension.ClientResult
- uid: office.OfficeExtension.DebugInfo
  name: OfficeExtension.DebugInfo
- uid: office.OfficeExtension.EmbeddedOptions
  name: OfficeExtension.EmbeddedOptions
- uid: office.OfficeExtension.EmbeddedSession
  name: OfficeExtension.EmbeddedSession
- uid: office.OfficeExtension.Error
  name: OfficeExtension.Error
- uid: office.OfficeExtension.ErrorCodes
  name: OfficeExtension.ErrorCodes
- uid: office.OfficeExtension.EventHandlerResult
  name: OfficeExtension.EventHandlerResult
- uid: office.OfficeExtension.EventHandlers
  name: OfficeExtension.EventHandlers
- uid: office.OfficeExtension.EventInfo
  name: OfficeExtension.EventInfo
- uid: office.OfficeExtension.LoadOption
  name: OfficeExtension.LoadOption
- uid: office.OfficeExtension.RequestContextDebugInfo
  name: OfficeExtension.RequestContextDebugInfo
- uid: office.OfficeExtension.RequestUrlAndHeaderInfo
  name: OfficeExtension.RequestUrlAndHeaderInfo
- uid: office.OfficeExtension.RunOptions
  name: OfficeExtension.RunOptions
- uid: office.OfficeExtension.TrackedObjects
  name: OfficeExtension.TrackedObjects
- uid: office.OfficeExtension.UpdateOptions
  name: OfficeExtension.UpdateOptions
