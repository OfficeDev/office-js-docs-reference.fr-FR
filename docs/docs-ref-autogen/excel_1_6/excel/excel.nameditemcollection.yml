### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.NamedItemCollection:class'
    summary: "<span data-ttu-id=\"a9488-101\">Collection de tous les objets NamedItem qui font partie du classeur ou de la feuille de calcul, en fonction de la manière dont ils ont été atteints.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a9488-101\">A collection of all the NamedItem objects that are part of the workbook or worksheet, depending on how it was reached.</span></span>\n\n<span data-ttu-id=\"a9488-102\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"a9488-102\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: Excel.NamedItemCollection
    fullName: Excel.NamedItemCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.NamedItemCollection#add:member(1)'
      - 'excel!Excel.NamedItemCollection#addFormulaLocal:member(1)'
      - 'excel!Excel.NamedItemCollection#context:member'
      - 'excel!Excel.NamedItemCollection#getCount:member(1)'
      - 'excel!Excel.NamedItemCollection#getItem:member(1)'
      - 'excel!Excel.NamedItemCollection#getItemOrNullObject:member(1)'
      - 'excel!Excel.NamedItemCollection#items:member'
      - 'excel!Excel.NamedItemCollection#load:member(1)'
      - 'excel!Excel.NamedItemCollection#load:member(2)'
      - 'excel!Excel.NamedItemCollection#load:member(3)'
      - 'excel!Excel.NamedItemCollection#toJSON:member(1)'
  - uid: 'excel!Excel.NamedItemCollection#add:member(1)'
    summary: "<span data-ttu-id=\"a9488-103\">Ajoute un nouveau nom à la collection de l’étendue donnée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a9488-103\">Adds a new name to the collection of the given scope.</span></span>\n\n<span data-ttu-id=\"a9488-104\">\\[[Ensemble d’API\_: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"a9488-104\">\\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: 'add(name, reference, comment)'
    fullName: 'add(name, reference, comment)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(name: string, reference: Range | string, comment?: string): Excel.NamedItem;'
      return:
        type:
          - 'excel!Excel.NamedItem:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="a9488-105">Exemples</span><span class="sxs-lookup"><span data-stu-id="a9488-105">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const headerRange = sheet.getRange("A1:D1");

              sheet.names.add("ExpensesHeader", headerRange);
              const namedItems = sheet.names.load("name, type");

              await context.sync();
          });
          ```
      parameters:
        - id: name
          description: <span data-ttu-id="a9488-106">Nom de l’élément nommé.</span><span class="sxs-lookup"><span data-stu-id="a9488-106">The name of the named item.</span></span>
          type:
            - string
        - id: reference
          description: <span data-ttu-id="a9488-107">Formule ou plage à laquelle le nom fait référence.</span><span class="sxs-lookup"><span data-stu-id="a9488-107">The formula or the range that the name will refer to.</span></span>
          type:
            - 'excel!Excel.NamedItemCollection#add~0:complex'
        - id: comment
          description: <span data-ttu-id="a9488-108">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="a9488-108">Optional.</span></span> <span data-ttu-id="a9488-109">Commentaire associé à l’élément nommé.</span><span class="sxs-lookup"><span data-stu-id="a9488-109">The comment associated with the named item.</span></span>
          type:
            - string
  - uid: 'excel!Excel.NamedItemCollection#addFormulaLocal:member(1)'
    summary: "<span data-ttu-id=\"a9488-110\">Ajoute un nouveau nom à la collection de l’étendue donnée à l’aide des paramètres régionaux de l’utilisateur pour la formule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a9488-110\">Adds a new name to the collection of the given scope using the user's locale for the formula.</span></span>\n\n<span data-ttu-id=\"a9488-111\">\\[[Ensemble d’API\_: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"a9488-111\">\\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: 'addFormulaLocal(name, formula, comment)'
    fullName: 'addFormulaLocal(name, formula, comment)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFormulaLocal(name: string, formula: string, comment?: string): Excel.NamedItem;'
      return:
        type:
          - 'excel!Excel.NamedItem:class'
        description: ''
      parameters:
        - id: name
          description: "<span data-ttu-id=\"a9488-112\">«\_Nom\_» de l’élément nommé.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a9488-112\">The \"name\" of the named item.</span></span>"
          type:
            - string
        - id: formula
          description: <span data-ttu-id="a9488-113">Formule dans les paramètres régionaux de l’utilisateur à laquelle le nom fait référence.</span><span class="sxs-lookup"><span data-stu-id="a9488-113">The formula in the user's locale that the name will refer to.</span></span>
          type:
            - string
        - id: comment
          description: <span data-ttu-id="a9488-114">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="a9488-114">Optional.</span></span> <span data-ttu-id="a9488-115">Commentaire associé à l’élément nommé.</span><span class="sxs-lookup"><span data-stu-id="a9488-115">The comment associated with the named item.</span></span>
          type:
            - string
  - uid: 'excel!Excel.NamedItemCollection#context:member'
    summary: <span data-ttu-id="a9488-116">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="a9488-116">The request context associated with the object.</span></span> <span data-ttu-id="a9488-117">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="a9488-117">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.NamedItemCollection#getCount:member(1)'
    summary: "<span data-ttu-id=\"a9488-118\">Obtient le nombre d’éléments nommés dans la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a9488-118\">Gets the number of named items in the collection.</span></span>\n\n<span data-ttu-id=\"a9488-119\">\\[[Ensemble d’API\_: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"a9488-119\">\\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.NamedItemCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.NamedItemCollection#getItem:member(1)'
    summary: "<span data-ttu-id=\"a9488-120\">Obtient un objet NamedItem à l’aide de son nom.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a9488-120\">Gets a NamedItem object using its name.</span></span>\n\n<span data-ttu-id=\"a9488-121\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"a9488-121\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: getItem(name)
    fullName: getItem(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(name: string): Excel.NamedItem;'
      return:
        type:
          - 'excel!Excel.NamedItem:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="a9488-122">Exemples</span><span class="sxs-lookup"><span data-stu-id="a9488-122">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = 'Sheet1';
              var nameditem = ctx.workbook.names.getItem(sheetName);
              nameditem.load('type');
              return ctx.sync().then(function() {
                      console.log(nameditem.type);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: name
          description: <span data-ttu-id="a9488-123">Nom NamedItem.</span><span class="sxs-lookup"><span data-stu-id="a9488-123">Nameditem name.</span></span>
          type:
            - string
  - uid: 'excel!Excel.NamedItemCollection#getItemOrNullObject:member(1)'
    summary: "<span data-ttu-id=\"a9488-124\">Obtient un objet NamedItem à l’aide de son nom.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a9488-124\">Gets a NamedItem object using its name.</span></span> <span data-ttu-id=\"a9488-125\">Si l’objet nameditem n’existe pas, renvoie un objet null.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a9488-125\">If the nameditem object does not exist, will return a null object.</span></span>\n\n<span data-ttu-id=\"a9488-126\">\\[[Ensemble d’API\_: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"a9488-126\">\\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: getItemOrNullObject(name)
    fullName: getItemOrNullObject(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(name: string): Excel.NamedItem;'
      return:
        type:
          - 'excel!Excel.NamedItem:class'
        description: ''
      parameters:
        - id: name
          description: <span data-ttu-id="a9488-127">Nom NamedItem.</span><span class="sxs-lookup"><span data-stu-id="a9488-127">Nameditem name.</span></span>
          type:
            - string
  - uid: 'excel!Excel.NamedItemCollection#items:member'
    summary: <span data-ttu-id="a9488-128">Obtient l’élément enfant chargé dans cette collection de sites.</span><span class="sxs-lookup"><span data-stu-id="a9488-128">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.NamedItem[];'
      return:
        type:
          - 'excel!Excel.NamedItemCollection#items~0:complex'
  - uid: 'excel!Excel.NamedItemCollection#load:member(1)'
    summary: <span data-ttu-id="a9488-129">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="a9488-129">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a9488-130">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="a9488-130">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.NamedItemCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.NamedItemCollection;'
      return:
        type:
          - 'excel!Excel.NamedItemCollection:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="a9488-131">Fournit des options pour les propriétés de l’objet à charger.</span><span class="sxs-lookup"><span data-stu-id="a9488-131">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.NamedItemCollection#load~0:complex'
  - uid: 'excel!Excel.NamedItemCollection#load:member(2)'
    summary: <span data-ttu-id="a9488-132">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="a9488-132">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a9488-133">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="a9488-133">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.NamedItemCollection;'
      return:
        type:
          - 'excel!Excel.NamedItemCollection:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="a9488-134">Exemples</span><span class="sxs-lookup"><span data-stu-id="a9488-134">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var nameditems = ctx.workbook.names;
              nameditems.load('items');
              return ctx.sync().then(function() {
                  for (var i = 0; i < nameditems.items.length; i++)
                  {
                      console.log(nameditems.items[i].name);
                      console.log(nameditems.items[i].index);
                  }
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="a9488-135">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="a9488-135">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.NamedItemCollection#load:member(3)'
    summary: <span data-ttu-id="a9488-136">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="a9488-136">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a9488-137">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="a9488-137">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Excel.NamedItemCollection;'
      return:
        type:
          - 'excel!Excel.NamedItemCollection:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="a9488-138">`propertyNamesAndPaths.select`est une chaîne délimitée par des virgules qui spécifie les propriétés à `propertyNamesAndPaths.expand` charger et une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="a9488-138">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - 'excel!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.NamedItemCollection#toJSON:member(1)'
    summary: "<span data-ttu-id=\"a9488-139\">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class=\"sxs-lookup\"><span data-stu-id=\"a9488-139\">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id=\"a9488-140\">.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a9488-140\"></span></span> <span data-ttu-id=\"a9488-141\">(`JSON.stringify`</span><span class=\"sxs-lookup\"><span data-stu-id=\"a9488-141\"></span></span><!-- --><span data-ttu-id=\"a9488-142\">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que `Excel.NamedItemCollection` l’objet d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.NamedItemCollectionData`</span><span class=\"sxs-lookup\"><span data-stu-id=\"a9488-142\">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.NamedItemCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.NamedItemCollectionData`</span></span><!-- --><span data-ttu-id=\"a9488-143\">) qui contient un tableau «\_éléments\_» avec des copies superficielles de toutes les propriétés chargées des éléments de la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a9488-143\">) that contains an \"items\" array with shallow copies of any loaded properties from the collection's items.</span></span>"
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.NamedItemCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.NamedItemCollectionData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.NamedItem:class'
    name: Excel.NamedItem
  - uid: 'excel!Excel.NamedItemCollection#add~0:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.NamedItemCollection#getCount~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel!Excel.NamedItemCollection#items~0:complex'
    name: 'Excel.NamedItem[]'
    fullName: 'Excel.NamedItem[]'
    spec.typeScript:
      - uid: 'excel!Excel.NamedItem:class'
        name: Excel.NamedItem
        fullName: Excel.NamedItem
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.NamedItemCollection:class'
    name: Excel.NamedItemCollection
  - uid: 'excel!Excel.NamedItemCollection#load~0:complex'
    name: Excel.Interfaces.NamedItemCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.NamedItemCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.NamedItemCollectionLoadOptions:interface'
        name: Excel.Interfaces.NamedItemCollectionLoadOptions
        fullName: Excel.Interfaces.NamedItemCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'excel!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.Interfaces.NamedItemCollectionData:interface'
    name: Excel.Interfaces.NamedItemCollectionData