### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.BindingCollection:class'
    summary: "<span data-ttu-id=\"a5c96-101\">Représente la collection de l’ensemble des objets de liaison qui font partie du classeur.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5c96-101\">Represents the collection of all the binding objects that are part of the workbook.</span></span>\n\n<span data-ttu-id=\"a5c96-102\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5c96-102\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: Excel.BindingCollection
    fullName: Excel.BindingCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.BindingCollection#add:member(1)'
      - 'excel!Excel.BindingCollection#add:member(2)'
      - 'excel!Excel.BindingCollection#addFromNamedItem:member(1)'
      - 'excel!Excel.BindingCollection#addFromNamedItem:member(2)'
      - 'excel!Excel.BindingCollection#addFromSelection:member(1)'
      - 'excel!Excel.BindingCollection#addFromSelection:member(2)'
      - 'excel!Excel.BindingCollection#context:member'
      - 'excel!Excel.BindingCollection#count:member'
      - 'excel!Excel.BindingCollection#getCount:member(1)'
      - 'excel!Excel.BindingCollection#getItem:member(1)'
      - 'excel!Excel.BindingCollection#getItemAt:member(1)'
      - 'excel!Excel.BindingCollection#getItemOrNullObject:member(1)'
      - 'excel!Excel.BindingCollection#items:member'
      - 'excel!Excel.BindingCollection#load:member(1)'
      - 'excel!Excel.BindingCollection#load:member(2)'
      - 'excel!Excel.BindingCollection#load:member(3)'
      - 'excel!Excel.BindingCollection#toJSON:member(1)'
  - uid: 'excel!Excel.BindingCollection#add:member(1)'
    summary: "<span data-ttu-id=\"a5c96-103\">Ajoute une nouvelle liaison à une plage spécifique.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5c96-103\">Add a new binding to a particular Range.</span></span>\n\n<span data-ttu-id=\"a5c96-104\">\\[[Ensemble d’API\_: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5c96-104\">\\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: 'add(range, bindingType, id)'
    fullName: 'add(range, bindingType, id)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(range: Range | string, bindingType: Excel.BindingType, id: string): Excel.Binding;'
      return:
        type:
          - 'excel!Excel.Binding:class'
        description: ''
      parameters:
        - id: range
          description: '<span data-ttu-id="a5c96-p101">Plage à laquelle lier la liaison. Peut être un objet de plage Excel ou une chaîne. Si c’est une chaîne, elle doit contenir l’adresse complète, y compris le nom de la feuille.</span><span class="sxs-lookup"><span data-stu-id="a5c96-p101">Range to bind the binding to. May be an Excel Range object, or a string. If string, must contain the full address, including the sheet name</span></span>'
          type:
            - 'excel!Excel.BindingCollection#add~0:complex'
        - id: bindingType
          description: <span data-ttu-id="a5c96-108">Type de liaison.</span><span class="sxs-lookup"><span data-stu-id="a5c96-108">Type of binding.</span></span> <span data-ttu-id="a5c96-109">Voir Excel. BindingType.</span><span class="sxs-lookup"><span data-stu-id="a5c96-109">See Excel.BindingType.</span></span>
          type:
            - 'excel!Excel.BindingType:enum'
        - id: id
          description: <span data-ttu-id="a5c96-110">Nom de la liaison.</span><span class="sxs-lookup"><span data-stu-id="a5c96-110">Name of binding.</span></span>
          type:
            - string
  - uid: 'excel!Excel.BindingCollection#add:member(2)'
    summary: "<span data-ttu-id=\"a5c96-111\">Ajoute une nouvelle liaison à une plage spécifique.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5c96-111\">Add a new binding to a particular Range.</span></span>\n\n<span data-ttu-id=\"a5c96-112\">\\[[Ensemble d’API\_: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5c96-112\">\\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: 'add(range, bindingTypeString, id)'
    fullName: 'add(range, bindingTypeString, id)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(range: Range | string, bindingTypeString: "Range" | "Table" | "Text", id: string): Excel.Binding;'
      return:
        type:
          - 'excel!Excel.Binding:class'
        description: ''
      parameters:
        - id: range
          description: '<span data-ttu-id="a5c96-p103">Plage à laquelle lier la liaison. Peut être un objet de plage Excel ou une chaîne. Si c’est une chaîne, elle doit contenir l’adresse complète, y compris le nom de la feuille.</span><span class="sxs-lookup"><span data-stu-id="a5c96-p103">Range to bind the binding to. May be an Excel Range object, or a string. If string, must contain the full address, including the sheet name</span></span>'
          type:
            - 'excel!Excel.BindingCollection#add~1:complex'
        - id: bindingTypeString
          description: <span data-ttu-id="a5c96-116">Type de liaison.</span><span class="sxs-lookup"><span data-stu-id="a5c96-116">Type of binding.</span></span> <span data-ttu-id="a5c96-117">Voir Excel. BindingType.</span><span class="sxs-lookup"><span data-stu-id="a5c96-117">See Excel.BindingType.</span></span>
          type:
            - '"Range" | "Table" | "Text"'
        - id: id
          description: <span data-ttu-id="a5c96-118">Nom de la liaison.</span><span class="sxs-lookup"><span data-stu-id="a5c96-118">Name of binding.</span></span>
          type:
            - string
  - uid: 'excel!Excel.BindingCollection#addFromNamedItem:member(1)'
    summary: "<span data-ttu-id=\"a5c96-119\">Ajoute une nouvelle liaison basée sur un élément nommé dans le classeur.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5c96-119\">Add a new binding based on a named item in the workbook.</span></span> <span data-ttu-id=\"a5c96-120\">Si l’élément nommé fait référence à plusieurs zones, l’erreur «\_InvalidReference\_» est renvoyée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5c96-120\">If the named item references to multiple areas, the \"InvalidReference\" error will be returned.</span></span>\n\n<span data-ttu-id=\"a5c96-121\">\\[[Ensemble d’API\_: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5c96-121\">\\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: 'addFromNamedItem(name, bindingType, id)'
    fullName: 'addFromNamedItem(name, bindingType, id)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromNamedItem(name: string, bindingType: Excel.BindingType, id: string): Excel.Binding;'
      return:
        type:
          - 'excel!Excel.Binding:class'
        description: ''
      parameters:
        - id: name
          description: <span data-ttu-id="a5c96-122">Nom à partir duquel créer la liaison.</span><span class="sxs-lookup"><span data-stu-id="a5c96-122">Name from which to create binding.</span></span>
          type:
            - string
        - id: bindingType
          description: <span data-ttu-id="a5c96-123">Type de liaison.</span><span class="sxs-lookup"><span data-stu-id="a5c96-123">Type of binding.</span></span> <span data-ttu-id="a5c96-124">Voir Excel. BindingType.</span><span class="sxs-lookup"><span data-stu-id="a5c96-124">See Excel.BindingType.</span></span>
          type:
            - 'excel!Excel.BindingType:enum'
        - id: id
          description: <span data-ttu-id="a5c96-125">Nom de la liaison.</span><span class="sxs-lookup"><span data-stu-id="a5c96-125">Name of binding.</span></span>
          type:
            - string
  - uid: 'excel!Excel.BindingCollection#addFromNamedItem:member(2)'
    summary: "<span data-ttu-id=\"a5c96-126\">Ajoute une nouvelle liaison basée sur un élément nommé dans le classeur.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5c96-126\">Add a new binding based on a named item in the workbook.</span></span> <span data-ttu-id=\"a5c96-127\">Si l’élément nommé fait référence à plusieurs zones, l’erreur «\_InvalidReference\_» est renvoyée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5c96-127\">If the named item references to multiple areas, the \"InvalidReference\" error will be returned.</span></span>\n\n<span data-ttu-id=\"a5c96-128\">\\[[Ensemble d’API\_: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5c96-128\">\\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: 'addFromNamedItem(name, bindingTypeString, id)'
    fullName: 'addFromNamedItem(name, bindingTypeString, id)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromNamedItem(name: string, bindingTypeString: "Range" | "Table" | "Text", id: string): Excel.Binding;'
      return:
        type:
          - 'excel!Excel.Binding:class'
        description: ''
      parameters:
        - id: name
          description: <span data-ttu-id="a5c96-129">Nom à partir duquel créer la liaison.</span><span class="sxs-lookup"><span data-stu-id="a5c96-129">Name from which to create binding.</span></span>
          type:
            - string
        - id: bindingTypeString
          description: <span data-ttu-id="a5c96-130">Type de liaison.</span><span class="sxs-lookup"><span data-stu-id="a5c96-130">Type of binding.</span></span> <span data-ttu-id="a5c96-131">Voir Excel. BindingType.</span><span class="sxs-lookup"><span data-stu-id="a5c96-131">See Excel.BindingType.</span></span>
          type:
            - '"Range" | "Table" | "Text"'
        - id: id
          description: <span data-ttu-id="a5c96-132">Nom de la liaison.</span><span class="sxs-lookup"><span data-stu-id="a5c96-132">Name of binding.</span></span>
          type:
            - string
  - uid: 'excel!Excel.BindingCollection#addFromSelection:member(1)'
    summary: "<span data-ttu-id=\"a5c96-133\">Ajoute une nouvelle liaison basée sur la sélection en cours.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5c96-133\">Add a new binding based on the current selection.</span></span> <span data-ttu-id=\"a5c96-134\">Si la sélection comporte plusieurs zones, l’erreur «\_InvalidReference\_» est renvoyée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5c96-134\">If the selection has multiple areas, the \"InvalidReference\" error will be returned.</span></span>\n\n<span data-ttu-id=\"a5c96-135\">\\[[Ensemble d’API\_: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5c96-135\">\\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: 'addFromSelection(bindingType, id)'
    fullName: 'addFromSelection(bindingType, id)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromSelection(bindingType: Excel.BindingType, id: string): Excel.Binding;'
      return:
        type:
          - 'excel!Excel.Binding:class'
        description: ''
      parameters:
        - id: bindingType
          description: <span data-ttu-id="a5c96-136">Type de liaison.</span><span class="sxs-lookup"><span data-stu-id="a5c96-136">Type of binding.</span></span> <span data-ttu-id="a5c96-137">Voir Excel. BindingType.</span><span class="sxs-lookup"><span data-stu-id="a5c96-137">See Excel.BindingType.</span></span>
          type:
            - 'excel!Excel.BindingType:enum'
        - id: id
          description: <span data-ttu-id="a5c96-138">Nom de la liaison.</span><span class="sxs-lookup"><span data-stu-id="a5c96-138">Name of binding.</span></span>
          type:
            - string
  - uid: 'excel!Excel.BindingCollection#addFromSelection:member(2)'
    summary: "<span data-ttu-id=\"a5c96-139\">Ajoute une nouvelle liaison basée sur la sélection en cours.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5c96-139\">Add a new binding based on the current selection.</span></span> <span data-ttu-id=\"a5c96-140\">Si la sélection comporte plusieurs zones, l’erreur «\_InvalidReference\_» est renvoyée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5c96-140\">If the selection has multiple areas, the \"InvalidReference\" error will be returned.</span></span>\n\n<span data-ttu-id=\"a5c96-141\">\\[[Ensemble d’API\_: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5c96-141\">\\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: 'addFromSelection(bindingTypeString, id)'
    fullName: 'addFromSelection(bindingTypeString, id)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromSelection(bindingTypeString: "Range" | "Table" | "Text", id: string): Excel.Binding;'
      return:
        type:
          - 'excel!Excel.Binding:class'
        description: ''
      parameters:
        - id: bindingTypeString
          description: <span data-ttu-id="a5c96-142">Type de liaison.</span><span class="sxs-lookup"><span data-stu-id="a5c96-142">Type of binding.</span></span> <span data-ttu-id="a5c96-143">Voir Excel. BindingType.</span><span class="sxs-lookup"><span data-stu-id="a5c96-143">See Excel.BindingType.</span></span>
          type:
            - '"Range" | "Table" | "Text"'
        - id: id
          description: <span data-ttu-id="a5c96-144">Nom de la liaison.</span><span class="sxs-lookup"><span data-stu-id="a5c96-144">Name of binding.</span></span>
          type:
            - string
  - uid: 'excel!Excel.BindingCollection#context:member'
    summary: <span data-ttu-id="a5c96-145">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="a5c96-145">The request context associated with the object.</span></span> <span data-ttu-id="a5c96-146">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="a5c96-146">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.BindingCollection#count:member'
    summary: "<span data-ttu-id=\"a5c96-147\">Renvoie le nombre de liaisons de la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5c96-147\">Returns the number of bindings in the collection.</span></span> <span data-ttu-id=\"a5c96-148\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5c96-148\">Read-only.</span></span>\n\n<span data-ttu-id=\"a5c96-149\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5c96-149\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.BindingCollection#getCount:member(1)'
    summary: "<span data-ttu-id=\"a5c96-150\">Obtient le nombre de liaisons de la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5c96-150\">Gets the number of bindings in the collection.</span></span>\n\n<span data-ttu-id=\"a5c96-151\">\\[[Ensemble d’API\_: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5c96-151\">\\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.BindingCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.BindingCollection#getItem:member(1)'
    summary: "<span data-ttu-id=\"a5c96-152\">Obtient un objet de liaison par ID.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5c96-152\">Gets a binding object by ID.</span></span>\n\n<span data-ttu-id=\"a5c96-153\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5c96-153\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: getItem(id)
    fullName: getItem(id)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(id: string): Excel.Binding;'
      return:
        type:
          - 'excel!Excel.Binding:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="a5c96-154">Exemples</span><span class="sxs-lookup"><span data-stu-id="a5c96-154">Examples</span></span>

          ```javascript
          // Create a table binding to monitor data changes in the table. 
          // When data is changed, the background color of the table will be changed to orange.
          function addEventHandler() {
              // Create Table1
              Excel.run(function (ctx) { 
                  ctx.workbook.tables.add("Sheet1!A1:C4", true);
                  return ctx.sync().then(function() {
                          console.log("My Diet Data Inserted!");
                  })
                  .catch(function (error) {
                          console.log(JSON.stringify(error));
                  });
              });
              //Create a new table binding for Table1
              Office.context.document.bindings.addFromNamedItemAsync(
                  "Table1", Office.CoercionType.Table, { id: "myBinding" }, function (asyncResult) {
                  if (asyncResult.status == "failed") {
                      console.log("Action failed with error: " + asyncResult.error.message);
                  }
                  else {
                      // If succeeded, then add event handler to the table binding.
                      Office.select("bindings#myBinding").addHandlerAsync(
                          Office.EventType.BindingDataChanged, onBindingDataChanged);
                  }
              });
          }
              
          // when data in the table is changed, this event will be triggered.
          function onBindingDataChanged(eventArgs) {
              Excel.run(function (ctx) { 
                  // highlight the table in orange to indicate data has been changed.
                  ctx.workbook.bindings.getItem(eventArgs.binding.id).getTable().getDataBodyRange().format.fill.color = "Orange";
                  return ctx.sync().then(function() {
                          console.log("The value in this table got changed!");
                  })
                  .catch(function (error) {
                          console.log(JSON.stringify(error));
                  });
              });
          }
          ```
      parameters:
        - id: id
          description: <span data-ttu-id="a5c96-155">ID de l’objet de liaison à récupérer.</span><span class="sxs-lookup"><span data-stu-id="a5c96-155">Id of the binding object to be retrieved.</span></span>
          type:
            - string
  - uid: 'excel!Excel.BindingCollection#getItemAt:member(1)'
    summary: "<span data-ttu-id=\"a5c96-156\">Obtient un objet de liaison en fonction de sa position dans le tableau d’éléments.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5c96-156\">Gets a binding object based on its position in the items array.</span></span>\n\n<span data-ttu-id=\"a5c96-157\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5c96-157\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.Binding;'
      return:
        type:
          - 'excel!Excel.Binding:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="a5c96-158">Exemples</span><span class="sxs-lookup"><span data-stu-id="a5c96-158">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var lastPosition = ctx.workbook.bindings.count - 1;
              var binding = ctx.workbook.bindings.getItemAt(lastPosition);
              binding.load('type')
              return ctx.sync().then(function() {
                      console.log(binding.type); 
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: <span data-ttu-id="a5c96-159">Valeur d’indice de l’objet à récupérer.</span><span class="sxs-lookup"><span data-stu-id="a5c96-159">Index value of the object to be retrieved.</span></span> <span data-ttu-id="a5c96-160">Avec indice zéro.</span><span class="sxs-lookup"><span data-stu-id="a5c96-160">Zero-indexed.</span></span>
          type:
            - number
  - uid: 'excel!Excel.BindingCollection#getItemOrNullObject:member(1)'
    summary: "<span data-ttu-id=\"a5c96-161\">Obtient un objet de liaison par ID.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5c96-161\">Gets a binding object by ID.</span></span> <span data-ttu-id=\"a5c96-162\">Si l’objet de liaison n’existe pas, renvoie un objet null.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5c96-162\">If the binding object does not exist, will return a null object.</span></span>\n\n<span data-ttu-id=\"a5c96-163\">\\[[Ensemble d’API\_: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5c96-163\">\\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: getItemOrNullObject(id)
    fullName: getItemOrNullObject(id)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(id: string): Excel.Binding;'
      return:
        type:
          - 'excel!Excel.Binding:class'
        description: ''
      parameters:
        - id: id
          description: <span data-ttu-id="a5c96-164">ID de l’objet de liaison à récupérer.</span><span class="sxs-lookup"><span data-stu-id="a5c96-164">Id of the binding object to be retrieved.</span></span>
          type:
            - string
  - uid: 'excel!Excel.BindingCollection#items:member'
    summary: <span data-ttu-id="a5c96-165">Obtient l’élément enfant chargé dans cette collection de sites.</span><span class="sxs-lookup"><span data-stu-id="a5c96-165">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Binding[];'
      return:
        type:
          - 'excel!Excel.BindingCollection#items~0:complex'
  - uid: 'excel!Excel.BindingCollection#load:member(1)'
    summary: <span data-ttu-id="a5c96-166">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="a5c96-166">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a5c96-167">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="a5c96-167">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.BindingCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.BindingCollection;'
      return:
        type:
          - 'excel!Excel.BindingCollection:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="a5c96-168">Fournit des options pour les propriétés de l’objet à charger.</span><span class="sxs-lookup"><span data-stu-id="a5c96-168">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.BindingCollection#load~0:complex'
  - uid: 'excel!Excel.BindingCollection#load:member(2)'
    summary: <span data-ttu-id="a5c96-169">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="a5c96-169">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a5c96-170">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="a5c96-170">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.BindingCollection;'
      return:
        type:
          - 'excel!Excel.BindingCollection:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="a5c96-171">Exemples</span><span class="sxs-lookup"><span data-stu-id="a5c96-171">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var bindings = ctx.workbook.bindings;
              bindings.load('items');
              return ctx.sync().then(function() {
                  for (var i = 0; i < bindings.items.length; i++)
                  {
                      console.log(bindings.items[i].id);
                  }
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Get the number of bindings
          Excel.run(function (ctx) { 
              var bindings = ctx.workbook.bindings;
              bindings.load('count');
              return ctx.sync().then(function() {
                  console.log("Bindings: Count= " + bindings.count);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="a5c96-172">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="a5c96-172">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.BindingCollection#load:member(3)'
    summary: <span data-ttu-id="a5c96-173">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="a5c96-173">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a5c96-174">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="a5c96-174">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Excel.BindingCollection;'
      return:
        type:
          - 'excel!Excel.BindingCollection:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="a5c96-175">`propertyNamesAndPaths.select`est une chaîne délimitée par des virgules qui spécifie les propriétés à `propertyNamesAndPaths.expand` charger et une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="a5c96-175">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - 'excel!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.BindingCollection#toJSON:member(1)'
    summary: "<span data-ttu-id=\"a5c96-176\">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5c96-176\">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id=\"a5c96-177\">.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5c96-177\"></span></span> <span data-ttu-id=\"a5c96-178\">(`JSON.stringify`</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5c96-178\"></span></span><!-- --><span data-ttu-id=\"a5c96-179\">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que `Excel.BindingCollection` l’objet d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.BindingCollectionData`</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5c96-179\">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.BindingCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.BindingCollectionData`</span></span><!-- --><span data-ttu-id=\"a5c96-180\">) qui contient un tableau «\_éléments\_» avec des copies superficielles de toutes les propriétés chargées des éléments de la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5c96-180\">) that contains an \"items\" array with shallow copies of any loaded properties from the collection's items.</span></span>"
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.BindingCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.BindingCollectionData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.Binding:class'
    name: Excel.Binding
  - uid: 'excel!Excel.BindingCollection#add~0:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.BindingType:enum'
    name: Excel.BindingType
  - uid: 'excel!Excel.BindingCollection#add~1:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.BindingCollection#getCount~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel!Excel.BindingCollection#items~0:complex'
    name: 'Excel.Binding[]'
    fullName: 'Excel.Binding[]'
    spec.typeScript:
      - uid: 'excel!Excel.Binding:class'
        name: Excel.Binding
        fullName: Excel.Binding
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.BindingCollection:class'
    name: Excel.BindingCollection
  - uid: 'excel!Excel.BindingCollection#load~0:complex'
    name: Excel.Interfaces.BindingCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.BindingCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.BindingCollectionLoadOptions:interface'
        name: Excel.Interfaces.BindingCollectionLoadOptions
        fullName: Excel.Interfaces.BindingCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'excel!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.Interfaces.BindingCollectionData:interface'
    name: Excel.Interfaces.BindingCollectionData