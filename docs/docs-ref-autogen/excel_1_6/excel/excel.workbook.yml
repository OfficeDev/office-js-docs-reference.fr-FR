### YamlMime:UniversalReference
items:
  - uid: excel.Excel.Workbook
    summary: |-
      <span data-ttu-id="fe109-101">Le classeur est l’objet de niveau supérieur qui contient des objets connexes tels que des feuilles de calcul, des tableaux, des plages, etc.</span><span class="sxs-lookup"><span data-stu-id="fe109-101">Workbook is the top level object which contains related workbook objects such as worksheets, tables, ranges, etc.</span></span>

      <span data-ttu-id="fe109-102">\[[Ensemble d’API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fe109-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.Workbook
    fullName: Excel.Workbook
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.Workbook.application
      - excel.Excel.Workbook.bindings
      - excel.Excel.Workbook.context
      - excel.Excel.Workbook.customXmlParts
      - excel.Excel.Workbook.functions
      - excel.Excel.Workbook.getSelectedRange
      - excel.Excel.Workbook.load
      - excel.Excel.Workbook.load_1
      - excel.Excel.Workbook.load_2
      - excel.Excel.Workbook.names
      - excel.Excel.Workbook.onSelectionChanged
      - excel.Excel.Workbook.pivotTables
      - excel.Excel.Workbook.set
      - excel.Excel.Workbook.set_1
      - excel.Excel.Workbook.settings
      - excel.Excel.Workbook.tables
      - excel.Excel.Workbook.toJSON
      - excel.Excel.Workbook.worksheets
  - uid: excel.Excel.Workbook.application
    summary: |-
      <span data-ttu-id="fe109-103">Représente l’instance de l’application Excel qui contient ce classeur.</span><span class="sxs-lookup"><span data-stu-id="fe109-103">Represents the Excel application instance that contains this workbook.</span></span> <span data-ttu-id="fe109-104">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="fe109-104">Read-only.</span></span>

      <span data-ttu-id="fe109-105">\[[Ensemble d’API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fe109-105">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: application
    fullName: application
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly application: Excel.Application;'
      return:
        type:
          - excel.Excel.Application
  - uid: excel.Excel.Workbook.bindings
    summary: |-
      <span data-ttu-id="fe109-106">Représente une collection de liaisons appartenant au classeur.</span><span class="sxs-lookup"><span data-stu-id="fe109-106">Represents a collection of bindings that are part of the workbook.</span></span> <span data-ttu-id="fe109-107">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="fe109-107">Read-only.</span></span>

      <span data-ttu-id="fe109-108">\[[Ensemble d’API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fe109-108">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: bindings
    fullName: bindings
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly bindings: Excel.BindingCollection;'
      return:
        type:
          - excel.Excel.BindingCollection
  - uid: excel.Excel.Workbook.context
    summary: <span data-ttu-id="fe109-109">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="fe109-109">The request context associated with the object.</span></span> <span data-ttu-id="fe109-110">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="fe109-110">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.Workbook.customXmlParts
    summary: |-
      <span data-ttu-id="fe109-111">Représente la collection de parties XML personnalisées contenues dans ce classeur.</span><span class="sxs-lookup"><span data-stu-id="fe109-111">Represents the collection of custom XML parts contained by this workbook.</span></span> <span data-ttu-id="fe109-112">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="fe109-112">Read-only.</span></span>

      <span data-ttu-id="fe109-113">\[[Ensemble d’API: ExcelApi 1,5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fe109-113">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: customXmlParts
    fullName: customXmlParts
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly customXmlParts: Excel.CustomXmlPartCollection;'
      return:
        type:
          - excel.Excel.CustomXmlPartCollection
  - uid: excel.Excel.Workbook.functions
    summary: |-
      <span data-ttu-id="fe109-114">Représente une collection de fonctions de feuille de calcul qui peuvent être utilisées pour le calcul.</span><span class="sxs-lookup"><span data-stu-id="fe109-114">Represents a collection of worksheet functions that can be used for computation.</span></span> <span data-ttu-id="fe109-115">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="fe109-115">Read-only.</span></span>

      <span data-ttu-id="fe109-116">\[[Ensemble d’API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fe109-116">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: functions
    fullName: functions
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly functions: Excel.Functions;'
      return:
        type:
          - excel.Excel.Functions
  - uid: excel.Excel.Workbook.getSelectedRange
    summary: |-
      <span data-ttu-id="fe109-117">Obtient la plage unique actuellement sélectionnée du classeur.</span><span class="sxs-lookup"><span data-stu-id="fe109-117">Gets the currently selected single range from the workbook.</span></span> <span data-ttu-id="fe109-118">Si plusieurs plages sont sélectionnées, cette méthode génère une erreur.</span><span class="sxs-lookup"><span data-stu-id="fe109-118">If there are multiple ranges selected, this method will throw an error.</span></span>

      <span data-ttu-id="fe109-119">\[[Ensemble d’API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fe109-119">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getSelectedRange()
    fullName: getSelectedRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="fe109-120">Exemples</span><span class="sxs-lookup"><span data-stu-id="fe109-120">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var selectedRange = ctx.workbook.getSelectedRange();
              selectedRange.load('address');
              return ctx.sync().then(function() {
                      console.log(selectedRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.Workbook.load
    summary: "<span data-ttu-id=\"fe109-121\">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe109-121\">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id=\"fe109-122\">Vous devez appeler «\_context.sync()\_» avant de lire les propriétés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe109-122\">You must call \"context.sync()\" before reading the properties.</span></span>"
    remarks: |-
      <span data-ttu-id="fe109-123">En plus de cette signature, cette méthode possède les signatures suivantes:</span><span class="sxs-lookup"><span data-stu-id="fe109-123">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="fe109-124">`load(option?: string | string[]): Excel.Workbook`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="fe109-124">`load(option?: string | string[]): Excel.Workbook` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="fe109-125">`load(option?: { select?: string; expand?: string; }): Excel.Workbook`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="fe109-125">`load(option?: { select?: string; expand?: string; }): Excel.Workbook` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="fe109-126">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Workbook`-Uniquement disponible sur les types de collection.</span><span class="sxs-lookup"><span data-stu-id="fe109-126">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Workbook` - Only available on collection types.</span></span> <span data-ttu-id="fe109-127">Elle est similaire à la signature précédente.</span><span class="sxs-lookup"><span data-stu-id="fe109-127">It is similar to the preceding signature.</span></span> <span data-ttu-id="fe109-128">Option. Top indique le nombre maximal d’éléments de collection qui peuvent être inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="fe109-128">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="fe109-129">Option. Skip indique le nombre d’éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="fe109-129">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="fe109-130">Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d’éléments.</span><span class="sxs-lookup"><span data-stu-id="fe109-130">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.WorkbookLoadOptions): Excel.Workbook;'
      return:
        type:
          - excel.Excel.Workbook
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.WorkbookLoadOptions
  - uid: excel.Excel.Workbook.load_1
    summary: <span data-ttu-id="fe109-131">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="fe109-131">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="fe109-132">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="fe109-132">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Workbook;'
      return:
        type:
          - excel.Excel.Workbook
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="fe109-133">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="fe109-133">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.Workbook.load_2
    summary: <span data-ttu-id="fe109-134">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="fe109-134">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="fe109-135">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="fe109-135">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Workbook;'
      return:
        type:
          - excel.Excel.Workbook
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="fe109-136">Où propertyNamesAndPaths. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et propertyNamesAndPaths. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="fe109-136">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.Workbook.names
    summary: |-
      <span data-ttu-id="fe109-137">Représente une collection d’éléments nommés portant sur le classeur (appelés plages et constantes).</span><span class="sxs-lookup"><span data-stu-id="fe109-137">Represents a collection of workbook scoped named items (named ranges and constants).</span></span> <span data-ttu-id="fe109-138">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="fe109-138">Read-only.</span></span>

      <span data-ttu-id="fe109-139">\[[Ensemble d’API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fe109-139">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: names
    fullName: names
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly names: Excel.NamedItemCollection;'
      return:
        type:
          - excel.Excel.NamedItemCollection
  - uid: excel.Excel.Workbook.onSelectionChanged
    summary: |-
      <span data-ttu-id="fe109-140">Se produit quand la sélection change dans le document.</span><span class="sxs-lookup"><span data-stu-id="fe109-140">Occurs when the selection in the document is changed.</span></span>

      <span data-ttu-id="fe109-141">\[[Ensemble d’API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fe109-141">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onSelectionChanged
    fullName: onSelectionChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Excel.SelectionChangedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.SelectionChangedEventArgs>
  - uid: excel.Excel.Workbook.pivotTables
    summary: |-
      <span data-ttu-id="fe109-142">Représente une collection de tableaux croisés dynamiques associés au classeur.</span><span class="sxs-lookup"><span data-stu-id="fe109-142">Represents a collection of PivotTables associated with the workbook.</span></span> <span data-ttu-id="fe109-143">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="fe109-143">Read-only.</span></span>

      <span data-ttu-id="fe109-144">\[[Ensemble d’API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fe109-144">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: pivotTables
    fullName: pivotTables
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly pivotTables: Excel.PivotTableCollection;'
      return:
        type:
          - excel.Excel.PivotTableCollection
  - uid: excel.Excel.Workbook.set
    summary: '<span data-ttu-id="fe109-145">Définit plusieurs propriétés d’un objet en même temps.</span><span class="sxs-lookup"><span data-stu-id="fe109-145">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="fe109-146">Vous pouvez transmettre un objet plain avec les propriétés appropriées, ou un autre objet API du même type.</span><span class="sxs-lookup"><span data-stu-id="fe109-146">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="fe109-147">Cette méthode est dotée de la signature supplémentaire suivante:</span><span class="sxs-lookup"><span data-stu-id="fe109-147">This method has the following additional signature:</span></span>

      `set(properties: Excel.Workbook): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.WorkbookUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="fe109-148">Objet JavaScript avec des propriétés qui sont structurées isomorphically vers les propriétés de l’objet sur lequel la méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="fe109-148">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.WorkbookUpdateData
        - id: options
          description: <span data-ttu-id="fe109-149">Fournit une option permettant de supprimer les erreurs si l’objet Properties tente de définir des propriétés en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="fe109-149">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.Workbook.set_1
    summary: '<span data-ttu-id="fe109-150">Définit plusieurs propriétés de l’objet en même temps, en fonction d’un objet chargé existant.</span><span class="sxs-lookup"><span data-stu-id="fe109-150">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Workbook): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.Workbook
  - uid: excel.Excel.Workbook.settings
    summary: |-
      <span data-ttu-id="fe109-151">Représente une collection d’objets Settings associés au classeur.</span><span class="sxs-lookup"><span data-stu-id="fe109-151">Represents a collection of Settings associated with the workbook.</span></span> <span data-ttu-id="fe109-152">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="fe109-152">Read-only.</span></span>

      <span data-ttu-id="fe109-153">\[[Ensemble d’API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fe109-153">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: settings
    fullName: settings
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly settings: Excel.SettingCollection;'
      return:
        type:
          - excel.Excel.SettingCollection
  - uid: excel.Excel.Workbook.tables
    summary: |-
      <span data-ttu-id="fe109-154">Représente une collection de tableaux associés au classeur.</span><span class="sxs-lookup"><span data-stu-id="fe109-154">Represents a collection of tables associated with the workbook.</span></span> <span data-ttu-id="fe109-155">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="fe109-155">Read-only.</span></span>

      <span data-ttu-id="fe109-156">\[[Ensemble d’API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fe109-156">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: tables
    fullName: tables
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly tables: Excel.TableCollection;'
      return:
        type:
          - excel.Excel.TableCollection
  - uid: excel.Excel.Workbook.toJSON
    summary: '<span data-ttu-id="fe109-157">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="fe109-157">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="fe109-158">.</span><span class="sxs-lookup"><span data-stu-id="fe109-158"></span></span> <span data-ttu-id="fe109-159">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="fe109-159"></span></span><!-- --><span data-ttu-id="fe109-160">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que l’objet Excel. Workbook d’origine est un objet `toJSON` API, la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.WorkbookData`</span><span class="sxs-lookup"><span data-stu-id="fe109-160">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Workbook object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.WorkbookData`</span></span><!-- --><span data-ttu-id="fe109-161">) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l’objet d’origine.</span><span class="sxs-lookup"><span data-stu-id="fe109-161">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.WorkbookData;'
      return:
        type:
          - excel.Excel.Interfaces.WorkbookData
        description: ''
  - uid: excel.Excel.Workbook.worksheets
    summary: |-
      <span data-ttu-id="fe109-162">Représente une collection de feuilles de calcul associées au classeur.</span><span class="sxs-lookup"><span data-stu-id="fe109-162">Represents a collection of worksheets associated with the workbook.</span></span> <span data-ttu-id="fe109-163">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="fe109-163">Read-only.</span></span>

      <span data-ttu-id="fe109-164">\[[Ensemble d’API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fe109-164">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: worksheets
    fullName: worksheets
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheets: Excel.WorksheetCollection;'
      return:
        type:
          - excel.Excel.WorksheetCollection