### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.Setting:class'
    summary: "<span data-ttu-id=\"86d74-101\">Le paramètre représente une paire clé-valeur d’un paramètre conservé dans le document (par fichier et par complément).</span><span class=\"sxs-lookup\"><span data-stu-id=\"86d74-101\">Setting represents a key-value pair of a setting persisted to the document (per file per add-in).</span></span> <span data-ttu-id=\"86d74-102\">Cette paire clé-valeur personnalisée peut être utilisée pour stocker les informations d’État ou de cycle de vie requises par le complément de contenu ou de volet de tâches.</span><span class=\"sxs-lookup\"><span data-stu-id=\"86d74-102\">These custom key-value pair can be used to store state or lifecycle information needed by the content or task-pane add-in.</span></span> <span data-ttu-id=\"86d74-103\">Notez que les paramètres sont persistants dans le document et que, par conséquent, il ne s’agit pas d’un emplacement pour stocker des informations sensibles ou protégées, telles que les informations utilisateur et le mot de passe.</span><span class=\"sxs-lookup\"><span data-stu-id=\"86d74-103\">Note that settings are persisted in the document and hence it is not a place to store any sensitive or protected information such as user information and password.</span></span>\n\n<span data-ttu-id=\"86d74-104\">\\[[Ensemble d’API\_: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"86d74-104\">\\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: Excel.Setting
    fullName: Excel.Setting
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.Setting#context:member'
      - 'excel!Excel.Setting#delete:member(1)'
      - 'excel!Excel.Setting#key:member'
      - 'excel!Excel.Setting#load:member(1)'
      - 'excel!Excel.Setting#load:member(2)'
      - 'excel!Excel.Setting#load:member(3)'
      - 'excel!Excel.Setting#set:member(1)'
      - 'excel!Excel.Setting#set:member(2)'
      - 'excel!Excel.Setting#toJSON:member(1)'
      - 'excel!Excel.Setting#value:member'
  - uid: 'excel!Excel.Setting#context:member'
    summary: <span data-ttu-id="86d74-105">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="86d74-105">The request context associated with the object.</span></span> <span data-ttu-id="86d74-106">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="86d74-106">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.Setting#delete:member(1)'
    summary: "<span data-ttu-id=\"86d74-107\">Supprime le paramètre.</span><span class=\"sxs-lookup\"><span data-stu-id=\"86d74-107\">Deletes the setting.</span></span>\n\n<span data-ttu-id=\"86d74-108\">\\[[Ensemble d’API\_: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"86d74-108\">\\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="86d74-109">Exemples</span><span class="sxs-lookup"><span data-stu-id="86d74-109">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const settings = context.workbook.settings;
              let needsReview = settings.getItem("NeedsReview");
              needsReview.delete();
              needsReview = settings.getItemOrNullObject("NeedsReview");

              await context.sync();

              if (needsReview.isNullObject) {
                  console.log("The setting has been deleted");
              } else {
                  console.log("The setting was not deleted");
              }

              await context.sync();
          });
          ```
  - uid: 'excel!Excel.Setting#key:member'
    summary: "<span data-ttu-id=\"86d74-110\">Renvoie la clé qui représente l’id du paramètre.</span><span class=\"sxs-lookup\"><span data-stu-id=\"86d74-110\">Returns the key that represents the id of the Setting.</span></span> <span data-ttu-id=\"86d74-111\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"86d74-111\">Read-only.</span></span>\n\n<span data-ttu-id=\"86d74-112\">\\[[Ensemble d’API\_: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"86d74-112\">\\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: key
    fullName: key
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly key: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Setting#load:member(1)'
    summary: <span data-ttu-id="86d74-113">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="86d74-113">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="86d74-114">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="86d74-114">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.SettingLoadOptions): Excel.Setting;'
      return:
        type:
          - 'excel!Excel.Setting:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="86d74-115">Fournit des options pour les propriétés de l’objet à charger.</span><span class="sxs-lookup"><span data-stu-id="86d74-115">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.Interfaces.SettingLoadOptions:interface'
  - uid: 'excel!Excel.Setting#load:member(2)'
    summary: <span data-ttu-id="86d74-116">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="86d74-116">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="86d74-117">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="86d74-117">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Setting;'
      return:
        type:
          - 'excel!Excel.Setting:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="86d74-118">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="86d74-118">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.Setting#load:member(3)'
    summary: <span data-ttu-id="86d74-119">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="86d74-119">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="86d74-120">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="86d74-120">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.Setting;
      return:
        type:
          - 'excel!Excel.Setting:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="86d74-121">`propertyNamesAndPaths.select`est une chaîne délimitée par des virgules qui spécifie les propriétés à `propertyNamesAndPaths.expand` charger et une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="86d74-121">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.Setting#set:member(1)'
    summary: '<span data-ttu-id="86d74-122">Définit plusieurs propriétés d’un objet en même temps.</span><span class="sxs-lookup"><span data-stu-id="86d74-122">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="86d74-123">Vous pouvez transmettre un objet plain avec les propriétés appropriées, ou un autre objet API du même type.</span><span class="sxs-lookup"><span data-stu-id="86d74-123">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: "<span data-ttu-id=\"86d74-124\">Cette méthode est dotée de la signature supplémentaire suivante\_:</span><span class=\"sxs-lookup\"><span data-stu-id=\"86d74-124\">This method has the following additional signature:</span></span>\n\n`set(properties: Excel.Setting): void`"
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.SettingUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="86d74-125">Objet JavaScript avec des propriétés qui sont structurées isomorphically vers les propriétés de l’objet sur lequel la méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="86d74-125">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'excel!Excel.Interfaces.SettingUpdateData:interface'
        - id: options
          description: <span data-ttu-id="86d74-126">Fournit une option permettant de supprimer les erreurs si l’objet Properties tente de définir des propriétés en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="86d74-126">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.Setting#set:member(2)'
    summary: '<span data-ttu-id="86d74-127">Définit plusieurs propriétés de l’objet en même temps, en fonction d’un objet chargé existant.</span><span class="sxs-lookup"><span data-stu-id="86d74-127">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Setting): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.Setting:class'
  - uid: 'excel!Excel.Setting#toJSON:member(1)'
    summary: '<span data-ttu-id="86d74-128">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="86d74-128">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="86d74-129">.</span><span class="sxs-lookup"><span data-stu-id="86d74-129"></span></span> <span data-ttu-id="86d74-130">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="86d74-130"></span></span><!-- --><span data-ttu-id="86d74-131">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que l’objet Excel. Setting est un objet d’API `toJSON` , la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.SettingData`</span><span class="sxs-lookup"><span data-stu-id="86d74-131">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Setting object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.SettingData`</span></span><!-- --><span data-ttu-id="86d74-132">) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l’objet d’origine.</span><span class="sxs-lookup"><span data-stu-id="86d74-132">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.SettingData;'
      return:
        type:
          - 'excel!Excel.Interfaces.SettingData:interface'
        description: ''
  - uid: 'excel!Excel.Setting#value:member'
    summary: "<span data-ttu-id=\"86d74-133\">Représente la valeur stockée pour ce paramètre.</span><span class=\"sxs-lookup\"><span data-stu-id=\"86d74-133\">Represents the value stored for this setting.</span></span>\n\n<span data-ttu-id=\"86d74-134\">\\[[Ensemble d’API\_: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"86d74-134\">\\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: value
    fullName: value
    langs:
      - typeScript
    type: property
    syntax:
      content: 'value: any;'
      return:
        type:
          - any
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.Setting:class'
    name: Excel.Setting
  - uid: 'excel!Excel.Interfaces.SettingLoadOptions:interface'
    name: Excel.Interfaces.SettingLoadOptions
  - uid: 'excel!Excel.Interfaces.SettingUpdateData:interface'
    name: Interfaces.SettingUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Interfaces.SettingData:interface'
    name: Excel.Interfaces.SettingData