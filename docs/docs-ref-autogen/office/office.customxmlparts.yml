### YamlMime:UniversalReference
ms.openlocfilehash: 97693514969a93ac094cb1917e2a95e048161f36
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 02/13/2019
ms.locfileid: "29979301"
items:
- uid: office.Office.CustomXmlParts
  summary: <span data-ttu-id="5669d-101">Représente une collection d’objets CustomXmlPart.</span><span class="sxs-lookup"><span data-stu-id="5669d-101">Represents a collection of CustomXmlPart objects.</span></span>
  remarks: >-
    <table><tr><td><span data-ttu-id="5669d-102">Ensembles de ressources</span><span class="sxs-lookup"><span data-stu-id="5669d-102">Requirement Sets</span></span></td><td><span data-ttu-id="5669d-103">CustomXmlParts</span><span class="sxs-lookup"><span data-stu-id="5669d-103">CustomXmlParts</span></span></td></tr></table>


    <span data-ttu-id="5669d-104">**Informations de prise en charge**</span><span class="sxs-lookup"><span data-stu-id="5669d-104">**Support details**</span></span>


    <span data-ttu-id="5669d-105">MAJUSCULE Y dans le tableau suivant indique que cette interface est prise en charge dans l’application hôte Office correspondante.</span><span class="sxs-lookup"><span data-stu-id="5669d-105">A capital Y in the following matrix indicates that this interface is supported in the corresponding Office host application.</span></span> <span data-ttu-id="5669d-106">Une cellule vide indique que l’application hôte Office ne prennent en charge cette interface.</span><span class="sxs-lookup"><span data-stu-id="5669d-106">An empty cell indicates that the Office host application doesn't support this interface.</span></span>


    <span data-ttu-id="5669d-107">Pour plus d’informations sur les exigences des applications et le serveur hôte Office, voir [Configuration requise pour exécuter des compléments Office](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="5669d-107">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="5669d-108">*Hôtes pris en charge par la plateforme*</span><span class="sxs-lookup"><span data-stu-id="5669d-108">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="5669d-109">Office pour Bureau Windows</span><span class="sxs-lookup"><span data-stu-id="5669d-109">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="5669d-110">Office Online (dans un navigateur)</span><span class="sxs-lookup"><span data-stu-id="5669d-110">Office Online (in browser)</span></span> </th><th> <span data-ttu-id="5669d-111">Office for iPad</span><span class="sxs-lookup"><span data-stu-id="5669d-111">Office for iPad</span></span> </th><th> <span data-ttu-id="5669d-112">Office for Mac</span><span class="sxs-lookup"><span data-stu-id="5669d-112">Office for Mac</span></span> </th></tr> <tr><td><span data-ttu-id="5669d-113"><strong>Word</strong></span><span class="sxs-lookup"><span data-stu-id="5669d-113"><strong> Word </strong></span></span></td><td> <span data-ttu-id="5669d-114">v</span><span class="sxs-lookup"><span data-stu-id="5669d-114">Y</span></span> </td><td> </td><td> <span data-ttu-id="5669d-115">v</span><span class="sxs-lookup"><span data-stu-id="5669d-115">Y</span></span> </td><td> <span data-ttu-id="5669d-116">v</span><span class="sxs-lookup"><span data-stu-id="5669d-116">Y</span></span> </td></tr> </table>
  name: Office.CustomXmlParts
  fullName: Office.CustomXmlParts
  langs:
  - typeScript
  type: interface
  package: office
  children:
  - office.Office.CustomXmlParts.addAsync
  - office.Office.CustomXmlParts.addAsync_1
  - office.Office.CustomXmlParts.getByIdAsync
  - office.Office.CustomXmlParts.getByIdAsync_1
  - office.Office.CustomXmlParts.getByNamespaceAsync
  - office.Office.CustomXmlParts.getByNamespaceAsync_1
- uid: office.Office.CustomXmlParts.addAsync
  summary: <span data-ttu-id="5669d-117">Ajoute de manière asynchrone une nouvelle partie XML personnalisée à un fichier.</span><span class="sxs-lookup"><span data-stu-id="5669d-117">Asynchronously adds a new custom XML part to a file.</span></span>
  name: addAsync(xml, options, callback)
  fullName: addAsync(xml, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addAsync(xml: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<CustomXmlPart>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: xml
      description: <span data-ttu-id="5669d-118">Le code XML à ajouter à la partie XML personnalisée nouvellement créée.</span><span class="sxs-lookup"><span data-stu-id="5669d-118">The XML to add to the newly created custom XML part.</span></span>
      type:
      - string
    - id: options
      description: <span data-ttu-id="5669d-119">Fournit une option de conservation des données de contexte d’un type quelconque, inchangé, pour une utilisation dans un rappel.</span><span class="sxs-lookup"><span data-stu-id="5669d-119">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="5669d-120">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="5669d-120">Optional.</span></span> <span data-ttu-id="5669d-121">Une fonction qui est appelée quand le rappel retourné, dont le seul paramètre est de type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="5669d-121">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="5669d-122">Le `value` propriété du résultat est l’objet CustomXmlPart nouvellement créé.</span><span class="sxs-lookup"><span data-stu-id="5669d-122">The `value` property of the result is the newly created CustomXmlPart object.</span></span>
      type:
      - '(result: AsyncResult<CustomXmlPart>) => void'
- uid: office.Office.CustomXmlParts.addAsync_1
  summary: <span data-ttu-id="5669d-123">Ajoute de manière asynchrone une nouvelle partie XML personnalisée à un fichier.</span><span class="sxs-lookup"><span data-stu-id="5669d-123">Asynchronously adds a new custom XML part to a file.</span></span>
  name: addAsync(xml, callback)
  fullName: addAsync(xml, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addAsync(xml: string, callback?: (result: AsyncResult<CustomXmlPart>) => void): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"5669d-124\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"5669d-124\">Examples</span></span>\n\n```javascript\nfunction addXMLPart() {\n    Office.context.document.customXmlParts.addAsync(\n        '<root categoryId=\"1\" xmlns=\"http://tempuri.org\"><item name=\"Cheap Item\" price=\"$193.95\"/><item name=\"Expensive Item\" price=\"$931.88\"/></root>',\n        function (result) {});\n}\n\nfunction addXMLPartandHandler() {\n    Office.context.document.customXmlParts.addAsync(\n        \"<testns:book xmlns:testns='http://testns.com'><testns:page number='1'>Hello</testns:page><testns:page number='2'>world!</testns:page></testns:book>\",\n        function(r) { r.value.addHandlerAsync(Office.EventType.DataNodeDeleted,\n            function(a) {write(a.type)\n            },\n                function(s) {write(s.status)\n                });\n        });\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message;\n}\n```"
    parameters:
    - id: xml
      description: <span data-ttu-id="5669d-125">Le code XML à ajouter à la partie XML personnalisée nouvellement créée.</span><span class="sxs-lookup"><span data-stu-id="5669d-125">The XML to add to the newly created custom XML part.</span></span>
      type:
      - string
    - id: callback
      description: <span data-ttu-id="5669d-126">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="5669d-126">Optional.</span></span> <span data-ttu-id="5669d-127">Une fonction qui est appelée quand le rappel retourné, dont le seul paramètre est de type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="5669d-127">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="5669d-128">Le `value` propriété du résultat est l’objet CustomXmlPart nouvellement créé.</span><span class="sxs-lookup"><span data-stu-id="5669d-128">The `value` property of the result is the newly created CustomXmlPart object.</span></span>
      type:
      - '(result: AsyncResult<CustomXmlPart>) => void'
- uid: office.Office.CustomXmlParts.getByIdAsync
  summary: <span data-ttu-id="5669d-129">Obtient la partie XML personnalisée spécifiée par son id de manière asynchrone.</span><span class="sxs-lookup"><span data-stu-id="5669d-129">Asynchronously gets the specified custom XML part by its id.</span></span>
  name: getByIdAsync(id, options, callback)
  fullName: getByIdAsync(id, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getByIdAsync(id: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<CustomXmlPart>) => void): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"5669d-130\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"5669d-130\">Examples</span></span>\n\n```javascript\nfunction showXMLPartInnerXML() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getXmlAsync({}, function (eventArgs) {\n            write(eventArgs.value);\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
    parameters:
    - id: id
      description: <span data-ttu-id="5669d-131">Le GUID de la partie XML personnalisée, y compris ouvrante et fermante accolades.</span><span class="sxs-lookup"><span data-stu-id="5669d-131">The GUID of the custom XML part, including opening and closing braces.</span></span>
      type:
      - string
    - id: options
      description: <span data-ttu-id="5669d-132">Fournit une option de conservation des données de contexte d’un type quelconque, inchangé, pour une utilisation dans un rappel.</span><span class="sxs-lookup"><span data-stu-id="5669d-132">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="5669d-133">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="5669d-133">Optional.</span></span> <span data-ttu-id="5669d-134">Une fonction qui est appelée quand le rappel retourné, dont le seul paramètre est de type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="5669d-134">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="5669d-135">Le `value` propriété du résultat est un objet CustomXmlPart qui représente la partie XML personnalisée spécifiée.</span><span class="sxs-lookup"><span data-stu-id="5669d-135">The `value` property of the result is a CustomXmlPart object that represents the specified custom XML part.</span></span> <span data-ttu-id="5669d-136">S’il n’existe aucune partie XML personnalisée avec l’id spécifié, la méthode retourne null.</span><span class="sxs-lookup"><span data-stu-id="5669d-136">If there is no custom XML part with the specified id, the method returns null.</span></span>
      type:
      - '(result: AsyncResult<CustomXmlPart>) => void'
- uid: office.Office.CustomXmlParts.getByIdAsync_1
  summary: <span data-ttu-id="5669d-137">Obtient la partie XML personnalisée spécifiée par son id de manière asynchrone.</span><span class="sxs-lookup"><span data-stu-id="5669d-137">Asynchronously gets the specified custom XML part by its id.</span></span>
  name: getByIdAsync(id, callback)
  fullName: getByIdAsync(id, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getByIdAsync(id: string, callback?: (result: AsyncResult<CustomXmlPart>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: id
      description: <span data-ttu-id="5669d-138">Le GUID de la partie XML personnalisée, y compris ouvrante et fermante accolades.</span><span class="sxs-lookup"><span data-stu-id="5669d-138">The GUID of the custom XML part, including opening and closing braces.</span></span>
      type:
      - string
    - id: callback
      description: <span data-ttu-id="5669d-139">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="5669d-139">Optional.</span></span> <span data-ttu-id="5669d-140">Une fonction qui est appelée quand le rappel retourné, dont le seul paramètre est de type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="5669d-140">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="5669d-141">Le `value` propriété du résultat est un objet CustomXmlPart qui représente la partie XML personnalisée spécifiée.</span><span class="sxs-lookup"><span data-stu-id="5669d-141">The `value` property of the result is a CustomXmlPart object that represents the specified custom XML part.</span></span> <span data-ttu-id="5669d-142">S’il n’existe aucune partie XML personnalisée avec l’id spécifié, la méthode retourne null.</span><span class="sxs-lookup"><span data-stu-id="5669d-142">If there is no custom XML part with the specified id, the method returns null.</span></span>
      type:
      - '(result: AsyncResult<CustomXmlPart>) => void'
- uid: office.Office.CustomXmlParts.getByNamespaceAsync
  summary: <span data-ttu-id="5669d-143">Obtient de manière asynchrone les ou les parties XML personnalisées spécifiés par son espace de noms.</span><span class="sxs-lookup"><span data-stu-id="5669d-143">Asynchronously gets the specified custom XML part(s) by its namespace.</span></span>
  name: getByNamespaceAsync(ns, options, callback)
  fullName: getByNamespaceAsync(ns, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getByNamespaceAsync(ns: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<CustomXmlPart[]>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: ns
      description: <span data-ttu-id="5669d-144">L’espace de noms URI.</span><span class="sxs-lookup"><span data-stu-id="5669d-144">The namespace URI.</span></span>
      type:
      - string
    - id: options
      description: <span data-ttu-id="5669d-145">Fournit une option de conservation des données de contexte d’un type quelconque, inchangé, pour une utilisation dans un rappel.</span><span class="sxs-lookup"><span data-stu-id="5669d-145">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="5669d-146">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="5669d-146">Optional.</span></span> <span data-ttu-id="5669d-147">Une fonction qui est appelée quand le rappel retourné, dont le seul paramètre est de type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="5669d-147">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="5669d-148">Le `value` propriété du résultat est un tableau d’objets CustomXmlPart qui correspondent à l’espace de noms spécifié.</span><span class="sxs-lookup"><span data-stu-id="5669d-148">The `value` property of the result is an array of CustomXmlPart objects that match the specified namespace.</span></span>
      type:
      - '(result: AsyncResult<CustomXmlPart[]>) => void'
- uid: office.Office.CustomXmlParts.getByNamespaceAsync_1
  summary: <span data-ttu-id="5669d-149">Obtient de manière asynchrone les ou les parties XML personnalisées spécifiés par son espace de noms.</span><span class="sxs-lookup"><span data-stu-id="5669d-149">Asynchronously gets the specified custom XML part(s) by its namespace.</span></span>
  name: getByNamespaceAsync(ns, callback)
  fullName: getByNamespaceAsync(ns, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getByNamespaceAsync(ns: string, callback?: (result: AsyncResult<CustomXmlPart[]>) => void): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"5669d-150\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"5669d-150\">Examples</span></span>\n\n```javascript\nfunction showXMLPartsInNamespace() {\n    Office.context.document.customXmlParts.getByNamespaceAsync(\n        \"http://tempuri.org\", \n        function (eventArgs) {\n            write(\"Found \" + eventArgs.value.length + \" parts with this namespace\");\n    }); \n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
    parameters:
    - id: ns
      description: <span data-ttu-id="5669d-151">L’espace de noms URI.</span><span class="sxs-lookup"><span data-stu-id="5669d-151">The namespace URI.</span></span>
      type:
      - string
    - id: callback
      description: <span data-ttu-id="5669d-152">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="5669d-152">Optional.</span></span> <span data-ttu-id="5669d-153">Une fonction qui est appelée quand le rappel retourné, dont le seul paramètre est de type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="5669d-153">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="5669d-154">Le `value` propriété du résultat est un tableau d’objets CustomXmlPart qui correspondent à l’espace de noms spécifié.</span><span class="sxs-lookup"><span data-stu-id="5669d-154">The `value` property of the result is an array of CustomXmlPart objects that match the specified namespace.</span></span>
      type:
      - '(result: AsyncResult<CustomXmlPart[]>) => void'
