### YamlMime:UniversalReference
ms.openlocfilehash: b6c06843521e065773870869f7b83148a82db32c
ms.sourcegitcommit: 31847d2ea6be78b8f473dfbfb0a575fdecd877be
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 11/13/2018
ms.locfileid: "26297958"
items:
- uid: office.Office.CustomXmlPart
  summary: <span data-ttu-id="70e76-101">Représente un seul objet CustomXMLPart d’une collection [Office.CustomXmlParts](xref:office.Office.CustomXmlParts) .</span><span class="sxs-lookup"><span data-stu-id="70e76-101">Represents a single CustomXMLPart in an [Office.CustomXmlParts](xref:office.Office.CustomXmlParts) collection.</span></span>
  remarks: >-
    <table><tr><td><span data-ttu-id="70e76-102">Ensembles de ressources</span><span class="sxs-lookup"><span data-stu-id="70e76-102">Requirement Sets</span></span></td><td><span data-ttu-id="70e76-103">CustomXmlParts</span><span class="sxs-lookup"><span data-stu-id="70e76-103">CustomXmlParts</span></span></td></tr></table>


    <span data-ttu-id="70e76-104">**Informations de prise en charge**</span><span class="sxs-lookup"><span data-stu-id="70e76-104">**Support details**</span></span>


    <span data-ttu-id="70e76-105">MAJUSCULE Y dans le tableau suivant indique que cette interface est prise en charge dans l’application hôte Office correspondante.</span><span class="sxs-lookup"><span data-stu-id="70e76-105">A capital Y in the following matrix indicates that this interface is supported in the corresponding Office host application.</span></span> <span data-ttu-id="70e76-106">Une cellule vide indique que l’application hôte Office ne prennent en charge cette interface.</span><span class="sxs-lookup"><span data-stu-id="70e76-106">An empty cell indicates that the Office host application doesn't support this interface.</span></span>


    <span data-ttu-id="70e76-107">Pour plus d’informations sur les exigences des applications et le serveur hôte Office, voir [Configuration requise pour exécuter des compléments Office](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="70e76-107">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="70e76-108">*Hôtes pris en charge par la plateforme*</span><span class="sxs-lookup"><span data-stu-id="70e76-108">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="70e76-109">Office pour Bureau Windows</span><span class="sxs-lookup"><span data-stu-id="70e76-109">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="70e76-110">Office Online (dans un navigateur)</span><span class="sxs-lookup"><span data-stu-id="70e76-110">Office Online (in browser)</span></span> </th><th> <span data-ttu-id="70e76-111">Office pour iPad</span><span class="sxs-lookup"><span data-stu-id="70e76-111">Office for iPad</span></span> </th></tr> <tr><td><span data-ttu-id="70e76-112"><strong>Word</strong></span><span class="sxs-lookup"><span data-stu-id="70e76-112"><strong> Word </strong></span></span></td><td> <span data-ttu-id="70e76-113">v</span><span class="sxs-lookup"><span data-stu-id="70e76-113">Y</span></span> </td><td> <span data-ttu-id="70e76-114">v</span><span class="sxs-lookup"><span data-stu-id="70e76-114">Y</span></span> </td><td> <span data-ttu-id="70e76-115">v</span><span class="sxs-lookup"><span data-stu-id="70e76-115">Y</span></span> </td></tr> </table>
  name: Office.CustomXmlPart
  fullName: Office.CustomXmlPart
  langs:
  - typeScript
  type: interface
  package: office
  children:
  - office.Office.CustomXmlPart.addHandlerAsync
  - office.Office.CustomXmlPart.builtIn
  - office.Office.CustomXmlPart.deleteAsync
  - office.Office.CustomXmlPart.getNodesAsync
  - office.Office.CustomXmlPart.getXmlAsync
  - office.Office.CustomXmlPart.id
  - office.Office.CustomXmlPart.namespaceManager
  - office.Office.CustomXmlPart.removeHandlerAsync
- uid: office.Office.CustomXmlPart.addHandlerAsync
  summary: <span data-ttu-id="70e76-116">Ajoute un gestionnaire d’événements à l’objet en utilisant le type d’événement spécifié.</span><span class="sxs-lookup"><span data-stu-id="70e76-116">Adds an event handler to the object using the specified event type.</span></span>
  remarks: >-
    <span data-ttu-id="70e76-117">Vous pouvez ajouter plusieurs gestionnaires d’événements pour les eventType spécifiés tant que le nom de chaque fonction de gestionnaire d’événements est unique.</span><span class="sxs-lookup"><span data-stu-id="70e76-117">You can add multiple event handlers for the specified eventType as long as the name of each event handler function is unique.</span></span>

    #### <a name="examples"></a><span data-ttu-id="70e76-118">Exemples</span><span class="sxs-lookup"><span data-stu-id="70e76-118">Examples</span></span>


    ```javascript

    // To add an event handler for the NodeDeleted event, use the addHandlerAsync method of the CustomXmlPart object.

    function addNodeDeletedEvent() {
        Office.context.document.customXmlParts.getByIdAsync(
            "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
            var xmlPart = result.value;
            xmlPart.addHandlerAsync(Office.EventType.NodeDeleted, function (eventArgs) {
                write("A node has been deleted.");
            });
        });
    }

    // Function that writes to a div with id='message' on the page.

    function write(message){
        document.getElementById('message').innerText += message;
    }

    ```

    ```javascript

    // To add an event handler for the NodeInserted event, use the addHandlerAsync method of the CustomXmlPart object.

    function addNodeInsertedEvent() {
        Office.context.document.customXmlParts.getByIdAsync(
            "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
            var xmlPart = result.value;
            xmlPart.addHandlerAsync(Office.EventType.NodeInserted, function (eventArgs) {
                write("A node has been inserted.");
            });
        });
    }

    // Function that writes to a div with id='message' on the page.

    function write(message){
        document.getElementById('message').innerText += message;
    }

    ```

    ```javascript

    // To add an event handler for the NodeReplaced event, use the addHandlerAsync method of the CustomXmlPart object.

    function addNodeReplacedEvent() {
        Office.context.document.customXmlParts.getByIdAsync(
            "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
            var xmlPart = result.value;
            xmlPart.addHandlerAsync(Office.EventType.NodeReplaced, function (eventArgs) {
                write("A node has been replaced.");
            });
        });
    }

    // Function that writes to a div with id='message' on the page.

    function write(message){
        document.getElementById('message').innerText += message;
    }

    ```
  name: addHandlerAsync(eventType, handler, options, callback)
  fullName: addHandlerAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addHandlerAsync(eventType: Office.EventType, handler: (result: any) => void, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="70e76-119">Spécifie le type d’événement à ajouter.</span><span class="sxs-lookup"><span data-stu-id="70e76-119">Specifies the type of event to add.</span></span> <span data-ttu-id="70e76-120">Pour un objet CustomXmlPart, le paramètre eventType peut être spécifié en tant que `Office.EventType.NodeDeleted` <!-- -->, `Office.EventType.NodeInserted` <!-- -->, et `Office.EventType.NodeReplaced` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="70e76-120">For a CustomXmlPart object, the eventType parameter can be specified as `Office.EventType.NodeDeleted`<!-- -->, `Office.EventType.NodeInserted`<!-- -->, and `Office.EventType.NodeReplaced`<!-- -->.</span></span>
      type:
      - Office.EventType
    - id: handler
      description: <span data-ttu-id="70e76-121">La fonction de gestionnaire d’événements pour ajouter, dont le seul paramètre est de type [Office.NodeDeletedEventArgs](xref:office.Office.NodeDeletedEventArgs)<!-- -->, [Office.NodeInsertedEventArgs](xref:office.Office.NodeInsertedEventArgs)<!-- -->, ou [Office.NodeReplacedEventArgs](xref:office.Office.NodeReplacedEventArgs)</span><span class="sxs-lookup"><span data-stu-id="70e76-121">The event handler function to add, whose only parameter is of type [Office.NodeDeletedEventArgs](xref:office.Office.NodeDeletedEventArgs)<!-- -->, [Office.NodeInsertedEventArgs](xref:office.Office.NodeInsertedEventArgs)<!-- -->, or [Office.NodeReplacedEventArgs](xref:office.Office.NodeReplacedEventArgs)</span></span>
      type:
      - '(result: any) => void'
    - id: options
      description: <span data-ttu-id="70e76-122">Fournit une option de conservation des données de contexte d’un type quelconque, inchangé, pour une utilisation dans un rappel.</span><span class="sxs-lookup"><span data-stu-id="70e76-122">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="70e76-123">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="70e76-123">Optional.</span></span> <span data-ttu-id="70e76-124">Une fonction qui est appelée quand le rappel retourné, dont le seul paramètre est de type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="70e76-124">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.CustomXmlPart.builtIn
  summary: <span data-ttu-id="70e76-125">Valeur True, si la partie XML personnalisée est générée Sinon, false.</span><span class="sxs-lookup"><span data-stu-id="70e76-125">True, if the custom XML part is built in; otherwise false.</span></span>
  name: builtIn
  fullName: builtIn
  langs:
  - typeScript
  type: property
  syntax:
    content: 'builtIn: boolean;'
    return:
      type:
      - boolean
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"70e76-126\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"70e76-126\">Examples</span></span>\n\n```javascript\nfunction showXMLPartBuiltIn() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        write(xmlPart.builtIn);\n    });\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
- uid: office.Office.CustomXmlPart.deleteAsync
  summary: <span data-ttu-id="70e76-127">Supprime la partie XML personnalisée.</span><span class="sxs-lookup"><span data-stu-id="70e76-127">Deletes the Custom XML Part.</span></span>
  name: deleteAsync(options, callback)
  fullName: deleteAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'deleteAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"70e76-128\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"70e76-128\">Examples</span></span>\n\n```javascript\nfunction deleteXMLPart() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.deleteAsync(function (eventArgs) {\n            write(\"The XML Part has been deleted.\");\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
    parameters:
    - id: options
      description: <span data-ttu-id="70e76-129">Fournit une option de conservation des données de contexte d’un type quelconque, inchangé, pour une utilisation dans un rappel.</span><span class="sxs-lookup"><span data-stu-id="70e76-129">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="70e76-130">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="70e76-130">Optional.</span></span> <span data-ttu-id="70e76-131">Une fonction qui est appelée quand le rappel retourné, dont le seul paramètre est de type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="70e76-131">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.CustomXmlPart.getNodesAsync
  summary: <span data-ttu-id="70e76-132">Obtient de manière asynchrone les CustomXmlNodes de cette partie XML personnalisée qui correspondent au XPath spécifié.</span><span class="sxs-lookup"><span data-stu-id="70e76-132">Asynchronously gets any CustomXmlNodes in this custom XML part which match the specified XPath.</span></span>
  name: getNodesAsync(xPath, options, callback)
  fullName: getNodesAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getNodesAsync(xPath: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<CustomXmlNode[]>) => void): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"70e76-133\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"70e76-133\">Examples</span></span>\n\n```javascript\nfunction showXmlNodeType() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getNodesAsync('*/*', function (nodeResults) {\n            for (i = 0; i < nodeResults.value.length; i++) {\n                var node = nodeResults.value[i];\n                write(node.nodeType);\n            }\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
    parameters:
    - id: xPath
      description: <span data-ttu-id="70e76-p105">Expression XPath qui spécifie les nœuds à retourner. Requis.</span><span class="sxs-lookup"><span data-stu-id="70e76-p105">An XPath expression that specifies the nodes you want returned. Required.</span></span>
      type:
      - string
    - id: options
      description: <span data-ttu-id="70e76-136">Fournit une option de conservation des données de contexte d’un type quelconque, inchangé, pour une utilisation dans un rappel.</span><span class="sxs-lookup"><span data-stu-id="70e76-136">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="70e76-137">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="70e76-137">Optional.</span></span> <span data-ttu-id="70e76-138">Une fonction qui est appelée quand le rappel retourné, dont le seul paramètre est de type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="70e76-138">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="70e76-139">Le `value` propriété du résultat est un tableau d’objets CustomXmlNode qui représentent les nœuds spécifiés par l’expression XPath passée au paramètre xPath.</span><span class="sxs-lookup"><span data-stu-id="70e76-139">The `value` property of the result is an array of CustomXmlNode objects that represent the nodes specified by the XPath expression passed to the xPath parameter.</span></span>
      type:
      - '(result: AsyncResult<CustomXmlNode[]>) => void'
- uid: office.Office.CustomXmlPart.getXmlAsync
  summary: <span data-ttu-id="70e76-140">Obtient de manière asynchrone le code XML contenu dans cette partie XML personnalisée.</span><span class="sxs-lookup"><span data-stu-id="70e76-140">Asynchronously gets the XML inside this custom XML part.</span></span>
  name: getXmlAsync(options, callback)
  fullName: getXmlAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getXmlAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"70e76-141\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"70e76-141\">Examples</span></span>\n\n```javascript\nfunction showXMLPartInnerXML() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getXmlAsync({}, function (eventArgs) {\n            write(eventArgs.value);\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
    parameters:
    - id: options
      description: <span data-ttu-id="70e76-142">Fournit une option de conservation des données de contexte d’un type quelconque, inchangé, pour une utilisation dans un rappel.</span><span class="sxs-lookup"><span data-stu-id="70e76-142">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="70e76-143">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="70e76-143">Optional.</span></span> <span data-ttu-id="70e76-144">Une fonction qui est appelée quand le rappel retourné, dont le seul paramètre est de type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="70e76-144">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="70e76-145">Le `value` propriété du résultat est une chaîne qui contient le code XML de l’objet CustomXmlPart référencé.</span><span class="sxs-lookup"><span data-stu-id="70e76-145">The `value` property of the result is a string that contains the XML of the referenced CustomXmlPart object.</span></span>
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.CustomXmlPart.id
  summary: <span data-ttu-id="70e76-146">Obtient le GUID de CustomXMLPart.</span><span class="sxs-lookup"><span data-stu-id="70e76-146">Gets the GUID of the CustomXMLPart.</span></span>
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'id: string;'
    return:
      type:
      - string
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"70e76-147\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"70e76-147\">Examples</span></span>\n\n```javascript\nfunction showXMLPartBuiltId() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        write(xmlPart.id);\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
- uid: office.Office.CustomXmlPart.namespaceManager
  summary: <span data-ttu-id="70e76-148">Obtient l’ensemble de l’espace de noms de mappages de préfixes ([Office.CustomXmlPrefixMappings](xref:office.Office.CustomXmlPrefixMappings)<!-- -->) utilisé par rapport à l’objet CustomXmlPart actif.</span><span class="sxs-lookup"><span data-stu-id="70e76-148">Gets the set of namespace prefix mappings ([Office.CustomXmlPrefixMappings](xref:office.Office.CustomXmlPrefixMappings)<!-- -->) used against the current CustomXmlPart.</span></span>
  name: namespaceManager
  fullName: namespaceManager
  langs:
  - typeScript
  type: property
  syntax:
    content: 'namespaceManager: CustomXmlPrefixMappings;'
    return:
      type:
      - office.Office.CustomXmlPrefixMappings
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"70e76-149\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"70e76-149\">Examples</span></span>\n\n```javascript\nfunction setXMLPartNamespaceManagerNamespace() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.namespaceManager.addNamespaceAsync(\"myPrefix\", \"myNamespace\");\n    });\n}\n```"
- uid: office.Office.CustomXmlPart.removeHandlerAsync
  summary: <span data-ttu-id="70e76-150">Supprime un gestionnaire d’événements pour le type d’événement spécifié.</span><span class="sxs-lookup"><span data-stu-id="70e76-150">Removes an event handler for the specified event type.</span></span>
  name: removeHandlerAsync(eventType, handler, options, callback)
  fullName: removeHandlerAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeHandlerAsync(eventType: Office.EventType, handler?: (result: any) => void, options?: RemoveHandlerOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"70e76-151\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"70e76-151\">Examples</span></span>\n\n```javascript\nfunction removeNodeInsertedEventHandler() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\",\n        function (result) {\n            var xmlPart = result.value;\n            xmlPart.removeHandlerAsync(Office.EventType.DataNodeInserted, {handler:myHandler});\n    });\n}\n```"
    parameters:
    - id: eventType
      description: <span data-ttu-id="70e76-152">Spécifie le type d’événement à supprimer.</span><span class="sxs-lookup"><span data-stu-id="70e76-152">Specifies the type of event to remove.</span></span> <span data-ttu-id="70e76-153">Pour un objet CustomXmlPart, le paramètre eventType peut être spécifié en tant que `Office.EventType.NodeDeleted` <!-- -->, `Office.EventType.NodeInserted` <!-- -->, et `Office.EventType.NodeReplaced` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="70e76-153">For a CustomXmlPart object, the eventType parameter can be specified as `Office.EventType.NodeDeleted`<!-- -->, `Office.EventType.NodeInserted`<!-- -->, and `Office.EventType.NodeReplaced`<!-- -->.</span></span>
      type:
      - Office.EventType
    - id: handler
      description: <span data-ttu-id="70e76-154">Le nom du gestionnaire à supprimer.</span><span class="sxs-lookup"><span data-stu-id="70e76-154">The name of the handler to remove.</span></span>
      type:
      - '(result: any) => void'
    - id: options
      description: <span data-ttu-id="70e76-155">Fournit des options pour déterminer l’ou les gestionnaires d’événements sont supprimés.</span><span class="sxs-lookup"><span data-stu-id="70e76-155">Provides options to determine which event handler or handlers are removed.</span></span>
      type:
      - office.Office.RemoveHandlerOptions
    - id: callback
      description: <span data-ttu-id="70e76-156">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="70e76-156">Optional.</span></span> <span data-ttu-id="70e76-157">Une fonction qui est appelée quand le rappel retourné, dont le seul paramètre est de type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="70e76-157">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
