### YamlMime:UniversalReference
items:
  - uid: office.Office.AddinCommands.Event
    summary: L’objet Event est transmis en tant que paramètre aux fonctions de complément appelées par les boutons de commande sans interface utilisateur. Cet objet permet au complément d’identifier le bouton sur lequel l’utilisateur a cliqué et d’informer l’hôte que son traitement est terminé.
    remarks: |-
      Pour plus d’informations sur la prise en charge, consultez la rubrique [conditions requises](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/add-in-commands-requirement-sets) pour les commandes de complément.

      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: restreint

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition ou lecture
    name: Office.AddinCommands.Event
    fullName: Office.AddinCommands.Event
    langs:
      - typeScript
    type: interface
    package: office
    children:
      - office.Office.AddinCommands.Event.completed
      - office.Office.AddinCommands.Event.source
  - uid: office.Office.AddinCommands.Event.completed
    summary: |-
      Indique que le complément a terminé le traitement déclenché par le bouton de commande d’un complément ou par le gestionnaire d’événements.

      Cette méthode doit être appelée à la fin d’une fonction appelée par une commande de complément définie avec un élément action avec un attribut xsi: type défini sur ExecuteFunction. Appeler cette méthode indique au client hôte que la fonction est terminée et qu’il peut nettoyer les états figurant dans l’appel de la fonction. Par exemple, si l’utilisateur ferme Outlook avant l’appel de cette méthode, Outlook vous avertit qu’une fonction est en cours d’exécution.

      Cette méthode doit être appelée dans un gestionnaire d’événements, ajouté via la méthode Office.context.mailbox.addHandlerAsync à l’issue du traitement de l’événement.

      \[[Ensemble d’API: boîte aux lettres 1,3](/office/dev/add-ins/reference/javascript-api-for-office)\]
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: restreint

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition ou lecture

      La boîte aux lettres 1,3 ne `options` possède pas le paramètre alors que l’aperçu `options` de la boîte aux lettres ne prend pas en charge le paramètre.

      #### <a name="examples"></a>Exemples

      ```javascript
      function processItem (event) {
          // Do some processing

          event.completed();
      }

      // In the following example, the checkMessage function has
      // been registered as an event handler for ItemSend.
      function checkMessage(event) {
          // Get the item being sent
          var outgoingMsg = Office.context.mailbox.item;

          // Check if subject contains "BLOCK"
          outgoingMsg.subject.getAsync(function (result) {
              // Subject is in result.value
              if (result.value.indexOf('BLOCK') != -1) {
                  // Value is found, stop send
                  event.completed({allowEvent = false});
              } else {
                  // Value wasn't found, allow send
                  event.completed({allowEvent = true});
              }
          });
      }
      ```
    name: completed(options)
    fullName: completed(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'completed(options?: EventCompletedOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: Facultatif. Un objet qui spécifie les options de comportement pour le moment où l’événement est terminé.
          type:
            - office.Office.AddinCommands.EventCompletedOptions
  - uid: office.Office.AddinCommands.Event.source
    summary: Informations sur le contrôle qui a déclenché l’appel de cette fonction.
    remarks: |-
      Cette propriété est uniquement prise en charge dans Outlook dans la boîte aux lettres de l' [ensemble de conditions requises](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) 1,3 et versions ultérieures.

      #### <a name="examples"></a>範例

      ```javascript
      // In this example, consider a button defined in an add-in manifest as follows:
      //<Control xsi:type="Button" id="eventTestButton">
      //    <Label resid="eventButtonLabel" />
      //    <Tooltip resid="eventButtonTooltip" />
      //    <Supertip>
      //        <Title resid="eventSuperTipTitle" />
      //        <Description resid="eventSuperTipDescription" />
      //    </Supertip>
      //    <Icon>
      //        <bt:Image size="16" resid="blue-icon-16" />
      //        <bt:Image size="32" resid="blue-icon-32" />
      //        <bt:Image size="80" resid="blue-icon-80" />
      //    </Icon>
      //    <Action xsi:type="ExecuteFunction">
      //        <FunctionName>testEventObject</FunctionName>
      //    </Action>
      //</Control>

      // The button has an id attribute set to eventTestButton, and will invoke
      // the testEventObject function defined in the add-in.
      // That function looks like this:
      function testEventObject(event) {
          // The event object implements the Event interface.

          // This value will be "eventTestButton".
          var buttonId = event.source.id;

          // Signal to the host app that processing is complete.
          event.completed();
      }
      ```
      ```javascript
      // Function is used by two buttons:
      // button1 and button2
      function multiButton (event) {
          // Check which button was clicked.
          var buttonId = event.source.id;

          if (buttonId === 'button1') {
              doButton1Action();
          } else {
              doButton2Action();
          }

          event.completed();
      }
      ```
    name: source
    fullName: source
    langs:
      - typeScript
    type: property
    syntax:
      content: 'source:Source;'
      return:
        type:
          - office.Office.AddinCommands.Source