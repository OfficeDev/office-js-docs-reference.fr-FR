### YamlMime:UniversalReference
ms.openlocfilehash: c188f127b540706dc459a9ea8dfdec041be486e5
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 02/13/2019
ms.locfileid: "29977397"
items:
- uid: office.Office.Binding
  summary: <span data-ttu-id="0244e-101">Représente une liaison à une section du document.</span><span class="sxs-lookup"><span data-stu-id="0244e-101">Represents a binding to a section of the document.</span></span>
  remarks: >-
    <table><tr><td><span data-ttu-id="0244e-102">Ensembles de ressources</span><span class="sxs-lookup"><span data-stu-id="0244e-102">Requirement Sets</span></span></td><td><span data-ttu-id="0244e-103">MatrixBindings, TableBindings, TextBindings</span><span class="sxs-lookup"><span data-stu-id="0244e-103">MatrixBindings, TableBindings, TextBindings</span></span></td></tr></table>


    <span data-ttu-id="0244e-104">L’objet Binding expose les fonctionnalités détenues par toutes les liaisons indépendamment du type.</span><span class="sxs-lookup"><span data-stu-id="0244e-104">The Binding object exposes the functionality possessed by all bindings regardless of type.</span></span>


    <span data-ttu-id="0244e-105">L’objet de liaison n’est jamais appelé directement.</span><span class="sxs-lookup"><span data-stu-id="0244e-105">The Binding object is never called directly.</span></span> <span data-ttu-id="0244e-106">Il s’agit de la classe parente abstraite des objets représentant chaque type de liaison : [Office.MatrixBinding](xref:office.Office.MatrixBinding)<!-- -->, [Office.TableBinding](xref:office.Office.TableBinding)<!-- -->, ou [Office.TextBinding](xref:office.Office.TextBinding)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="0244e-106">It is the abstract parent class of the objects that represent each type of binding: [Office.MatrixBinding](xref:office.Office.MatrixBinding)<!-- -->, [Office.TableBinding](xref:office.Office.TableBinding)<!-- -->, or [Office.TextBinding](xref:office.Office.TextBinding)<!-- -->.</span></span> <span data-ttu-id="0244e-107">Les trois de ces objets héritent la getDataAsync et setDataAsync les méthodes de l’objet de liaison qui permettent à votre interagiront avec les données de la liaison.</span><span class="sxs-lookup"><span data-stu-id="0244e-107">All three of these objects inherit the getDataAsync and setDataAsync methods from the Binding object that enable to you interact with the data in the binding.</span></span> <span data-ttu-id="0244e-108">Ils héritent également les propriétés id et de type pour l’interrogation de ces valeurs de propriété.</span><span class="sxs-lookup"><span data-stu-id="0244e-108">They also inherit the id and type properties for querying those property values.</span></span> <span data-ttu-id="0244e-109">En outre, les objets MatrixBinding et TableBinding exposent des méthodes supplémentaires pour les fonctionnalités de matrice et table spécifiques, telles que de compter le nombre de lignes et colonnes.</span><span class="sxs-lookup"><span data-stu-id="0244e-109">Additionally, the MatrixBinding and TableBinding objects expose additional methods for matrix- and table-specific features, such as counting the number of rows and columns.</span></span>


    <span data-ttu-id="0244e-110">**Informations de prise en charge**</span><span class="sxs-lookup"><span data-stu-id="0244e-110">**Support details**</span></span>


    <span data-ttu-id="0244e-111">MAJUSCULE Y dans le tableau suivant indique que cette interface est prise en charge dans l’application hôte Office correspondante.</span><span class="sxs-lookup"><span data-stu-id="0244e-111">A capital Y in the following matrix indicates that this interface is supported in the corresponding Office host application.</span></span> <span data-ttu-id="0244e-112">Une cellule vide indique que l’application hôte Office ne prennent en charge cette interface.</span><span class="sxs-lookup"><span data-stu-id="0244e-112">An empty cell indicates that the Office host application doesn't support this interface.</span></span>


    <span data-ttu-id="0244e-113">Pour plus d’informations sur les exigences des applications et le serveur hôte Office, voir [Configuration requise pour exécuter des compléments Office](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="0244e-113">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="0244e-114">*Hôtes pris en charge par la plateforme*</span><span class="sxs-lookup"><span data-stu-id="0244e-114">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="0244e-115">Office pour Bureau Windows</span><span class="sxs-lookup"><span data-stu-id="0244e-115">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="0244e-116">Office Online (dans un navigateur)</span><span class="sxs-lookup"><span data-stu-id="0244e-116">Office Online (in browser)</span></span> </th><th> <span data-ttu-id="0244e-117">Office for iPad</span><span class="sxs-lookup"><span data-stu-id="0244e-117">Office for iPad</span></span> </th><th> <span data-ttu-id="0244e-118">Office for Mac</span><span class="sxs-lookup"><span data-stu-id="0244e-118">Office for Mac</span></span> </th></tr> <tr><td><span data-ttu-id="0244e-119"><strong>Access</strong></span><span class="sxs-lookup"><span data-stu-id="0244e-119"><strong> Access </strong></span></span></td><td> </td><td> <span data-ttu-id="0244e-120">v</span><span class="sxs-lookup"><span data-stu-id="0244e-120">Y</span></span> </td><td> </td><td> </td></tr> <tr><td><span data-ttu-id="0244e-121"><strong>Excel</strong></span><span class="sxs-lookup"><span data-stu-id="0244e-121"><strong> Excel </strong></span></span></td><td> <span data-ttu-id="0244e-122">v</span><span class="sxs-lookup"><span data-stu-id="0244e-122">Y</span></span> </td><td> <span data-ttu-id="0244e-123">v</span><span class="sxs-lookup"><span data-stu-id="0244e-123">Y</span></span> </td><td> <span data-ttu-id="0244e-124">v</span><span class="sxs-lookup"><span data-stu-id="0244e-124">Y</span></span> </td><td> <span data-ttu-id="0244e-125">v</span><span class="sxs-lookup"><span data-stu-id="0244e-125">Y</span></span> </td></tr> <tr><td><span data-ttu-id="0244e-126"><strong>Word</strong></span><span class="sxs-lookup"><span data-stu-id="0244e-126"><strong> Word </strong></span></span></td><td> <span data-ttu-id="0244e-127">v</span><span class="sxs-lookup"><span data-stu-id="0244e-127">Y</span></span> </td><td> <span data-ttu-id="0244e-128">v</span><span class="sxs-lookup"><span data-stu-id="0244e-128">Y</span></span> </td><td> <span data-ttu-id="0244e-129">v</span><span class="sxs-lookup"><span data-stu-id="0244e-129">Y</span></span> </td><td> <span data-ttu-id="0244e-130">v</span><span class="sxs-lookup"><span data-stu-id="0244e-130">Y</span></span> </td></tr> </table>
  name: Office.Binding
  fullName: Office.Binding
  langs:
  - typeScript
  type: interface
  package: office
  children:
  - office.Office.Binding.addHandlerAsync
  - office.Office.Binding.addHandlerAsync_1
  - office.Office.Binding.getDataAsync
  - office.Office.Binding.getDataAsync_1
  - office.Office.Binding.removeHandlerAsync
  - office.Office.Binding.removeHandlerAsync_1
  - office.Office.Binding.setDataAsync
  - office.Office.Binding.setDataAsync_1
  - office.Office.Binding.document
  - office.Office.Binding.id
  - office.Office.Binding.type
- uid: office.Office.Binding.addHandlerAsync
  summary: <span data-ttu-id="0244e-131">Ajoute un gestionnaire d’événements à l’objet de spécifié [Office.EventType](xref:office.Office.EventType)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="0244e-131">Adds an event handler to the object for the specified [Office.EventType](xref:office.Office.EventType)<!-- -->.</span></span> <span data-ttu-id="0244e-132">EventTypes pris en charge sont `Office.EventType.BindingDataChanged` et `Office.EventType.BindingSelectionChanged` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="0244e-132">Supported EventTypes are `Office.EventType.BindingDataChanged` and `Office.EventType.BindingSelectionChanged`<!-- -->.</span></span>
  remarks: <span data-ttu-id="0244e-133">Vous pouvez ajouter plusieurs gestionnaires d’événements pour les eventType spécifiés tant que le nom de chaque fonction de gestionnaire d’événements est unique.</span><span class="sxs-lookup"><span data-stu-id="0244e-133">You can add multiple event handlers for the specified eventType as long as the name of each event handler function is unique.</span></span>
  name: addHandlerAsync(eventType, handler, options, callback)
  fullName: addHandlerAsync(eventType, handler, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addHandlerAsync(eventType: Office.EventType, handler: any, options?: Office.AsyncContextOptions, callback?: (result: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="0244e-134">Type d’événement.</span><span class="sxs-lookup"><span data-stu-id="0244e-134">The event type.</span></span> <span data-ttu-id="0244e-135">Pour les liaisons, il peut être `Office.EventType.BindingDataChanged` ou `Office.EventType.BindingSelectionChanged` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="0244e-135">For bindings, it can be `Office.EventType.BindingDataChanged` or `Office.EventType.BindingSelectionChanged`<!-- -->.</span></span>
      type:
      - Office.EventType
    - id: handler
      description: <span data-ttu-id="0244e-136">La fonction de gestionnaire d’événements pour ajouter, dont le seul paramètre est de type [Office.BindingDataChangedEventArgs](xref:office.Office.BindingDataChangedEventArgs) ou [Office.BindingSelectionChangedEventArgs](xref:office.Office.BindingSelectionChangedEventArgs)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="0244e-136">The event handler function to add, whose only parameter is of type [Office.BindingDataChangedEventArgs](xref:office.Office.BindingDataChangedEventArgs) or [Office.BindingSelectionChangedEventArgs](xref:office.Office.BindingSelectionChangedEventArgs)<!-- -->.</span></span>
      type:
      - any
    - id: options
      description: <span data-ttu-id="0244e-137">Fournit une option de conservation des données de contexte d’un type quelconque, inchangé, pour une utilisation dans un rappel.</span><span class="sxs-lookup"><span data-stu-id="0244e-137">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="0244e-138">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="0244e-138">Optional.</span></span> <span data-ttu-id="0244e-139">Une fonction qui est appelée quand le rappel retourné, dont le seul paramètre est de type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="0244e-139">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: Office.AsyncResult<void>) => void'
- uid: office.Office.Binding.addHandlerAsync_1
  summary: <span data-ttu-id="0244e-140">Ajoute un gestionnaire d’événements à l’objet de spécifié [Office.EventType](xref:office.Office.EventType)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="0244e-140">Adds an event handler to the object for the specified [Office.EventType](xref:office.Office.EventType)<!-- -->.</span></span> <span data-ttu-id="0244e-141">EventTypes pris en charge sont `Office.EventType.BindingDataChanged` et `Office.EventType.BindingSelectionChanged` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="0244e-141">Supported EventTypes are `Office.EventType.BindingDataChanged` and `Office.EventType.BindingSelectionChanged`<!-- -->.</span></span>
  remarks: "<span data-ttu-id=\"0244e-142\">Vous pouvez ajouter plusieurs gestionnaires d’événements pour les eventType spécifiés tant que le nom de chaque fonction de gestionnaire d’événements est unique.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-142\">You can add multiple event handlers for the specified eventType as long as the name of each event handler function is unique.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"0244e-143\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-143\">Examples</span></span>\n\n```javascript\n// The following code sample calls the select method of the Office object to access the binding\n// with ID \"MyBinding\", and then calls the addHandlerAsync method to add a handler function \n// for the bindingDataChanged event of that binding.\nfunction addEventHandlerToBinding() {\n    Office.select(\"bindings#MyBinding\").addHandlerAsync(\n        Office.EventType.BindingDataChanged, onBindingDataChanged);\n}\n\nfunction onBindingDataChanged(eventArgs) {\n    write(\"Data has changed in binding: \" + eventArgs.binding.id);\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```\n```javascript\n// To add an event handler for the BindingSelectionChanged event of a binding, \n// use the addHandlerAsync method of the Binding object.\n// The event handler receives an argument of type BindingSelectionChangedEventArgs.\nfunction addEventHandlerToBinding() {\n    Office.select(\"bindings#MyBinding\").addHandlerAsync(\n        Office.EventType.BindingSelectionChanged, onBindingSelectionChanged);\n}\n\nfunction onBindingSelectionChanged(eventArgs) {\n    write(eventArgs.binding.id + \" has been selected.\");\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: addHandlerAsync(eventType, handler, callback)
  fullName: addHandlerAsync(eventType, handler, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addHandlerAsync(eventType: Office.EventType, handler: any, callback?: (result: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="0244e-144">Type d’événement.</span><span class="sxs-lookup"><span data-stu-id="0244e-144">The event type.</span></span> <span data-ttu-id="0244e-145">Pour les liaisons, il peut être `Office.EventType.BindingDataChanged` ou `Office.EventType.BindingSelectionChanged` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="0244e-145">For bindings, it can be `Office.EventType.BindingDataChanged` or `Office.EventType.BindingSelectionChanged`<!-- -->.</span></span>
      type:
      - Office.EventType
    - id: handler
      description: <span data-ttu-id="0244e-146">La fonction de gestionnaire d’événements pour ajouter, dont le seul paramètre est de type [Office.BindingDataChangedEventArgs](xref:office.Office.BindingDataChangedEventArgs) ou [Office.BindingSelectionChangedEventArgs](xref:office.Office.BindingSelectionChangedEventArgs)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="0244e-146">The event handler function to add, whose only parameter is of type [Office.BindingDataChangedEventArgs](xref:office.Office.BindingDataChangedEventArgs) or [Office.BindingSelectionChangedEventArgs](xref:office.Office.BindingSelectionChangedEventArgs)<!-- -->.</span></span>
      type:
      - any
    - id: callback
      description: <span data-ttu-id="0244e-147">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="0244e-147">Optional.</span></span> <span data-ttu-id="0244e-148">Une fonction qui est appelée quand le rappel retourné, dont le seul paramètre est de type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="0244e-148">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: Office.AsyncResult<void>) => void'
- uid: office.Office.Binding.getDataAsync
  summary: <span data-ttu-id="0244e-149">Retourne les données contenues dans la liaison.</span><span class="sxs-lookup"><span data-stu-id="0244e-149">Returns the data contained within the binding.</span></span>
  remarks: >-
    <table><tr><td><span data-ttu-id="0244e-150">Ensembles de ressources</span><span class="sxs-lookup"><span data-stu-id="0244e-150">Requirement Sets</span></span></td><td><span data-ttu-id="0244e-151">MatrixBindings, TableBindings, TextBindings</span><span class="sxs-lookup"><span data-stu-id="0244e-151">MatrixBindings, TableBindings, TextBindings</span></span></td></tr></table>


    <span data-ttu-id="0244e-152">Lorsqu’elle est appelée à partir de MatrixBinding ou TableBinding, la méthode getDataAsync renvoie un sous-ensemble des valeurs liées si les paramètres facultatifs startRow, startColumn, rowCount et columnCount sont spécifiés (et s’ils indiquent une plage contiguë et valide).</span><span class="sxs-lookup"><span data-stu-id="0244e-152">When called from a MatrixBinding or TableBinding, the getDataAsync method will return a subset of the bound values if the optional startRow, startColumn, rowCount, and columnCount parameters are specified (and they specify a contiguous and valid range).</span></span>
  name: getDataAsync(options, callback)
  fullName: getDataAsync(options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getDataAsync<T>(options?: GetBindingDataOptions, callback?: (result: AsyncResult<T>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: <span data-ttu-id="0244e-153">Fournit des options obtenir les données dans une liaison.</span><span class="sxs-lookup"><span data-stu-id="0244e-153">Provides options for how to get the data in a binding.</span></span>
      type:
      - office.Office.GetBindingDataOptions
    - id: callback
      description: <span data-ttu-id="0244e-154">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="0244e-154">Optional.</span></span> <span data-ttu-id="0244e-155">Une fonction qui est appelée quand le rappel retourné, dont le seul paramètre est de type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="0244e-155">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="0244e-156">Le `value` propriété du résultat est les valeurs dans la liaison spécifiée.</span><span class="sxs-lookup"><span data-stu-id="0244e-156">The `value` property of the result is the values in the specified binding.</span></span> <span data-ttu-id="0244e-157">Si le `coercionType` paramètre est spécifié (et l’appel a réussi), les données sont retournées au format décrit dans la rubrique sur l’énumération CoercionType.</span><span class="sxs-lookup"><span data-stu-id="0244e-157">If the `coercionType` parameter is specified (and the call is successful), the data is returned in the format described in the CoercionType enumeration topic.</span></span>
      type:
      - '(result: AsyncResult<T>) => void'
- uid: office.Office.Binding.getDataAsync_1
  summary: <span data-ttu-id="0244e-158">Retourne les données contenues dans la liaison.</span><span class="sxs-lookup"><span data-stu-id="0244e-158">Returns the data contained within the binding.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"0244e-159\">Ensembles de ressources</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-159\">Requirement Sets</span></span></td><td><span data-ttu-id=\"0244e-160\">MatrixBindings, TableBindings, TextBindings</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-160\">MatrixBindings, TableBindings, TextBindings</span></span></td></tr></table>\n\n<span data-ttu-id=\"0244e-161\">Lorsqu’elle est appelée à partir de MatrixBinding ou TableBinding, la méthode getDataAsync renvoie un sous-ensemble des valeurs liées si les paramètres facultatifs startRow, startColumn, rowCount et columnCount sont spécifiés (et s’ils indiquent une plage contiguë et valide).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-161\">When called from a MatrixBinding or TableBinding, the getDataAsync method will return a subset of the bound values if the optional startRow, startColumn, rowCount, and columnCount parameters are specified (and they specify a contiguous and valid range).</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"0244e-162\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-162\">Examples</span></span>\n\n```javascript\nfunction showBindingData() {\n    Office.select(\"bindings#MyBinding\").getDataAsync(function (asyncResult) {\n        write(asyncResult.value)\n    });\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n\n// There is an important difference in behavior between using the \"table\" and \"matrix\" coercionType with the\n// Binding.getDataAsync method, with respect to data formatted with header rows, as shown in the following\n// two examples. These code examples show event handler functions for the Binding.SelectionChanged event.\n\n// If you specify the \"table\" coercionType, the TableData.rows property ( result.value.rows in the following\n// code example) returns an array that contains only the body rows of the table. So, its 0th row will be the\n// first non-header row in the table.\nfunction selectionChanged(evtArgs) { \n    Office.select(\"bindings#TableTranslate\").getDataAsync(\n        { coercionType: 'table', \n          startRow: evtArgs.startRow, \n          startCol: 0, \n          rowCount: 1, \n          columnCount: 1 },  \n        function (result) { \n            if (result.status == 'succeeded') { \n                write(\"Image to find: \" + result.value.rows[0][0]); \n            } \n            else \n                write(result.error.message); \n    }); \n}     \n// Function that writes to a div with id='message' on the page. \nfunction write(message){ \n    document.getElementById('message').innerText += message; \n}\n\n// However, if you specify the \"matrix\" coercionType, result.value in the following code example returns an array\n// that contains the table header in the 0th row. If the table header contains multiple rows, then these are all\n// included in the result.value matrix as separate rows before the table body rows are included.\nfunction selectionChanged(evtArgs) { \n    Office.select(\"bindings#TableTranslate\").getDataAsync(\n        { coercionType: 'matrix', \n          startRow: evtArgs.startRow, \n          startCol: 0, \n          rowCount: 1, \n          columnCount: 1 },  \n        function (result) { \n            if (result.status == 'succeeded') { \n                write(\"Image to find: \" + result.value[1][0]); \n            } \n            else \n                write(result.error.message); \n    }); \n}     \n// Function that writes to a div with id='message' on the page. \nfunction write(message){ \n    document.getElementById('message').innerText += message; \n}\n```"
  name: getDataAsync(callback)
  fullName: getDataAsync(callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getDataAsync<T>(callback?: (result: AsyncResult<T>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: <span data-ttu-id="0244e-163">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="0244e-163">Optional.</span></span> <span data-ttu-id="0244e-164">Une fonction qui est appelée quand le rappel retourné, dont le seul paramètre est de type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="0244e-164">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="0244e-165">Le `value` propriété du résultat est les valeurs dans la liaison spécifiée.</span><span class="sxs-lookup"><span data-stu-id="0244e-165">The `value` property of the result is the values in the specified binding.</span></span> <span data-ttu-id="0244e-166">Si le `coercionType` paramètre est spécifié (et l’appel a réussi), les données sont retournées au format décrit dans la rubrique sur l’énumération CoercionType.</span><span class="sxs-lookup"><span data-stu-id="0244e-166">If the `coercionType` parameter is specified (and the call is successful), the data is returned in the format described in the CoercionType enumeration topic.</span></span>
      type:
      - '(result: AsyncResult<T>) => void'
- uid: office.Office.Binding.removeHandlerAsync
  summary: <span data-ttu-id="0244e-167">Supprime le gestionnaire spécifié de la liaison pour le type d’événement spécifié.</span><span class="sxs-lookup"><span data-stu-id="0244e-167">Removes the specified handler from the binding for the specified event type.</span></span>
  remarks: <table><tr><td><span data-ttu-id="0244e-168">Ensembles de ressources</span><span class="sxs-lookup"><span data-stu-id="0244e-168">Requirement Sets</span></span></td><td><span data-ttu-id="0244e-169">BindingEvents</span><span class="sxs-lookup"><span data-stu-id="0244e-169">BindingEvents</span></span></td></tr></table>
  name: removeHandlerAsync(eventType, options, callback)
  fullName: removeHandlerAsync(eventType, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeHandlerAsync(eventType: Office.EventType, options?: RemoveHandlerOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="0244e-170">Type d’événement.</span><span class="sxs-lookup"><span data-stu-id="0244e-170">The event type.</span></span> <span data-ttu-id="0244e-171">Pour les liaisons, il peut être `Office.EventType.BindingDataChanged` ou `Office.EventType.BindingSelectionChanged` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="0244e-171">For bindings, it can be `Office.EventType.BindingDataChanged` or `Office.EventType.BindingSelectionChanged`<!-- -->.</span></span>
      type:
      - Office.EventType
    - id: options
      description: <span data-ttu-id="0244e-172">Fournit des options pour déterminer l’ou les gestionnaires d’événements sont supprimés.</span><span class="sxs-lookup"><span data-stu-id="0244e-172">Provides options to determine which event handler or handlers are removed.</span></span>
      type:
      - office.Office.RemoveHandlerOptions
    - id: callback
      description: <span data-ttu-id="0244e-173">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="0244e-173">Optional.</span></span> <span data-ttu-id="0244e-174">Une fonction qui est appelée quand le rappel retourné, dont le seul paramètre est de type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="0244e-174">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.Binding.removeHandlerAsync_1
  summary: <span data-ttu-id="0244e-175">Supprime le gestionnaire spécifié de la liaison pour le type d’événement spécifié.</span><span class="sxs-lookup"><span data-stu-id="0244e-175">Removes the specified handler from the binding for the specified event type.</span></span>
  remarks: >-
    <table><tr><td><span data-ttu-id="0244e-176">Ensembles de ressources</span><span class="sxs-lookup"><span data-stu-id="0244e-176">Requirement Sets</span></span></td><td><span data-ttu-id="0244e-177">BindingEvents</span><span class="sxs-lookup"><span data-stu-id="0244e-177">BindingEvents</span></span></td></tr></table>

    #### <span data-ttu-id="0244e-178">Exemples</span><span class="sxs-lookup"><span data-stu-id="0244e-178">Examples</span></span>


    ```javascript

    function removeEventHandlerFromBinding() {
        Office.select("bindings#MyBinding").removeHandlerAsync(
            Office.EventType.BindingDataChanged, {handler:onBindingDataChanged});
    }

    ```
  name: removeHandlerAsync(eventType, callback)
  fullName: removeHandlerAsync(eventType, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeHandlerAsync(eventType: Office.EventType, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="0244e-179">Type d’événement.</span><span class="sxs-lookup"><span data-stu-id="0244e-179">The event type.</span></span> <span data-ttu-id="0244e-180">Pour les liaisons, il peut être `Office.EventType.BindingDataChanged` ou `Office.EventType.BindingSelectionChanged` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="0244e-180">For bindings, it can be `Office.EventType.BindingDataChanged` or `Office.EventType.BindingSelectionChanged`<!-- -->.</span></span>
      type:
      - Office.EventType
    - id: callback
      description: <span data-ttu-id="0244e-181">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="0244e-181">Optional.</span></span> <span data-ttu-id="0244e-182">Une fonction qui est appelée quand le rappel retourné, dont le seul paramètre est de type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="0244e-182">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.Binding.setDataAsync
  summary: <span data-ttu-id="0244e-183">Écrit des données dans la section liée du document représenté par l’objet de liaison spécifié.</span><span class="sxs-lookup"><span data-stu-id="0244e-183">Writes data to the bound section of the document represented by the specified binding object.</span></span>
  remarks: >-
    <table><tr><td><span data-ttu-id="0244e-184">Ensembles de ressources</span><span class="sxs-lookup"><span data-stu-id="0244e-184">Requirement Sets</span></span></td><td><span data-ttu-id="0244e-185">MatrixBindings, TableBindings, TextBindings</span><span class="sxs-lookup"><span data-stu-id="0244e-185">MatrixBindings, TableBindings, TextBindings</span></span></td></tr></table>


    <span data-ttu-id="0244e-186">La valeur passée pour les données contient les données à écrire dans la liaison.</span><span class="sxs-lookup"><span data-stu-id="0244e-186">The value passed for data contains the data to be written in the binding.</span></span> <span data-ttu-id="0244e-187">Le type de valeur passée détermine ce qui est écrit comme décrit dans le tableau suivant.</span><span class="sxs-lookup"><span data-stu-id="0244e-187">The kind of value passed determines what will be written as described in the following table.</span></span>


    <table> <tr> <th><span data-ttu-id="0244e-188">`data`valeur</span><span class="sxs-lookup"><span data-stu-id="0244e-188">`data` value</span></span></th> <th><span data-ttu-id="0244e-189">Données écrites</span><span class="sxs-lookup"><span data-stu-id="0244e-189">Data written</span></span></th> </tr> <tr> <td><span data-ttu-id="0244e-190">Chaîne</span><span class="sxs-lookup"><span data-stu-id="0244e-190">A string</span></span></td> <td><span data-ttu-id="0244e-191">Texte brut ou tout ce qui peut être converti en une chaîne est écrit.</span><span class="sxs-lookup"><span data-stu-id="0244e-191">Plain text or anything that can be coerced to a string will be written.</span></span></td> </tr> <tr> <td><span data-ttu-id="0244e-192">Tableau de tableaux (« matrice »)</span><span class="sxs-lookup"><span data-stu-id="0244e-192">An array of arrays ("matrix")</span></span></td> <td><span data-ttu-id="0244e-193">Des données tabulaires sans en-têtes sont écrites.</span><span class="sxs-lookup"><span data-stu-id="0244e-193">Tabular data without headers will be written.</span></span> <span data-ttu-id="0244e-194">Par exemple, pour écrire des données sur trois lignes et deux colonnes, vous pouvez passer un tableau comme suit : `[["R1C1", "R1C2"], ["R2C1", "R2C2"], ["R3C1", "R3C2"]]` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="0244e-194">For example, to write data to three rows in two columns, you can pass an array like this: `[["R1C1", "R1C2"], ["R2C1", "R2C2"], ["R3C1", "R3C2"]]`<!-- -->.</span></span> <span data-ttu-id="0244e-195">Pour écrire une seule colonne de trois lignes, passez un tableau comme suit : `[["R1C1"], ["R2C1"], ["R3C1"]]` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="0244e-195">To write a single column of three rows, pass an array like this: `[["R1C1"], ["R2C1"], ["R3C1"]]`<!-- -->.</span></span></td> </tr> <tr> <td><span data-ttu-id="0244e-196">Un objet [Office.TableData](xref:office.Office.TableData)</span><span class="sxs-lookup"><span data-stu-id="0244e-196">An [Office.TableData](xref:office.Office.TableData) object</span></span></td> <td><span data-ttu-id="0244e-197">Un tableau avec des en-têtes est écrit.</span><span class="sxs-lookup"><span data-stu-id="0244e-197">A table with headers will be written.</span></span></td> </tr> </table>


    <span data-ttu-id="0244e-198">En outre, ces actions (spécifiques aux applications) s’appliquent lors de l’écriture de données dans une liaison.</span><span class="sxs-lookup"><span data-stu-id="0244e-198">Additionally, these application-specific actions apply when writing data to a binding.</span></span> <span data-ttu-id="0244e-199">Pour Word, le data spécifié est écrit sur la liaison comme suit :</span><span class="sxs-lookup"><span data-stu-id="0244e-199">For Word, the specified data is written to the binding as follows:</span></span>


    <table> <tr> <th><span data-ttu-id="0244e-200">`data`valeur</span><span class="sxs-lookup"><span data-stu-id="0244e-200">`data` value</span></span></th> <th><span data-ttu-id="0244e-201">Données écrites</span><span class="sxs-lookup"><span data-stu-id="0244e-201">Data written</span></span></th> </tr> <tr> <td><span data-ttu-id="0244e-202">Chaîne</span><span class="sxs-lookup"><span data-stu-id="0244e-202">A string</span></span></td> <td><span data-ttu-id="0244e-203">Le texte spécifié est écrit.</span><span class="sxs-lookup"><span data-stu-id="0244e-203">The specified text is written.</span></span></td> </tr> <tr> <td><span data-ttu-id="0244e-204">Un tableau de tableaux (« matrice ») ou d’un objet [Office.TableData](xref:office.Office.TableData)</span><span class="sxs-lookup"><span data-stu-id="0244e-204">An array of arrays ("matrix") or an [Office.TableData](xref:office.Office.TableData) object</span></span></td> <td><span data-ttu-id="0244e-205">Un tableau Word est écrit.</span><span class="sxs-lookup"><span data-stu-id="0244e-205">A Word table is written.</span></span></td> </tr> <tr> <td><span data-ttu-id="0244e-206">HTML</span><span class="sxs-lookup"><span data-stu-id="0244e-206">HTML</span></span></td> <td><span data-ttu-id="0244e-207">Le code HTML spécifié est écrit.</span><span class="sxs-lookup"><span data-stu-id="0244e-207">The specified HTML is written.</span></span> <span data-ttu-id="0244e-208">Si un du code HTML que vous écrivez n’est pas valide, Word pas génère une erreur.</span><span class="sxs-lookup"><span data-stu-id="0244e-208">If any of the HTML you write is invalid, Word will not raise an error.</span></span> <span data-ttu-id="0244e-209">Word écrit autant le code HTML tel qu’il peut et supprime toutes les données non valides.</span><span class="sxs-lookup"><span data-stu-id="0244e-209">Word will write as much of the HTML as it can and will omit any invalid data.</span></span></td> </tr> <tr> <td><span data-ttu-id="0244e-210">Office Open XML (« Open XML »)</span><span class="sxs-lookup"><span data-stu-id="0244e-210">Office Open XML ("Open XML")</span></span></td> <td><span data-ttu-id="0244e-211">Le code XML spécifié est écrit.</span><span class="sxs-lookup"><span data-stu-id="0244e-211">The specified the XML is written.</span></span></td> </tr> </table>


    <span data-ttu-id="0244e-212">Pour Excel, le paramètre data spécifié est écrit sur la liaison comme suit :</span><span class="sxs-lookup"><span data-stu-id="0244e-212">For Excel, the specified data is written to the binding as follows:</span></span>


    <table> <tr> <th><span data-ttu-id="0244e-213">`data`valeur</span><span class="sxs-lookup"><span data-stu-id="0244e-213">`data` value</span></span></th> <th><span data-ttu-id="0244e-214">Données écrites</span><span class="sxs-lookup"><span data-stu-id="0244e-214">Data written</span></span></th> </tr> <tr> <td><span data-ttu-id="0244e-215">Chaîne</span><span class="sxs-lookup"><span data-stu-id="0244e-215">A string</span></span></td> <td><span data-ttu-id="0244e-216">Le texte spécifié est inséré en tant que la valeur de la première cellule liée. Vous pouvez également spécifier une formule valide pour ajouter cette formule dans la cellule liée.</span><span class="sxs-lookup"><span data-stu-id="0244e-216">The specified text is inserted as the value of the first bound cell.You can also specify a valid formula to add that formula to the bound cell.</span></span> <span data-ttu-id="0244e-217">Par exemple, la définition du paramètre data sur `"=SUM(A1:A5)"` totalisera les valeurs de la plage spécifiée.</span><span class="sxs-lookup"><span data-stu-id="0244e-217">For example, setting data to `"=SUM(A1:A5)"` will total the values in the specified range.</span></span> <span data-ttu-id="0244e-218">Toutefois, après avoir défini une formule sur la cellule liée, vous ne pouvez pas lire la formule ajoutée (ni les formules préexistantes) à partir de la cellule liée.</span><span class="sxs-lookup"><span data-stu-id="0244e-218">However, when you set a formula on the bound cell, after doing so, you can't read the added formula (or any pre-existing formula) from the bound cell.</span></span> <span data-ttu-id="0244e-219">Si vous appelez la méthode Binding.getDataAsync sur la cellule liée à lire ses données, la méthode peut retourner uniquement les données affichées dans la cellule (résultat de la formule).</span><span class="sxs-lookup"><span data-stu-id="0244e-219">If you call the Binding.getDataAsync method on the bound cell to read its data, the method can return only the data displayed in the cell (the formula's result).</span></span></td> </tr> <tr> <td><span data-ttu-id="0244e-220">Tableau de tableaux ("matrix") et la forme correspond exactement à la forme de la liaison spécifiée</span><span class="sxs-lookup"><span data-stu-id="0244e-220">An array of arrays ("matrix"), and the shape exactly matches the shape of the binding specified</span></span></td> <td><span data-ttu-id="0244e-221">L’ensemble de lignes et de colonnes est écrit. Vous pouvez également spécifier un tableau de tableaux qui contiennent des formules valides pour les ajouter aux cellules liées.</span><span class="sxs-lookup"><span data-stu-id="0244e-221">The set of rows and columns are written.You can also specify an array of arrays that contain valid formulas to add them to the bound cells.</span></span> <span data-ttu-id="0244e-222">Par exemple, définition des données `[["=SUM(A1:A5)","=AVERAGE(A1:A5)"]]` ajoute ces deux formules dans une liaison qui contient deux cellules.</span><span class="sxs-lookup"><span data-stu-id="0244e-222">For example, setting data to `[["=SUM(A1:A5)","=AVERAGE(A1:A5)"]]` will add those two formulas to a binding that contains two cells.</span></span> <span data-ttu-id="0244e-223">Comme lors de la définition d’une formule dans une seule cellule liée, vous ne peut pas lire les formules ajoutés (ou les formules existants) à partir de la liaison avec la `Binding.getDataAsync` méthode - il renvoie uniquement les données affichées dans les cellules liées.</span><span class="sxs-lookup"><span data-stu-id="0244e-223">Just as when setting a formula on a single bound cell, you can't read the added formulas (or any pre-existing formulas) from the binding with the `Binding.getDataAsync` method - it returns only the data displayed in the bound cells.</span></span></td> </tr> <tr> <td><span data-ttu-id="0244e-224">Un objet [Office.TableData](xref:office.Office.TableData) et la forme du tableau correspond à la table liée.</span><span class="sxs-lookup"><span data-stu-id="0244e-224">An [Office.TableData](xref:office.Office.TableData) object, and the shape of the table matches the bound table.</span></span></td> <td><span data-ttu-id="0244e-225">L’ensemble spécifié de lignes et/ou d’en-têtes est écrit, à condition qu’aucune autre donnée des cellules environnantes ne soit remplacée.</span><span class="sxs-lookup"><span data-stu-id="0244e-225">The specified set of rows and/or headers are written, if no other data in surrounding cells will be overwritten.</span></span> <span data-ttu-id="0244e-226">**Remarque**: Si vous spécifiez des formules dans l’objet TableData transmis pour le paramètre *data* , vous ne pouvez pas obtenir les résultats escomptés en raison de la fonctionnalité « colonnes calculées » d’Excel qui duplique automatiquement les formules au sein d’une colonne.</span><span class="sxs-lookup"><span data-stu-id="0244e-226">**Note**: If you specify formulas in the TableData object you pass for the *data* parameter, you might not get the results you expect due to the "calculated columns" feature of Excel, which automatically duplicates formulas within a column.</span></span> <span data-ttu-id="0244e-227">Pour contourner ce problème lorsque vous souhaitez écrire des *données* qui contient des formules à une table liée, essayez de spécifier les données sous forme de tableau de tableaux (au lieu d’un objet TableData) et spécifiez le *paramètre coercionType* en tant que Microsoft.Office.Matrix ou « matrice ».</span><span class="sxs-lookup"><span data-stu-id="0244e-227">To work around this when you want to write *data* that contains formulas to a bound table, try specifying the data as an array of arrays (instead of a TableData object), and specify the *coercionType* as Microsoft.Office.Matrix or "matrix".</span></span></td> </tr> </table>


    <span data-ttu-id="0244e-228">Pour Excel en ligne :</span><span class="sxs-lookup"><span data-stu-id="0244e-228">For Excel Online:</span></span>


    - <span data-ttu-id="0244e-229">Le nombre total de cellules dans la valeur transmise au paramètre de données ne peut pas dépasser 20 000 en un seul appel à cette méthode.</span><span class="sxs-lookup"><span data-stu-id="0244e-229">The total number of cells in the value passed to the data parameter can't exceed 20,000 in a single call to this method.</span></span>


    - <span data-ttu-id="0244e-230">Le nombre de groupes de mise en forme transmis au paramètre cellFormat ne peut pas être supérieur à 100.</span><span class="sxs-lookup"><span data-stu-id="0244e-230">The number of formatting groups passed to the cellFormat parameter can't exceed 100.</span></span> <span data-ttu-id="0244e-231">Un seul groupe de mise en forme se compose d’un ensemble de mises en forme appliqué à une plage de cellules donnée.</span><span class="sxs-lookup"><span data-stu-id="0244e-231">A single formatting group consists of a set of formatting applied to a specified range of cells.</span></span>


    <span data-ttu-id="0244e-232">Dans tous les autres cas, une erreur est renvoyée.</span><span class="sxs-lookup"><span data-stu-id="0244e-232">In all other cases, an error is returned.</span></span>


    <span data-ttu-id="0244e-233">La méthode setDataAsync écrit des données dans un sous-ensemble d’une table ou une liaison de matrice si les paramètres facultatifs startRow et startColumn sont spécifiés, et ils indiquent une plage valide.</span><span class="sxs-lookup"><span data-stu-id="0244e-233">The setDataAsync method will write data in a subset of a table or matrix binding if the optional startRow and startColumn parameters are specified, and they specify a valid range.</span></span>


    <span data-ttu-id="0244e-234">Dans la fonction de rappel passée à la méthode setDataAsync, vous pouvez utiliser les propriétés de l’objet AsyncResult pour renvoyer les informations suivantes.</span><span class="sxs-lookup"><span data-stu-id="0244e-234">In the callback function passed to the setDataAsync method, you can use the properties of the AsyncResult object to return the following information.</span></span>


    <table> <tr> <th><span data-ttu-id="0244e-235">Propriété</span><span class="sxs-lookup"><span data-stu-id="0244e-235">Property</span></span></th> <th><span data-ttu-id="0244e-236">Utiliser pour...</span><span class="sxs-lookup"><span data-stu-id="0244e-236">Use to...</span></span></th> </tr> <tr> <td><span data-ttu-id="0244e-237">AsyncResult.value</span><span class="sxs-lookup"><span data-stu-id="0244e-237">AsyncResult.value</span></span></td> <td><span data-ttu-id="0244e-238">Renvoie toujours undefined car il n’existe aucun objet ou aucune donnée à récupérer.</span><span class="sxs-lookup"><span data-stu-id="0244e-238">Always returns undefined because there is no object or data to retrieve.</span></span></td> </tr> <tr> <td><span data-ttu-id="0244e-239">AsyncResult.status</span><span class="sxs-lookup"><span data-stu-id="0244e-239">AsyncResult.status</span></span></td> <td><span data-ttu-id="0244e-240">Déterminer si l’opération a réussi ou échoué.</span><span class="sxs-lookup"><span data-stu-id="0244e-240">Determine the success or failure of the operation.</span></span></td> </tr> <tr> <td><span data-ttu-id="0244e-241">AsyncResult.error</span><span class="sxs-lookup"><span data-stu-id="0244e-241">AsyncResult.error</span></span></td> <td><span data-ttu-id="0244e-242">Accéder à un objet Error fournissant des informations sur l’erreur en cas d’échec de l’opération.</span><span class="sxs-lookup"><span data-stu-id="0244e-242">Access an Error object that provides error information if the operation failed.</span></span></td> </tr> <tr> <td><span data-ttu-id="0244e-243">AsyncResult.asyncContext</span><span class="sxs-lookup"><span data-stu-id="0244e-243">AsyncResult.asyncContext</span></span></td> <td><span data-ttu-id="0244e-244">Élément de tout type défini par l’utilisateur qui est renvoyé dans l’objet AsyncResult sans être modifié.</span><span class="sxs-lookup"><span data-stu-id="0244e-244">A user-defined item of any type that is returned in the AsyncResult object without being altered.</span></span></td> </tr> </table>
  name: setDataAsync(data, options, callback)
  fullName: setDataAsync(data, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setDataAsync(data: TableData | any, options?: SetBindingDataOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: data
      description: >-
        <span data-ttu-id="0244e-245">Données à définir dans la sélection active.</span><span class="sxs-lookup"><span data-stu-id="0244e-245">The data to be set in the current selection.</span></span> <span data-ttu-id="0244e-246">Types de données possibles par l’hôte :</span><span class="sxs-lookup"><span data-stu-id="0244e-246">Possible data types by host:</span></span>


        <span data-ttu-id="0244e-247">chaîne : Excel, Online Excel, Word et Word en ligne uniquement</span><span class="sxs-lookup"><span data-stu-id="0244e-247">string: Excel, Excel Online, Word, and Word Online only</span></span>


        <span data-ttu-id="0244e-248">tableau de tableaux : Excel et Word uniquement</span><span class="sxs-lookup"><span data-stu-id="0244e-248">array of arrays: Excel and Word only</span></span>


        <span data-ttu-id="0244e-249">[Office.TableData](xref:office.Office.TableData)<!-- -->: Access, Excel et Word uniquement</span><span class="sxs-lookup"><span data-stu-id="0244e-249">[Office.TableData](xref:office.Office.TableData)<!-- -->: Access, Excel, and Word only</span></span>


        <span data-ttu-id="0244e-250">HTML : Word et Word uniquement en ligne</span><span class="sxs-lookup"><span data-stu-id="0244e-250">HTML: Word and Word Online only</span></span>


        <span data-ttu-id="0244e-251">Open XML Office : Word uniquement</span><span class="sxs-lookup"><span data-stu-id="0244e-251">Office Open XML: Word only</span></span>
      type:
      - TableData | any
    - id: options
      description: <span data-ttu-id="0244e-252">Fournit des options définir les données dans une liaison.</span><span class="sxs-lookup"><span data-stu-id="0244e-252">Provides options for how to set the data in a binding.</span></span>
      type:
      - office.Office.SetBindingDataOptions
    - id: callback
      description: <span data-ttu-id="0244e-253">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="0244e-253">Optional.</span></span> <span data-ttu-id="0244e-254">Une fonction qui est appelée quand le rappel retourné, dont le seul paramètre est de type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="0244e-254">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.Binding.setDataAsync_1
  summary: <span data-ttu-id="0244e-255">Écrit des données dans la section liée du document représenté par l’objet de liaison spécifié.</span><span class="sxs-lookup"><span data-stu-id="0244e-255">Writes data to the bound section of the document represented by the specified binding object.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"0244e-256\">Ensembles de ressources</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-256\">Requirement Sets</span></span></td><td><span data-ttu-id=\"0244e-257\">MatrixBindings, TableBindings, TextBindings</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-257\">MatrixBindings, TableBindings, TextBindings</span></span></td></tr></table>\n\n<span data-ttu-id=\"0244e-258\">La valeur passée pour les données contient les données à écrire dans la liaison.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-258\">The value passed for data contains the data to be written in the binding.</span></span> <span data-ttu-id=\"0244e-259\">Le type de valeur passée détermine ce qui est écrit comme décrit dans le tableau suivant.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-259\">The kind of value passed determines what will be written as described in the following table.</span></span>\n\n<table> <tr> <th><span data-ttu-id=\"0244e-260\">`data`valeur</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-260\">`data` value</span></span></th> <th><span data-ttu-id=\"0244e-261\">Données écrites</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-261\">Data written</span></span></th> </tr> <tr> <td><span data-ttu-id=\"0244e-262\">Chaîne</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-262\">A string</span></span></td> <td><span data-ttu-id=\"0244e-263\">Texte brut ou tout ce qui peut être converti en une chaîne est écrit.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-263\">Plain text or anything that can be coerced to a string will be written.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"0244e-264\">Tableau de tableaux (« matrice »)</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-264\">An array of arrays (\"matrix\")</span></span></td> <td><span data-ttu-id=\"0244e-265\">Des données tabulaires sans en-têtes sont écrites.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-265\">Tabular data without headers will be written.</span></span> <span data-ttu-id=\"0244e-266\">Par exemple, pour écrire des données sur trois lignes et deux colonnes, vous pouvez passer un tableau comme suit : `[[\"R1C1\", \"R1C2\"], [\"R2C1\", \"R2C2\"], [\"R3C1\", \"R3C2\"]]` <!-- -->.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-266\">For example, to write data to three rows in two columns, you can pass an array like this: `[[\"R1C1\", \"R1C2\"], [\"R2C1\", \"R2C2\"], [\"R3C1\", \"R3C2\"]]`<!-- -->.</span></span> <span data-ttu-id=\"0244e-267\">Pour écrire une seule colonne de trois lignes, passez un tableau comme suit : `[[\"R1C1\"], [\"R2C1\"], [\"R3C1\"]]` <!-- -->.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-267\">To write a single column of three rows, pass an array like this: `[[\"R1C1\"], [\"R2C1\"], [\"R3C1\"]]`<!-- -->.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"0244e-268\">Un objet [Office.TableData](xref:office.Office.TableData)</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-268\">An [Office.TableData](xref:office.Office.TableData) object</span></span></td> <td><span data-ttu-id=\"0244e-269\">Un tableau avec des en-têtes est écrit.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-269\">A table with headers will be written.</span></span></td> </tr> </table>\n\n<span data-ttu-id=\"0244e-270\">En outre, ces actions (spécifiques aux applications) s’appliquent lors de l’écriture de données dans une liaison.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-270\">Additionally, these application-specific actions apply when writing data to a binding.</span></span> <span data-ttu-id=\"0244e-271\">Pour Word, le data spécifié est écrit sur la liaison comme suit :</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-271\">For Word, the specified data is written to the binding as follows:</span></span>\n\n<table> <tr> <th><span data-ttu-id=\"0244e-272\">`data`valeur</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-272\">`data` value</span></span></th> <th><span data-ttu-id=\"0244e-273\">Données écrites</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-273\">Data written</span></span></th> </tr> <tr> <td><span data-ttu-id=\"0244e-274\">Chaîne</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-274\">A string</span></span></td> <td><span data-ttu-id=\"0244e-275\">Le texte spécifié est écrit.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-275\">The specified text is written.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"0244e-276\">Un tableau de tableaux (« matrice ») ou d’un objet [Office.TableData](xref:office.Office.TableData)</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-276\">An array of arrays (\"matrix\") or an [Office.TableData](xref:office.Office.TableData) object</span></span></td> <td><span data-ttu-id=\"0244e-277\">Un tableau Word est écrit.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-277\">A Word table is written.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"0244e-278\">HTML</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-278\">HTML</span></span></td> <td><span data-ttu-id=\"0244e-279\">Le code HTML spécifié est écrit.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-279\">The specified HTML is written.</span></span> <span data-ttu-id=\"0244e-280\">Si un du code HTML que vous écrivez n’est pas valide, Word pas génère une erreur.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-280\">If any of the HTML you write is invalid, Word will not raise an error.</span></span> <span data-ttu-id=\"0244e-281\">Word écrit autant le code HTML tel qu’il peut et supprime toutes les données non valides.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-281\">Word will write as much of the HTML as it can and will omit any invalid data.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"0244e-282\">Office Open XML (« Open XML »)</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-282\">Office Open XML (\"Open XML\")</span></span></td> <td><span data-ttu-id=\"0244e-283\">Le code XML spécifié est écrit.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-283\">The specified the XML is written.</span></span></td> </tr> </table>\n\n<span data-ttu-id=\"0244e-284\">Pour Excel, le paramètre data spécifié est écrit sur la liaison comme suit :</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-284\">For Excel, the specified data is written to the binding as follows:</span></span>\n\n<table> <tr> <th><span data-ttu-id=\"0244e-285\">`data`valeur</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-285\">`data` value</span></span></th> <th><span data-ttu-id=\"0244e-286\">Données écrites</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-286\">Data written</span></span></th> </tr> <tr> <td><span data-ttu-id=\"0244e-287\">Chaîne</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-287\">A string</span></span></td> <td><span data-ttu-id=\"0244e-288\">Le texte spécifié est inséré en tant que la valeur de la première cellule liée. Vous pouvez également spécifier une formule valide pour ajouter cette formule dans la cellule liée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-288\">The specified text is inserted as the value of the first bound cell.You can also specify a valid formula to add that formula to the bound cell.</span></span> <span data-ttu-id=\"0244e-289\">Par exemple, la définition du paramètre data sur `\"=SUM(A1:A5)\"` totalisera les valeurs de la plage spécifiée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-289\">For example, setting data to `\"=SUM(A1:A5)\"` will total the values in the specified range.</span></span> <span data-ttu-id=\"0244e-290\">Toutefois, après avoir défini une formule sur la cellule liée, vous ne pouvez pas lire la formule ajoutée (ni les formules préexistantes) à partir de la cellule liée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-290\">However, when you set a formula on the bound cell, after doing so, you can't read the added formula (or any pre-existing formula) from the bound cell.</span></span> <span data-ttu-id=\"0244e-291\">Si vous appelez la méthode Binding.getDataAsync sur la cellule liée à lire ses données, la méthode peut retourner uniquement les données affichées dans la cellule (résultat de la formule).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-291\">If you call the Binding.getDataAsync method on the bound cell to read its data, the method can return only the data displayed in the cell (the formula's result).</span></span></td> </tr> <tr> <td><span data-ttu-id=\"0244e-292\">Tableau de tableaux (\"matrix\") et la forme correspond exactement à la forme de la liaison spécifiée</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-292\">An array of arrays (\"matrix\"), and the shape exactly matches the shape of the binding specified</span></span></td> <td><span data-ttu-id=\"0244e-293\">L’ensemble de lignes et de colonnes est écrit. Vous pouvez également spécifier un tableau de tableaux qui contiennent des formules valides pour les ajouter aux cellules liées.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-293\">The set of rows and columns are written.You can also specify an array of arrays that contain valid formulas to add them to the bound cells.</span></span> <span data-ttu-id=\"0244e-294\">Par exemple, définition des données `[[\"=SUM(A1:A5)\",\"=AVERAGE(A1:A5)\"]]` ajoute ces deux formules dans une liaison qui contient deux cellules.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-294\">For example, setting data to `[[\"=SUM(A1:A5)\",\"=AVERAGE(A1:A5)\"]]` will add those two formulas to a binding that contains two cells.</span></span> <span data-ttu-id=\"0244e-295\">Comme lors de la définition d’une formule dans une seule cellule liée, vous ne peut pas lire les formules ajoutés (ou les formules existants) à partir de la liaison avec la `Binding.getDataAsync` méthode - il renvoie uniquement les données affichées dans les cellules liées.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-295\">Just as when setting a formula on a single bound cell, you can't read the added formulas (or any pre-existing formulas) from the binding with the `Binding.getDataAsync` method - it returns only the data displayed in the bound cells.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"0244e-296\">Un objet [Office.TableData](xref:office.Office.TableData) et la forme du tableau correspond à la table liée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-296\">An [Office.TableData](xref:office.Office.TableData) object, and the shape of the table matches the bound table.</span></span></td> <td><span data-ttu-id=\"0244e-297\">L’ensemble spécifié de lignes et/ou d’en-têtes est écrit, à condition qu’aucune autre donnée des cellules environnantes ne soit remplacée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-297\">The specified set of rows and/or headers are written, if no other data in surrounding cells will be overwritten.</span></span> <span data-ttu-id=\"0244e-298\">**Remarque**: Si vous spécifiez des formules dans l’objet TableData transmis pour le paramètre *data* , vous ne pouvez pas obtenir les résultats escomptés en raison de la fonctionnalité « colonnes calculées » d’Excel qui duplique automatiquement les formules au sein d’une colonne.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-298\">**Note**: If you specify formulas in the TableData object you pass for the *data* parameter, you might not get the results you expect due to the \"calculated columns\" feature of Excel, which automatically duplicates formulas within a column.</span></span> <span data-ttu-id=\"0244e-299\">Pour contourner ce problème lorsque vous souhaitez écrire des *données* qui contient des formules à une table liée, essayez de spécifier les données sous forme de tableau de tableaux (au lieu d’un objet TableData) et spécifiez le *paramètre coercionType* en tant que Microsoft.Office.Matrix ou « matrice ».</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-299\">To work around this when you want to write *data* that contains formulas to a bound table, try specifying the data as an array of arrays (instead of a TableData object), and specify the *coercionType* as Microsoft.Office.Matrix or \"matrix\".</span></span></td> </tr> </table>\n\n<span data-ttu-id=\"0244e-300\">Pour Excel en ligne :</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-300\">For Excel Online:</span></span>\n\n- <span data-ttu-id=\"0244e-301\">Le nombre total de cellules dans la valeur transmise au paramètre de données ne peut pas dépasser 20 000 en un seul appel à cette méthode.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-301\">The total number of cells in the value passed to the data parameter can't exceed 20,000 in a single call to this method.</span></span>\n\n- <span data-ttu-id=\"0244e-302\">Le nombre de groupes de mise en forme transmis au paramètre cellFormat ne peut pas être supérieur à 100.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-302\">The number of formatting groups passed to the cellFormat parameter can't exceed 100.</span></span> <span data-ttu-id=\"0244e-303\">Un seul groupe de mise en forme se compose d’un ensemble de mises en forme appliqué à une plage de cellules donnée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-303\">A single formatting group consists of a set of formatting applied to a specified range of cells.</span></span>\n\n<span data-ttu-id=\"0244e-304\">Dans tous les autres cas, une erreur est renvoyée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-304\">In all other cases, an error is returned.</span></span>\n\n<span data-ttu-id=\"0244e-305\">La méthode setDataAsync écrit des données dans un sous-ensemble d’une table ou une liaison de matrice si les paramètres facultatifs startRow et startColumn sont spécifiés, et ils indiquent une plage valide.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-305\">The setDataAsync method will write data in a subset of a table or matrix binding if the optional startRow and startColumn parameters are specified, and they specify a valid range.</span></span>\n\n<span data-ttu-id=\"0244e-306\">Dans la fonction de rappel passée à la méthode setDataAsync, vous pouvez utiliser les propriétés de l’objet AsyncResult pour renvoyer les informations suivantes.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-306\">In the callback function passed to the setDataAsync method, you can use the properties of the AsyncResult object to return the following information.</span></span>\n\n<table> <tr> <th><span data-ttu-id=\"0244e-307\">Propriété</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-307\">Property</span></span></th> <th><span data-ttu-id=\"0244e-308\">Utiliser pour...</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-308\">Use to...</span></span></th> </tr> <tr> <td><span data-ttu-id=\"0244e-309\">AsyncResult.value</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-309\">AsyncResult.value</span></span></td> <td><span data-ttu-id=\"0244e-310\">Renvoie toujours undefined car il n’existe aucun objet ou aucune donnée à récupérer.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-310\">Always returns undefined because there is no object or data to retrieve.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"0244e-311\">AsyncResult.status</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-311\">AsyncResult.status</span></span></td> <td><span data-ttu-id=\"0244e-312\">Déterminer si l’opération a réussi ou échoué.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-312\">Determine the success or failure of the operation.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"0244e-313\">AsyncResult.error</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-313\">AsyncResult.error</span></span></td> <td><span data-ttu-id=\"0244e-314\">Accéder à un objet Error fournissant des informations sur l’erreur en cas d’échec de l’opération.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-314\">Access an Error object that provides error information if the operation failed.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"0244e-315\">AsyncResult.asyncContext</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-315\">AsyncResult.asyncContext</span></span></td> <td><span data-ttu-id=\"0244e-316\">Élément de tout type défini par l’utilisateur qui est renvoyé dans l’objet AsyncResult sans être modifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-316\">A user-defined item of any type that is returned in the AsyncResult object without being altered.</span></span></td> </tr> </table>\n#### <span data-ttu-id=\"0244e-317\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-317\">Examples</span></span>\n\n```javascript\nfunction setBindingData() {\n    Office.select(\"bindings#MyBinding\").setDataAsync('Hello World!', function (asyncResult) { });\n}\n\n// Specifying the optional coercionType parameter lets you specify the kind of data you want to write to a binding.\n// For example, in Word if you want to write HTML to a text binding, you can specify the coercionType parameter \n// as \"html\" as shown in the following example, which uses HTML <b> tags to make \"Hello\" bold.\nfunction writeHtmlData() {\n    Office.select(\"bindings#myBinding\").setDataAsync(\n        \"<b>Hello</b> World!\", {coercionType: \"html\"}, function (asyncResult) {\n        if (asyncResult.status == \"failed\") {\n            write('Error: ' + asyncResult.error.message);\n        }\n    });\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n\n// In this example, the call to setDataAsync passes the data parameter as an array of arrays\n// (to create a single column of three rows), and specifies the data structure with the \n// coercionType parameter as a \"matrix\".\nfunction writeBoundDataMatrix() {\n    Office.select(\"bindings#myBinding\").setDataAsync(\n        [['Berlin'],['Munich'],['Duisburg']],{ coercionType: \"matrix\" }, function (asyncResult) {\n        if (asyncResult.status == \"failed\") {\n            write('Error: ' + asyncResult.error.message);\n        } else {\n            write('Bound data: ' + asyncResult.value);\n        }\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n\n// In the writeBoundDataTable function in this example, the call to setDataAsync passes the data parameter \n// as a TableData object (to write three columns and three rows), and specifies the data structure\n// with the coercionType parameter as a \"table\".\n\n// In the updateTableData function, the call to setDataAsync again passes the data parameter as a TableData object,\n// but as a single column with a new header and three rows, to update the values in the last column \n// of the table created with the writeBoundDataTable function. The optional zero-based startColumn parameter \n// is specified as 2 to replace the values in the third column of the table.\nfunction writeBoundDataTable() {\n    // Create a TableData object.\n    var myTable = new Office.TableData();\n    myTable.headers = ['First Name', 'Last Name', 'Grade'];\n    myTable.rows = [['Kim', 'Abercrombie', 'A'], ['Junmin','Hao', 'C'],['Toni','Poe','B']];\n\n    // Set myTable in the binding.\n    Office.select(\"bindings#myBinding\").setDataAsync(myTable, { coercionType: \"table\" }, \n        function (asyncResult) {\n            if (asyncResult.status == Office.AsyncResultStatus.Failed) {\n                write('Error: '+ asyncResult.error.message);\n        } else {\n            write('Bound data: ' + asyncResult.value);\n        }\n    });\n}\n\n// Replace last column with different data.\nfunction updateTableData() {\n    var newTable = new Office.TableData();\n    newTable.headers = [\"Gender\"];\n    newTable.rows = [[\"M\"],[\"M\"],[\"F\"]];\n    Office.select(\"bindings#myBinding\").setDataAsync(newTable, { coercionType: \"table\", startColumn:2 }, \n        function (asyncResult) {\n            if (asyncResult.status == Office.AsyncResultStatus.Failed) {\n                write('Error: '+ asyncResult.error.message);\n        } else {\n            write('Bound data: ' + asyncResult.value);\n        }     \n    });   \n}\n\n// In this example, the following call passes two formatting groups to cellFormat.\nOffice.select(\"bindings#myBinding\").setDataAsync([['Berlin'],['Munich'],['Duisburg']],\n  {cellFormat:[{cells: {row: 1}, format: {fontColor: \"yellow\"}}, \n      {cells: {row: 3, column: 4}, format: {borderColor: \"white\", fontStyle: \"bold\"}}]}, \n  function (asyncResult){});\n```"
  name: setDataAsync(data, callback)
  fullName: setDataAsync(data, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setDataAsync(data: TableData | any, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: data
      description: >-
        <span data-ttu-id="0244e-318">Données à définir dans la sélection active.</span><span class="sxs-lookup"><span data-stu-id="0244e-318">The data to be set in the current selection.</span></span> <span data-ttu-id="0244e-319">Types de données possibles par l’hôte :</span><span class="sxs-lookup"><span data-stu-id="0244e-319">Possible data types by host:</span></span>


        <span data-ttu-id="0244e-320">chaîne : Excel, Online Excel, Word et Word en ligne uniquement</span><span class="sxs-lookup"><span data-stu-id="0244e-320">string: Excel, Excel Online, Word, and Word Online only</span></span>


        <span data-ttu-id="0244e-321">tableau de tableaux : Excel et Word uniquement</span><span class="sxs-lookup"><span data-stu-id="0244e-321">array of arrays: Excel and Word only</span></span>


        <span data-ttu-id="0244e-322">[Office.TableData](xref:office.Office.TableData)<!-- -->: Access, Excel et Word uniquement</span><span class="sxs-lookup"><span data-stu-id="0244e-322">[Office.TableData](xref:office.Office.TableData)<!-- -->: Access, Excel, and Word only</span></span>


        <span data-ttu-id="0244e-323">HTML : Word et Word uniquement en ligne</span><span class="sxs-lookup"><span data-stu-id="0244e-323">HTML: Word and Word Online only</span></span>


        <span data-ttu-id="0244e-324">Open XML Office : Word uniquement</span><span class="sxs-lookup"><span data-stu-id="0244e-324">Office Open XML: Word only</span></span>
      type:
      - TableData | any
    - id: callback
      description: <span data-ttu-id="0244e-325">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="0244e-325">Optional.</span></span> <span data-ttu-id="0244e-326">Une fonction qui est appelée quand le rappel retourné, dont le seul paramètre est de type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="0244e-326">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.Binding.document
  summary: <span data-ttu-id="0244e-327">Obtenez l’objet Document associé à la liaison.</span><span class="sxs-lookup"><span data-stu-id="0244e-327">Get the Document object associated with the binding.</span></span>
  name: document
  fullName: document
  langs:
  - typeScript
  type: property
  syntax:
    content: 'document: Office.Document;'
    return:
      type:
      - office.Office.Document
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"0244e-328\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-328\">Examples</span></span>\n\n```javascript\nOffice.context.document.bindings.getByIdAsync(\"myBinding\", function (asyncResult) {\n    write(asyncResult.value.document.url);\n});\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
- uid: office.Office.Binding.id
  summary: <span data-ttu-id="0244e-329">Chaîne qui identifie de manière unique cette liaison parmi les liaisons dans le même objet [Office.Document](xref:office.Office.Document) .</span><span class="sxs-lookup"><span data-stu-id="0244e-329">A string that uniquely identifies this binding among the bindings in the same [Office.Document](xref:office.Office.Document) object.</span></span>
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'id: string;'
    return:
      type:
      - string
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"0244e-330\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-330\">Examples</span></span>\n\n```javascript\nOffice.context.document.bindings.getByIdAsync(\"myBinding\", function (asyncResult) {\n    write(asyncResult.value.id);\n});\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
- uid: office.Office.Binding.type
  summary: <span data-ttu-id="0244e-331">Obtient le type de la liaison.</span><span class="sxs-lookup"><span data-stu-id="0244e-331">Gets the type of the binding.</span></span>
  name: type
  fullName: type
  langs:
  - typeScript
  type: property
  syntax:
    content: 'type: Office.BindingType;'
    return:
      type:
      - Office.BindingType
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"0244e-332\">範例</span><span class=\"sxs-lookup\"><span data-stu-id=\"0244e-332\">Examples</span></span>\n\n```javascript\nOffice.context.document.bindings.getByIdAsync(\"MyBinding\", function (asyncResult) { \n    write(asyncResult.value.type); \n}) \n\n// Function that writes to a div with id='message' on the page. \nfunction write(message){ \n    document.getElementById('message').innerText += message;  \n}\n```"
