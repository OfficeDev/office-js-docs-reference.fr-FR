### YamlMime:UniversalReference
items:
  - uid: office.OfficeExtension.ClientRequestContext
    summary: Objet RequestContext abstrait qui facilite les demandes à l'application Office hôte. Les `Excel.run` méthodes `Word.run` et fournissent un contexte de demande.
    name: OfficeExtension.ClientRequestContext
    fullName: OfficeExtension.ClientRequestContext
    langs:
      - typeScript
    type: class
    package: office
    children:
      - office.OfficeExtension.ClientRequestContext.(constructor)
      - office.OfficeExtension.ClientRequestContext.debugInfo
      - office.OfficeExtension.ClientRequestContext.load
      - office.OfficeExtension.ClientRequestContext.loadRecursive
      - office.OfficeExtension.ClientRequestContext.requestHeaders
      - office.OfficeExtension.ClientRequestContext.sync
      - office.OfficeExtension.ClientRequestContext.trace
      - office.OfficeExtension.ClientRequestContext.trackedObjects
  - uid: office.OfficeExtension.ClientRequestContext.(constructor)
    summary: Construit une nouvelle instance de la `ClientRequestContext` classe.
    name: (constructor)(url)
    fullName: (constructor)(url)
    langs:
      - typeScript
    type: constructor
    syntax:
      content: 'constructor(url?: string);'
      parameters:
        - id: url
          description: ''
          type:
            - string
  - uid: office.OfficeExtension.ClientRequestContext.debugInfo
    summary: Informations de débogage
    name: debugInfo
    fullName: debugInfo
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly debugInfo: RequestContextDebugInfo;'
      return:
        type:
          - office.OfficeExtension.RequestContextDebugInfo
  - uid: office.OfficeExtension.ClientRequestContext.load
    summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez appeler `context.sync()` avant de lire les propriétés.
    name: 'load(object, option)'
    fullName: 'load(object, option)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(object: ClientObject, option?: string | string[] | LoadOption): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: object
          description: Objet dont les propriétés sont chargées.
          type:
            - office.OfficeExtension.ClientObject
        - id: option
          description: 'Une chaîne délimitée par des virgules, ou un tableau de chaînes, qui spécifie les propriétés à charger ou un objet [objet officeextension. LoadOption](xref:office.OfficeExtension.LoadOption) .'
          type:
            - 'string | string[] | LoadOption'
  - uid: office.OfficeExtension.ClientRequestContext.loadRecursive
    summary: |-
      Met en file d'attente une commande pour charger de manière récursive les propriétés spécifiées de l'objet et ses propriétés de navigation.

      Vous devez appeler `context.sync()` avant de lire les propriétés.
    name: 'loadRecursive(object, options, maxDepth)'
    fullName: 'loadRecursive(object, options, maxDepth)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'loadRecursive(object: ClientObject, options: { [typeName: string]: string | string[] | LoadOption }, maxDepth?: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: object
          description: Objet à charger.
          type:
            - office.OfficeExtension.ClientObject
        - id: options
          description: 'Paire clé-valeur des options de chargement pour les types, comme`{ "Workbook": "worksheets,tables",  "Worksheet": "tables",  "Tables": "name" }`'
          type:
            - '{ [typeName: string]: string | string[] | LoadOption }'
        - id: maxDepth
          description: Profondeur récursive maximale.
          type:
            - number
  - uid: office.OfficeExtension.ClientRequestContext.requestHeaders
    summary: En-têtes de demande
    name: requestHeaders
    fullName: requestHeaders
    langs:
      - typeScript
    type: property
    syntax:
      content: 'requestHeaders: { [name: string]: string };'
      return:
        type:
          - '{ [name: string]: string }'
  - uid: office.OfficeExtension.ClientRequestContext.sync
    summary: 'Synchronise l''état entre les objets proxy JavaScript et le document Office, en exécutant les instructions en file d''attente dans le contexte de la demande et en extrayant les propriétés des objets Office chargés à utiliser dans votre code. Cette méthode renvoie une promesse, qui est résolue à la fin de la synchronisation.'
    name: sync(passThroughValue)
    fullName: sync(passThroughValue)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'sync<T>(passThroughValue?: T): Promise<T>;'
      return:
        type:
          - Promise<T>
        description: ''
      parameters:
        - id: passThroughValue
          description: ''
          type:
            - T
  - uid: office.OfficeExtension.ClientRequestContext.trace
    summary: 'Ajoute un message de suivi à la file d''attente. Si la promesse renvoyée `context.sync()` par est rejetée en raison d''une erreur, un tableau «. traceMessages» est ajouté à l''objet objet officeextension. Error, contenant tous les messages de suivi qui ont été exécutés. Ces messages peuvent vous aider à surveiller la séquence d''exécution du programme et à détecter la cause de l''erreur.'
    name: trace(message)
    fullName: trace(message)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'trace(message: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: message
          description: ''
          type:
            - string
  - uid: office.OfficeExtension.ClientRequestContext.trackedObjects
    summary: Collection d'objets qui sont suivis pour des ajustements automatiques en fonction des modifications apportées au document.
    name: trackedObjects
    fullName: trackedObjects
    langs:
      - typeScript
    type: property
    syntax:
      content: 'trackedObjects: TrackedObjects;'
      return:
        type:
          - office.OfficeExtension.TrackedObjects