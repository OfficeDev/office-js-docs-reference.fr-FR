### YamlMime:UniversalReference
ms.openlocfilehash: e19e206ee7cf1bf95dde3bd06e6d84c8ff29834c
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 02/13/2019
ms.locfileid: "29977446"
items:
- uid: office.OfficeExtension.ClientRequestContext
  summary: <span data-ttu-id="6399c-101">Objet RequestContext abstrait qui facilite les demandes à l’application Office hôte.</span><span class="sxs-lookup"><span data-stu-id="6399c-101">An abstract RequestContext object that facilitates requests to the host Office application.</span></span> <span data-ttu-id="6399c-102">Le `Excel.run` et `Word.run` méthodes fournissent un contexte de requête.</span><span class="sxs-lookup"><span data-stu-id="6399c-102">The `Excel.run` and `Word.run` methods provide a request context.</span></span>
  name: OfficeExtension.ClientRequestContext
  fullName: OfficeExtension.ClientRequestContext
  langs:
  - typeScript
  type: class
  package: office
  children:
  - office.OfficeExtension.ClientRequestContext.(constructor)
  - office.OfficeExtension.ClientRequestContext.debugInfo
  - office.OfficeExtension.ClientRequestContext.load
  - office.OfficeExtension.ClientRequestContext.loadRecursive
  - office.OfficeExtension.ClientRequestContext.requestHeaders
  - office.OfficeExtension.ClientRequestContext.sync
  - office.OfficeExtension.ClientRequestContext.trace
  - office.OfficeExtension.ClientRequestContext.trackedObjects
- uid: office.OfficeExtension.ClientRequestContext.(constructor)
  name: (constructor)(url)
  fullName: (constructor)(url)
  langs:
  - typeScript
  type: constructor
  syntax:
    content: 'constructor(url?: string);'
    parameters:
    - id: url
      description: ''
      type:
      - string
- uid: office.OfficeExtension.ClientRequestContext.debugInfo
  summary: <span data-ttu-id="6399c-103">Informations de débogage</span><span class="sxs-lookup"><span data-stu-id="6399c-103">Debug information</span></span>
  name: debugInfo
  fullName: debugInfo
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly debugInfo: RequestContextDebugInfo;'
    return:
      type:
      - office.OfficeExtension.RequestContextDebugInfo
- uid: office.OfficeExtension.ClientRequestContext.load
  summary: <span data-ttu-id="6399c-104">Files d’attente d’une commande pour charger les propriétés de l’objet spécifiées.</span><span class="sxs-lookup"><span data-stu-id="6399c-104">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="6399c-105">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="6399c-105">You must call `context.sync()` before reading the properties.</span></span>
  name: load(object, option)
  fullName: load(object, option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(object: ClientObject, option?: string | string[] | LoadOption): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: object
      description: <span data-ttu-id="6399c-106">L’objet dont les propriétés sont chargées.</span><span class="sxs-lookup"><span data-stu-id="6399c-106">The object whose properties are loaded.</span></span>
      type:
      - office.OfficeExtension.ClientObject
    - id: option
      description: <span data-ttu-id="6399c-107">Une chaîne délimitée par des virgules, ou un tableau de chaînes, qui spécifie les propriétés de chargement ou d’un objet [OfficeExtension.LoadOption](xref:office.OfficeExtension.LoadOption) .</span><span class="sxs-lookup"><span data-stu-id="6399c-107">A comma-delimited string, or array of strings, that specifies the properties to load, or an [OfficeExtension.LoadOption](xref:office.OfficeExtension.LoadOption) object.</span></span>
      type:
      - string | string[] | LoadOption
- uid: office.OfficeExtension.ClientRequestContext.loadRecursive
  summary: >-
    <span data-ttu-id="6399c-108">Files d’attente d’une commande de manière récursive de charger les propriétés de l’objet spécifiées et ses propriétés de navigation.</span><span class="sxs-lookup"><span data-stu-id="6399c-108">Queues up a command to recursively load the specified properties of the object and its navigation properties.</span></span>


    <span data-ttu-id="6399c-109">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="6399c-109">You must call `context.sync()` before reading the properties.</span></span>
  name: loadRecursive(object, options, maxDepth)
  fullName: loadRecursive(object, options, maxDepth)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'loadRecursive(object: ClientObject, options: { [typeName: string]: string | string[] | LoadOption }, maxDepth?: number): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: object
      description: <span data-ttu-id="6399c-110">L’objet à charger.</span><span class="sxs-lookup"><span data-stu-id="6399c-110">The object to be loaded.</span></span>
      type:
      - office.OfficeExtension.ClientObject
    - id: options
      description: '<span data-ttu-id="6399c-111">La paire clé-valeur des options de charge pour les types, tels que`{ "Workbook": "worksheets,tables",  "Worksheet": "tables",  "Tables": "name" }`</span><span class="sxs-lookup"><span data-stu-id="6399c-111">The key-value pairing of load options for the types, such as `{ "Workbook": "worksheets,tables",  "Worksheet": "tables",  "Tables": "name" }`</span></span>'
      type:
      - '{ [typeName: string]: string | string[] | LoadOption }'
    - id: maxDepth
      description: <span data-ttu-id="6399c-112">Profondeur maximale récursive.</span><span class="sxs-lookup"><span data-stu-id="6399c-112">The maximum recursive depth.</span></span>
      type:
      - number
- uid: office.OfficeExtension.ClientRequestContext.requestHeaders
  summary: <span data-ttu-id="6399c-113">En-têtes de demande</span><span class="sxs-lookup"><span data-stu-id="6399c-113">Request headers</span></span>
  name: requestHeaders
  fullName: requestHeaders
  langs:
  - typeScript
  type: property
  syntax:
    content: 'requestHeaders: { [name: string]: string };'
    return:
      type:
      - '{ [name: string]: string }'
- uid: office.OfficeExtension.ClientRequestContext.sync
  summary: <span data-ttu-id="6399c-114">Synchronise l’état entre les objets proxy JavaScript et le bureau de document, en exécutant les instructions en file d’attente sur le contexte de la demande et la récupération des propriétés des objets Office chargés pour une utilisation dans votre code.</span><span class="sxs-lookup"><span data-stu-id="6399c-114">Synchronizes the state between JavaScript proxy objects and the Office document, by executing instructions queued on the request context and retrieving properties of loaded Office objects for use in your code.</span></span> <span data-ttu-id="6399c-115">Cette méthode renvoie une promesse, qui est résolue lorsque la synchronisation est terminée.</span><span class="sxs-lookup"><span data-stu-id="6399c-115">This method returns a promise, which is resolved when the synchronization is complete.</span></span>
  name: sync(passThroughValue)
  fullName: sync(passThroughValue)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'sync<T>(passThroughValue?: T): Promise<T>;'
    return:
      type:
      - Promise<T>
      description: ''
    parameters:
    - id: passThroughValue
      description: ''
      type:
      - T
- uid: office.OfficeExtension.ClientRequestContext.trace
  summary: <span data-ttu-id="6399c-116">Ajoute un message de suivi à la file d’attente.</span><span class="sxs-lookup"><span data-stu-id="6399c-116">Adds a trace message to the queue.</span></span> <span data-ttu-id="6399c-117">Si promesse renvoyé par `context.sync()` est refusée en raison d’une erreur, cette opération ajoute un tableau « .traceMessages » à l’objet OfficeExtension.Error, qui contient tous les messages de suivi qui ont été exécutées.</span><span class="sxs-lookup"><span data-stu-id="6399c-117">If the promise returned by `context.sync()` is rejected due to an error, this adds a ".traceMessages" array to the OfficeExtension.Error object, containing all trace messages that were executed.</span></span> <span data-ttu-id="6399c-118">Les messages ci-dessous peuvent vous aider à contrôler la séquence de l’exécution du programme et de détecter la cause de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="6399c-118">These messages can help you monitor the program execution sequence and detect the cause of the error.</span></span>
  name: trace(message)
  fullName: trace(message)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'trace(message: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: message
      description: ''
      type:
      - string
- uid: office.OfficeExtension.ClientRequestContext.trackedObjects
  summary: <span data-ttu-id="6399c-119">Collection d’objets qui sont suivis des ajustements automatiques en fonction d’entourant les modifications dans le document.</span><span class="sxs-lookup"><span data-stu-id="6399c-119">Collection of objects that are tracked for automatic adjustments based on surrounding changes in the document.</span></span>
  name: trackedObjects
  fullName: trackedObjects
  langs:
  - typeScript
  type: property
  syntax:
    content: 'trackedObjects: TrackedObjects;'
    return:
      type:
      - office.OfficeExtension.TrackedObjects
