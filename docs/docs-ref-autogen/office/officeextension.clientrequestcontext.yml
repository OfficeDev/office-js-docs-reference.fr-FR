### YamlMime:UniversalReference
ms.openlocfilehash: 7ee32772aa6db98da79d2d99e956024ab3d3059f
ms.sourcegitcommit: a36161c2113d94680dc68150d024e68bdf0390fa
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 10/10/2018
ms.locfileid: "25458823"
items:
- uid: office.OfficeExtension.ClientRequestContext
  summary: Objet RequestContext abstrait qui facilite les demandes à l’application Office hôte. Le `Excel.run` et `Word.run` méthodes fournissent un contexte de requête.
  name: OfficeExtension.ClientRequestContext
  fullName: office.OfficeExtension.ClientRequestContext
  langs:
  - typeScript
  type: class
  package: office
  children:
  - office.OfficeExtension.ClientRequestContext.constructor
  - office.OfficeExtension.ClientRequestContext.debugInfo
  - office.OfficeExtension.ClientRequestContext.load
  - office.OfficeExtension.ClientRequestContext.loadRecursive
  - office.OfficeExtension.ClientRequestContext.requestHeaders
  - office.OfficeExtension.ClientRequestContext.sync
  - office.OfficeExtension.ClientRequestContext.trace
  - office.OfficeExtension.ClientRequestContext.trackedObjects
- uid: office.OfficeExtension.ClientRequestContext.constructor
  summary: Crée une nouvelle instance de la classe [ClientRequestContext](xref:office.OfficeExtension.ClientRequestContext)
  name: constructor(url)
  fullName: office.OfficeExtension.ClientRequestContext.constructor
  langs:
  - typeScript
  type: constructor
  syntax:
    content: 'constructor(url?: string);'
    parameters:
    - id: url
      description: ''
      type:
      - string
- uid: office.OfficeExtension.ClientRequestContext.debugInfo
  summary: Informations de débogage
  name: debugInfo
  fullName: office.OfficeExtension.ClientRequestContext.debugInfo
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly debugInfo: RequestContextDebugInfo;'
    return:
      type:
      - office.OfficeExtension.RequestContextDebugInfo
- uid: office.OfficeExtension.ClientRequestContext.load
  summary: Files d’attente d’une commande pour charger les propriétés de l’objet spécifiées. Vous devez appeler `context.sync()` avant de lire les propriétés.
  name: load(object, option)
  fullName: office.OfficeExtension.ClientRequestContext.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(object: ClientObject, option?: string | string[] | LoadOption): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: object
      description: L’objet dont les propriétés sont chargées.
      type:
      - office.OfficeExtension.ClientObject
    - id: option
      description: Une chaîne délimitée par des virgules, ou un tableau de chaînes, qui spécifie les propriétés de chargement ou d’un objet [OfficeExtension.LoadOption](xref:office.OfficeExtension.LoadOption) .
      type:
      - string | string[] | LoadOption
- uid: office.OfficeExtension.ClientRequestContext.loadRecursive
  summary: >-
    Files d’attente d’une commande de manière récursive de charger les propriétés de l’objet spécifiées et ses propriétés de navigation.


    Vous devez appeler `context.sync()` avant de lire les propriétés.
  name: loadRecursive(object, options, maxDepth)
  fullName: office.OfficeExtension.ClientRequestContext.loadRecursive
  langs:
  - typeScript
  type: method
  syntax:
    content: 'loadRecursive(object: ClientObject, options: { [typeName: string]: string | string[] | LoadOption }, maxDepth?: number): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: object
      description: L’objet à charger.
      type:
      - office.OfficeExtension.ClientObject
    - id: options
      description: 'La paire clé-valeur des options de charge pour les types, tels que`{ "Workbook": "worksheets,tables",  "Worksheet": "tables",  "Tables": "name" }`'
      type:
      - '{ [typeName: string]: string | string[] | LoadOption }'
    - id: maxDepth
      description: Profondeur maximale récursive.
      type:
      - number
- uid: office.OfficeExtension.ClientRequestContext.requestHeaders
  summary: En-têtes de demande
  name: requestHeaders
  fullName: office.OfficeExtension.ClientRequestContext.requestHeaders
  langs:
  - typeScript
  type: property
  syntax:
    content: 'requestHeaders:'
    return:
      type:
      - '{ [name: string]: string }'
- uid: office.OfficeExtension.ClientRequestContext.sync
  summary: Synchronise l’état entre les objets proxy JavaScript et le bureau de document, en exécutant les instructions en file d’attente sur le contexte de la demande et la récupération des propriétés des objets Office chargés pour une utilisation dans votre code. Cette méthode renvoie une promesse, qui est résolue lorsque la synchronisation est terminée.
  name: sync(passThroughValue)
  fullName: office.OfficeExtension.ClientRequestContext.sync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'sync<T>(passThroughValue?: T): Promise<T>;'
    return:
      type:
      - Promise<T>
      description: ''
    parameters:
    - id: passThroughValue
      description: ''
      type:
      - T
- uid: office.OfficeExtension.ClientRequestContext.trace
  summary: Ajoute un message de suivi à la file d’attente. Si promesse renvoyé par `context.sync()` est refusée en raison d’une erreur, cette opération ajoute un tableau « .traceMessages » à l’objet OfficeExtension.Error, qui contient tous les messages de suivi qui ont été exécutées. Les messages ci-dessous peuvent vous aider à contrôler la séquence de l’exécution du programme et de détecter la cause de l’erreur.
  name: trace(message)
  fullName: office.OfficeExtension.ClientRequestContext.trace
  langs:
  - typeScript
  type: method
  syntax:
    content: 'trace(message: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: message
      description: ''
      type:
      - string
- uid: office.OfficeExtension.ClientRequestContext.trackedObjects
  summary: Collection d’objets qui sont suivis des ajustements automatiques en fonction d’entourant les modifications dans le document.
  name: trackedObjects
  fullName: office.OfficeExtension.ClientRequestContext.trackedObjects
  langs:
  - typeScript
  type: property
  syntax:
    content: 'trackedObjects: TrackedObjects;'
    return:
      type:
      - office.OfficeExtension.TrackedObjects
