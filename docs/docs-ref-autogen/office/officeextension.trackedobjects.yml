### YamlMime:UniversalReference
ms.openlocfilehash: 455949a691d768aafeda3e370b5827103ce57818
ms.sourcegitcommit: beffe9455dace422e85b92f0105c54ff7b594cbf
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 09/20/2018
ms.locfileid: "24042909"
items:
- uid: office.OfficeExtension.TrackedObjects
  summary: Collection d’objets marques, contenues dans un contexte de requête. Consultez la rubrique « context.trackedObjects » pour plus d’informations.
  name: OfficeExtension.TrackedObjects
  fullName: office.OfficeExtension.TrackedObjects
  langs:
  - typeScript
  type: class
  package: office
  children:
  - office.OfficeExtension.TrackedObjects.add
  - office.OfficeExtension.TrackedObjects.remove
- uid: office.OfficeExtension.TrackedObjects.add
  summary: >-
    Effectuer le suivi d’un nouvel objet pour ajustement automatique en fonction d’entourant les modifications dans le document. Seuls certains types d’objet ont besoin. Si vous utilisez un objet dans les appels de « .sync » et en dehors de l’exécution séquentielle d’un lot de « .run » et obtenir une erreur « InvalidObjectPath » lors de la définition d’une propriété ou d’appeler une méthode sur l’objet, vous devez avoir ajouté l’objet à la collection de l’objet suivi Lorsque l’objet création.


    Cette méthode a également la signature suivante :


    `add(objects: ClientObject\[\]): void;`Où les objets est un tableau d’objets à suivre.
  name: add(object)
  fullName: office.OfficeExtension.TrackedObjects.add
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(object: ClientObject): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: object
      description: ''
      type:
      - office.OfficeExtension.ClientObject
- uid: office.OfficeExtension.TrackedObjects.remove
  summary: >-
    Libérer de la mémoire associée à un objet qui a été ajouté à cette collection. Comportant de nombreux objets suivis ralentit l’application hôte, donc pensez à libérer les objets que vous ajoutez, une fois que vous avez terminé les utiliser. Vous devez appeler `context.sync()` avant la mémoire version prend effet.


    Cette méthode a également la signature suivante :


    `remove(objects: ClientObject\[\]): void;`Où les objets est un tableau d’objets à supprimer.
  name: remove(object)
  fullName: office.OfficeExtension.TrackedObjects.remove
  langs:
  - typeScript
  type: method
  syntax:
    content: 'remove(object: ClientObject): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: object
      description: ''
      type:
      - office.OfficeExtension.ClientObject
