### YamlMime:UniversalReference
items:
  - uid: office.Office.Document
    summary: <span data-ttu-id="b4495-101">Une classe abstraite qui représente le document avec lequel interagit le complément.</span><span class="sxs-lookup"><span data-stu-id="b4495-101">An abstract class that represents the document the add-in is interacting with.</span></span>
    remarks: '<span data-ttu-id="b4495-102">**Hôtes**: Access, Excel, PowerPoint, Project, Word</span><span class="sxs-lookup"><span data-stu-id="b4495-102">**Hosts**: Access, Excel, PowerPoint, Project, Word</span></span>'
    name: Office.Document
    fullName: Office.Document
    langs:
      - typeScript
    type: interface
    package: office
    children:
      - office.Office.Document.addHandlerAsync
      - office.Office.Document.addHandlerAsync_1
      - office.Office.Document.getActiveViewAsync
      - office.Office.Document.getActiveViewAsync_1
      - office.Office.Document.getFileAsync
      - office.Office.Document.getFileAsync_1
      - office.Office.Document.getFilePropertiesAsync
      - office.Office.Document.getFilePropertiesAsync_1
      - office.Office.Document.getMaxResourceIndexAsync
      - office.Office.Document.getMaxResourceIndexAsync_1
      - office.Office.Document.getMaxTaskIndexAsync
      - office.Office.Document.getMaxTaskIndexAsync_1
      - office.Office.Document.getProjectFieldAsync
      - office.Office.Document.getProjectFieldAsync_1
      - office.Office.Document.getResourceByIndexAsync
      - office.Office.Document.getResourceByIndexAsync_1
      - office.Office.Document.getResourceFieldAsync
      - office.Office.Document.getResourceFieldAsync_1
      - office.Office.Document.getSelectedDataAsync
      - office.Office.Document.getSelectedDataAsync_1
      - office.Office.Document.getSelectedResourceAsync
      - office.Office.Document.getSelectedResourceAsync_1
      - office.Office.Document.getSelectedTaskAsync
      - office.Office.Document.getSelectedTaskAsync_1
      - office.Office.Document.getSelectedViewAsync
      - office.Office.Document.getSelectedViewAsync_1
      - office.Office.Document.getTaskAsync
      - office.Office.Document.getTaskAsync_1
      - office.Office.Document.getTaskByIndexAsync
      - office.Office.Document.getTaskByIndexAsync_1
      - office.Office.Document.getTaskFieldAsync
      - office.Office.Document.getTaskFieldAsync_1
      - office.Office.Document.getWSSUrlAsync
      - office.Office.Document.getWSSUrlAsync_1
      - office.Office.Document.goToByIdAsync
      - office.Office.Document.goToByIdAsync_1
      - office.Office.Document.removeHandlerAsync
      - office.Office.Document.removeHandlerAsync_1
      - office.Office.Document.setResourceFieldAsync
      - office.Office.Document.setResourceFieldAsync_1
      - office.Office.Document.setSelectedDataAsync
      - office.Office.Document.setSelectedDataAsync_1
      - office.Office.Document.setTaskFieldAsync
      - office.Office.Document.setTaskFieldAsync_1
      - office.Office.Document.bindings
      - office.Office.Document.customXmlParts
      - office.Office.Document.mode
      - office.Office.Document.settings
      - office.Office.Document.url
  - uid: office.Office.Document.addHandlerAsync
    summary: <span data-ttu-id="b4495-103">Ajoute un gestionnaire d'événements pour un événement d'objet document.</span><span class="sxs-lookup"><span data-stu-id="b4495-103">Adds an event handler for a Document object event.</span></span>
    remarks: |-
      <span data-ttu-id="b4495-104">**Ensemble de conditions requises**: [DocumentEvents](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#documentevents)</span><span class="sxs-lookup"><span data-stu-id="b4495-104">**Requirement set**: [DocumentEvents](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#documentevents)</span></span>

      <span data-ttu-id="b4495-105">Vous pouvez ajouter plusieurs gestionnaires d'événements pour le eventType spécifié à condition que le nom de chaque fonction de gestionnaire d'événements soit unique.</span><span class="sxs-lookup"><span data-stu-id="b4495-105">You can add multiple event handlers for the specified eventType as long as the name of each event handler function is unique.</span></span>
    name: 'addHandlerAsync(eventType, handler, options, callback)'
    fullName: 'addHandlerAsync(eventType, handler, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addHandlerAsync(eventType: Office.EventType, handler: any, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="b4495-106">Pour un événement d''objet document, le paramètre eventType peut être spécifié `Office.EventType.Document.SelectionChanged` en tant que ou`Office.EventType.Document.ActiveViewChanged`</span><span class="sxs-lookup"><span data-stu-id="b4495-106">For a Document object event, the eventType parameter can be specified as `Office.EventType.Document.SelectionChanged` or `Office.EventType.Document.ActiveViewChanged`</span></span><!-- --><span data-ttu-id="b4495-107">ou la valeur de texte correspondante de cette énumération.</span><span class="sxs-lookup"><span data-stu-id="b4495-107">, or the corresponding text value of this enumeration.</span></span>'
          type:
            - Office.EventType
        - id: handler
          description: '<span data-ttu-id="b4495-108">Fonction du gestionnaire d''événements à ajouter, dont le seul paramètre est de type [Office. propriété documentselectionchangedeventargs](xref:office.Office.DocumentSelectionChangedEventArgs)</span><span class="sxs-lookup"><span data-stu-id="b4495-108">The event handler function to add, whose only parameter is of type [Office.DocumentSelectionChangedEventArgs](xref:office.Office.DocumentSelectionChangedEventArgs)</span></span><!-- --><span data-ttu-id="b4495-109">.</span><span class="sxs-lookup"><span data-stu-id="b4495-109"></span></span> <span data-ttu-id="b4495-110">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="b4495-110">Required.</span></span>'
          type:
            - any
        - id: options
          description: '<span data-ttu-id="b4495-111">Fournit une option permettant de conserver les données de contexte de n''importe quel type, inchangées, pour une utilisation dans un rappel.</span><span class="sxs-lookup"><span data-stu-id="b4495-111">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="b4495-112">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="b4495-112">Optional.</span></span> <span data-ttu-id="b4495-113">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="b4495-113">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b4495-114">.</span><span class="sxs-lookup"><span data-stu-id="b4495-114"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.Document.addHandlerAsync_1
    summary: <span data-ttu-id="b4495-115">Ajoute un gestionnaire d'événements pour un événement d'objet document.</span><span class="sxs-lookup"><span data-stu-id="b4495-115">Adds an event handler for a Document object event.</span></span>
    remarks: |-
      <span data-ttu-id="b4495-116">**Ensemble de conditions requises**: [DocumentEvents](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#documentevents)</span><span class="sxs-lookup"><span data-stu-id="b4495-116">**Requirement set**: [DocumentEvents](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#documentevents)</span></span>

      <span data-ttu-id="b4495-117">Vous pouvez ajouter plusieurs gestionnaires d'événements pour le eventType spécifié à condition que le nom de chaque fonction de gestionnaire d'événements soit unique.</span><span class="sxs-lookup"><span data-stu-id="b4495-117">You can add multiple event handlers for the specified eventType as long as the name of each event handler function is unique.</span></span>

      #### <a name="examples"></a><span data-ttu-id="b4495-118">Exemples</span><span class="sxs-lookup"><span data-stu-id="b4495-118">Examples</span></span>

      ```javascript
      // The following example adds an event handler for the SelectionChanged event of a document
      function addSelectionChangedEventHandler() {
          Office.context.document.addHandlerAsync(Office.EventType.DocumentSelectionChanged, MyHandler);
      }

      function MyHandler(eventArgs) {
          write('Event raised: ' + eventArgs.type);
          doSomethingWithDocument(eventArgs.document);
      }

      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
      ```javascript
      // The following code example adds a handler for the ResourceSelectionChanged event.
      // When the resource selection changes in the document, it gets the GUID of the selected resource.
      // The example assumes your add-in has a reference to the jQuery library and that the
      // following page control is defined in the content div in the page body:
      // <span id="message"></span>

      (function () {
          "use strict";

          // The initialize function must be run each time a new page is loaded.
          Office.initialize = function (reason) {
              $(document).ready(function () {

                  // After the DOM is loaded, add-in-specific code can run.
                  Office.context.document.addHandlerAsync(
                      Office.EventType.ResourceSelectionChanged,
                      getResourceGuid);
              });
          };

          // Get the GUID of the selected resource and display it in the add-in.
          function getResourceGuid() {
              Office.context.document.getSelectedResourceAsync(
                  function (result) {
                      if (result.status === Office.AsyncResultStatus.Failed) {
                          onError(result.error);
                      }
                      else {
                          $('#message').html(result.value);
                      }
                  }
              );
          }

          function onError(error) {
              $('#message').html(error.name + ' ' + error.code + ': ' + error.message);
          }
      })();

      // For a complete code sample that shows how to use a ResourceSelectionChanged
      // event handler in a Project add-in, see "Create your first task pane add-in
      // for Project 2013 by using a text editor."
      // https://docs.microsoft.com/office/dev/add-ins/project/create-your-first-task-pane-add-in-for-project-by-using-a-text-editor
      ```
      ```javascript
      // The following code example adds a handler for the TaskSelectionChanged event.
      // When the task selection changes in the document, it gets the GUID of the
      // selected task.
      // The example assumes your add-in has a reference to the jQuery library and that
      // the following page control is defined in the content div in the page body:
      // <span id="message"></span>

      (function () {
          "use strict";

          // The initialize function must be run each time a new page is loaded.
          Office.initialize = function (reason) {
              $(document).ready(function () {

                  // After the DOM is loaded, add-in-specific code can run.
                  Office.context.document.addHandlerAsync(
                      Office.EventType.TaskSelectionChanged,
                      getTaskGuid);
                  getTaskGuid();
              });
          };

          // Get the GUID of the selected task and display it in the add-in.
          function getTaskGuid() {
              Office.context.document.getSelectedTaskAsync(
                  function (result) {
                      if (result.status === Office.AsyncResultStatus.Failed) {
                          onError(result.error);
                      }
                      else {
                          $('#message').html(result.value);
                      }
                  }
              );
          }

          function onError(error) {
              $('#message').html(error.name + ' ' + error.code + ': ' + error.message);
          }
      })();
      ```
      ```javascript
      // The following code example adds a handler for the ViewSelectionChanged
      // event. When the active view changes, it gets the name and type of the active view.
      // The example assumes your add-in has a reference to the jQuery library and that
      // the following page control is defined in the content div in the page body:
      // <span id="message"></span>

      (function () {
          "use strict";

          // The initialize function must be run each time a new page is loaded.
          Office.initialize = function (reason) {
              $(document).ready(function () {

                  // After the DOM is loaded, add-in-specific code can run.
                  Office.context.document.addHandlerAsync(
                      Office.EventType.ViewSelectionChanged,
                      getActiveView);
                  getActiveView();
              });
          };

          // Get the name and type of the active view and display it in the add-in.
          function getActiveView() {
              Office.context.document.getSelectedViewAsync(
                  function (result) {
                      if (result.status === Office.AsyncResultStatus.Failed) {
                          onError(result.error);
                      }
                      else {
                          var output = String.format(
                              'View name: {0}<br/>View type: {1}',
                              result.value.viewName, result.value.viewType);
                          $('#message').html(output);
                      }
                  }
              );
          }

          function onError(error) {
              $('#message').html(error.name + ' ' + error.code + ': ' + error.message);
          }
      })();

      // For an example that shows how to use a ViewSelectionChanged event handler in a
      // Project add-in, see "Create your first task pane add-in for Project 2013 by
      // using a text editor."
      // https://docs.microsoft.com/office/dev/add-ins/project/create-your-first-task-pane-add-in-for-project-by-using-a-text-editor
      ```
      ```javascript
      // The following code example uses addHandlerAsync to add an event handler for the ViewSelectionChanged event.
      // When the active view changes, the handler checks the view type. It enables a button if the view is a resource
      // view and disables the button if it isn't a resource view. Choosing the button gets the GUID of the selected
      // resource and displays it in the add-in.
      // The example assumes that your add-in has a reference to the jQuery library and that the following page controls
      // are defined in the content div in the page body:
      // <input id="get-info" type="button" value="Get info" disabled="disabled" /><br />
      // <span id="message"></span>

      (function () {
          "use strict";

          // The initialize function must be run each time a new page is loaded.
          Office.initialize = function (reason) {
              $(document).ready(function () {

                  // After the DOM is loaded, add-in-specific code can run.
                  // Add a ViewSelectionChanged event handler.
                  Office.context.document.addHandlerAsync(
                      Office.EventType.ViewSelectionChanged,
                      getActiveView);
                  $('#get-info').click(getResourceGuid);

                  // This example calls the handler on page load to get the active view
                  // of the default page.
                  getActiveView();
              });
          };

          // Activate the button based on the active view type of the document.
          // This is the ViewSelectionChanged event handler.
          function getActiveView() {
              Office.context.document.getSelectedViewAsync(
                  function (result) {
                      if (result.status === Office.AsyncResultStatus.Failed) {
                          onError(result.error);
                      }
                      else {
                          var viewType = result.value.viewType;
                          if (viewType == 6 ||   // ResourceForm
                              viewType == 7 ||   // ResourceSheet
                              viewType == 8 ||   // ResourceGraph
                              viewType == 15) {  // ResourceUsage
                              $('#get-info').removeAttr('disabled');
                          }
                          else {
                              $('#get-info').attr('disabled', 'disabled');
                          }
                          var output = String.format(
                              'View name: {0}<br/>View type: {1}',
                              result.value.viewName, viewType);
                          $('#message').html(output);
                      }
                  }
              );
          }

          // Get the GUID of the currently selected resource and display it in the add-in.
          function getResourceGuid() {
              Office.context.document.getSelectedResourceAsync(
                  function (result) {
                      if (result.status === Office.AsyncResultStatus.Failed) {
                          onError(result.error);
                      }
                      else {
                          $('#message').html('Resource GUID: ' + result.value);
                      }
                  }
              );
          }

          function onError(error) {
              $('#message').html(error.name + ' ' + error.code + ': ' + error.message);
          }
      })();

      // For a complete code sample that shows how to use a ViewSelectionChanged event handler in a Project add-in,
      // see "Create your first task pane add-in for Project by using a text editor."
      // https://docs.microsoft.com/office/dev/add-ins/project/create-your-first-task-pane-add-in-for-project-by-using-a-text-editor
      ```
    name: 'addHandlerAsync(eventType, handler, callback)'
    fullName: 'addHandlerAsync(eventType, handler, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addHandlerAsync(eventType: Office.EventType, handler: any, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="b4495-119">Pour un événement d''objet document, le paramètre eventType peut être spécifié `Office.EventType.Document.SelectionChanged` en tant que ou`Office.EventType.Document.ActiveViewChanged`</span><span class="sxs-lookup"><span data-stu-id="b4495-119">For a Document object event, the eventType parameter can be specified as `Office.EventType.Document.SelectionChanged` or `Office.EventType.Document.ActiveViewChanged`</span></span><!-- --><span data-ttu-id="b4495-120">ou la valeur de texte correspondante de cette énumération.</span><span class="sxs-lookup"><span data-stu-id="b4495-120">, or the corresponding text value of this enumeration.</span></span>'
          type:
            - Office.EventType
        - id: handler
          description: '<span data-ttu-id="b4495-121">Fonction du gestionnaire d''événements à ajouter, dont le seul paramètre est de type [Office. propriété documentselectionchangedeventargs](xref:office.Office.DocumentSelectionChangedEventArgs)</span><span class="sxs-lookup"><span data-stu-id="b4495-121">The event handler function to add, whose only parameter is of type [Office.DocumentSelectionChangedEventArgs](xref:office.Office.DocumentSelectionChangedEventArgs)</span></span><!-- --><span data-ttu-id="b4495-122">.</span><span class="sxs-lookup"><span data-stu-id="b4495-122"></span></span> <span data-ttu-id="b4495-123">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="b4495-123">Required.</span></span>'
          type:
            - any
        - id: callback
          description: '<span data-ttu-id="b4495-124">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="b4495-124">Optional.</span></span> <span data-ttu-id="b4495-125">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="b4495-125">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b4495-126">.</span><span class="sxs-lookup"><span data-stu-id="b4495-126"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.Document.getActiveViewAsync
    summary: <span data-ttu-id="b4495-127">Renvoie l’état de l’affichage actuel de la présentation (modification ou lecture).</span><span class="sxs-lookup"><span data-stu-id="b4495-127">Returns the state of the current view of the presentation (edit or read).</span></span>
    remarks: |-
      <span data-ttu-id="b4495-128">**Ensemble de conditions requises**: [ActiveView](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#activeview)</span><span class="sxs-lookup"><span data-stu-id="b4495-128">**Requirement set**: [ActiveView](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#activeview)</span></span>

      <span data-ttu-id="b4495-129">Peut déclencher un événement lorsque l’affichage change.</span><span class="sxs-lookup"><span data-stu-id="b4495-129">Can trigger an event when the view changes.</span></span>
    name: 'getActiveViewAsync(options, callback)'
    fullName: 'getActiveViewAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveViewAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<"edit" | "read">) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="b4495-130">Fournit une option permettant de conserver les données de contexte de n''importe quel type, inchangées, pour une utilisation dans un rappel.</span><span class="sxs-lookup"><span data-stu-id="b4495-130">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="b4495-131">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="b4495-131">Optional.</span></span> <span data-ttu-id="b4495-132">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="b4495-132">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b4495-133">.</span><span class="sxs-lookup"><span data-stu-id="b4495-133"></span></span> <span data-ttu-id="b4495-134">La `value` propriété du résultat est l''état de la vue active de la présentation.</span><span class="sxs-lookup"><span data-stu-id="b4495-134">The `value` property of the result is the state of the presentation''s current view.</span></span> <span data-ttu-id="b4495-135">La valeur renvoyée peut être «Edit» ou «Read».</span><span class="sxs-lookup"><span data-stu-id="b4495-135">The value returned can be either "edit" or "read".</span></span> <span data-ttu-id="b4495-136">«modifier» correspond à n''importe quel mode dans lequel vous pouvez modifier des diapositives, telles que normal ou mode plan.</span><span class="sxs-lookup"><span data-stu-id="b4495-136">"edit" corresponds to any of the views in which you can edit slides, such as Normal or Outline View.</span></span> <span data-ttu-id="b4495-137">«lecture» correspond à un mode de diaporama ou de lecture.</span><span class="sxs-lookup"><span data-stu-id="b4495-137">"read" corresponds to either Slide Show or Reading View.</span></span>'
          type:
            - '(result: AsyncResult<"edit" | "read">) => void'
  - uid: office.Office.Document.getActiveViewAsync_1
    summary: <span data-ttu-id="b4495-138">Renvoie l’état de l’affichage actuel de la présentation (modification ou lecture).</span><span class="sxs-lookup"><span data-stu-id="b4495-138">Returns the state of the current view of the presentation (edit or read).</span></span>
    remarks: |-
      <span data-ttu-id="b4495-139">**Ensemble de conditions requises**: [ActiveView](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#activeview)</span><span class="sxs-lookup"><span data-stu-id="b4495-139">**Requirement set**: [ActiveView](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#activeview)</span></span>

      <span data-ttu-id="b4495-140">Peut déclencher un événement lorsque l’affichage change.</span><span class="sxs-lookup"><span data-stu-id="b4495-140">Can trigger an event when the view changes.</span></span>

      #### <a name="examples"></a><span data-ttu-id="b4495-141">Exemples</span><span class="sxs-lookup"><span data-stu-id="b4495-141">Examples</span></span>

      ```javascript
      function getFileView() {
          // Get whether the current view is edit or read.
          Office.context.document.getActiveViewAsync(function (asyncResult) {
              if (asyncResult.status == "failed") {
                  showMessage("Action failed with error: " + asyncResult.error.message);
              }
              else {
                  showMessage(asyncResult.value);
              }
          });
      }
      ```
    name: getActiveViewAsync(callback)
    fullName: getActiveViewAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveViewAsync(callback?: (result: AsyncResult<"edit" | "read">) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="b4495-142">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="b4495-142">Optional.</span></span> <span data-ttu-id="b4495-143">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="b4495-143">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b4495-144">.</span><span class="sxs-lookup"><span data-stu-id="b4495-144"></span></span> <span data-ttu-id="b4495-145">La `value` propriété du résultat est l''état de la vue active de la présentation.</span><span class="sxs-lookup"><span data-stu-id="b4495-145">The `value` property of the result is the state of the presentation''s current view.</span></span> <span data-ttu-id="b4495-146">La valeur renvoyée peut être «Edit» ou «Read».</span><span class="sxs-lookup"><span data-stu-id="b4495-146">The value returned can be either "edit" or "read".</span></span> <span data-ttu-id="b4495-147">«modifier» correspond à n''importe quel mode dans lequel vous pouvez modifier des diapositives, telles que normal ou mode plan.</span><span class="sxs-lookup"><span data-stu-id="b4495-147">"edit" corresponds to any of the views in which you can edit slides, such as Normal or Outline View.</span></span> <span data-ttu-id="b4495-148">«lecture» correspond à un mode de diaporama ou de lecture.</span><span class="sxs-lookup"><span data-stu-id="b4495-148">"read" corresponds to either Slide Show or Reading View.</span></span>'
          type:
            - '(result: AsyncResult<"edit" | "read">) => void'
  - uid: office.Office.Document.getFileAsync
    summary: "<span data-ttu-id=\"b4495-149\">Renvoie l’intégralité du fichier de document sous forme de sections pouvant aller jusqu’à 4\_194\_304\_octets (4\_Mo).</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-149\">Returns the entire document file in slices of up to 4194304 bytes (4 MB).</span></span> <span data-ttu-id=\"b4495-150\">Pour les compléments pour iOS, la section de fichier est prise en charge jusqu'à 65\_536 (64\_Ko).</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-150\">For add-ins for iOS, file slice is supported up to 65536 (64 KB).</span></span> <span data-ttu-id=\"b4495-151\">Remarque\_: la spécification de la taille de section de fichier au-dessus de la limite autorisée entraîne une erreur interne.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-151\">Note that specifying file slice size of above permitted limit will result in an \"Internal Error\" failure.</span></span>"
    remarks: "<span data-ttu-id=\"b4495-152\">**Ensembles de conditions requises**:</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-152\">**Requirement sets**:</span></span>\n\n- <span data-ttu-id=\"b4495-153\">[CompressedFile](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#compressedfile) (lorsque vous utilisez`Office.FileType.Compressed`</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-153\">[CompressedFile](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#compressedfile) (when using `Office.FileType.Compressed`</span></span><!-- --><span data-ttu-id=\"b4495-154\">)</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-154\"></span></span>\n\n- [<span data-ttu-id=\"b4495-155\">Fichier</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-155\">File</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#file)\n\n- <span data-ttu-id=\"b4495-156\">[TextFile](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textfile) (lorsque vous utilisez`Office.FileType.Text`</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-156\">[TextFile](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textfile) (when using `Office.FileType.Text`</span></span><!-- --><span data-ttu-id=\"b4495-157\">)</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-157\"></span></span>\n\n<span data-ttu-id=\"b4495-158\">Pour les compléments s'exécutant dans les applications hôtes Office autres qu'Office pour iOS, la méthode getFileAsync prend en charge l'obtention de fichiers dans des sections allant jusqu'à 4194304 octets (4 Mo).</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-158\">For add-ins running in Office host applications other than Office for iOS, the getFileAsync method supports getting files in slices of up to 4194304 bytes (4 MB).</span></span> <span data-ttu-id=\"b4495-159\">Pour les compléments en cours d’exécution dans des applications Office pour iOS, la méthode getFileAsync prend en charge l’obtention de fichiers dans des sections allant jusqu'à 65\_536 (64\_Ko).</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-159\">For add-ins running in Office for iOS apps, the getFileAsync method supports getting files in slices of up to 65536 (64 KB).</span></span>\n\n<span data-ttu-id=\"b4495-160\">Le paramètre fileType peut être spécifié à l'aide de l'énumération [Office. filetype](xref:office.Office.FileType) ou des valeurs de texte.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-160\">The fileType parameter can be specified by using the [Office.FileType](xref:office.Office.FileType) enumeration or text values.</span></span> <span data-ttu-id=\"b4495-161\">Toutefois, les valeurs possibles varient en fonction de l'hôte:</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-161\">But the possible values vary with the host:</span></span>\n\n<span data-ttu-id=\"b4495-162\">Excel pour ordinateur de bureau Windows, iPad et Excel Online:`Office.FileType.Compressed`</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-162\">Excel for Windows desktop, iPad, and Excel Online: `Office.FileType.Compressed`</span></span>\n\n<span data-ttu-id=\"b4495-163\">Excel pour Mac:`Office.FileType.Compressed`</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-163\">Excel for Mac: `Office.FileType.Compressed`</span></span><!-- --><span data-ttu-id=\"b4495-164\">, `Office.FileType.Pdf`</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-164\"></span></span>\n\n<span data-ttu-id=\"b4495-165\">PowerPoint pour ordinateur de bureau Windows, Mac, iPad et PowerPoint Online:`Office.FileType.Compressed`</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-165\">PowerPoint for Windows desktop, Mac, iPad, and PowerPoint Online: `Office.FileType.Compressed`</span></span><!-- --><span data-ttu-id=\"b4495-166\">, `Office.FileType.Pdf`</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-166\"></span></span>\n\n<span data-ttu-id=\"b4495-167\">Word pour ordinateur de bureau Windows, Mac, iPad et Word Online:`Office.FileType.Compressed`</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-167\">Word for Windows desktop, Mac, iPad, and Word Online: `Office.FileType.Compressed`</span></span><!-- --><span data-ttu-id=\"b4495-168\">, `Office.FileType.Pdf`</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-168\"></span></span><!-- --><span data-ttu-id=\"b4495-169\">, `Office.FileType.Text`</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-169\"></span></span>\n\n#### <a name=\"examples\"></a><span data-ttu-id=\"b4495-170\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-170\">Examples</span></span>\n\n```javascript\n// The following example gets the document in Office Open XML (\"compressed\") format in 65536 bytes (64 KB) slices.\n// Note: The implementation of app.showNotification in this example is from the Visual Studio template for Office Add-ins.\nfunction getDocumentAsCompressed() {\n    Office.context.document.getFileAsync(Office.FileType.Compressed, { sliceSize: 65536 /*64 KB*/ }, \n        function (result) {\n            if (result.status == \"succeeded\") {\n            // If the getFileAsync call succeeded, then\n            // result.value will return a valid File Object.\n            var myFile = result.value;\n            var sliceCount = myFile.sliceCount;\n            var slicesReceived = 0, gotAllSlices = true, docdataSlices = [];\n            app.showNotification(\"File size:\" + myFile.size + \" #Slices: \" + sliceCount);\n\n            // Get the file slices.\n            getSliceAsync(myFile, 0, sliceCount, gotAllSlices, docdataSlices, slicesReceived);\n            }\n            else {\n            app.showNotification(\"Error:\", result.error.message);\n            }\n    });\n}\n\nfunction getSliceAsync(file, nextSlice, sliceCount, gotAllSlices, docdataSlices, slicesReceived) {\n    file.getSliceAsync(nextSlice, function (sliceResult) {\n        if (sliceResult.status == \"succeeded\") {\n            if (!gotAllSlices) { // Failed to get all slices, no need to continue.\n                return;\n            }\n\n            // Got one slice, store it in a temporary array.\n            // (Or you can do something else, such as\n            // send it to a third-party server.)\n            docdataSlices[sliceResult.value.index] = sliceResult.value.data;\n            if (++slicesReceived == sliceCount) {\n              // All slices have been received.\n              file.closeAsync();\n              onGotAllSlices(docdataSlices);\n            }\n            else {\n                getSliceAsync(file, ++nextSlice, sliceCount, gotAllSlices, docdataSlices, slicesReceived);\n            }\n        }\n            else {\n                gotAllSlices = false;\n                file.closeAsync();\n                app.showNotification(\"getSliceAsync Error:\", sliceResult.error.message);\n            }\n    });\n}\n\nfunction onGotAllSlices(docdataSlices) {\n    var docdata = [];\n    for (var i = 0; i < docdataSlices.length; i++) {\n        docdata = docdata.concat(docdataSlices[i]);\n    }\n\n    var fileContent = new String();\n    for (var j = 0; j < docdata.length; j++) {\n        fileContent += String.fromCharCode(docdata[j]);\n    }\n\n    // Now all the file content is stored in 'fileContent' variable,\n    // you can do something with it, such as print, fax...\n}\n\n// The following example gets the document in PDF format.\nOffice.context.document.getFileAsync(Office.FileType.Pdf,\n    function(result) {\n        if (result.status == \"succeeded\") {\n            var myFile = result.value;\n            var sliceCount = myFile.sliceCount;\n            app.showNotification(\"File size:\" + myFile.size + \" #Slices: \" + sliceCount);\n            // Now, you can call getSliceAsync to download the files,\n            // as described in the previous code segment (compressed format).\n            \n            myFile.closeAsync();\n        }\n        else {\n            app.showNotification(\"Error:\", result.error.message);\n        }\n}\n);\n```"
    name: 'getFileAsync(fileType, options, callback)'
    fullName: 'getFileAsync(fileType, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFileAsync(fileType: FileType, options?: GetFileOptions, callback?: (result: AsyncResult<Office.File>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: fileType
          description: <span data-ttu-id="b4495-171">Format dans lequel le fichier sera renvoyé.</span><span class="sxs-lookup"><span data-stu-id="b4495-171">The format in which the file will be returned</span></span>
          type:
            - office.Office.FileType
        - id: options
          description: <span data-ttu-id="b4495-172">Fournit des options pour définir la taille des secteurs dans lesquels le document sera divisé.</span><span class="sxs-lookup"><span data-stu-id="b4495-172">Provides options for setting the size of slices that the document will be divided into.</span></span>
          type:
            - office.Office.GetFileOptions
        - id: callback
          description: '<span data-ttu-id="b4495-173">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="b4495-173">Optional.</span></span> <span data-ttu-id="b4495-174">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="b4495-174">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b4495-175">.</span><span class="sxs-lookup"><span data-stu-id="b4495-175"></span></span> <span data-ttu-id="b4495-176">La `value` propriété du résultat est l''objet file.</span><span class="sxs-lookup"><span data-stu-id="b4495-176">The `value` property of the result is the File object.</span></span>'
          type:
            - '(result: AsyncResult<Office.File>) => void'
  - uid: office.Office.Document.getFileAsync_1
    summary: "<span data-ttu-id=\"b4495-177\">Renvoie l’intégralité du fichier de document sous forme de sections pouvant aller jusqu’à 4\_194\_304\_octets (4\_Mo).</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-177\">Returns the entire document file in slices of up to 4194304 bytes (4 MB).</span></span> <span data-ttu-id=\"b4495-178\">Pour les compléments pour iOS, la section de fichier est prise en charge jusqu'à 65\_536 (64\_Ko).</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-178\">For add-ins for iOS, file slice is supported up to 65536 (64 KB).</span></span> <span data-ttu-id=\"b4495-179\">Remarque\_: la spécification de la taille de section de fichier au-dessus de la limite autorisée entraîne une erreur interne.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-179\">Note that specifying file slice size of above permitted limit will result in an \"Internal Error\" failure.</span></span>"
    remarks: "<span data-ttu-id=\"b4495-180\">**Ensembles de conditions requises**:</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-180\">**Requirement sets**:</span></span>\n\n- <span data-ttu-id=\"b4495-181\">[CompressedFile](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#compressedfile) (lorsque vous utilisez`Office.FileType.Compressed`</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-181\">[CompressedFile](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#compressedfile) (when using `Office.FileType.Compressed`</span></span><!-- --><span data-ttu-id=\"b4495-182\">)</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-182\"></span></span>\n\n- [<span data-ttu-id=\"b4495-183\">Fichier</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-183\">File</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#file)\n\n- <span data-ttu-id=\"b4495-184\">[TextFile](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textfile) (lorsque vous utilisez`Office.FileType.Text`</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-184\">[TextFile](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textfile) (when using `Office.FileType.Text`</span></span><!-- --><span data-ttu-id=\"b4495-185\">)</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-185\"></span></span>\n\n<span data-ttu-id=\"b4495-186\">Pour les compléments s'exécutant dans les applications hôtes Office autres qu'Office pour iOS, la méthode getFileAsync prend en charge l'obtention de fichiers dans des sections allant jusqu'à 4194304 octets (4 Mo).</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-186\">For add-ins running in Office host applications other than Office for iOS, the getFileAsync method supports getting files in slices of up to 4194304 bytes (4 MB).</span></span> <span data-ttu-id=\"b4495-187\">Pour les compléments en cours d’exécution dans des applications Office pour iOS, la méthode getFileAsync prend en charge l’obtention de fichiers dans des sections allant jusqu'à 65\_536 (64\_Ko).</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-187\">For add-ins running in Office for iOS apps, the getFileAsync method supports getting files in slices of up to 65536 (64 KB).</span></span>\n\n<span data-ttu-id=\"b4495-188\">Le paramètre fileType peut être spécifié à l'aide de l'énumération [Office. filetype](xref:office.Office.FileType) ou des valeurs de texte.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-188\">The fileType parameter can be specified by using the [Office.FileType](xref:office.Office.FileType) enumeration or text values.</span></span> <span data-ttu-id=\"b4495-189\">Toutefois, les valeurs possibles varient en fonction de l'hôte:</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-189\">But the possible values vary with the host:</span></span>\n\n<span data-ttu-id=\"b4495-190\">Excel pour ordinateur de bureau Windows, iPad et Excel Online:`Office.FileType.Compressed`</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-190\">Excel for Windows desktop, iPad, and Excel Online: `Office.FileType.Compressed`</span></span>\n\n<span data-ttu-id=\"b4495-191\">Excel pour Mac:`Office.FileType.Compressed`</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-191\">Excel for Mac: `Office.FileType.Compressed`</span></span><!-- --><span data-ttu-id=\"b4495-192\">, `Office.FileType.Pdf`</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-192\"></span></span>\n\n<span data-ttu-id=\"b4495-193\">PowerPoint pour ordinateur de bureau Windows, Mac, iPad et PowerPoint Online:`Office.FileType.Compressed`</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-193\">PowerPoint for Windows desktop, Mac, iPad, and PowerPoint Online: `Office.FileType.Compressed`</span></span><!-- --><span data-ttu-id=\"b4495-194\">, `Office.FileType.Pdf`</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-194\"></span></span>\n\n<span data-ttu-id=\"b4495-195\">Word pour ordinateur de bureau Windows, Mac, iPad et Word Online:`Office.FileType.Compressed`</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-195\">Word for Windows desktop, Mac, iPad, and Word Online: `Office.FileType.Compressed`</span></span><!-- --><span data-ttu-id=\"b4495-196\">, `Office.FileType.Pdf`</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-196\"></span></span><!-- --><span data-ttu-id=\"b4495-197\">, `Office.FileType.Text`</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-197\"></span></span>"
    name: 'getFileAsync(fileType, callback)'
    fullName: 'getFileAsync(fileType, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFileAsync(fileType: FileType, callback?: (result: AsyncResult<Office.File>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: fileType
          description: <span data-ttu-id="b4495-198">Format dans lequel le fichier sera renvoyé.</span><span class="sxs-lookup"><span data-stu-id="b4495-198">The format in which the file will be returned</span></span>
          type:
            - office.Office.FileType
        - id: callback
          description: '<span data-ttu-id="b4495-199">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="b4495-199">Optional.</span></span> <span data-ttu-id="b4495-200">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="b4495-200">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b4495-201">.</span><span class="sxs-lookup"><span data-stu-id="b4495-201"></span></span> <span data-ttu-id="b4495-202">La `value` propriété du résultat est l''objet file.</span><span class="sxs-lookup"><span data-stu-id="b4495-202">The `value` property of the result is the File object.</span></span>'
          type:
            - '(result: AsyncResult<Office.File>) => void'
  - uid: office.Office.Document.getFilePropertiesAsync
    summary: <span data-ttu-id="b4495-203">Obtient les propriétés de fichier du document actif.</span><span class="sxs-lookup"><span data-stu-id="b4495-203">Gets file properties of the current document.</span></span>
    remarks: |-
      <span data-ttu-id="b4495-204">**Ensembles de conditions requises**: [pas dans un ensemble](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#methods-that-arent-part-of-a-requirement-set)</span><span class="sxs-lookup"><span data-stu-id="b4495-204">**Requirement sets**: [Not in a set](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#methods-that-arent-part-of-a-requirement-set)</span></span>

      <span data-ttu-id="b4495-205">Vous obtenez l'URL du fichier avec la propriété URL`asyncResult.value.url`</span><span class="sxs-lookup"><span data-stu-id="b4495-205">You get the file's URL with the url property `asyncResult.value.url`</span></span><!-- --><span data-ttu-id="b4495-206">.</span><span class="sxs-lookup"><span data-stu-id="b4495-206"></span></span>
    name: 'getFilePropertiesAsync(options, callback)'
    fullName: 'getFilePropertiesAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFilePropertiesAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<Office.FileProperties>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="b4495-207">Fournit une option permettant de conserver les données de contexte de n''importe quel type, inchangées, pour une utilisation dans un rappel.</span><span class="sxs-lookup"><span data-stu-id="b4495-207">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="b4495-208">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="b4495-208">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b4495-209">.</span><span class="sxs-lookup"><span data-stu-id="b4495-209"></span></span> <span data-ttu-id="b4495-210">La `value` propriété du résultat contient les propriétés du fichier (avec l''URL disponible à l''adresse suivante:`asyncResult.value.url`</span><span class="sxs-lookup"><span data-stu-id="b4495-210">The `value` property of the result is the file''s properties (with the URL found at `asyncResult.value.url`</span></span><!-- --><span data-ttu-id="b4495-211">).</span><span class="sxs-lookup"><span data-stu-id="b4495-211"></span></span>'
          type:
            - '(result: AsyncResult<Office.FileProperties>) => void'
  - uid: office.Office.Document.getFilePropertiesAsync_1
    summary: <span data-ttu-id="b4495-212">Obtient les propriétés de fichier du document actif.</span><span class="sxs-lookup"><span data-stu-id="b4495-212">Gets file properties of the current document.</span></span>
    remarks: |-
      <span data-ttu-id="b4495-213">**Ensembles de conditions requises**: [pas dans un ensemble](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#methods-that-arent-part-of-a-requirement-set)</span><span class="sxs-lookup"><span data-stu-id="b4495-213">**Requirement sets**: [Not in a set](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#methods-that-arent-part-of-a-requirement-set)</span></span>

      <span data-ttu-id="b4495-214">Vous obtenez l'URL du fichier avec la propriété URL`asyncResult.value.url`</span><span class="sxs-lookup"><span data-stu-id="b4495-214">You get the file's URL with the url property `asyncResult.value.url`</span></span><!-- --><span data-ttu-id="b4495-215">.</span><span class="sxs-lookup"><span data-stu-id="b4495-215"></span></span>

      #### <a name="examples"></a><span data-ttu-id="b4495-216">Exemples</span><span class="sxs-lookup"><span data-stu-id="b4495-216">Examples</span></span>

      ```javascript
      // To read the URL of the current file, you need to write a callback function that returns the URL.
      // The following example shows how to:
      // 1. Pass an anonymous callback function that returns the value of the file's URL
      //    to the callback parameter of the getFilePropertiesAsync method.
      // 2. Display the value on the add-in's page.
      function getFileUrl() {
          // Get the URL of the current file.
          Office.context.document.getFilePropertiesAsync(function (asyncResult) {
              var fileUrl = asyncResult.value.url;
              if (fileUrl == "") {
                  showMessage("The file hasn't been saved yet. Save the file and try again");
              }
              else {
                  showMessage(fileUrl);
              }
          });
      }
      ```
    name: getFilePropertiesAsync(callback)
    fullName: getFilePropertiesAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFilePropertiesAsync(callback?: (result: AsyncResult<Office.FileProperties>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="b4495-217">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="b4495-217">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b4495-218">.</span><span class="sxs-lookup"><span data-stu-id="b4495-218"></span></span> <span data-ttu-id="b4495-219">La `value` propriété du résultat contient les propriétés du fichier (avec l''URL disponible à l''adresse suivante:`asyncResult.value.url`</span><span class="sxs-lookup"><span data-stu-id="b4495-219">The `value` property of the result is the file''s properties (with the URL found at `asyncResult.value.url`</span></span><!-- --><span data-ttu-id="b4495-220">).</span><span class="sxs-lookup"><span data-stu-id="b4495-220"></span></span>'
          type:
            - '(result: AsyncResult<Office.FileProperties>) => void'
  - uid: office.Office.Document.getMaxResourceIndexAsync
    summary: |-
      <span data-ttu-id="b4495-221">Documents de projet uniquement.</span><span class="sxs-lookup"><span data-stu-id="b4495-221">Project documents only.</span></span> <span data-ttu-id="b4495-222">Obtenir l'index maximal de la collection de ressources dans le projet en cours.</span><span class="sxs-lookup"><span data-stu-id="b4495-222">Get the maximum index of the collection of resources in the current project.</span></span>

      <span data-ttu-id="b4495-223">**Important**: cette API fonctionne uniquement dans Project 2016 sur le bureau Windows.</span><span class="sxs-lookup"><span data-stu-id="b4495-223">**Important**: This API works only in Project 2016 on Windows desktop.</span></span>
    name: 'getMaxResourceIndexAsync(options, callback)'
    fullName: 'getMaxResourceIndexAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getMaxResourceIndexAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<number>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="b4495-224">Fournit une option permettant de conserver les données de contexte de n''importe quel type, inchangées, pour une utilisation dans un rappel.</span><span class="sxs-lookup"><span data-stu-id="b4495-224">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="b4495-225">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="b4495-225">Optional.</span></span> <span data-ttu-id="b4495-226">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="b4495-226">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b4495-227">.</span><span class="sxs-lookup"><span data-stu-id="b4495-227"></span></span> <span data-ttu-id="b4495-228">La `value` propriété du résultat est le numéro d''index le plus élevé dans la collection de ressources du projet actuel.</span><span class="sxs-lookup"><span data-stu-id="b4495-228">The `value` property of the result is the highest index number in the current project''s resource collection.</span></span>'
          type:
            - '(result: AsyncResult<number>) => void'
  - uid: office.Office.Document.getMaxResourceIndexAsync_1
    summary: |-
      <span data-ttu-id="b4495-229">Documents de projet uniquement.</span><span class="sxs-lookup"><span data-stu-id="b4495-229">Project documents only.</span></span> <span data-ttu-id="b4495-230">Obtenir l'index maximal de la collection de ressources dans le projet en cours.</span><span class="sxs-lookup"><span data-stu-id="b4495-230">Get the maximum index of the collection of resources in the current project.</span></span>

      <span data-ttu-id="b4495-231">**Important**: cette API fonctionne uniquement dans Project 2016 sur le bureau Windows.</span><span class="sxs-lookup"><span data-stu-id="b4495-231">**Important**: This API works only in Project 2016 on Windows desktop.</span></span>
    name: getMaxResourceIndexAsync(callback)
    fullName: getMaxResourceIndexAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getMaxResourceIndexAsync(callback?: (result: AsyncResult<number>) => void): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="b4495-232">Exemples</span><span class="sxs-lookup"><span data-stu-id="b4495-232">Examples</span></span>

          ```javascript
          // The following code example calls getResourceTaskIndexAsync to get the maximum index of the collection 
          // of resources in the current project. Then it uses the returned value and the getResourceByIndexAsync
          // method to get each resource GUID. The example assumes that your add-in has a reference to the 
          // jQuery library and that the following page controls are defined in the content div in the page body:
          // <input id="get-info" type="button" value="Get info" /><br />
          // <span id="message"></span>

          (function () {
              "use strict";
              var resourceGuids = ;

              // The initialize function must be run each time a new page is loaded.
              Office.initialize = function (reason) {
                  $(document).ready(function () {

                      // After the DOM is loaded, add-in-specific code can run.
                      app.initialize();
                      $('#get-info').click(getResourceInfo);
                  });
              };

              // Get the maximum resource index, and then get the resource GUIDs.
              function getResourceInfo() {
                  getMaxResourceIndex().then(
                      function (data) {
                          getResourceGuids(data);
                      }
                  );
              }

              // Get the maximum index of the resources for the current project.
              function getMaxResourceIndex() {
                  var defer = $.Deferred();
                  Office.context.document.getMaxResourceIndexAsync(
                      function (result) {
                          if (result.status === Office.AsyncResultStatus.Failed) {
                              onError(result.error);
                          }
                          else {
                              defer.resolve(result.value);
                          }
                      }
                  );
                  return defer.promise();
              }

              // Get each resource GUID, and then display the GUIDs in the add-in.
              // There is no 0 index for resources, so start with index 1.
              function getResourceGuids(maxResourceIndex) {
                  var defer = $.Deferred();
                  for (var i = 1; i <= maxResourceIndex; i++) {
                      getResourceGuid(i);
                  }
                  return defer.promise();
                  function getResourceGuid(index) {
                      Office.context.document.getResourceByIndexAsync(index,
                          function (result) {
                              if (result.status === Office.AsyncResultStatus.Succeeded) {
                                  resourceGuids.push(result.value);
                                  if (index == maxResourceIndex) {
                                      defer.resolve();
                                      $('#message').html(resourceGuids.toString());
                                  }
                              }
                              else {
                                  onError(result.error);
                              }
                          }
                      );
                  }
              }
              function onError(error) {
                  app.showNotification(error.name + ' ' + error.code + ': ' + error.message);
              }
          })();
          ```
      parameters:
        - id: callback
          description: '<span data-ttu-id="b4495-233">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="b4495-233">Optional.</span></span> <span data-ttu-id="b4495-234">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="b4495-234">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b4495-235">.</span><span class="sxs-lookup"><span data-stu-id="b4495-235"></span></span> <span data-ttu-id="b4495-236">La `value` propriété du résultat est le numéro d''index le plus élevé dans la collection de ressources du projet actuel.</span><span class="sxs-lookup"><span data-stu-id="b4495-236">The `value` property of the result is the highest index number in the current project''s resource collection.</span></span>'
          type:
            - '(result: AsyncResult<number>) => void'
  - uid: office.Office.Document.getMaxTaskIndexAsync
    summary: |-
      <span data-ttu-id="b4495-237">Documents de projet uniquement.</span><span class="sxs-lookup"><span data-stu-id="b4495-237">Project documents only.</span></span> <span data-ttu-id="b4495-238">Obtenir l'index maximal de la collection de tâches dans le projet en cours.</span><span class="sxs-lookup"><span data-stu-id="b4495-238">Get the maximum index of the collection of tasks in the current project.</span></span>

      <span data-ttu-id="b4495-239">**Important**: cette API fonctionne uniquement dans Project 2016 sur le bureau Windows.</span><span class="sxs-lookup"><span data-stu-id="b4495-239">**Important**: This API works only in Project 2016 on Windows desktop.</span></span>
    name: 'getMaxTaskIndexAsync(options, callback)'
    fullName: 'getMaxTaskIndexAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getMaxTaskIndexAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<number>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="b4495-240">Fournit une option permettant de conserver les données de contexte de n''importe quel type, inchangées, pour une utilisation dans un rappel.</span><span class="sxs-lookup"><span data-stu-id="b4495-240">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="b4495-241">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="b4495-241">Optional.</span></span> <span data-ttu-id="b4495-242">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="b4495-242">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b4495-243">.</span><span class="sxs-lookup"><span data-stu-id="b4495-243"></span></span> <span data-ttu-id="b4495-244">La `value` propriété du résultat est le numéro d''index le plus élevé dans la collection de tâches du projet actuel.</span><span class="sxs-lookup"><span data-stu-id="b4495-244">The `value` property of the result is the highest index number in the current project''s task collection.</span></span>'
          type:
            - '(result: AsyncResult<number>) => void'
  - uid: office.Office.Document.getMaxTaskIndexAsync_1
    summary: |-
      <span data-ttu-id="b4495-245">Documents de projet uniquement.</span><span class="sxs-lookup"><span data-stu-id="b4495-245">Project documents only.</span></span> <span data-ttu-id="b4495-246">Obtenir l'index maximal de la collection de tâches dans le projet en cours.</span><span class="sxs-lookup"><span data-stu-id="b4495-246">Get the maximum index of the collection of tasks in the current project.</span></span>

      <span data-ttu-id="b4495-247">**Important**: cette API fonctionne uniquement dans Project 2016 sur le bureau Windows.</span><span class="sxs-lookup"><span data-stu-id="b4495-247">**Important**: This API works only in Project 2016 on Windows desktop.</span></span>
    name: getMaxTaskIndexAsync(callback)
    fullName: getMaxTaskIndexAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getMaxTaskIndexAsync(callback?: (result: AsyncResult<number>) => void): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="b4495-248">Exemples</span><span class="sxs-lookup"><span data-stu-id="b4495-248">Examples</span></span>

          ```javascript
          // The following code example calls getMaxTaskIndexAsync to get the maximum index
          // of the collection of tasks in the current project. Then it uses the returned value
          // with the getTaskByIndexAsync method to get each task GUID.
          // The example assumes your add-in has a reference to the jQuery library and that the
          // following page controls are defined in the content div in the page body:
          // <input id="get-info" type="button" value="Get info" /><br />
          // <span id="message"></span>

          (function () {
              "use strict";
              var taskGuids = ;

              // The initialize function must be run each time a new page is loaded.
              Office.initialize = function (reason) {
                  $(document).ready(function () {

                      // After the DOM is loaded, add-in-specific code can run.
                      app.initialize();
                      $('#get-info').click(getTaskInfo);
                  });
              };

              // Get the maximum task index, and then get the task GUIDs.
              function getTaskInfo() {
                  getMaxTaskIndex().then(
                      function (data) {
                          getTaskGuids(data);
                      }
                  );
              }

              // Get the maximum index of the tasks for the current project.
              function getMaxTaskIndex() {
                  var defer = $.Deferred();
                  Office.context.document.getMaxTaskIndexAsync(
                      function (result) {
                          if (result.status === Office.AsyncResultStatus.Failed) {
                              onError(result.error);
                          }
                          else {
                              defer.resolve(result.value);
                          }
                      }
                  );
                  return defer.promise();
              }

              // Get each task GUID, and then display the GUIDs in the add-in.
              function getTaskGuids(maxTaskIndex) {
                  var defer = $.Deferred();
                  for (var i = 0; i <= maxTaskIndex; i++) {
                      getTaskGuid(i);
                  }
                  return defer.promise();
                  function getTaskGuid(index) {
                      Office.context.document.getTaskByIndexAsync(index,
                          function (result) {
                              if (result.status === Office.AsyncResultStatus.Succeeded) {
                                  taskGuids.push(result.value);
                                  if (index == maxTaskIndex) {
                                      defer.resolve();
                                      $('#message').html(taskGuids.toString());
                                  }
                              }
                              else {
                                  onError(result.error);
                              }
                          }
                      );
                  }
              }
              function onError(error) {
                  app.showNotification(error.name + ' ' + error.code + ': ' + error.message);
              }
          })();
          ```
      parameters:
        - id: callback
          description: '<span data-ttu-id="b4495-249">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="b4495-249">Optional.</span></span> <span data-ttu-id="b4495-250">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="b4495-250">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b4495-251">.</span><span class="sxs-lookup"><span data-stu-id="b4495-251"></span></span> <span data-ttu-id="b4495-252">La `value` propriété du résultat est le numéro d''index le plus élevé dans la collection de tâches du projet actuel.</span><span class="sxs-lookup"><span data-stu-id="b4495-252">The `value` property of the result is the highest index number in the current project''s task collection.</span></span>'
          type:
            - '(result: AsyncResult<number>) => void'
  - uid: office.Office.Document.getProjectFieldAsync
    summary: '<span data-ttu-id="b4495-253">Documents de projet uniquement.</span><span class="sxs-lookup"><span data-stu-id="b4495-253">Project documents only.</span></span> <span data-ttu-id="b4495-254">Obtenir le champ de projet (par exemple,</span><span class="sxs-lookup"><span data-stu-id="b4495-254">Get Project field (Ex.</span></span> <span data-ttu-id="b4495-255">ProjectWebAccessURL).</span><span class="sxs-lookup"><span data-stu-id="b4495-255">ProjectWebAccessURL).</span></span>'
    name: 'getProjectFieldAsync(fieldId, options, callback)'
    fullName: 'getProjectFieldAsync(fieldId, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getProjectFieldAsync(fieldId: number, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<any>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: fieldId
          description: <span data-ttu-id="b4495-256">Champs au niveau du projet.</span><span class="sxs-lookup"><span data-stu-id="b4495-256">Project level fields.</span></span>
          type:
            - number
        - id: options
          description: '<span data-ttu-id="b4495-257">Fournit une option permettant de conserver les données de contexte de n''importe quel type, inchangées, pour une utilisation dans un rappel.</span><span class="sxs-lookup"><span data-stu-id="b4495-257">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="b4495-258">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="b4495-258">Optional.</span></span> <span data-ttu-id="b4495-259">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="b4495-259">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b4495-260">.</span><span class="sxs-lookup"><span data-stu-id="b4495-260"></span></span> <span data-ttu-id="b4495-261">La `value` propriété du résultat contient la `fieldValue` propriété, qui représente la valeur du champ spécifié.</span><span class="sxs-lookup"><span data-stu-id="b4495-261">The `value` property of the result contains the `fieldValue` property, which represents the value of the specified field.</span></span>'
          type:
            - '(result: AsyncResult<any>) => void'
  - uid: office.Office.Document.getProjectFieldAsync_1
    summary: '<span data-ttu-id="b4495-262">Documents de projet uniquement.</span><span class="sxs-lookup"><span data-stu-id="b4495-262">Project documents only.</span></span> <span data-ttu-id="b4495-263">Obtenir le champ de projet (par exemple,</span><span class="sxs-lookup"><span data-stu-id="b4495-263">Get Project field (Ex.</span></span> <span data-ttu-id="b4495-264">ProjectWebAccessURL).</span><span class="sxs-lookup"><span data-stu-id="b4495-264">ProjectWebAccessURL).</span></span>'
    name: 'getProjectFieldAsync(fieldId, callback)'
    fullName: 'getProjectFieldAsync(fieldId, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getProjectFieldAsync(fieldId: number, callback?: (result: AsyncResult<any>) => void): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="b4495-265">Exemples</span><span class="sxs-lookup"><span data-stu-id="b4495-265">Examples</span></span>

          ```javascript
          // The following code example gets the values of three specified fields for the active project, 
          // and then displays the values in the add-in.
          // The example calls getProjectFieldAsync recursively, after the previous call returns successfully.
          // It also tracks the calls to determine when all calls are sent.
          // The example assumes your add-in has a reference to the jQuery library and that the 
          // following page control is defined in the content div in the page body:
          // <span id="message"></span>

          (function () {
              "use strict";

              // The initialize function must be run each time a new page is loaded.
              Office.initialize = function (reason) {
                  $(document).ready(function () {

                      // Get information for the active project.
                      getProjectInformation();
                  });
              };

              // Get the specified fields for the active project.
              function getProjectInformation() {
                  var fields =
                      [Office.ProjectProjectFields.Start, 
                       Office.ProjectProjectFields.Finish, 
                       Office.ProjectProjectFields.GUID];
                  var fieldValues = ['Start: ', 'Finish: ', 'GUID: '];
                  var index = 0; 
                  getField();

                  // Get each field, and then display the field values in the add-in.
                  function getField() {
                      if (index == fields.length) {
                          var output = '';
                          for (var i = 0; i < fieldValues.length; i++) {
                              output += fieldValues[i] + '<br />';
                          }
                          $('#message').html(output);
                      }
                      else {
                          Office.context.document.getProjectFieldAsync(
                              fields[index],
                              function (result) {

                                  // If the call is successful, get the field value and then get the next field.
                                  if (result.status === Office.AsyncResultStatus.Succeeded) {
                                      fieldValues[index] += result.value.fieldValue;
                                      getField(index++);
                                  }
                                  else {
                                      onError(result.error);
                                  }
                              }
                          );
                      }
                  }
              }

              function onError(error) {
                  $('#message').html(error.name + ' ' + error.code + ': ' + error.message);
              }
          })();
          ```
      parameters:
        - id: fieldId
          description: <span data-ttu-id="b4495-266">Champs au niveau du projet.</span><span class="sxs-lookup"><span data-stu-id="b4495-266">Project level fields.</span></span>
          type:
            - number
        - id: callback
          description: '<span data-ttu-id="b4495-267">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="b4495-267">Optional.</span></span> <span data-ttu-id="b4495-268">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="b4495-268">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b4495-269">.</span><span class="sxs-lookup"><span data-stu-id="b4495-269"></span></span> <span data-ttu-id="b4495-270">La `value` propriété du résultat contient la `fieldValue` propriété, qui représente la valeur du champ spécifié.</span><span class="sxs-lookup"><span data-stu-id="b4495-270">The `value` property of the result contains the `fieldValue` property, which represents the value of the specified field.</span></span>'
          type:
            - '(result: AsyncResult<any>) => void'
  - uid: office.Office.Document.getResourceByIndexAsync
    summary: |-
      <span data-ttu-id="b4495-271">Documents de projet uniquement.</span><span class="sxs-lookup"><span data-stu-id="b4495-271">Project documents only.</span></span> <span data-ttu-id="b4495-272">Obtenir le GUID de la ressource qui a l'index spécifié dans la collection de ressources.</span><span class="sxs-lookup"><span data-stu-id="b4495-272">Get the GUID of the resource that has the specified index in the resource collection.</span></span>

      <span data-ttu-id="b4495-273">**Important**: cette API fonctionne uniquement dans Project 2016 sur le bureau Windows.</span><span class="sxs-lookup"><span data-stu-id="b4495-273">**Important**: This API works only in Project 2016 on Windows desktop.</span></span>
    name: 'getResourceByIndexAsync(resourceIndex, options, callback)'
    fullName: 'getResourceByIndexAsync(resourceIndex, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getResourceByIndexAsync(resourceIndex: number, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: resourceIndex
          description: <span data-ttu-id="b4495-274">Index de la ressource dans la collection de ressources pour le projet.</span><span class="sxs-lookup"><span data-stu-id="b4495-274">The index of the resource in the collection of resources for the project.</span></span>
          type:
            - number
        - id: options
          description: '<span data-ttu-id="b4495-275">Fournit une option permettant de conserver les données de contexte de n''importe quel type, inchangées, pour une utilisation dans un rappel.</span><span class="sxs-lookup"><span data-stu-id="b4495-275">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="b4495-276">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="b4495-276">Optional.</span></span> <span data-ttu-id="b4495-277">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="b4495-277">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b4495-278">.</span><span class="sxs-lookup"><span data-stu-id="b4495-278"></span></span> <span data-ttu-id="b4495-279">La `value` propriété du résultat est le GUID de la ressource sous forme de chaîne.</span><span class="sxs-lookup"><span data-stu-id="b4495-279">The `value` property of the result is the GUID of the resource as a string.</span></span>'
          type:
            - '(result: AsyncResult<string>) => void'
  - uid: office.Office.Document.getResourceByIndexAsync_1
    summary: |-
      <span data-ttu-id="b4495-280">Documents de projet uniquement.</span><span class="sxs-lookup"><span data-stu-id="b4495-280">Project documents only.</span></span> <span data-ttu-id="b4495-281">Obtenir le GUID de la ressource qui a l'index spécifié dans la collection de ressources.</span><span class="sxs-lookup"><span data-stu-id="b4495-281">Get the GUID of the resource that has the specified index in the resource collection.</span></span>

      <span data-ttu-id="b4495-282">**Important**: cette API fonctionne uniquement dans Project 2016 sur le bureau Windows.</span><span class="sxs-lookup"><span data-stu-id="b4495-282">**Important**: This API works only in Project 2016 on Windows desktop.</span></span>
    name: 'getResourceByIndexAsync(resourceIndex, callback)'
    fullName: 'getResourceByIndexAsync(resourceIndex, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getResourceByIndexAsync(resourceIndex: number, callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="b4495-283">Exemples</span><span class="sxs-lookup"><span data-stu-id="b4495-283">Examples</span></span>

          ```javascript
          // The following code example calls getMaxResourceIndexAsync to get the maximum index in the project's resource
          // collection, and then calls getResourceByIndexAsync to get the GUID for each resource.
          // The example assumes that your add-in has a reference to the jQuery library and that the following 
          // page controls are defined in the content div in the page body:
          // <input id="get-info" type="button" value="Get info" /><br />
          // <span id="message"></span>

          (function () {
              "use strict";
              var resourceGuids = ;

              // The initialize function must be run each time a new page is loaded.
              Office.initialize = function (reason) {
                  $(document).ready(function () {

                      // After the DOM is loaded, add-in-specific code can run.
                      app.initialize();
                      $('#get-info').click(getResourceInfo);
                  });
              };

              // Get the maximum resource index, and then get the resource GUIDs.
              function getResourceInfo() {
                  getMaxResourceIndex().then(
                      function (data) {
                          getResourceGuids(data);
                      }
                  );
              }

              // Get the maximum index of the resources for the current project.
              function getMaxResourceIndex() {
                  var defer = $.Deferred();
                  Office.context.document.getMaxResourceIndexAsync(
                      function (result) {
                          if (result.status === Office.AsyncResultStatus.Failed) {
                              onError(result.error);
                          }
                          else {
                              defer.resolve(result.value);
                          }
                      }
                  );
                  return defer.promise();
              }

              // Get each resource GUID, and then display the GUIDs in the add-in.
              // There is no 0 index for resources, so start with index 1.
              function getResourceGuids(maxResourceIndex) {
                  var defer = $.Deferred();
                  for (var i = 1; i <= maxResourceIndex; i++) {
                      getResourceGuid(i);
                  }
                  return defer.promise();
                  function getResourceGuid(index) {
                      Office.context.document.getResourceByIndexAsync(index,
                          function (result) {
                              if (result.status === Office.AsyncResultStatus.Succeeded) {
                                  resourceGuids.push(result.value);
                                  if (index == maxResourceIndex) {
                                      defer.resolve();
                                      $('#message').html(resourceGuids.toString());
                                  }
                              }
                              else {
                                  onError(result.error);
                              }
                          }
                      );
                  }
              }
              function onError(error) {
                  app.showNotification(error.name + ' ' + error.code + ': ' + error.message);
              }
          })();
          ```
      parameters:
        - id: resourceIndex
          description: <span data-ttu-id="b4495-284">Index de la ressource dans la collection de ressources pour le projet.</span><span class="sxs-lookup"><span data-stu-id="b4495-284">The index of the resource in the collection of resources for the project.</span></span>
          type:
            - number
        - id: callback
          description: '<span data-ttu-id="b4495-285">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="b4495-285">Optional.</span></span> <span data-ttu-id="b4495-286">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="b4495-286">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b4495-287">.</span><span class="sxs-lookup"><span data-stu-id="b4495-287"></span></span> <span data-ttu-id="b4495-288">La `value` propriété du résultat est le GUID de la ressource sous forme de chaîne.</span><span class="sxs-lookup"><span data-stu-id="b4495-288">The `value` property of the result is the GUID of the resource as a string.</span></span>'
          type:
            - '(result: AsyncResult<string>) => void'
  - uid: office.Office.Document.getResourceFieldAsync
    summary: <span data-ttu-id="b4495-289">Documents de projet uniquement.</span><span class="sxs-lookup"><span data-stu-id="b4495-289">Project documents only.</span></span> <span data-ttu-id="b4495-290">Champ obtenir une ressource pour l'ID de ressource fourni. (ex. Nom_ressource)</span><span class="sxs-lookup"><span data-stu-id="b4495-290">Get resource field for provided resource Id. (Ex.ResourceName)</span></span>
    name: 'getResourceFieldAsync(resourceId, fieldId, options, callback)'
    fullName: 'getResourceFieldAsync(resourceId, fieldId, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getResourceFieldAsync(resourceId: string, fieldId: number, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: resourceId
          description: '<span data-ttu-id="b4495-291">Soit une chaîne, soit une valeur de l''ID de ressource.</span><span class="sxs-lookup"><span data-stu-id="b4495-291">Either a string or value of the Resource Id.</span></span>'
          type:
            - string
        - id: fieldId
          description: <span data-ttu-id="b4495-292">Champs de ressources.</span><span class="sxs-lookup"><span data-stu-id="b4495-292">Resource Fields.</span></span>
          type:
            - number
        - id: options
          description: '<span data-ttu-id="b4495-293">Fournit une option permettant de conserver les données de contexte de n''importe quel type, inchangées, pour une utilisation dans un rappel.</span><span class="sxs-lookup"><span data-stu-id="b4495-293">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="b4495-294">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="b4495-294">Optional.</span></span> <span data-ttu-id="b4495-295">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="b4495-295">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b4495-296">.</span><span class="sxs-lookup"><span data-stu-id="b4495-296"></span></span> <span data-ttu-id="b4495-297">La `value` propriété du résultat est le GUID de la ressource sous forme de chaîne.</span><span class="sxs-lookup"><span data-stu-id="b4495-297">The `value` property of the result is the GUID of the resource as a string.</span></span>'
          type:
            - '(result: AsyncResult<string>) => void'
  - uid: office.Office.Document.getResourceFieldAsync_1
    summary: <span data-ttu-id="b4495-298">Documents de projet uniquement.</span><span class="sxs-lookup"><span data-stu-id="b4495-298">Project documents only.</span></span> <span data-ttu-id="b4495-299">Champ obtenir une ressource pour l'ID de ressource fourni. (ex. Nom_ressource)</span><span class="sxs-lookup"><span data-stu-id="b4495-299">Get resource field for provided resource Id. (Ex.ResourceName)</span></span>
    name: 'getResourceFieldAsync(resourceId, fieldId, callback)'
    fullName: 'getResourceFieldAsync(resourceId, fieldId, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getResourceFieldAsync(resourceId: string, fieldId: number, callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="b4495-300">Exemples</span><span class="sxs-lookup"><span data-stu-id="b4495-300">Examples</span></span>

          ```javascript
          // The following code example calls getSelectedResourceAsync to get the GUID of the resource
          // that's currently selected in a resource view. Then it gets three resource field values by calling 
          // getResourceFieldAsync recursively.
          // The example assumes your add-in has a reference to the jQuery library and that the following 
          // page controls are defined in the content div in the page body:
          // <input id="get-info" type="button" value="Get info" /><br />
          // <span id="message"></span>

          (function () {
              "use strict";

              // The initialize function must be run each time a new page is loaded.
              Office.initialize = function (reason) {
                  $(document).ready(function () {

                      // After the DOM is loaded, add-in-specific code can run.
                      $('#get-info').click(getResourceInfo);
                  });
              };

              // Get the GUID of the resource and then get the resource fields.
              function getResourceInfo() {
                  getResourceGuid().then(
                      function (data) {
                          getResourceFields(data);
                      }
                  );
              }

              // Get the GUID of the selected resource.
              function getResourceGuid() {
                  var defer = $.Deferred();
                  Office.context.document.getSelectedResourceAsync(
                      function (result) {
                          if (result.status === Office.AsyncResultStatus.Failed) {
                              onError(result.error);
                          }
                          else {
                              defer.resolve(result.value);
                          }
                      }
                  );
                  return defer.promise();
              }

              // Get the specified fields for the selected resource.
              function getResourceFields(resourceGuid) {
                  var targetFields =
                      [Office.ProjectResourceFields.Name,
                       Office.ProjectResourceFields.Units, 
                       Office.ProjectResourceFields.BaseCalendar];
                  var fieldValues = ['Name: ', 'Units: ', 'Base calendar: '];
                  var index = 0; 
                  getField();

                  // Get each field, and then display the field values in the add-in.
                  function getField() {
                      if (index == targetFields.length) {
                          var output = '';
                          for (var i = 0; i < fieldValues.length; i++) {
                              output += fieldValues[i] + '<br />';
                          }
                          $('#message').html(output);
                      }

                      // If the call is successful, get the field value and then get the next field.
                      else {
                          Office.context.document.getResourceFieldAsync(
                              resourceGuid,
                              targetFields[index],
                              function (result) {
                                  if (result.status === Office.AsyncResultStatus.Succeeded) {
                                      fieldValues[index] += result.value.fieldValue;
                                      getField(index++);
                                  }
                                  else {
                                      onError(result.error);
                                  }
                              }
                          );
                      }
                  }
              }

              function onError(error) {
                  $('#message').html(error.name + ' ' + error.code + ': ' + error.message);
              }
          })();
          ```
      parameters:
        - id: resourceId
          description: '<span data-ttu-id="b4495-301">Soit une chaîne, soit une valeur de l''ID de ressource.</span><span class="sxs-lookup"><span data-stu-id="b4495-301">Either a string or value of the Resource Id.</span></span>'
          type:
            - string
        - id: fieldId
          description: <span data-ttu-id="b4495-302">Champs de ressources.</span><span class="sxs-lookup"><span data-stu-id="b4495-302">Resource Fields.</span></span>
          type:
            - number
        - id: callback
          description: '<span data-ttu-id="b4495-303">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="b4495-303">Optional.</span></span> <span data-ttu-id="b4495-304">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="b4495-304">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b4495-305">.</span><span class="sxs-lookup"><span data-stu-id="b4495-305"></span></span> <span data-ttu-id="b4495-306">La `value` propriété du résultat est le GUID de la ressource sous forme de chaîne.</span><span class="sxs-lookup"><span data-stu-id="b4495-306">The `value` property of the result is the GUID of the resource as a string.</span></span>'
          type:
            - '(result: AsyncResult<string>) => void'
  - uid: office.Office.Document.getSelectedDataAsync
    summary: <span data-ttu-id="b4495-307">Lit les données contenues dans la sélection actuelle du document.</span><span class="sxs-lookup"><span data-stu-id="b4495-307">Reads the data contained in the current selection in the document.</span></span>
    remarks: |-
      <span data-ttu-id="b4495-308">**Ensembles de conditions requises**:</span><span class="sxs-lookup"><span data-stu-id="b4495-308">**Requirement sets**:</span></span>

      - <span data-ttu-id="b4495-309">[HtmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#htmlcoercion) (lorsque vous utilisez`Office.CoercionType.Html`</span><span class="sxs-lookup"><span data-stu-id="b4495-309">[HtmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#htmlcoercion) (when using `Office.CoercionType.Html`</span></span><!-- --><span data-ttu-id="b4495-310">)</span><span class="sxs-lookup"><span data-stu-id="b4495-310"></span></span>

      - <span data-ttu-id="b4495-311">[MatrixCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixcoercion) (lorsque vous utilisez`Office.CoercionType.Matrix`</span><span class="sxs-lookup"><span data-stu-id="b4495-311">[MatrixCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixcoercion) (when using `Office.CoercionType.Matrix`</span></span><!-- --><span data-ttu-id="b4495-312">)</span><span class="sxs-lookup"><span data-stu-id="b4495-312"></span></span>

      - <span data-ttu-id="b4495-313">[OoxmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#ooxmlcoercion) (lorsque vous utilisez`Office.CoercionType.Ooxml`</span><span class="sxs-lookup"><span data-stu-id="b4495-313">[OoxmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#ooxmlcoercion) (when using `Office.CoercionType.Ooxml`</span></span><!-- --><span data-ttu-id="b4495-314">)</span><span class="sxs-lookup"><span data-stu-id="b4495-314"></span></span>

      - [<span data-ttu-id="b4495-315">Selection</span><span class="sxs-lookup"><span data-stu-id="b4495-315">Selection</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#selection)

      - <span data-ttu-id="b4495-316">[TableCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablecoercion) (lorsque vous utilisez`Office.CoercionType.Table`</span><span class="sxs-lookup"><span data-stu-id="b4495-316">[TableCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablecoercion) (when using `Office.CoercionType.Table`</span></span><!-- --><span data-ttu-id="b4495-317">)</span><span class="sxs-lookup"><span data-stu-id="b4495-317"></span></span>

      - <span data-ttu-id="b4495-318">[TextCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textcoercion) (lorsque vous utilisez`Office.CoercionType.Text`</span><span class="sxs-lookup"><span data-stu-id="b4495-318">[TextCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textcoercion) (when using `Office.CoercionType.Text`</span></span><!-- --><span data-ttu-id="b4495-319">)</span><span class="sxs-lookup"><span data-stu-id="b4495-319"></span></span>

      <span data-ttu-id="b4495-320">Dans la fonction de rappel transmise à la méthode getSelectedDataAsync, vous pouvez utiliser les propriétés de l'objet AsyncResult pour renvoyer les informations suivantes.</span><span class="sxs-lookup"><span data-stu-id="b4495-320">In the callback function that is passed to the getSelectedDataAsync method, you can use the properties of the AsyncResult object to return the following information.</span></span>

      <table> <tr> <th><span data-ttu-id="b4495-321">Propriété</span><span class="sxs-lookup"><span data-stu-id="b4495-321">Property</span></span></th> <th><span data-ttu-id="b4495-322">Utiliser pour...</span><span class="sxs-lookup"><span data-stu-id="b4495-322">Use to...</span></span></th> </tr> <tr> <td><span data-ttu-id="b4495-323">AsyncResult.value</span><span class="sxs-lookup"><span data-stu-id="b4495-323">AsyncResult.value</span></span></td> <td><span data-ttu-id="b4495-324">Toujours renvoyer undefined car il n’existe aucun objet ou aucune donnée à récupérer.</span><span class="sxs-lookup"><span data-stu-id="b4495-324">Always returns undefined because there is no object or data to retrieve.</span></span></td> </tr> <tr> <td><span data-ttu-id="b4495-325">AsyncResult.status</span><span class="sxs-lookup"><span data-stu-id="b4495-325">AsyncResult.status</span></span></td> <td><span data-ttu-id="b4495-326">Déterminer si l’opération a réussi ou échoué.</span><span class="sxs-lookup"><span data-stu-id="b4495-326">Determine the success or failure of the operation.</span></span></td> </tr> <tr> <td><span data-ttu-id="b4495-327">AsyncResult.error</span><span class="sxs-lookup"><span data-stu-id="b4495-327">AsyncResult.error</span></span></td> <td><span data-ttu-id="b4495-328">Accéder à un objet Error fournissant des informations sur l’erreur en cas d’échec de l’opération.</span><span class="sxs-lookup"><span data-stu-id="b4495-328">Access an Error object that provides error information if the operation failed.</span></span></td> </tr> <tr> <td><span data-ttu-id="b4495-329">AsyncResult.asyncContext</span><span class="sxs-lookup"><span data-stu-id="b4495-329">AsyncResult.asyncContext</span></span></td> <td><span data-ttu-id="b4495-330">Élément de tout type défini par l’utilisateur qui est renvoyé dans l’objet AsyncResult sans être modifié.</span><span class="sxs-lookup"><span data-stu-id="b4495-330">A user-defined item of any type that is returned in the AsyncResult object without being altered.</span></span></td> </tr> </table>

      <span data-ttu-id="b4495-331">Les valeurs possibles pour le paramètre [Office. CoercionType](xref:office.Office.CoercionType) varient en fonction de l'hôte.</span><span class="sxs-lookup"><span data-stu-id="b4495-331">The possible values for the [Office.CoercionType](xref:office.Office.CoercionType) parameter vary by the host.</span></span>

      <table> <tr> <th><span data-ttu-id="b4495-332">Host (Hôte)</span><span class="sxs-lookup"><span data-stu-id="b4495-332">Host</span></span></th> <th><span data-ttu-id="b4495-333">coercionType pris en charge</span><span class="sxs-lookup"><span data-stu-id="b4495-333">Supported coercionType</span></span></th> </tr> <tr> <td><span data-ttu-id="b4495-334">Excel, PowerPoint, Project et Word</span><span class="sxs-lookup"><span data-stu-id="b4495-334">Excel, PowerPoint, Project, and Word</span></span></td> <td><span data-ttu-id="b4495-335">`Office.CoercionType.Text`chaîne</span><span class="sxs-lookup"><span data-stu-id="b4495-335">`Office.CoercionType.Text` (string)</span></span></td> </tr> <tr> <td><span data-ttu-id="b4495-336">Excel et Word</span><span class="sxs-lookup"><span data-stu-id="b4495-336">Excel and Word</span></span></td> <td><span data-ttu-id="b4495-337">`Office.CoercionType.Matrix`(tableau de tableaux)</span><span class="sxs-lookup"><span data-stu-id="b4495-337">`Office.CoercionType.Matrix` (array of arrays)</span></span></td> </tr> <tr> <td><span data-ttu-id="b4495-338">Access, Excel et Word</span><span class="sxs-lookup"><span data-stu-id="b4495-338">Access, Excel, and Word</span></span></td> <td><span data-ttu-id="b4495-339">`Office.CoercionType.Table`(Objet TableData)</span><span class="sxs-lookup"><span data-stu-id="b4495-339">`Office.CoercionType.Table` (TableData object)</span></span></td> </tr> <tr> <td><span data-ttu-id="b4495-340">Word</span><span class="sxs-lookup"><span data-stu-id="b4495-340">Word</span></span></td> <td>`Office.CoercionType.Html`</td> </tr> <tr> <td><span data-ttu-id="b4495-341">Word</span><span class="sxs-lookup"><span data-stu-id="b4495-341">Word</span></span></td> <td><span data-ttu-id="b4495-342">`Office.CoercionType.Ooxml`(Office Open XML)</span><span class="sxs-lookup"><span data-stu-id="b4495-342">`Office.CoercionType.Ooxml` (Office Open XML)</span></span></td> </tr> <tr> <td><span data-ttu-id="b4495-343">PowerPoint et PowerPoint Online</span><span class="sxs-lookup"><span data-stu-id="b4495-343">PowerPoint and PowerPoint Online</span></span></td> <td>`Office.CoercionType.SlideRange`</td> </tr> <tr> <td><span data-ttu-id="b4495-344">Excel, PowerPoint et Word</span><span class="sxs-lookup"><span data-stu-id="b4495-344">Excel, PowerPoint, and Word</span></span></td> <td>`Office.CoercionType.XmlSvg`</td> </tr> </table>

      #### <a name="examples"></a><span data-ttu-id="b4495-345">Exemples</span><span class="sxs-lookup"><span data-stu-id="b4495-345">Examples</span></span>

      ```javascript
      // The following example uses the getSelectedDataAsync method of the Document object to retrieve the
      // user's current selection as text, and then display it in the add-in's page.

      // Display the user's current selection.
      function showSelection() {
          Office.context.document.getSelectedDataAsync(
              "text",                        // coercionType
              {valueFormat: "unformatted",   // valueFormat
              filterType: "all"},            // filterType
              function (result) {            // callback
                  var dataValue; 
                  dataValue = result.value;
                  write('Selected data is: ' + dataValue);
              });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
      ```javascript
      // To read the value of the current selection, you need to write a callback function that reads the selection.
      // The following example shows how to:
      // 1. Pass an anonymous callback function that reads the value of the current selection
      //    to the callback parameter of the getSelectedDataAsync method.
      // 2. Read the selection as text, unformatted, and not filtered.
      // 3. Display the value on the add-in's page.
      function getText() {
          Office.context.document.getSelectedDataAsync(Office.CoercionType.Text, 
              { valueFormat: "unformatted", filterType: "all" },
              function (asyncResult) {
                  var error = asyncResult.error;
                  if (asyncResult.status === Office.AsyncResultStatus.Failed) {
                      write(error.name + ": " + error.message);
                  } 
                  else {
                      // Get selected data.
                      var dataValue = asyncResult.value; 
                      write('Selected data is ' + dataValue);
                  }            
              });
      }

      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
      ```javascript
      // The following code example gets the values of the selected cells. It uses the optional
      // asyncContext parameter to pass some text to the callback function.
      // The example assumes your add-in has a reference to the jQuery library and that the
      // following page controls are defined in the content div in the page body:
      // <input id="get-info" type="button" value="Get info" /><br />
      // <span id="message"></span>

      (function () {
          "use strict";

          // The initialize function must be run each time a new page is loaded.
          Office.initialize = function (reason) {
              $(document).ready(function () {

                  // After the DOM is loaded, add-in-specific code can run.
                  $('#get-info').click(getSelectedText);
              });
          };

          // Get the text from the selected cells in the document, and display it in the add-in.
          function getSelectedText() {
              Office.context.document.getSelectedDataAsync(
                  Office.CoercionType.Text,
                  {asyncContext: 'Some related info'},
                  function (result) {
                      if (result.status === Office.AsyncResultStatus.Failed) {
                          onError(result.error);
                      }
                      else {
                          var output = String.format(
                              'Selected text: {0}<br/>Passed info: {1}',
                              result.value, result.asyncContext);
                          $('#message').html(output);
                      }
                  }
              );
          }

          function onError(error) {
              $('#message').html(error.name + ' ' + error.code + ': ' + error.message);
          }
      })();
      ```
    name: 'getSelectedDataAsync(coercionType, options, callback)'
    fullName: 'getSelectedDataAsync(coercionType, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedDataAsync<T>(coercionType: Office.CoercionType, options?: GetSelectedDataOptions, callback?: (result: AsyncResult<T>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: coercionType
          description: <span data-ttu-id="b4495-346">Type de structure de données à renvoyer.</span><span class="sxs-lookup"><span data-stu-id="b4495-346">The type of data structure to return.</span></span> <span data-ttu-id="b4495-347">Consultez la section Remarques pour les types de forçage de type pris en charge par chaque hôte.</span><span class="sxs-lookup"><span data-stu-id="b4495-347">See the remarks section for each host's supported coercion types.</span></span>
          type:
            - office.Office.CoercionType
        - id: options
          description: <span data-ttu-id="b4495-348">Fournit des options pour personnaliser les données renvoyées et leur mise en forme.</span><span class="sxs-lookup"><span data-stu-id="b4495-348">Provides options for customizing what data is returned and how it is formatted.</span></span>
          type:
            - office.Office.GetSelectedDataOptions
        - id: callback
          description: '<span data-ttu-id="b4495-349">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="b4495-349">Optional.</span></span> <span data-ttu-id="b4495-350">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="b4495-350">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b4495-351">.</span><span class="sxs-lookup"><span data-stu-id="b4495-351"></span></span> <span data-ttu-id="b4495-352">La `value` propriété du résultat contient les données dans la sélection actuelle.</span><span class="sxs-lookup"><span data-stu-id="b4495-352">The `value` property of the result is the data in the current selection.</span></span> <span data-ttu-id="b4495-353">Cette fonction est renvoyée dans la structure ou le format des données que vous avez spécifié avec le paramètre coercionType.</span><span class="sxs-lookup"><span data-stu-id="b4495-353">This is returned in the data structure or format you specified with the coercionType parameter.</span></span> <span data-ttu-id="b4495-354">(Voir Remarques pour plus d’informations sur le forçage de type de données.)</span><span class="sxs-lookup"><span data-stu-id="b4495-354">(See Remarks for more information about data coercion.)</span></span>'
          type:
            - '(result: AsyncResult<T>) => void'
  - uid: office.Office.Document.getSelectedDataAsync_1
    summary: <span data-ttu-id="b4495-355">Lit les données contenues dans la sélection actuelle du document.</span><span class="sxs-lookup"><span data-stu-id="b4495-355">Reads the data contained in the current selection in the document.</span></span>
    remarks: |-
      <span data-ttu-id="b4495-356">**Ensembles de conditions requises**:</span><span class="sxs-lookup"><span data-stu-id="b4495-356">**Requirement sets**:</span></span>

      - <span data-ttu-id="b4495-357">[HtmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#htmlcoercion) (lorsque vous utilisez`Office.CoercionType.Html`</span><span class="sxs-lookup"><span data-stu-id="b4495-357">[HtmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#htmlcoercion) (when using `Office.CoercionType.Html`</span></span><!-- --><span data-ttu-id="b4495-358">)</span><span class="sxs-lookup"><span data-stu-id="b4495-358"></span></span>

      - <span data-ttu-id="b4495-359">[MatrixCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixcoercion) (lorsque vous utilisez`Office.CoercionType.Matrix`</span><span class="sxs-lookup"><span data-stu-id="b4495-359">[MatrixCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixcoercion) (when using `Office.CoercionType.Matrix`</span></span><!-- --><span data-ttu-id="b4495-360">)</span><span class="sxs-lookup"><span data-stu-id="b4495-360"></span></span>

      - <span data-ttu-id="b4495-361">[OoxmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#ooxmlcoercion) (lorsque vous utilisez`Office.CoercionType.Ooxml`</span><span class="sxs-lookup"><span data-stu-id="b4495-361">[OoxmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#ooxmlcoercion) (when using `Office.CoercionType.Ooxml`</span></span><!-- --><span data-ttu-id="b4495-362">)</span><span class="sxs-lookup"><span data-stu-id="b4495-362"></span></span>

      - [<span data-ttu-id="b4495-363">Selection</span><span class="sxs-lookup"><span data-stu-id="b4495-363">Selection</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#selection)

      - <span data-ttu-id="b4495-364">[TableCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablecoercion) (lorsque vous utilisez`Office.CoercionType.Table`</span><span class="sxs-lookup"><span data-stu-id="b4495-364">[TableCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablecoercion) (when using `Office.CoercionType.Table`</span></span><!-- --><span data-ttu-id="b4495-365">)</span><span class="sxs-lookup"><span data-stu-id="b4495-365"></span></span>

      - <span data-ttu-id="b4495-366">[TextCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textcoercion) (lorsque vous utilisez`Office.CoercionType.Text`</span><span class="sxs-lookup"><span data-stu-id="b4495-366">[TextCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textcoercion) (when using `Office.CoercionType.Text`</span></span><!-- --><span data-ttu-id="b4495-367">)</span><span class="sxs-lookup"><span data-stu-id="b4495-367"></span></span>

      <span data-ttu-id="b4495-368">Dans la fonction de rappel transmise à la méthode getSelectedDataAsync, vous pouvez utiliser les propriétés de l'objet AsyncResult pour renvoyer les informations suivantes.</span><span class="sxs-lookup"><span data-stu-id="b4495-368">In the callback function that is passed to the getSelectedDataAsync method, you can use the properties of the AsyncResult object to return the following information.</span></span>

      <table> <tr> <th><span data-ttu-id="b4495-369">Propriété</span><span class="sxs-lookup"><span data-stu-id="b4495-369">Property</span></span></th> <th><span data-ttu-id="b4495-370">Utiliser pour...</span><span class="sxs-lookup"><span data-stu-id="b4495-370">Use to...</span></span></th> </tr> <tr> <td><span data-ttu-id="b4495-371">AsyncResult.value</span><span class="sxs-lookup"><span data-stu-id="b4495-371">AsyncResult.value</span></span></td> <td><span data-ttu-id="b4495-372">Toujours renvoyer undefined car il n’existe aucun objet ou aucune donnée à récupérer.</span><span class="sxs-lookup"><span data-stu-id="b4495-372">Always returns undefined because there is no object or data to retrieve.</span></span></td> </tr> <tr> <td><span data-ttu-id="b4495-373">AsyncResult.status</span><span class="sxs-lookup"><span data-stu-id="b4495-373">AsyncResult.status</span></span></td> <td><span data-ttu-id="b4495-374">Déterminer si l’opération a réussi ou échoué.</span><span class="sxs-lookup"><span data-stu-id="b4495-374">Determine the success or failure of the operation.</span></span></td> </tr> <tr> <td><span data-ttu-id="b4495-375">AsyncResult.error</span><span class="sxs-lookup"><span data-stu-id="b4495-375">AsyncResult.error</span></span></td> <td><span data-ttu-id="b4495-376">Accéder à un objet Error fournissant des informations sur l’erreur en cas d’échec de l’opération.</span><span class="sxs-lookup"><span data-stu-id="b4495-376">Access an Error object that provides error information if the operation failed.</span></span></td> </tr> <tr> <td><span data-ttu-id="b4495-377">AsyncResult.asyncContext</span><span class="sxs-lookup"><span data-stu-id="b4495-377">AsyncResult.asyncContext</span></span></td> <td><span data-ttu-id="b4495-378">Élément de tout type défini par l’utilisateur qui est renvoyé dans l’objet AsyncResult sans être modifié.</span><span class="sxs-lookup"><span data-stu-id="b4495-378">A user-defined item of any type that is returned in the AsyncResult object without being altered.</span></span></td> </tr> </table>

      <span data-ttu-id="b4495-379">Les valeurs possibles pour le paramètre [Office. CoercionType](xref:office.Office.CoercionType) varient en fonction de l'hôte.</span><span class="sxs-lookup"><span data-stu-id="b4495-379">The possible values for the [Office.CoercionType](xref:office.Office.CoercionType) parameter vary by the host.</span></span>

      <table> <tr> <th><span data-ttu-id="b4495-380">Host (Hôte)</span><span class="sxs-lookup"><span data-stu-id="b4495-380">Host</span></span></th> <th><span data-ttu-id="b4495-381">coercionType pris en charge</span><span class="sxs-lookup"><span data-stu-id="b4495-381">Supported coercionType</span></span></th> </tr> <tr> <td><span data-ttu-id="b4495-382">Excel, PowerPoint, Project et Word</span><span class="sxs-lookup"><span data-stu-id="b4495-382">Excel, PowerPoint, Project, and Word</span></span></td> <td><span data-ttu-id="b4495-383">`Office.CoercionType.Text`chaîne</span><span class="sxs-lookup"><span data-stu-id="b4495-383">`Office.CoercionType.Text` (string)</span></span></td> </tr> <tr> <td><span data-ttu-id="b4495-384">Excel et Word</span><span class="sxs-lookup"><span data-stu-id="b4495-384">Excel and Word</span></span></td> <td><span data-ttu-id="b4495-385">`Office.CoercionType.Matrix`(tableau de tableaux)</span><span class="sxs-lookup"><span data-stu-id="b4495-385">`Office.CoercionType.Matrix` (array of arrays)</span></span></td> </tr> <tr> <td><span data-ttu-id="b4495-386">Access, Excel et Word</span><span class="sxs-lookup"><span data-stu-id="b4495-386">Access, Excel, and Word</span></span></td> <td><span data-ttu-id="b4495-387">`Office.CoercionType.Table`(Objet TableData)</span><span class="sxs-lookup"><span data-stu-id="b4495-387">`Office.CoercionType.Table` (TableData object)</span></span></td> </tr> <tr> <td><span data-ttu-id="b4495-388">Word</span><span class="sxs-lookup"><span data-stu-id="b4495-388">Word</span></span></td> <td>`Office.CoercionType.Html`</td> </tr> <tr> <td><span data-ttu-id="b4495-389">Word</span><span class="sxs-lookup"><span data-stu-id="b4495-389">Word</span></span></td> <td><span data-ttu-id="b4495-390">`Office.CoercionType.Ooxml`(Office Open XML)</span><span class="sxs-lookup"><span data-stu-id="b4495-390">`Office.CoercionType.Ooxml` (Office Open XML)</span></span></td> </tr> <tr> <td><span data-ttu-id="b4495-391">PowerPoint et PowerPoint Online</span><span class="sxs-lookup"><span data-stu-id="b4495-391">PowerPoint and PowerPoint Online</span></span></td> <td>`Office.CoercionType.SlideRange`</td> </tr> <tr> <td><span data-ttu-id="b4495-392">Excel, PowerPoint et Word</span><span class="sxs-lookup"><span data-stu-id="b4495-392">Excel, PowerPoint, and Word</span></span></td> <td>`Office.CoercionType.XmlSvg`</td> </tr> </table>
    name: 'getSelectedDataAsync(coercionType, callback)'
    fullName: 'getSelectedDataAsync(coercionType, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedDataAsync<T>(coercionType: Office.CoercionType, callback?: (result: AsyncResult<T>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: coercionType
          description: <span data-ttu-id="b4495-393">Type de structure de données à renvoyer.</span><span class="sxs-lookup"><span data-stu-id="b4495-393">The type of data structure to return.</span></span> <span data-ttu-id="b4495-394">Consultez la section Remarques pour les types de forçage de type pris en charge par chaque hôte.</span><span class="sxs-lookup"><span data-stu-id="b4495-394">See the remarks section for each host's supported coercion types.</span></span>
          type:
            - office.Office.CoercionType
        - id: callback
          description: '<span data-ttu-id="b4495-395">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="b4495-395">Optional.</span></span> <span data-ttu-id="b4495-396">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="b4495-396">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b4495-397">.</span><span class="sxs-lookup"><span data-stu-id="b4495-397"></span></span> <span data-ttu-id="b4495-398">La `value` propriété du résultat contient les données dans la sélection actuelle.</span><span class="sxs-lookup"><span data-stu-id="b4495-398">The `value` property of the result is the data in the current selection.</span></span> <span data-ttu-id="b4495-399">Cette fonction est renvoyée dans la structure ou le format des données que vous avez spécifié avec le paramètre coercionType.</span><span class="sxs-lookup"><span data-stu-id="b4495-399">This is returned in the data structure or format you specified with the coercionType parameter.</span></span> <span data-ttu-id="b4495-400">(Voir Remarques pour plus d’informations sur le forçage de type de données.)</span><span class="sxs-lookup"><span data-stu-id="b4495-400">(See Remarks for more information about data coercion.)</span></span>'
          type:
            - '(result: AsyncResult<T>) => void'
  - uid: office.Office.Document.getSelectedResourceAsync
    summary: <span data-ttu-id="b4495-401">Documents de projet uniquement.</span><span class="sxs-lookup"><span data-stu-id="b4495-401">Project documents only.</span></span> <span data-ttu-id="b4495-402">Obtenir l'ID de la ressource sélectionnée actuelle.</span><span class="sxs-lookup"><span data-stu-id="b4495-402">Get the current selected Resource's Id.</span></span>
    name: 'getSelectedResourceAsync(options, callback)'
    fullName: 'getSelectedResourceAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedResourceAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="b4495-403">Fournit une option permettant de conserver les données de contexte de n''importe quel type, inchangées, pour une utilisation dans un rappel.</span><span class="sxs-lookup"><span data-stu-id="b4495-403">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="b4495-404">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="b4495-404">Optional.</span></span> <span data-ttu-id="b4495-405">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="b4495-405">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b4495-406">.</span><span class="sxs-lookup"><span data-stu-id="b4495-406"></span></span> <span data-ttu-id="b4495-407">La `value` propriété du résultat est le GUID de la ressource sous forme de chaîne.</span><span class="sxs-lookup"><span data-stu-id="b4495-407">The `value` property of the result is the GUID of the resource as a string.</span></span>'
          type:
            - '(result: AsyncResult<string>) => void'
  - uid: office.Office.Document.getSelectedResourceAsync_1
    summary: <span data-ttu-id="b4495-408">Documents de projet uniquement.</span><span class="sxs-lookup"><span data-stu-id="b4495-408">Project documents only.</span></span> <span data-ttu-id="b4495-409">Obtenir l'ID de la ressource sélectionnée actuelle.</span><span class="sxs-lookup"><span data-stu-id="b4495-409">Get the current selected Resource's Id.</span></span>
    name: getSelectedResourceAsync(callback)
    fullName: getSelectedResourceAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedResourceAsync(callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="b4495-410">Exemples</span><span class="sxs-lookup"><span data-stu-id="b4495-410">Examples</span></span>

          ```javascript
          // The following code example calls getSelectedResourceAsync to get the GUID of the resource that's 
          // currently selected in a resource view. Then it gets three resource field values by calling 
          // getResourceFieldAsync recursively.
          // The example assumes your add-in has a reference to the jQuery library and that the following page controls are
          // defined in the content div in the page body:
          // <input id="get-info" type="button" value="Get info" /><br />
          // <span id="message"></span>

          (function () {
              "use strict";

              // The initialize function must be run each time a new page is loaded.
              Office.initialize = function (reason) {
                  $(document).ready(function () {

                      // After the DOM is loaded, add-in-specific code can run.
                      $('#get-info').click(getResourceInfo);
                  });
              };

              // Get the GUID of the resource and then get the resource fields.
              function getResourceInfo() {
                  getResourceGuid().then(
                      function (data) {
                          getResourceFields(data);
                      }
                  );
              }

              // Get the GUID of the selected resource.
              function getResourceGuid() {
                  var defer = $.Deferred();
                  Office.context.document.getSelectedResourceAsync(
                      function (result) {
                          if (result.status === Office.AsyncResultStatus.Failed) {
                              onError(result.error);
                          }
                          else {
                              defer.resolve(result.value);
                          }
                      }
                  );
                  return defer.promise();
              }

              // Get the specified fields for the selected resource.
              function getResourceFields(resourceGuid) {
                  var targetFields =
                      [Office.ProjectResourceFields.Name,
                       Office.ProjectResourceFields.Units, 
                       Office.ProjectResourceFields.BaseCalendar];
                  var fieldValues = ['Name: ', 'Units: ', 'Base calendar: '];
                  var index = 0; 
                  getField();

                  // Get each field, and then display the field values in the add-in.
                  function getField() {
                      if (index == targetFields.length) {
                          var output = '';
                          for (var i = 0; i < fieldValues.length; i++) {
                              output += fieldValues[i] + '<br />';
                          }
                          $('#message').html(output);
                      }

                      // If the call is successful, get the field value and then get the next field.
                      else {
                          Office.context.document.getResourceFieldAsync(
                              resourceGuid,
                              targetFields[index],
                              function (result) {
                                  if (result.status === Office.AsyncResultStatus.Succeeded) {
                                      fieldValues[index] += result.value.fieldValue;
                                      getField(index++);
                                  }
                                  else {
                                      onError(result.error);
                                  }
                              }
                          );
                      }
                  }
              }

              function onError(error) {
                  $('#message').html(error.name + ' ' + error.code + ': ' + error.message);
              }
          })();
          ```
      parameters:
        - id: callback
          description: '<span data-ttu-id="b4495-411">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="b4495-411">Optional.</span></span> <span data-ttu-id="b4495-412">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="b4495-412">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b4495-413">.</span><span class="sxs-lookup"><span data-stu-id="b4495-413"></span></span> <span data-ttu-id="b4495-414">La `value` propriété du résultat est le GUID de la ressource sous forme de chaîne.</span><span class="sxs-lookup"><span data-stu-id="b4495-414">The `value` property of the result is the GUID of the resource as a string.</span></span>'
          type:
            - '(result: AsyncResult<string>) => void'
  - uid: office.Office.Document.getSelectedTaskAsync
    summary: <span data-ttu-id="b4495-415">Documents de projet uniquement.</span><span class="sxs-lookup"><span data-stu-id="b4495-415">Project documents only.</span></span> <span data-ttu-id="b4495-416">Obtenir l'ID de la tâche sélectionnée actuelle.</span><span class="sxs-lookup"><span data-stu-id="b4495-416">Get the current selected Task's Id.</span></span>
    name: 'getSelectedTaskAsync(options, callback)'
    fullName: 'getSelectedTaskAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedTaskAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="b4495-417">Fournit une option permettant de conserver les données de contexte de n''importe quel type, inchangées, pour une utilisation dans un rappel.</span><span class="sxs-lookup"><span data-stu-id="b4495-417">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="b4495-418">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="b4495-418">Optional.</span></span> <span data-ttu-id="b4495-419">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="b4495-419">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b4495-420">.</span><span class="sxs-lookup"><span data-stu-id="b4495-420"></span></span> <span data-ttu-id="b4495-421">La `value` propriété du résultat est le GUID de la ressource sous forme de chaîne.</span><span class="sxs-lookup"><span data-stu-id="b4495-421">The `value` property of the result is the GUID of the resource as a string.</span></span>'
          type:
            - '(result: AsyncResult<string>) => void'
  - uid: office.Office.Document.getSelectedTaskAsync_1
    summary: <span data-ttu-id="b4495-422">Documents de projet uniquement.</span><span class="sxs-lookup"><span data-stu-id="b4495-422">Project documents only.</span></span> <span data-ttu-id="b4495-423">Obtenir l'ID de la tâche sélectionnée actuelle.</span><span class="sxs-lookup"><span data-stu-id="b4495-423">Get the current selected Task's Id.</span></span>
    name: getSelectedTaskAsync(callback)
    fullName: getSelectedTaskAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedTaskAsync(callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="b4495-424">Exemples</span><span class="sxs-lookup"><span data-stu-id="b4495-424">Examples</span></span>

          ```javascript
          // The following code example calls getSelectedTaskAsync to get the GUID of the task that's currently
          // selected in a task view. Then it gets task properties by calling getTaskAsync.
          // The example assumes your add-in has a reference to the jQuery library and that the following page
          // controls are defined in the content div in the page body:
          // <input id="get-info" type="button" value="Get info" /><br />
          // <span id="message"></span>

          (function () {
              "use strict";

              // The initialize function must be run each time a new page is loaded.
              Office.initialize = function (reason) {
                  $(document).ready(function () {

                      // After the DOM is loaded, add-in-specific code can run.
                      $('#get-info').click(getTaskInfo);
                  });
              };

              // // Get the GUID of the task, and then get local task properties.
              function getTaskInfo() {
                  getTaskGuid().then(
                      function (data) {
                          getTaskProperties(data);
                      }
                  );
              }

              // Get the GUID of the selected task.
              function getTaskGuid() {
                  var defer = $.Deferred();
                  Office.context.document.getSelectedTaskAsync(
                      function (result) {
                          if (result.status === Office.AsyncResultStatus.Failed) {
                              onError(result.error);
                          }
                          else {
                              defer.resolve(result.value);
                          }
                      }
                  );
                  return defer.promise();
              }

              // Get local properties for the selected task, and then display it in the add-in.
              function getTaskProperties(taskGuid) {
                  Office.context.document.getTaskAsync(
                      taskGuid,
                      function (result) {
                          if (result.status === Office.AsyncResultStatus.Failed) {
                              onError(result.error);
                          }
                          else {
                              var taskInfo = result.value;
                              var output = String.format(
                                  'Name: {0}<br/>GUID: {1}<br/>SharePoint task ID: {2}<br/>Resource names: {3}',
                                  taskInfo.taskName, taskGuid, taskInfo.wssTaskId, taskInfo.resourceNames);
                              $('#message').html(output);
                          }
                      }
                  );
              }

              function onError(error) {
                  $('#message').html(error.name + ' ' + error.code + ': ' + error.message);
              }
          })();
          ```
      parameters:
        - id: callback
          description: '<span data-ttu-id="b4495-425">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="b4495-425">Optional.</span></span> <span data-ttu-id="b4495-426">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="b4495-426">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b4495-427">.</span><span class="sxs-lookup"><span data-stu-id="b4495-427"></span></span> <span data-ttu-id="b4495-428">La `value` propriété du résultat est le GUID de la ressource sous forme de chaîne.</span><span class="sxs-lookup"><span data-stu-id="b4495-428">The `value` property of the result is the GUID of the resource as a string.</span></span>'
          type:
            - '(result: AsyncResult<string>) => void'
  - uid: office.Office.Document.getSelectedViewAsync
    summary: '<span data-ttu-id="b4495-429">Documents de projet uniquement.</span><span class="sxs-lookup"><span data-stu-id="b4495-429">Project documents only.</span></span> <span data-ttu-id="b4495-430">Obtenir le type d''affichage sélectionné actuel (par exemple,</span><span class="sxs-lookup"><span data-stu-id="b4495-430">Get the current selected View Type (Ex.</span></span> <span data-ttu-id="b4495-431">Gantt) et nom de l''affichage.</span><span class="sxs-lookup"><span data-stu-id="b4495-431">Gantt) and View Name.</span></span>'
    name: 'getSelectedViewAsync(options, callback)'
    fullName: 'getSelectedViewAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedViewAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<any>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="b4495-432">Fournit une option permettant de conserver les données de contexte de n''importe quel type, inchangées, pour une utilisation dans un rappel.</span><span class="sxs-lookup"><span data-stu-id="b4495-432">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="b4495-433">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="b4495-433">Optional.</span></span> <span data-ttu-id="b4495-434">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="b4495-434">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b4495-435">.</span><span class="sxs-lookup"><span data-stu-id="b4495-435"></span></span> <span data-ttu-id="b4495-436">La `value` propriété du résultat contient les propriétés suivantes: `viewName` -le nom de l''affichage, en tant que constante ProjectViewTypes.</span><span class="sxs-lookup"><span data-stu-id="b4495-436">The `value` property of the result contains the following properties: `viewName` - The name of the view, as a ProjectViewTypes constant.</span></span> <span data-ttu-id="b4495-437">`viewType`-Le type de vue, en tant que valeur entière d''une constante ProjectViewTypes.</span><span class="sxs-lookup"><span data-stu-id="b4495-437">`viewType` - The type of view, as the integer value of a ProjectViewTypes constant.</span></span>'
          type:
            - '(result: AsyncResult<any>) => void'
  - uid: office.Office.Document.getSelectedViewAsync_1
    summary: '<span data-ttu-id="b4495-438">Documents de projet uniquement.</span><span class="sxs-lookup"><span data-stu-id="b4495-438">Project documents only.</span></span> <span data-ttu-id="b4495-439">Obtenir le type d''affichage sélectionné actuel (par exemple,</span><span class="sxs-lookup"><span data-stu-id="b4495-439">Get the current selected View Type (Ex.</span></span> <span data-ttu-id="b4495-440">Gantt) et nom de l''affichage.</span><span class="sxs-lookup"><span data-stu-id="b4495-440">Gantt) and View Name.</span></span>'
    name: getSelectedViewAsync(callback)
    fullName: getSelectedViewAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedViewAsync(callback?: (result: AsyncResult<any>) => void): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="b4495-441">Exemples</span><span class="sxs-lookup"><span data-stu-id="b4495-441">Examples</span></span>

          ```javascript
          // The following code example calls adds a ViewSelectionChanged event handler that
          // calls getSelectedViewAsync to get the name and type of the active view in the document.
          // The example assumes your add-in has a reference to the jQuery library and that
          // the following page control is defined in the content div in the page body:
          // <span id="message"></span>

          (function () {
              "use strict";

              // The initialize function must be run each time a new page is loaded.
              Office.initialize = function (reason) {
                  $(document).ready(function () {

                      // After the DOM is loaded, add-in-specific code can run.
                      Office.context.document.addHandlerAsync(
                          Office.EventType.ViewSelectionChanged,
                          getActiveView);
                      getActiveView();
                  });
              };

              // Get the active view's name and type.
              function getActiveView() {
                  Office.context.document.getSelectedViewAsync(
                      function (result) {
                          if (result.status === Office.AsyncResultStatus.Failed) {
                              onError(result.error);
                          }
                          else {
                              var output = String.format(
                                  'View name: {0}<br/>View type: {1}',
                                  result.value.viewName, viewType);
                              $('#message').html(output);
                          }
                      }
                  );
              }

              function onError(error) {
                  $('#message').html(error.name + ' ' + error.code + ': ' + error.message);
              }
          })();
          ```
      parameters:
        - id: callback
          description: '<span data-ttu-id="b4495-442">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="b4495-442">Optional.</span></span> <span data-ttu-id="b4495-443">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="b4495-443">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b4495-444">.</span><span class="sxs-lookup"><span data-stu-id="b4495-444"></span></span> <span data-ttu-id="b4495-445">La `value` propriété du résultat contient les propriétés suivantes: `viewName` -le nom de l''affichage, en tant que constante ProjectViewTypes.</span><span class="sxs-lookup"><span data-stu-id="b4495-445">The `value` property of the result contains the following properties: `viewName` - The name of the view, as a ProjectViewTypes constant.</span></span> <span data-ttu-id="b4495-446">`viewType`-Le type de vue, en tant que valeur entière d''une constante ProjectViewTypes.</span><span class="sxs-lookup"><span data-stu-id="b4495-446">`viewType` - The type of view, as the integer value of a ProjectViewTypes constant.</span></span>'
          type:
            - '(result: AsyncResult<any>) => void'
  - uid: office.Office.Document.getTaskAsync
    summary: '<span data-ttu-id="b4495-447">Documents de projet uniquement.</span><span class="sxs-lookup"><span data-stu-id="b4495-447">Project documents only.</span></span> <span data-ttu-id="b4495-448">Obtenez le nom de la tâche, l''ID de tâche WSS et ResourceNames pour un taskId donné.</span><span class="sxs-lookup"><span data-stu-id="b4495-448">Get the Task Name, WSS Task Id, and ResourceNames for given taskId.</span></span>'
    name: 'getTaskAsync(taskId, options, callback)'
    fullName: 'getTaskAsync(taskId, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTaskAsync(taskId: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<any>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: taskId
          description: '<span data-ttu-id="b4495-449">Soit une chaîne, soit une valeur de l''ID de tâche.</span><span class="sxs-lookup"><span data-stu-id="b4495-449">Either a string or value of the Task Id.</span></span>'
          type:
            - string
        - id: options
          description: '<span data-ttu-id="b4495-450">Fournit une option permettant de conserver les données de contexte de n''importe quel type, inchangées, pour une utilisation dans un rappel.</span><span class="sxs-lookup"><span data-stu-id="b4495-450">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="b4495-451">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="b4495-451">Optional.</span></span> <span data-ttu-id="b4495-452">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="b4495-452">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b4495-453">.</span><span class="sxs-lookup"><span data-stu-id="b4495-453"></span></span> <span data-ttu-id="b4495-454">La `value` propriété du résultat contient les propriétés suivantes: `taskName` -le nom de la tâche.</span><span class="sxs-lookup"><span data-stu-id="b4495-454">The `value` property of the result contains the following properties: `taskName` - The name of the task.</span></span> <span data-ttu-id="b4495-455">`wssTaskId`-ID de la tâche dans la liste de tâches SharePoint synchronisée.</span><span class="sxs-lookup"><span data-stu-id="b4495-455">`wssTaskId` - The ID of the task in the synchronized SharePoint task list.</span></span> <span data-ttu-id="b4495-456">Si le projet n’est pas synchronisé avec une liste de tâches SharePoint, la valeur est 0.</span><span class="sxs-lookup"><span data-stu-id="b4495-456">If the project is not synchronized with a SharePoint task list, the value is 0.</span></span> <span data-ttu-id="b4495-457">`resourceNames`-Liste séparée par des virgules des noms des ressources affectées à la tâche.</span><span class="sxs-lookup"><span data-stu-id="b4495-457">`resourceNames` - The comma-separated list of the names of resources that are assigned to the task.</span></span>'
          type:
            - '(result: AsyncResult<any>) => void'
  - uid: office.Office.Document.getTaskAsync_1
    summary: '<span data-ttu-id="b4495-458">Documents de projet uniquement.</span><span class="sxs-lookup"><span data-stu-id="b4495-458">Project documents only.</span></span> <span data-ttu-id="b4495-459">Obtenez le nom de la tâche, l''ID de tâche WSS et ResourceNames pour un taskId donné.</span><span class="sxs-lookup"><span data-stu-id="b4495-459">Get the Task Name, WSS Task Id, and ResourceNames for given taskId.</span></span>'
    name: 'getTaskAsync(taskId, callback)'
    fullName: 'getTaskAsync(taskId, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTaskAsync(taskId: string, callback?: (result: AsyncResult<any>) => void): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="b4495-460">Exemples</span><span class="sxs-lookup"><span data-stu-id="b4495-460">Examples</span></span>

          ```javascript
          // The following code example calls getSelectedTaskAsync to get the task GUID of the currently
          // selected task. Then it calls getTaskAsync to get the properties for the task that are
          // available from the JavaScript API for Office.
          // The example assumes your add-in has a reference to the jQuery library and that the
          // following page controls are defined in the content div in the page body:
          // <input id="get-info" type="button" value="Get info" /><br />
          // <span id="message"></span>

          (function () {
              "use strict";

              // The initialize function must be run each time a new page is loaded.
              Office.initialize = function (reason) {
                  $(document).ready(function () {

                      // After the DOM is loaded, add-in-specific code can run.
                      $('#get-info').click(getTaskInfo);
                  });
              };

              // Get the GUID of the task, and then get local task properties.
              function getTaskInfo() {
                  getTaskGuid().then(
                      function (data) {
                          getTaskProperties(data);
                      }
                  );
              }

              // Get the GUID of the selected task.
              function getTaskGuid() {
                  var defer = $.Deferred();
                  Office.context.document.getSelectedTaskAsync(
                      function (result) {
                          if (result.status === Office.AsyncResultStatus.Failed) {
                              onError(result.error);
                          }
                          else {
                              defer.resolve(result.value);
                          }
                      }
                  );
                  return defer.promise();
              }

              // Get local properties for the selected task, and then display it in the add-in.
              function getTaskProperties(taskGuid) {
                  Office.context.document.getTaskAsync(
                      taskGuid,
                      function (result) {
                          if (result.status === Office.AsyncResultStatus.Failed) {
                              onError(result.error);
                          }
                          else {
                              var taskInfo = result.value;
                              var output = String.format(
                                  'Name: {0}<br/>GUID: {1}<br/>SharePoint task ID: {2}<br/>Resource names: {3}',
                                  taskInfo.taskName, taskGuid, taskInfo.wssTaskId, taskInfo.resourceNames);
                              $('#message').html(output);
                          }
                      }
                  );
              }

              function onError(error) {
                  $('#message').html(error.name + ' ' + error.code + ': ' + error.message);
              }
          })();
          ```
      parameters:
        - id: taskId
          description: '<span data-ttu-id="b4495-461">Soit une chaîne, soit une valeur de l''ID de tâche.</span><span class="sxs-lookup"><span data-stu-id="b4495-461">Either a string or value of the Task Id.</span></span>'
          type:
            - string
        - id: callback
          description: '<span data-ttu-id="b4495-462">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="b4495-462">Optional.</span></span> <span data-ttu-id="b4495-463">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="b4495-463">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b4495-464">.</span><span class="sxs-lookup"><span data-stu-id="b4495-464"></span></span> <span data-ttu-id="b4495-465">La `value` propriété du résultat contient les propriétés suivantes: `taskName` -le nom de la tâche.</span><span class="sxs-lookup"><span data-stu-id="b4495-465">The `value` property of the result contains the following properties: `taskName` - The name of the task.</span></span> <span data-ttu-id="b4495-466">`wssTaskId`-ID de la tâche dans la liste de tâches SharePoint synchronisée.</span><span class="sxs-lookup"><span data-stu-id="b4495-466">`wssTaskId` - The ID of the task in the synchronized SharePoint task list.</span></span> <span data-ttu-id="b4495-467">Si le projet n’est pas synchronisé avec une liste de tâches SharePoint, la valeur est 0.</span><span class="sxs-lookup"><span data-stu-id="b4495-467">If the project is not synchronized with a SharePoint task list, the value is 0.</span></span> <span data-ttu-id="b4495-468">`resourceNames`-Liste séparée par des virgules des noms des ressources affectées à la tâche.</span><span class="sxs-lookup"><span data-stu-id="b4495-468">`resourceNames` - The comma-separated list of the names of resources that are assigned to the task.</span></span>'
          type:
            - '(result: AsyncResult<any>) => void'
  - uid: office.Office.Document.getTaskByIndexAsync
    summary: |-
      <span data-ttu-id="b4495-469">Documents de projet uniquement.</span><span class="sxs-lookup"><span data-stu-id="b4495-469">Project documents only.</span></span> <span data-ttu-id="b4495-470">Obtenir le GUID de la tâche qui a l'index spécifié dans la collection de tâches.</span><span class="sxs-lookup"><span data-stu-id="b4495-470">Get the GUID of the task that has the specified index in the task collection.</span></span>

      <span data-ttu-id="b4495-471">**Important**: cette API fonctionne uniquement dans Project 2016 sur le bureau Windows.</span><span class="sxs-lookup"><span data-stu-id="b4495-471">**Important**: This API works only in Project 2016 on Windows desktop.</span></span>
    name: 'getTaskByIndexAsync(taskIndex, options, callback)'
    fullName: 'getTaskByIndexAsync(taskIndex, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTaskByIndexAsync(taskIndex: number, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: taskIndex
          description: <span data-ttu-id="b4495-472">Index de la tâche dans la collection de tâches pour le projet.</span><span class="sxs-lookup"><span data-stu-id="b4495-472">The index of the task in the collection of tasks for the project.</span></span>
          type:
            - number
        - id: options
          description: '<span data-ttu-id="b4495-473">Fournit une option permettant de conserver les données de contexte de n''importe quel type, inchangées, pour une utilisation dans un rappel.</span><span class="sxs-lookup"><span data-stu-id="b4495-473">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="b4495-474">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="b4495-474">Optional.</span></span> <span data-ttu-id="b4495-475">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="b4495-475">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b4495-476">.</span><span class="sxs-lookup"><span data-stu-id="b4495-476"></span></span> <span data-ttu-id="b4495-477">La `value` propriété du résultat est le GUID de la tâche sous la forme d''une chaîne.</span><span class="sxs-lookup"><span data-stu-id="b4495-477">The `value` property of the result is the GUID of the task as a string.</span></span>'
          type:
            - '(result: AsyncResult<string>) => void'
  - uid: office.Office.Document.getTaskByIndexAsync_1
    summary: |-
      <span data-ttu-id="b4495-478">Documents de projet uniquement.</span><span class="sxs-lookup"><span data-stu-id="b4495-478">Project documents only.</span></span> <span data-ttu-id="b4495-479">Obtenir le GUID de la tâche qui a l'index spécifié dans la collection de tâches.</span><span class="sxs-lookup"><span data-stu-id="b4495-479">Get the GUID of the task that has the specified index in the task collection.</span></span>

      <span data-ttu-id="b4495-480">**Important**: cette API fonctionne uniquement dans Project 2016 sur le bureau Windows.</span><span class="sxs-lookup"><span data-stu-id="b4495-480">**Important**: This API works only in Project 2016 on Windows desktop.</span></span>
    name: 'getTaskByIndexAsync(taskIndex, callback)'
    fullName: 'getTaskByIndexAsync(taskIndex, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTaskByIndexAsync(taskIndex: number, callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="b4495-481">Exemples</span><span class="sxs-lookup"><span data-stu-id="b4495-481">Examples</span></span>

          ```javascript
          // The following code example calls getMaxTaskIndexAsync to get the
          // maximum index in the project's task collection, and then
          // calls getTaskByIndexAsync to get the GUID for each task.
          // The example assumes that your add-in has a reference to the
          // jQuery library and that the following page controls are defined
          // in the content div in the page body:
          // <input id="get-info" type="button" value="Get info" /><br />
          // <span id="message"></span>

          (function () {
              "use strict";
              var taskGuids = ;

              // The initialize function must be run each time a new page is loaded.
              Office.initialize = function (reason) {
                  $(document).ready(function () {

                      // After the DOM is loaded, add-in-specific code can run.
                      app.initialize();
                      $('#get-info').click(getTaskInfo);
                  });
              };

              // Get the maximum task index, and then get the task GUIDs.
              function getTaskInfo() {
                  getMaxTaskIndex().then(
                      function (data) {
                          getTaskGuids(data);
                      }
                  );
              }

              // Get the maximum index of the tasks for the current project.
              function getMaxTaskIndex() {
                  var defer = $.Deferred();
                  Office.context.document.getMaxTaskIndexAsync(
                      function (result) {
                          if (result.status === Office.AsyncResultStatus.Failed) {
                              onError(result.error);
                          }
                          else {
                              defer.resolve(result.value);
                          }
                      }
                  );
                  return defer.promise();
              }

              // Get each task GUID, and then display the GUIDs in the add-in.
              function getTaskGuids(maxTaskIndex) {
                  var defer = $.Deferred();
                  for (var i = 0; i <= maxTaskIndex; i++) {
                      getTaskGuid(i);
                  }
                  return defer.promise();
                  function getTaskGuid(index) {
                      Office.context.document.getTaskByIndexAsync(index,
                          function (result) {
                              if (result.status === Office.AsyncResultStatus.Succeeded) {
                                  taskGuids.push(result.value);
                                  if (index == maxTaskIndex) {
                                      defer.resolve();
                                      $('#message').html(taskGuids.toString());
                                  }
                              }
                              else {
                                  onError(result.error);
                              }
                          }
                      );
                  }
              }
              function onError(error) {
                  app.showNotification(error.name + ' ' + error.code + ': ' + error.message);
              }
          })();
          ```
      parameters:
        - id: taskIndex
          description: <span data-ttu-id="b4495-482">Index de la tâche dans la collection de tâches pour le projet.</span><span class="sxs-lookup"><span data-stu-id="b4495-482">The index of the task in the collection of tasks for the project.</span></span>
          type:
            - number
        - id: callback
          description: '<span data-ttu-id="b4495-483">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="b4495-483">Optional.</span></span> <span data-ttu-id="b4495-484">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="b4495-484">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b4495-485">.</span><span class="sxs-lookup"><span data-stu-id="b4495-485"></span></span> <span data-ttu-id="b4495-486">La `value` propriété du résultat est le GUID de la tâche sous la forme d''une chaîne.</span><span class="sxs-lookup"><span data-stu-id="b4495-486">The `value` property of the result is the GUID of the task as a string.</span></span>'
          type:
            - '(result: AsyncResult<string>) => void'
  - uid: office.Office.Document.getTaskFieldAsync
    summary: <span data-ttu-id="b4495-487">Documents de projet uniquement.</span><span class="sxs-lookup"><span data-stu-id="b4495-487">Project documents only.</span></span> <span data-ttu-id="b4495-488">Obtenir le champ de tâche pour l'ID de tâche fourni. (par exemple</span><span class="sxs-lookup"><span data-stu-id="b4495-488">Get task field for provided task Id. (Ex.</span></span> <span data-ttu-id="b4495-489">StartDate).</span><span class="sxs-lookup"><span data-stu-id="b4495-489">StartDate).</span></span>
    name: 'getTaskFieldAsync(taskId, fieldId, options, callback)'
    fullName: 'getTaskFieldAsync(taskId, fieldId, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTaskFieldAsync(taskId: string, fieldId: number, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<any>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: taskId
          description: '<span data-ttu-id="b4495-490">Soit une chaîne, soit une valeur de l''ID de tâche.</span><span class="sxs-lookup"><span data-stu-id="b4495-490">Either a string or value of the Task Id.</span></span>'
          type:
            - string
        - id: fieldId
          description: <span data-ttu-id="b4495-491">Champs de tâche.</span><span class="sxs-lookup"><span data-stu-id="b4495-491">Task Fields.</span></span>
          type:
            - number
        - id: options
          description: '<span data-ttu-id="b4495-492">Fournit une option permettant de conserver les données de contexte de n''importe quel type, inchangées, pour une utilisation dans un rappel.</span><span class="sxs-lookup"><span data-stu-id="b4495-492">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="b4495-493">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="b4495-493">Optional.</span></span> <span data-ttu-id="b4495-494">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="b4495-494">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b4495-495">.</span><span class="sxs-lookup"><span data-stu-id="b4495-495"></span></span> <span data-ttu-id="b4495-496">La `value` propriété du résultat contient la `fieldValue` propriété, qui représente la valeur du champ spécifié.</span><span class="sxs-lookup"><span data-stu-id="b4495-496">The `value` property of the result contains the `fieldValue` property, which represents the value of the specified field.</span></span>'
          type:
            - '(result: AsyncResult<any>) => void'
  - uid: office.Office.Document.getTaskFieldAsync_1
    summary: <span data-ttu-id="b4495-497">Documents de projet uniquement.</span><span class="sxs-lookup"><span data-stu-id="b4495-497">Project documents only.</span></span> <span data-ttu-id="b4495-498">Obtenir le champ de tâche pour l'ID de tâche fourni. (par exemple</span><span class="sxs-lookup"><span data-stu-id="b4495-498">Get task field for provided task Id. (Ex.</span></span> <span data-ttu-id="b4495-499">StartDate).</span><span class="sxs-lookup"><span data-stu-id="b4495-499">StartDate).</span></span>
    name: 'getTaskFieldAsync(taskId, fieldId, callback)'
    fullName: 'getTaskFieldAsync(taskId, fieldId, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTaskFieldAsync(taskId: string, fieldId: number, callback?: (result: AsyncResult<any>) => void): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="b4495-500">Exemples</span><span class="sxs-lookup"><span data-stu-id="b4495-500">Examples</span></span>

          ```javascript
          // The following code example calls getSelectedTaskAsync to get the GUID of the task that's currently
          // selected in a task view. Then it gets two task field values by calling getTaskFieldAsync recursively.
          // The example assumes your add-in has a reference to the jQuery library and that the following page
          // controls are defined in the content div in the page body:
          // <input id="get-info" type="button" value="Get info" /><br />
          // <span id="message"></span>

          (function () {
              "use strict";

              // The initialize function must be run each time a new page is loaded.
              Office.initialize = function (reason) {
                  $(document).ready(function () {
                      
                      // After the DOM is loaded, add-in-specific code can run.
                      $('#get-info').click(getTaskInfo);
                  });
              };

              // Get the GUID of the task, and then get the task fields.
              function getTaskInfo() {
                  getTaskGuid().then(
                      function (data) {
                          getTaskFields(data);
                      }
                  );
              }

              // Get the GUID of the selected task.
              function getTaskGuid() {
                  var defer = $.Deferred();
                  Office.context.document.getSelectedTaskAsync(
                      function (result) {
                          if (result.status === Office.AsyncResultStatus.Failed) {
                              onError(result.error);
                          }
                          else {
                              defer.resolve(result.value);
                          }
                      }
                  );
                  return defer.promise();
              }

              // Get the specified fields for the selected task.
              function getTaskFields(taskGuid) {
                  var output = '';
                  var targetFields = [Office.ProjectTaskFields.Priority, Office.ProjectTaskFields.PercentComplete];
                  var fieldValues = ['Priority: ', '% Complete: '];
                  var index = 0;
                  getField();

                  // Get each field, and then display the field values in the add-in.
                  function getField() {
                      if (index == targetFields.length) {
                          for (var i = 0; i < fieldValues.length; i++) {
                              output += fieldValues[i] + '<br />';
                          }
                          $('#message').html(output);
                      }

                      // Get the field value. If the call is successful, then get the next field.
                      else {
                          Office.context.document.getTaskFieldAsync(
                              taskGuid,
                              targetFields[index],
                              function (result) {
                                  if (result.status === Office.AsyncResultStatus.Succeeded) {
                                      fieldValues[index] += result.value.fieldValue;
                                      getField(index++);
                                  }
                                  else {
                                      onError(result.error);
                                  }
                              }
                          );
                      }
                  }
              }

              function onError(error) {
                  $('#message').html(error.name + ' ' + error.code + ': ' + error.message);
              }
          })();
          ```
      parameters:
        - id: taskId
          description: '<span data-ttu-id="b4495-501">Soit une chaîne, soit une valeur de l''ID de tâche.</span><span class="sxs-lookup"><span data-stu-id="b4495-501">Either a string or value of the Task Id.</span></span>'
          type:
            - string
        - id: fieldId
          description: <span data-ttu-id="b4495-502">Champs de tâche.</span><span class="sxs-lookup"><span data-stu-id="b4495-502">Task Fields.</span></span>
          type:
            - number
        - id: callback
          description: '<span data-ttu-id="b4495-503">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="b4495-503">Optional.</span></span> <span data-ttu-id="b4495-504">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="b4495-504">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b4495-505">.</span><span class="sxs-lookup"><span data-stu-id="b4495-505"></span></span> <span data-ttu-id="b4495-506">La `value` propriété du résultat contient la `fieldValue` propriété, qui représente la valeur du champ spécifié.</span><span class="sxs-lookup"><span data-stu-id="b4495-506">The `value` property of the result contains the `fieldValue` property, which represents the value of the specified field.</span></span>'
          type:
            - '(result: AsyncResult<any>) => void'
  - uid: office.Office.Document.getWSSUrlAsync
    summary: '<span data-ttu-id="b4495-507">Documents de projet uniquement.</span><span class="sxs-lookup"><span data-stu-id="b4495-507">Project documents only.</span></span> <span data-ttu-id="b4495-508">Obtenir l''URL et le nom de liste WSS pour la liste des tâches, le MPP est également synchronisé.</span><span class="sxs-lookup"><span data-stu-id="b4495-508">Get the WSS Url and list name for the Tasks List, the MPP is synced too.</span></span>'
    name: 'getWSSUrlAsync(options, callback)'
    fullName: 'getWSSUrlAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getWSSUrlAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<any>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="b4495-509">Fournit une option permettant de conserver les données de contexte de n''importe quel type, inchangées, pour une utilisation dans un rappel.</span><span class="sxs-lookup"><span data-stu-id="b4495-509">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="b4495-510">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="b4495-510">Optional.</span></span> <span data-ttu-id="b4495-511">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="b4495-511">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b4495-512">.</span><span class="sxs-lookup"><span data-stu-id="b4495-512"></span></span> <span data-ttu-id="b4495-513">La `value` propriété du résultat contient les propriétés suivantes: `listName` -le nom de la liste de tâches SharePoint synchronisée.</span><span class="sxs-lookup"><span data-stu-id="b4495-513">The `value` property of the result contains the following properties: `listName` - the name of the synchronized SharePoint task list.</span></span> <span data-ttu-id="b4495-514">`serverUrl`-l''URL de la liste de tâches SharePoint synchronisée.</span><span class="sxs-lookup"><span data-stu-id="b4495-514">`serverUrl` - the URL of the synchronized SharePoint task list.</span></span>'
          type:
            - '(result: AsyncResult<any>) => void'
  - uid: office.Office.Document.getWSSUrlAsync_1
    summary: '<span data-ttu-id="b4495-515">Documents de projet uniquement.</span><span class="sxs-lookup"><span data-stu-id="b4495-515">Project documents only.</span></span> <span data-ttu-id="b4495-516">Obtenir l''URL et le nom de liste WSS pour la liste des tâches, le MPP est également synchronisé.</span><span class="sxs-lookup"><span data-stu-id="b4495-516">Get the WSS Url and list name for the Tasks List, the MPP is synced too.</span></span>'
    name: getWSSUrlAsync(callback)
    fullName: getWSSUrlAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getWSSUrlAsync(callback?: (result: AsyncResult<any>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="b4495-517">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="b4495-517">Optional.</span></span> <span data-ttu-id="b4495-518">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="b4495-518">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b4495-519">.</span><span class="sxs-lookup"><span data-stu-id="b4495-519"></span></span> <span data-ttu-id="b4495-520">La `value` propriété du résultat contient les propriétés suivantes: `listName` -le nom de la liste de tâches SharePoint synchronisée.</span><span class="sxs-lookup"><span data-stu-id="b4495-520">The `value` property of the result contains the following properties: `listName` - the name of the synchronized SharePoint task list.</span></span> <span data-ttu-id="b4495-521">`serverUrl`-l''URL de la liste de tâches SharePoint synchronisée.</span><span class="sxs-lookup"><span data-stu-id="b4495-521">`serverUrl` - the URL of the synchronized SharePoint task list.</span></span>'
          type:
            - '(result: AsyncResult<any>) => void'
  - uid: office.Office.Document.goToByIdAsync
    summary: <span data-ttu-id="b4495-522">Accède à l’emplacement ou l’objet spécifié dans le document.</span><span class="sxs-lookup"><span data-stu-id="b4495-522">Goes to the specified object or location in the document.</span></span>
    remarks: |-
      <span data-ttu-id="b4495-523">**Ensemble de conditions requises**: [pas dans un ensemble](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#methods-that-arent-part-of-a-requirement-set)</span><span class="sxs-lookup"><span data-stu-id="b4495-523">**Requirement set**: [Not in a set](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#methods-that-arent-part-of-a-requirement-set)</span></span>

      <span data-ttu-id="b4495-524">PowerPoint ne prend pas en charge la méthode goToByIdAsync dans les modes masque.</span><span class="sxs-lookup"><span data-stu-id="b4495-524">PowerPoint doesn't support the goToByIdAsync method in Master Views.</span></span>

      <span data-ttu-id="b4495-525">Le comportement généré par l'option selectionMode varie en fonction de l'hôte:</span><span class="sxs-lookup"><span data-stu-id="b4495-525">The behavior caused by the selectionMode option varies by host:</span></span>

      <span data-ttu-id="b4495-526">Dans Excel: `Office.SelectionMode.Selected` sélectionne tout le contenu de la liaison ou de l'élément nommé.</span><span class="sxs-lookup"><span data-stu-id="b4495-526">In Excel: `Office.SelectionMode.Selected` selects all content in the binding, or named item.</span></span> <span data-ttu-id="b4495-527">Office.SelectionMode.None pour les liaisons de texte, sélectionne la cellule ; pour les liaisons de matrice, les liaisons de tableau et les éléments nommés, sélectionne la première cellule de données (pas la première cellule dans la ligne d’en-tête pour les tableaux).</span><span class="sxs-lookup"><span data-stu-id="b4495-527">Office.SelectionMode.None for text bindings, selects the cell; for matrix bindings, table bindings, and named items, selects the first data cell (not first cell in header row for tables).</span></span>

      <span data-ttu-id="b4495-528">Dans PowerPoint: `Office.SelectionMode.Selected` sélectionne le titre de la diapositive ou la première zone de texte de la diapositive.</span><span class="sxs-lookup"><span data-stu-id="b4495-528">In PowerPoint: `Office.SelectionMode.Selected` selects the slide title or first textbox on the slide.</span></span> <span data-ttu-id="b4495-529">`Office.SelectionMode.None`ne sélectionne rien.</span><span class="sxs-lookup"><span data-stu-id="b4495-529">`Office.SelectionMode.None` doesn't select anything.</span></span>

      <span data-ttu-id="b4495-530">Dans Word: `Office.SelectionMode.Selected` sélectionne tout le contenu de la liaison.</span><span class="sxs-lookup"><span data-stu-id="b4495-530">In Word: `Office.SelectionMode.Selected` selects all content in the binding.</span></span> <span data-ttu-id="b4495-531">Office.SelectionMode.None pour les liaisons de texte, déplace le curseur au début du texte ; pour les liaisons de matrice et de tableau, sélectionne la première cellule de données (pas la première cellule dans la ligne d’en-tête pour les tableaux).</span><span class="sxs-lookup"><span data-stu-id="b4495-531">Office.SelectionMode.None for text bindings, moves the cursor to the beginning of the text; for matrix bindings and table bindings, selects the first data cell (not first cell in header row for tables).</span></span>
    name: 'goToByIdAsync(id, goToType, options, callback)'
    fullName: 'goToByIdAsync(id, goToType, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'goToByIdAsync(id: string | number, goToType: GoToType, options?: GoToByIdOptions, callback?: (result: AsyncResult<any>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: id
          description: <span data-ttu-id="b4495-532">Identifiant de l’objet ou de l’emplacement à atteindre.</span><span class="sxs-lookup"><span data-stu-id="b4495-532">The identifier of the object or location to go to.</span></span>
          type:
            - string | number
        - id: goToType
          description: <span data-ttu-id="b4495-533">Type d’emplacement à atteindre.</span><span class="sxs-lookup"><span data-stu-id="b4495-533">The type of the location to go to.</span></span>
          type:
            - office.Office.GoToType
        - id: options
          description: <span data-ttu-id="b4495-534">Fournit des options pour sélectionner l'emplacement cible.</span><span class="sxs-lookup"><span data-stu-id="b4495-534">Provides options for whether to select the location that is navigated to.</span></span>
          type:
            - office.Office.GoToByIdOptions
        - id: callback
          description: '<span data-ttu-id="b4495-535">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="b4495-535">Optional.</span></span> <span data-ttu-id="b4495-536">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="b4495-536">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b4495-537">.</span><span class="sxs-lookup"><span data-stu-id="b4495-537"></span></span> <span data-ttu-id="b4495-538">La `value` propriété du résultat est l''affichage actuel.</span><span class="sxs-lookup"><span data-stu-id="b4495-538">The `value` property of the result is the current view.</span></span>'
          type:
            - '(result: AsyncResult<any>) => void'
  - uid: office.Office.Document.goToByIdAsync_1
    summary: <span data-ttu-id="b4495-539">Accède à l’emplacement ou l’objet spécifié dans le document.</span><span class="sxs-lookup"><span data-stu-id="b4495-539">Goes to the specified object or location in the document.</span></span>
    remarks: |-
      <span data-ttu-id="b4495-540">**Ensemble de conditions requises**: [pas dans un ensemble](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#methods-that-arent-part-of-a-requirement-set)</span><span class="sxs-lookup"><span data-stu-id="b4495-540">**Requirement set**: [Not in a set](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#methods-that-arent-part-of-a-requirement-set)</span></span>

      <span data-ttu-id="b4495-541">PowerPoint ne prend pas en charge la méthode goToByIdAsync dans les modes masque.</span><span class="sxs-lookup"><span data-stu-id="b4495-541">PowerPoint doesn't support the goToByIdAsync method in Master Views.</span></span>

      <span data-ttu-id="b4495-542">Le comportement généré par l'option selectionMode varie en fonction de l'hôte:</span><span class="sxs-lookup"><span data-stu-id="b4495-542">The behavior caused by the selectionMode option varies by host:</span></span>

      <span data-ttu-id="b4495-543">Dans Excel: `Office.SelectionMode.Selected` sélectionne tout le contenu de la liaison ou de l'élément nommé.</span><span class="sxs-lookup"><span data-stu-id="b4495-543">In Excel: `Office.SelectionMode.Selected` selects all content in the binding, or named item.</span></span> <span data-ttu-id="b4495-544">Office.SelectionMode.None pour les liaisons de texte, sélectionne la cellule ; pour les liaisons de matrice, les liaisons de tableau et les éléments nommés, sélectionne la première cellule de données (pas la première cellule dans la ligne d’en-tête pour les tableaux).</span><span class="sxs-lookup"><span data-stu-id="b4495-544">Office.SelectionMode.None for text bindings, selects the cell; for matrix bindings, table bindings, and named items, selects the first data cell (not first cell in header row for tables).</span></span>

      <span data-ttu-id="b4495-545">Dans PowerPoint: `Office.SelectionMode.Selected` sélectionne le titre de la diapositive ou la première zone de texte de la diapositive.</span><span class="sxs-lookup"><span data-stu-id="b4495-545">In PowerPoint: `Office.SelectionMode.Selected` selects the slide title or first textbox on the slide.</span></span> <span data-ttu-id="b4495-546">`Office.SelectionMode.None`ne sélectionne rien.</span><span class="sxs-lookup"><span data-stu-id="b4495-546">`Office.SelectionMode.None` doesn't select anything.</span></span>

      <span data-ttu-id="b4495-547">Dans Word: `Office.SelectionMode.Selected` sélectionne tout le contenu de la liaison.</span><span class="sxs-lookup"><span data-stu-id="b4495-547">In Word: `Office.SelectionMode.Selected` selects all content in the binding.</span></span> <span data-ttu-id="b4495-548">Office.SelectionMode.None pour les liaisons de texte, déplace le curseur au début du texte ; pour les liaisons de matrice et de tableau, sélectionne la première cellule de données (pas la première cellule dans la ligne d’en-tête pour les tableaux).</span><span class="sxs-lookup"><span data-stu-id="b4495-548">Office.SelectionMode.None for text bindings, moves the cursor to the beginning of the text; for matrix bindings and table bindings, selects the first data cell (not first cell in header row for tables).</span></span>

      #### <a name="examples"></a><span data-ttu-id="b4495-549">Exemples</span><span class="sxs-lookup"><span data-stu-id="b4495-549">Examples</span></span>

      ```javascript
      // Go to a binding by id (Word and Excel)
      // The following example shows how to:
      // 1. Create a table binding using the addFromSelectionAsync method as a sample binding to work with.
      // 2. Specify that binding as the binding to go to.
      // 3. Pass an anonymous callback function that returns the status of the operation
      //    to the callback parameter of the goToByIdAsync method.
      // 4. Display the value on the add-in's page.
      function gotoBinding() {
          // Create a new table binding for the selected table.
          Office.context.document.bindings.addFromSelectionAsync("table",{ id: "MyTableBinding" }, function (asyncResult) {
          if (asyncResult.status == "failed") {
                    showMessage("Action failed with error: " + asyncResult.error.message);
                }
                else {
                    showMessage("Added new binding with type: " + asyncResult.value.type +" and id: " + asyncResult.value.id);
                }
          });

          // Go to binding by id.
          Office.context.document.goToByIdAsync("MyTableBinding", Office.GoToType.Binding, function (asyncResult) {
              if (asyncResult.status == "failed") {
                  showMessage("Action failed with error: " + asyncResult.error.message);
              }
              else {
                  showMessage("Navigation successful");
              }
          });
      }

      // Go to a table in a spreadsheet (Excel)
      // The following example shows how to:
      // 1. Specify a table by name as the table to go to.
      // 2. Pass an anonymous callback function that returns the status of the operation
      //    to the callback parameter of the goToByIdAsync method.
      // 3. Display the value on the add-in's page.
      function goToTable() {
          Office.context.document.goToByIdAsync("Table1", Office.GoToType.NamedItem, function (asyncResult) {
              if (asyncResult.status == "failed") {
                  showMessage("Action failed with error: " + asyncResult.error.message);
              }
              else {
                  showMessage("Navigation successful");
              }
          });
      }

      // Go to the currently selected slide by id (PowerPoint)
      // The following example shows how to:
      // 1. Get the id of the currently selected slides using the getSelectedDataAsync method.
      // 2. Specify the returned id as the slide to go to.
      // 3. Pass an anonymous callback function that returns the status of the operation
      //    to the callback parameter of the goToByIdAsync method.
      // 4. Display the value of the stringified JSON object returned by asyncResult.value,
      //    which contains information about the selected slides, on the add-in's page.
      var firstSlideId = 0;
      function gotoSelectedSlide() {
          //Get currently selected slide's id
          Office.context.document.getSelectedDataAsync(Office.CoercionType.SlideRange, function (asyncResult) {
              if (asyncResult.status == "failed") {
                  app.showNotification("Action failed with error: " + asyncResult.error.message);
              }
              else {
                  firstSlideId = asyncResult.value.slides[0].id;
                  app.showNotification(JSON.stringify(asyncResult.value));
              }
          });
          //Go to slide by id.
          Office.context.document.goToByIdAsync(firstSlideId, Office.GoToType.Slide, function (asyncResult) {
              if (asyncResult.status == "failed") {
                  app.showNotification("Action failed with error: " + asyncResult.error.message);
              }
              else {
                  app.showNotification("Navigation successful");
              }
          });
      }

      // Go to slide by index (PowerPoint)
      // The following example shows how to:
      // 1. Specify the index of the first, last, previous, or next slide to go to.
      // 2. Pass an anonymous callback function that returns the status of the operation
      //    to the callback parameter of the goToByIdAsync method.
      // 3. Display the value on the add-in's page.
      function goToSlideByIndex() {
          var goToFirst = Office.Index.First;
          var goToLast = Office.Index.Last;
          var goToPrevious = Office.Index.Previous;
          var goToNext = Office.Index.Next;

          Office.context.document.goToByIdAsync(goToNext, Office.GoToType.Index, function (asyncResult) {
              if (asyncResult.status == "failed") {
                  showMessage("Action failed with error: " + asyncResult.error.message);
              }
              else {
                  showMessage("Navigation successful");
              }
          });
      }
      ```
    name: 'goToByIdAsync(id, goToType, callback)'
    fullName: 'goToByIdAsync(id, goToType, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'goToByIdAsync(id: string | number, goToType: GoToType, callback?: (result: AsyncResult<any>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: id
          description: <span data-ttu-id="b4495-550">Identifiant de l’objet ou de l’emplacement à atteindre.</span><span class="sxs-lookup"><span data-stu-id="b4495-550">The identifier of the object or location to go to.</span></span>
          type:
            - string | number
        - id: goToType
          description: <span data-ttu-id="b4495-551">Type d’emplacement à atteindre.</span><span class="sxs-lookup"><span data-stu-id="b4495-551">The type of the location to go to.</span></span>
          type:
            - office.Office.GoToType
        - id: callback
          description: '<span data-ttu-id="b4495-552">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="b4495-552">Optional.</span></span> <span data-ttu-id="b4495-553">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="b4495-553">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b4495-554">.</span><span class="sxs-lookup"><span data-stu-id="b4495-554"></span></span> <span data-ttu-id="b4495-555">La `value` propriété du résultat est l''affichage actuel.</span><span class="sxs-lookup"><span data-stu-id="b4495-555">The `value` property of the result is the current view.</span></span>'
          type:
            - '(result: AsyncResult<any>) => void'
  - uid: office.Office.Document.removeHandlerAsync
    summary: <span data-ttu-id="b4495-556">Supprime un gestionnaire d'événements pour le type d'événement spécifié.</span><span class="sxs-lookup"><span data-stu-id="b4495-556">Removes an event handler for the specified event type.</span></span>
    remarks: '<span data-ttu-id="b4495-557">**Ensemble de conditions requises**: [DocumentEvents](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#documentevents)</span><span class="sxs-lookup"><span data-stu-id="b4495-557">**Requirement set**: [DocumentEvents](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#documentevents)</span></span>'
    name: 'removeHandlerAsync(eventType, options, callback)'
    fullName: 'removeHandlerAsync(eventType, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeHandlerAsync(eventType: Office.EventType, options?: RemoveHandlerOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: <span data-ttu-id="b4495-558">Type d’événement.</span><span class="sxs-lookup"><span data-stu-id="b4495-558">The event type.</span></span> <span data-ttu-id="b4495-559">Le document peut être «document. SelectionChanged» ou «document. ActiveViewChanged».</span><span class="sxs-lookup"><span data-stu-id="b4495-559">For document can be 'Document.SelectionChanged' or 'Document.ActiveViewChanged'.</span></span>
          type:
            - Office.EventType
        - id: options
          description: <span data-ttu-id="b4495-560">Fournit des options permettant de déterminer le gestionnaire d'événements ou les gestionnaires supprimés.</span><span class="sxs-lookup"><span data-stu-id="b4495-560">Provides options to determine which event handler or handlers are removed.</span></span>
          type:
            - office.Office.RemoveHandlerOptions
        - id: callback
          description: '<span data-ttu-id="b4495-561">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="b4495-561">Optional.</span></span> <span data-ttu-id="b4495-562">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="b4495-562">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b4495-563">.</span><span class="sxs-lookup"><span data-stu-id="b4495-563"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.Document.removeHandlerAsync_1
    summary: <span data-ttu-id="b4495-564">Supprime un gestionnaire d'événements pour le type d'événement spécifié.</span><span class="sxs-lookup"><span data-stu-id="b4495-564">Removes an event handler for the specified event type.</span></span>
    remarks: |-
      <span data-ttu-id="b4495-565">**Ensemble de conditions requises**: [DocumentEvents](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#documentevents)</span><span class="sxs-lookup"><span data-stu-id="b4495-565">**Requirement set**: [DocumentEvents](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#documentevents)</span></span>

      #### <a name="examples"></a><span data-ttu-id="b4495-566">Exemples</span><span class="sxs-lookup"><span data-stu-id="b4495-566">Examples</span></span>

      ```javascript
      // The following example removes the event handler named 'MyHandler'.
      function removeSelectionChangedEventHandler() {
          Office.context.document.removeHandlerAsync(Office.EventType.DocumentSelectionChanged, {handler:MyHandler});
      }

      function MyHandler(eventArgs) {
          doSomethingWithDocument(eventArgs.document);
      }
      ```
      ```javascript
      // The following code example uses addHandlerAsync to add an event handler for the
      // ResourceSelectionChanged event and removeHandlerAsync to remove the handler.
      // When a resource is selected in a resource view, the handler displays the
      // resource GUID. When the handler is removed, the GUID is not displayed.
      // The example assumes that your add-in has a reference to the jQuery library and
      // that the following page control is defined in the content div in the page body:
      // <input id="remove-handler" type="button" value="Remove handler" /><br />
      // <span id="message"></span>

      (function () {
          "use strict";

          // The initialize function must be run each time a new page is loaded.
          Office.initialize = function (reason) {
              $(document).ready(function () {

                  // After the DOM is loaded, add-in-specific code can run.
                  Office.context.document.addHandlerAsync(
                      Office.EventType.ResourceSelectionChanged,
                      getResourceGuid);
                  $('#remove-handler').click(removeEventHandler);
              });
          };

          // Remove the event handler.
          function removeEventHandler() {
              Office.context.document.removeHandlerAsync(
                  Office.EventType.ResourceSelectionChanged,
                  {handler:getResourceGuid,
                  asyncContext:'The handler is removed.'},
                  function (result) {
                      if (result.status === Office.AsyncResultStatus.Failed) {
                          onError(result.error);
                      }
                      else {
                          $('#remove-handler').attr('disabled', 'disabled');
                          $('#message').html(result.asyncContext);
                      }
                  }
              );
          }

          // Get the GUID of the currently selected resource and display it in the add-in.
          function getResourceGuid() {
              Office.context.document.getSelectedResourceAsync(
                  function (result) {
                      if (result.status === Office.AsyncResultStatus.Failed) {
                          onError(result.error);
                      }
                      else {
                          $('#message').html('Resource GUID: ' + result.value);
                      }
                  }
              );
          }

          function onError(error) {
              $('#message').html(error.name + ' ' + error.code + ': ' + error.message);
          }
      })();
      ```
    name: 'removeHandlerAsync(eventType, callback)'
    fullName: 'removeHandlerAsync(eventType, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeHandlerAsync(eventType: Office.EventType, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: <span data-ttu-id="b4495-567">Type d’événement.</span><span class="sxs-lookup"><span data-stu-id="b4495-567">The event type.</span></span> <span data-ttu-id="b4495-568">Le document peut être «document. SelectionChanged» ou «document. ActiveViewChanged».</span><span class="sxs-lookup"><span data-stu-id="b4495-568">For document can be 'Document.SelectionChanged' or 'Document.ActiveViewChanged'.</span></span>
          type:
            - Office.EventType
        - id: callback
          description: '<span data-ttu-id="b4495-569">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="b4495-569">Optional.</span></span> <span data-ttu-id="b4495-570">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="b4495-570">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b4495-571">.</span><span class="sxs-lookup"><span data-stu-id="b4495-571"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.Document.setResourceFieldAsync
    summary: |-
      <span data-ttu-id="b4495-572">Documents de projet uniquement.</span><span class="sxs-lookup"><span data-stu-id="b4495-572">Project documents only.</span></span> <span data-ttu-id="b4495-573">Définir le champ de ressource pour l'ID de ressource spécifié.</span><span class="sxs-lookup"><span data-stu-id="b4495-573">Set resource field for specified resource Id.</span></span>

      <span data-ttu-id="b4495-574">**Important**: cette API fonctionne uniquement dans Project 2016 sur le bureau Windows.</span><span class="sxs-lookup"><span data-stu-id="b4495-574">**Important**: This API works only in Project 2016 on Windows desktop.</span></span>
    name: 'setResourceFieldAsync(resourceId, fieldId, fieldValue, options, callback)'
    fullName: 'setResourceFieldAsync(resourceId, fieldId, fieldValue, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setResourceFieldAsync(resourceId: string, fieldId: number, fieldValue: string | number | boolean | object, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: resourceId
          description: '<span data-ttu-id="b4495-575">Soit une chaîne, soit une valeur de l''ID de ressource.</span><span class="sxs-lookup"><span data-stu-id="b4495-575">Either a string or value of the Resource Id.</span></span>'
          type:
            - string
        - id: fieldId
          description: <span data-ttu-id="b4495-576">Champs de ressources.</span><span class="sxs-lookup"><span data-stu-id="b4495-576">Resource Fields.</span></span>
          type:
            - number
        - id: fieldValue
          description: <span data-ttu-id="b4495-577">Valeur du champ cible.</span><span class="sxs-lookup"><span data-stu-id="b4495-577">Value of the target field.</span></span>
          type:
            - string | number | boolean | object
        - id: options
          description: '<span data-ttu-id="b4495-578">Fournit une option permettant de conserver les données de contexte de n''importe quel type, inchangées, pour une utilisation dans un rappel.</span><span class="sxs-lookup"><span data-stu-id="b4495-578">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="b4495-579">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="b4495-579">Optional.</span></span> <span data-ttu-id="b4495-580">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="b4495-580">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b4495-581">.</span><span class="sxs-lookup"><span data-stu-id="b4495-581"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.Document.setResourceFieldAsync_1
    summary: |-
      <span data-ttu-id="b4495-582">Documents de projet uniquement.</span><span class="sxs-lookup"><span data-stu-id="b4495-582">Project documents only.</span></span> <span data-ttu-id="b4495-583">Définir le champ de ressource pour l'ID de ressource spécifié.</span><span class="sxs-lookup"><span data-stu-id="b4495-583">Set resource field for specified resource Id.</span></span>

      <span data-ttu-id="b4495-584">**Important**: cette API fonctionne uniquement dans Project 2016 sur le bureau Windows.</span><span class="sxs-lookup"><span data-stu-id="b4495-584">**Important**: This API works only in Project 2016 on Windows desktop.</span></span>
    name: 'setResourceFieldAsync(resourceId, fieldId, fieldValue, callback)'
    fullName: 'setResourceFieldAsync(resourceId, fieldId, fieldValue, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setResourceFieldAsync(resourceId: string, fieldId: number, fieldValue: string | number | boolean | object, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="b4495-585">Exemples</span><span class="sxs-lookup"><span data-stu-id="b4495-585">Examples</span></span>

          ```javascript
          // The following code example calls getSelectedResourceAsync to get the GUID of the resource that's
          // currently selected in a resource view. Then it sets two resource field values by calling
          // setResourceFieldAsync recursively.
          // The getSelectedTaskAsync method used in the example requires that a task view
          // (for example, Task Usage) is the active view and that a task is selected. See the addHandlerAsync
          // method for an example that activates a button based on the active view type.
          // The example assumes your add-in has a reference to the jQuery library and that the
          // following page controls are defined in the content div in the page body:
          // <input id="set-info" type="button" value="Set info" /><br />
          // <span id="message"></span>

          (function () {
              "use strict";

              // The initialize function must be run each time a new page is loaded.
              Office.initialize = function (reason) {
                  $(document).ready(function () {

                      // After the DOM is loaded, add-in-specific code can run.
                      app.initialize();
                      $('#set-info').click(setResourceInfo);
                  });
              };

              // Get the GUID of the resource, and then get the resource fields.
              function setResourceInfo() {
                  getResourceGuid().then(
                      function (data) {
                          setResourceFields(data);
                      }
                  );
              }

              // Get the GUID of the selected resource.
              function getResourceGuid() {
                  var defer = $.Deferred();
                  Office.context.document.getSelectedResourceAsync(
                      function (result) {
                          if (result.status === Office.AsyncResultStatus.Failed) {
                              onError(result.error);
                          }
                          else {
                              defer.resolve(result.value);
                          }
                      }
                  );
                  return defer.promise();
              }

              // Set the specified fields for the selected resource.
              function setResourceFields(resourceGuid) {
                  var targetFields = [Office.ProjectResourceFields.StandardRate, Office.ProjectResourceFields.Notes];
                  var fieldValues = [.28, 'Notes for the resource.'];

                  // Set the field value. If the call is successful, set the next field.
                  for (var i = 0; i < targetFields.length; i++) {
                      Office.context.document.setResourceFieldAsync(
                          resourceGuid,
                          targetFields[i],
                          fieldValues[i],
                          function (result) {
                              if (result.status === Office.AsyncResultStatus.Succeeded) {
                                  i++;
                              }
                              else {
                                  onError(result.error);
                              }
                          }
                      );
                  }
                  $('#message').html('Field values set');
              }

              function onError(error) {
                  app.showNotification(error.name + ' ' + error.code + ': ' + error.message);
              }
          })();
          ```
      parameters:
        - id: resourceId
          description: '<span data-ttu-id="b4495-586">Soit une chaîne, soit une valeur de l''ID de ressource.</span><span class="sxs-lookup"><span data-stu-id="b4495-586">Either a string or value of the Resource Id.</span></span>'
          type:
            - string
        - id: fieldId
          description: <span data-ttu-id="b4495-587">Champs de ressources.</span><span class="sxs-lookup"><span data-stu-id="b4495-587">Resource Fields.</span></span>
          type:
            - number
        - id: fieldValue
          description: <span data-ttu-id="b4495-588">Valeur du champ cible.</span><span class="sxs-lookup"><span data-stu-id="b4495-588">Value of the target field.</span></span>
          type:
            - string | number | boolean | object
        - id: callback
          description: '<span data-ttu-id="b4495-589">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="b4495-589">Optional.</span></span> <span data-ttu-id="b4495-590">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="b4495-590">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b4495-591">.</span><span class="sxs-lookup"><span data-stu-id="b4495-591"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.Document.setSelectedDataAsync
    summary: <span data-ttu-id="b4495-592">Écrit les données spécifiées dans la sélection actuelle.</span><span class="sxs-lookup"><span data-stu-id="b4495-592">Writes the specified data into the current selection.</span></span>
    remarks: |-
      <span data-ttu-id="b4495-593">**Ensembles de conditions requises**:</span><span class="sxs-lookup"><span data-stu-id="b4495-593">**Requirement sets**:</span></span>

      - [<span data-ttu-id="b4495-594">HtmlCoercion</span><span class="sxs-lookup"><span data-stu-id="b4495-594">HtmlCoercion</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#htmlcoercion)<!-- --><span data-ttu-id="b4495-595">, (lorsque vous utilisez`Office.CoercionType.Html`</span><span class="sxs-lookup"><span data-stu-id="b4495-595">, (when using `Office.CoercionType.Html`</span></span><!-- --><span data-ttu-id="b4495-596">)</span><span class="sxs-lookup"><span data-stu-id="b4495-596"></span></span>

      - <span data-ttu-id="b4495-597">[ImageCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#imagecoercion) (lorsque vous utilisez`Office.CoercionType.Image`</span><span class="sxs-lookup"><span data-stu-id="b4495-597">[ImageCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#imagecoercion) (when using `Office.CoercionType.Image`</span></span><!-- --><span data-ttu-id="b4495-598">)</span><span class="sxs-lookup"><span data-stu-id="b4495-598"></span></span>

      - <span data-ttu-id="b4495-599">[MatrixCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixcoercion) (lorsque vous utilisez`Office.CoercionType.Matrix`</span><span class="sxs-lookup"><span data-stu-id="b4495-599">[MatrixCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixcoercion) (when using `Office.CoercionType.Matrix`</span></span><!-- --><span data-ttu-id="b4495-600">)</span><span class="sxs-lookup"><span data-stu-id="b4495-600"></span></span>

      - <span data-ttu-id="b4495-601">[OoxmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#ooxmlcoercion) (lorsque vous utilisez`Office.CoercionType.Ooxml`</span><span class="sxs-lookup"><span data-stu-id="b4495-601">[OoxmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#ooxmlcoercion) (when using `Office.CoercionType.Ooxml`</span></span><!-- --><span data-ttu-id="b4495-602">)</span><span class="sxs-lookup"><span data-stu-id="b4495-602"></span></span>

      - [<span data-ttu-id="b4495-603">Selection</span><span class="sxs-lookup"><span data-stu-id="b4495-603">Selection</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#selection)

      - <span data-ttu-id="b4495-604">[TableCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablecoercion) (lorsque vous utilisez`Office.CoercionType.Table`</span><span class="sxs-lookup"><span data-stu-id="b4495-604">[TableCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablecoercion) (when using `Office.CoercionType.Table`</span></span><!-- --><span data-ttu-id="b4495-605">)</span><span class="sxs-lookup"><span data-stu-id="b4495-605"></span></span>

      - <span data-ttu-id="b4495-606">[TextCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textcoercion) (lorsque vous utilisez`Office.CoercionType.Text`</span><span class="sxs-lookup"><span data-stu-id="b4495-606">[TextCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textcoercion) (when using `Office.CoercionType.Text`</span></span><!-- --><span data-ttu-id="b4495-607">)</span><span class="sxs-lookup"><span data-stu-id="b4495-607"></span></span>

      <span data-ttu-id="b4495-608">**Comportements propres à l’application**</span><span class="sxs-lookup"><span data-stu-id="b4495-608">**Application-specific behaviors**</span></span>

      <span data-ttu-id="b4495-609">Les actions suivantes spécifiques à l'application s'appliquent lors de l'écriture de données dans une sélection.</span><span class="sxs-lookup"><span data-stu-id="b4495-609">The following application-specific actions apply when writing data to a selection.</span></span>

      <table> <tr> <td><span data-ttu-id="b4495-610">Word</span><span class="sxs-lookup"><span data-stu-id="b4495-610">Word</span></span></td> <td><span data-ttu-id="b4495-611">S'il n'y a aucune sélection et que le point d'insertion se trouve à un `data` emplacement valide, le spécifié est inséré au point d'insertion.</span><span class="sxs-lookup"><span data-stu-id="b4495-611">If there is no selection and the insertion point is at a valid location, the specified `data` is inserted at the insertion point</span></span></td> <td><span data-ttu-id="b4495-612">S' `data` il s'agit d'une chaîne, le texte spécifié est inséré.</span><span class="sxs-lookup"><span data-stu-id="b4495-612">If `data` is a string, the specified text is inserted.</span></span></td> </tr> <tr> <td></td> <td></td> <td><span data-ttu-id="b4495-613">Si `data` est un tableau de tableaux («matrice») ou un objet TableData, un nouveau tableau Word est inséré.</span><span class="sxs-lookup"><span data-stu-id="b4495-613">If `data` is an array of arrays ("matrix") or a TableData object, a new Word table is inserted.</span></span></td> </tr> <tr> <td></td> <td></td> <td><span data-ttu-id="b4495-614">Si `data` est html, le code HTML spécifié est inséré.</span><span class="sxs-lookup"><span data-stu-id="b4495-614">If `data` is HTML, the specified HTML is inserted.</span></span> <span data-ttu-id="b4495-615">(**Important**: si l'un des éléments HTML que vous insérez n'est pas valide, Word ne génère pas d'erreur.</span><span class="sxs-lookup"><span data-stu-id="b4495-615">(**Important**: If any of the HTML you insert is invalid, Word won't raise an error.</span></span> <span data-ttu-id="b4495-616">Word insère autant de code HTML que possible et omet toutes les données non valides.</span><span class="sxs-lookup"><span data-stu-id="b4495-616">Word will insert as much of the HTML as it can and omits any invalid data).</span></span></td> </tr> <tr> <td></td> <td></td> <td><span data-ttu-id="b4495-617">Si `data` est Office Open XML, le code XML spécifié est inséré.</span><span class="sxs-lookup"><span data-stu-id="b4495-617">If `data` is Office Open XML, the specified XML is inserted.</span></span></td> </tr> <tr> <td></td> <td></td> <td><span data-ttu-id="b4495-618">Si `data` est un flux d'image encodé en base64, l'image spécifiée est insérée.</span><span class="sxs-lookup"><span data-stu-id="b4495-618">If `data` is a base64 encoded image stream, the specified image is inserted.</span></span></td> </tr> <tr> <td></td> <td><span data-ttu-id="b4495-619">S'il existe une sélection</span><span class="sxs-lookup"><span data-stu-id="b4495-619">If there is a selection</span></span></td> <td><span data-ttu-id="b4495-620">Il est remplacé par le `data` suivant les mêmes règles que ci-dessus.</span><span class="sxs-lookup"><span data-stu-id="b4495-620">It will be replaced with the specified `data` following the same rules as above.</span></span></td> </tr> <tr> <td></td> <td><span data-ttu-id="b4495-621">Insérer des images</span><span class="sxs-lookup"><span data-stu-id="b4495-621">Insert images</span></span></td> <td><span data-ttu-id="b4495-622">Les images insérées sont placées en ligne.</span><span class="sxs-lookup"><span data-stu-id="b4495-622">Inserted images are placed inline.</span></span> <span data-ttu-id="b4495-623">Les paramètres imageLeft et imageTop sont ignorés.</span><span class="sxs-lookup"><span data-stu-id="b4495-623">The imageLeft and imageTop parameters are ignored.</span></span> <span data-ttu-id="b4495-624">Les proportions de l’image sont toujours verrouillées.</span><span class="sxs-lookup"><span data-stu-id="b4495-624">The image aspect ratio is always locked.</span></span> <span data-ttu-id="b4495-625">Si seul un des paramètres imageWidth et imageHeight est donné, l’autre valeur est automatiquement redimensionnée pour conserver les proportions d’origine.</span><span class="sxs-lookup"><span data-stu-id="b4495-625">If only one of the imageWidth and imageHeight parameter is given, the other value will be automatically scaled to keep the original aspect ratio.</span></span></td> </tr>

      <tr> <td><span data-ttu-id="b4495-626">Excel</span><span class="sxs-lookup"><span data-stu-id="b4495-626">Excel</span></span></td> <td><span data-ttu-id="b4495-627">Si une seule cellule est sélectionnée</span><span class="sxs-lookup"><span data-stu-id="b4495-627">If a single cell is selected</span></span></td> <td><span data-ttu-id="b4495-628">S' `data` il s'agit d'une chaîne, le texte spécifié est inséré en tant que valeur de la cellule active.</span><span class="sxs-lookup"><span data-stu-id="b4495-628">If `data` is a string, the specified text is inserted as the value of the current cell.</span></span></td> </tr> <tr> <td></td> <td></td> <td><span data-ttu-id="b4495-629">Si `data` est un tableau de tableaux («matrice»), l'ensemble spécifié de lignes et de colonnes est inséré, à condition qu'aucune autre donnée des cellules environnantes ne soit remplacée.</span><span class="sxs-lookup"><span data-stu-id="b4495-629">If `data` is an array of arrays ("matrix"), the specified set of rows and columns are inserted, if no other data in surrounding cells will be overwritten.</span></span></td> </tr> <tr> <td></td> <td></td> <td><span data-ttu-id="b4495-630">S' `data` il s'agit d'un objet TableData, un nouveau tableau Excel avec l'ensemble spécifié de lignes et d'en-têtes est inséré, à condition qu'aucune autre donnée des cellules environnantes ne soit remplacée.</span><span class="sxs-lookup"><span data-stu-id="b4495-630">If `data` is a TableData object, a new Excel table with the specified set of rows and headers is inserted, if no other data in surrounding cells will be overwritten.</span></span></td> </tr> <tr> <td></td> <td><span data-ttu-id="b4495-631">Si plusieurs cellules sont sélectionnées</span><span class="sxs-lookup"><span data-stu-id="b4495-631">If multiple cells are selected</span></span></td> <td>If the shape does not match the shape of `data`<!-- --><span data-ttu-id="b4495-632">, une erreur est renvoyée.</span><span class="sxs-lookup"><span data-stu-id="b4495-632">, an error is returned.</span></span></td> </tr> <tr> <td></td> <td></td> <td>If the shape of the selection exactly matches the shape of `data`<!-- --><span data-ttu-id="b4495-633">, les valeurs des cellules sélectionnées sont mises à jour en fonction des valeurs de`data`</span><span class="sxs-lookup"><span data-stu-id="b4495-633">, the values of the selected cells are updated based on the values in `data`</span></span><!-- --><span data-ttu-id="b4495-634">.</span><span class="sxs-lookup"><span data-stu-id="b4495-634"></span></span></td> </tr> <tr> <td></td> <td><span data-ttu-id="b4495-635">Insérer des images</span><span class="sxs-lookup"><span data-stu-id="b4495-635">Insert images</span></span></td> <td><span data-ttu-id="b4495-636">Les images insérées sont flottantes.</span><span class="sxs-lookup"><span data-stu-id="b4495-636">Inserted images are floating.</span></span> <span data-ttu-id="b4495-637">Les paramètres imageLeft et imageTop de position sont indiqués par rapport à la ou aux cellule(s) actuellement sélectionnée(s).</span><span class="sxs-lookup"><span data-stu-id="b4495-637">The position imageLeft and imageTop parameters are relative to currently selected cell(s).</span></span> <span data-ttu-id="b4495-638">Les valeurs imageLeft et imageTop négatives sont autorisées et éventuellement réajustées par Excel pour positionner l’image dans une feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="b4495-638">Negative imageLeft and imageTop values are allowed and possibly readjusted by Excel to position the image inside a worksheet.</span></span> <span data-ttu-id="b4495-639">Les proportions sont verrouillées à moins que les paramètres imageWidth et imageHeight soient tous deux indiqués.</span><span class="sxs-lookup"><span data-stu-id="b4495-639">Image aspect ratio is locked unless both imageWidth and imageHeight parameters are provided.</span></span> <span data-ttu-id="b4495-640">Si seul un des paramètres imageWidth et imageHeight est donné, l’autre valeur est automatiquement redimensionnée pour conserver les proportions d’origine.</span><span class="sxs-lookup"><span data-stu-id="b4495-640">If only one of the imageWidth and imageHeight parameter is given, the other value will be automatically scaled to keep the original aspect ratio.</span></span></td> </tr> <tr> <td></td> <td><span data-ttu-id="b4495-641">Tous les autres cas</span><span class="sxs-lookup"><span data-stu-id="b4495-641">All other cases</span></span></td> <td><span data-ttu-id="b4495-642">Une erreur est renvoyée.</span><span class="sxs-lookup"><span data-stu-id="b4495-642">An error is returned.</span></span></td> </tr>

      <tr> <td><span data-ttu-id="b4495-643">Excel Online</span><span class="sxs-lookup"><span data-stu-id="b4495-643">Excel Online</span></span></td> <td><span data-ttu-id="b4495-644">En plus des comportements décrits pour Excel ci-dessus, ces limites s'appliquent lors de l'écriture de données dans Excel online.</span><span class="sxs-lookup"><span data-stu-id="b4495-644">In addition to the behaviors described for Excel above, these limits apply when writing data in Excel Online</span></span></td> <td><span data-ttu-id="b4495-645">Le nombre total de cellules que vous pouvez écrire dans une feuille de `data` calcul avec le paramètre ne peut pas dépasser 20 000 dans un appel unique à cette méthode.</span><span class="sxs-lookup"><span data-stu-id="b4495-645">The total number of cells you can write to a worksheet with the `data` parameter can't exceed 20,000 in a single call to this method.</span></span></td> </tr> <tr> <td></td> <td></td> <td><span data-ttu-id="b4495-646">Le nombre de groupes de mise en forme transmis `cellFormat` au paramètre ne peut pas dépasser 100.</span><span class="sxs-lookup"><span data-stu-id="b4495-646">The number of formatting groups passed to the `cellFormat` parameter can't exceed 100.</span></span> <span data-ttu-id="b4495-647">Un groupe de mise en forme se compose d’un ensemble de mises en forme appliquées à une plage de cellules donnée.</span><span class="sxs-lookup"><span data-stu-id="b4495-647">A single formatting group consists of a set of formatting applied to a specified range of cells.</span></span></td> </tr>

      <tr> <td><span data-ttu-id="b4495-648">PowerPoint</span><span class="sxs-lookup"><span data-stu-id="b4495-648">PowerPoint</span></span></td> <td><span data-ttu-id="b4495-649">Insérer une image</span><span class="sxs-lookup"><span data-stu-id="b4495-649">Insert image</span></span></td> <td><span data-ttu-id="b4495-650">Les images insérées sont flottantes.</span><span class="sxs-lookup"><span data-stu-id="b4495-650">Inserted images are floating.</span></span> <span data-ttu-id="b4495-651">Les paramètres de position imageLeft et imageTop sont facultatifs, mais si fournis, les deux doivent être présents.</span><span class="sxs-lookup"><span data-stu-id="b4495-651">The position imageLeft and imageTop parameters are optional but if provided, both should be present.</span></span> <span data-ttu-id="b4495-652">Si une seule valeur est indiquée, elle sera ignorée.</span><span class="sxs-lookup"><span data-stu-id="b4495-652">If a single value is provided, it will be ignored.</span></span> <span data-ttu-id="b4495-653">Les valeurs imageLeft et imageTop négatives sont autorisées et peuvent positionner une image en dehors d’une diapositive.</span><span class="sxs-lookup"><span data-stu-id="b4495-653">Negative imageLeft and imageTop values are allowed and can position an image outside of a slide.</span></span> <span data-ttu-id="b4495-654">Si aucun paramètre facultatif n’est indiqué et qu’une diapositive présente un espace réservé, l’image remplacera l’espace réservé dans la diapositive.</span><span class="sxs-lookup"><span data-stu-id="b4495-654">If no optional parameter is given and slide has a placeholder, the image will replace the placeholder in the slide.</span></span> <span data-ttu-id="b4495-655">Les proportions de l’image seront verrouillées, sauf si les paramètres imageWidth et imageHeight sont tous deux indiqués.</span><span class="sxs-lookup"><span data-stu-id="b4495-655">Image aspect ratio will be locked unless both imageWidth and imageHeight parameters are provided.</span></span> <span data-ttu-id="b4495-656">Si seul un des paramètres imageWidth et imageHeight est donné, l’autre valeur est automatiquement redimensionnée pour conserver les proportions d’origine.</span><span class="sxs-lookup"><span data-stu-id="b4495-656">If only one of the imageWidth and imageHeight parameter is given, the other value will be automatically scaled to keep the original aspect ratio.</span></span></td> </tr> </table>

      <span data-ttu-id="b4495-657">Les valeurs possibles pour le paramètre [Office. CoercionType](xref:office.Office.CoercionType) varient en fonction de l'hôte.</span><span class="sxs-lookup"><span data-stu-id="b4495-657">The possible values for the [Office.CoercionType](xref:office.Office.CoercionType) parameter vary by the host.</span></span>

      <table> <tr> <th><span data-ttu-id="b4495-658">Host (Hôte)</span><span class="sxs-lookup"><span data-stu-id="b4495-658">Host</span></span></th> <th><span data-ttu-id="b4495-659">coercionType pris en charge</span><span class="sxs-lookup"><span data-stu-id="b4495-659">Supported coercionType</span></span></th> </tr> <tr> <td><span data-ttu-id="b4495-660">Excel, PowerPoint, Project et Word</span><span class="sxs-lookup"><span data-stu-id="b4495-660">Excel, PowerPoint, Project, and Word</span></span></td> <td><span data-ttu-id="b4495-661">`Office.CoercionType.Text`chaîne</span><span class="sxs-lookup"><span data-stu-id="b4495-661">`Office.CoercionType.Text` (string)</span></span></td> </tr> <tr> <td><span data-ttu-id="b4495-662">Excel et Word</span><span class="sxs-lookup"><span data-stu-id="b4495-662">Excel and Word</span></span></td> <td><span data-ttu-id="b4495-663">`Office.CoercionType.Matrix`(tableau de tableaux)</span><span class="sxs-lookup"><span data-stu-id="b4495-663">`Office.CoercionType.Matrix` (array of arrays)</span></span></td> </tr> <tr> <td><span data-ttu-id="b4495-664">Access, Excel et Word</span><span class="sxs-lookup"><span data-stu-id="b4495-664">Access, Excel, and Word</span></span></td> <td><span data-ttu-id="b4495-665">`Office.CoercionType.Table`(Objet TableData)</span><span class="sxs-lookup"><span data-stu-id="b4495-665">`Office.CoercionType.Table` (TableData object)</span></span></td> </tr> <tr> <td><span data-ttu-id="b4495-666">Word</span><span class="sxs-lookup"><span data-stu-id="b4495-666">Word</span></span></td> <td>`Office.CoercionType.Html`</td> </tr> <tr> <td><span data-ttu-id="b4495-667">Word</span><span class="sxs-lookup"><span data-stu-id="b4495-667">Word</span></span></td> <td><span data-ttu-id="b4495-668">`Office.CoercionType.Ooxml`(Office Open XML)</span><span class="sxs-lookup"><span data-stu-id="b4495-668">`Office.CoercionType.Ooxml` (Office Open XML)</span></span></td> </tr> <tr> <td><span data-ttu-id="b4495-669">PowerPoint et PowerPoint Online</span><span class="sxs-lookup"><span data-stu-id="b4495-669">PowerPoint and PowerPoint Online</span></span></td> <td>`Office.CoercionType.SlideRange`</td> </tr> <tr> <td><span data-ttu-id="b4495-670">Excel, PowerPoint et Word</span><span class="sxs-lookup"><span data-stu-id="b4495-670">Excel, PowerPoint, and Word</span></span></td> <td>`Office.CoercionType.XmlSvg`</td> </tr> </table>

      #### <a name="examples"></a><span data-ttu-id="b4495-671">Exemples</span><span class="sxs-lookup"><span data-stu-id="b4495-671">Examples</span></span>

      ```javascript
      // The following example sets the selected text or cell to "Hello World!", 
      // and if that fails, displays the value of the error.message property.
      function writeText() {
          Office.context.document.setSelectedDataAsync("Hello World!",
              function (asyncResult) {
                  var error = asyncResult.error;
                  if (asyncResult.status === Office.AsyncResultStatus.Failed){
                      write(error.name + ": " + error.message);
                  }
              });
      }

      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }

      // Specifying the optional coercionType parameter lets you specify the kind of data you want to write
      // to a selection. The following example writes data as an array of three rows of two columns, 
      // specifying the coercionType as `Matrix` for that data structure, and if that fails, 
      // displays the value of the error.message property.
      function writeMatrix() {
          Office.context.document.setSelectedDataAsync(
              [["Red", "Rojo"], ["Green", "Verde"], ["Blue", "Azul"]],
              {coercionType: Office.CoercionType.Matrix}
              function (asyncResult) {
                  var error = asyncResult.error;
                  if (asyncResult.status === Office.AsyncResultStatus.Failed){
                      write(error.name + ": " + error.message);
                  }
              });
      }

      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }

      // The following example writes data as a one column table with a header and four rows, 
      // specifying the coercionType as `Table` for that data structure, and if that fails, 
      // displays the value of the error.message property.
      function writeTable() {
          // Build table.
          var myTable = new Office.TableData();
          myTable.headers = [["Cities"]];
          myTable.rows = [['Berlin'], ['Roma'], ['Tokyo'], ['Seattle']];

          // Write table.
          Office.context.document.setSelectedDataAsync(myTable, {coercionType: Office.CoercionType.Table},
              function (result) {
                  var error = result.error
                  if (result.status === Office.AsyncResultStatus.Failed) {
                      write(error.name + ": " + error.message);
                  }
          });
      }

      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }

      // In Word if you want to write HTML to the selection, you can specify the coercionType parameter as `Html`
      // as shown in the following example, which uses HTML <b> tags to make "Hello" bold.
      function writeHtmlData() {
          Office.context.document.setSelectedDataAsync(
              "<b>Hello</b> World!", {coercionType: Office.CoercionType.Html}, function (asyncResult) {
                  if (asyncResult.status === Office.AsyncResultStatus.Failed) {
                      write('Error: ' + asyncResult.error.message);
                  }
          });
      }

      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }

      // In Word, PowerPoint, or Excel, if you want to write an image to the selection, you can specify the coercionType
      // parameter as `Image` as shown in the following example. Note that imageLeft and imageTop are ignored by Word.
      function insertPictureAtSelection(base64EncodedImageStr) {

          Office.context.document.setSelectedDataAsync(base64EncodedImageStr, {
              coercionType: Office.CoercionType.Image,
              imageLeft: 50,
              imageTop: 50,
              imageWidth: 100,
              imageHeight: 100
          },
          function (asyncResult) {
              if (asyncResult.status === Office.AsyncResultStatus.Failed) {
                  console.log("Action failed with error: " + asyncResult.error.message);
              }
          });
      }

      // In Word, PowerPoint, or Excel, if you want to write an scalable vector graphic (SVG) to the selection, you can specify the 
      // coercionType parameter as `XmlSvg` as shown in the following example. Note that imageLeft and imageTop are ignored by Word.
      function insertSvgAtSelection(base64EncodedImageStr) {
          Office.context.document.setSelectedDataAsync(getImageAsBase64String(), {
              coercionType: Office.CoercionType.XmlSvg,
              imageLeft: 50,
              imageTop: 50,
              imageWidth: 400
          },
              function (asyncResult) {
                  if (asyncResult.status === Office.AsyncResultStatus.Failed) {
                      console.log(asyncResult.error.message);
                  }
              });
      }
      ```
    name: 'setSelectedDataAsync(data, options, callback)'
    fullName: 'setSelectedDataAsync(data, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setSelectedDataAsync(data: string | TableData | any[][], options?: SetSelectedDataOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: data
          description: "<span data-ttu-id=\"b4495-672\">Données à définir.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-672\">The data to be set.</span></span> <span data-ttu-id=\"b4495-673\">Valeur de type String ou [Office. CoercionType](xref:office.Office.CoercionType) , tableau 2D ou objet TableData.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-673\">Either a string or [Office.CoercionType](xref:office.Office.CoercionType) value, 2d array or TableData object.</span></span>\n\n<span data-ttu-id=\"b4495-674\">Si la valeur de `data` est:</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-674\">If the value passed for `data` is:</span></span>\n\n- <span data-ttu-id=\"b4495-675\">Une chaîne\_: Du texte brut ou tout élément dont le type peut être forcé en type string sera inséré.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-675\">A string: Plain text or anything that can be coerced to a string will be inserted.</span></span> <span data-ttu-id=\"b4495-676\">Dans Excel, vous pouvez également spécifier des données en tant que formule valide pour ajouter cette formule à la cellule sélectionnée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-676\">In Excel, you can also specify data as a valid formula to add that formula to the selected cell.</span></span> <span data-ttu-id=\"b4495-677\">Par exemple, la définition du paramètre data sur \"=SUM(A1:A5)\" totalisera les valeurs de la plage spécifiée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-677\">For example, setting data to \"=SUM(A1:A5)\" will total the values in the specified range.</span></span> <span data-ttu-id=\"b4495-678\">Toutefois, après avoir défini une formule sur la cellule liée, vous ne pouvez pas lire la formule ajoutée (ni les formules préexistantes) à partir de la cellule liée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-678\">However, when you set a formula on the bound cell, after doing so, you can't read the added formula (or any pre-existing formula) from the bound cell.</span></span> <span data-ttu-id=\"b4495-679\">Si vous appelez la méthode Document.getSelectedDataAsync sur la cellule sélectionnée pour en lire les données, la méthode peut renvoyer uniquement les données affichées dans la cellule (le résultat de la formule).</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-679\">If you call the Document.getSelectedDataAsync method on the selected cell to read its data, the method can return only the data displayed in the cell (the formula's result).</span></span>\n\n- <span data-ttu-id=\"b4495-680\">Un tableau de tableaux («\_matrice\_»)\_: Des données tabulaires sans en-tête seront insérées.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-680\">An array of arrays (\"matrix\"): Tabular data without headers will be inserted.</span></span> <span data-ttu-id=\"b4495-681\">Par exemple, pour écrire des données sur trois lignes dans deux colonnes, vous pouvez transmettre un tableau comme suit \\[ \\[: «R1C1», «R1C2\\]» \\[, «R2C1», «R2C2\\]» \\[, «R3C1», «R3C2\\]\\]».</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-681\">For example, to write data to three rows in two columns, you can pass an array like this: \\[\\[\"R1C1\", \"R1C2\"\\], \\[\"R2C1\", \"R2C2\"\\], \\[\"R3C1\", \"R3C2\"\\]\\].</span></span> <span data-ttu-id=\"b4495-682\">Pour écrire une seule colonne de trois lignes, transmettez un tableau comme suit \\[ \\[: «R1C1\\]» \\[, «R2C1\\]» \\[, «R3C1»\\]\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-682\">To write a single column of three rows, pass an array like this: \\[\\[\"R1C1\"\\], \\[\"R2C1\"\\], \\[\"R3C1\"\\]\\]</span></span>\n\n<span data-ttu-id=\"b4495-683\">Dans Excel, vous pouvez également spécifier le paramètre data en tant que tableau de tableaux contenant des formules valides pour les ajouter aux cellules sélectionnées.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-683\">In Excel, you can also specify data as an array of arrays that contains valid formulas to add them to the selected cells.</span></span> <span data-ttu-id=\"b4495-684\">Par exemple, si aucune autre donnée n'est remplacée, la définition des \\[ \\[données sur \"= Sum (a1: a5)\", \"= Average (a1:\\] \\] a5)\" ajoutera ces deux formules à la sélection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-684\">For example if no other data will be overwritten, setting data to \\[\\[\"=SUM(A1:A5)\",\"=AVERAGE(A1:A5)\"\\]\\] will add those two formulas to the selection.</span></span> <span data-ttu-id=\"b4495-685\">Comme lors de la définition d’une formule sur une cellule unique en tant que «\_texte\_», vous ne pouvez pas lire les formules ajoutées (ni les formules préexistantes) après leur définition. Vous pouvez uniquement lire les résultats des formules.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-685\">Just as when setting a formula on a single cell as \"text\", you can't read the added formulas (or any pre-existing formulas) after they have been set - you can only read the formulas' results.</span></span>\n\n- <span data-ttu-id=\"b4495-686\">Un objet TableData\_: Un tableau avec des en-têtes est inséré.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-686\">A TableData object: A table with headers will be inserted.</span></span> <span data-ttu-id=\"b4495-687\">Dans Excel, si vous spécifiez des formules dans l'objet TableData que vous transmettez au paramètre Data, vous risquez de ne pas obtenir les résultats attendus en raison de la fonctionnalité «colonnes calculées» d'Excel, qui duplique automatiquement les formules dans une colonne.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-687\">In Excel, if you specify formulas in the TableData object you pass for the data parameter, you might not get the results you expect due to the \"calculated columns\" feature of Excel, which automatically duplicates formulas within a column.</span></span> <span data-ttu-id=\"b4495-688\">Pour contourner ce contournement lorsque vous souhaitez écrire `data` des formules contenant des formules dans un tableau sélectionné, essayez de spécifier les données sous la forme d'un tableau de tableaux (au lieu d'un objet TableData) et spécifiez l'coercionType en tant que Microsoft. Office. Matrix ou \"Matrix\".</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-688\">To work around this when you want to write `data` that contains formulas to a selected table, try specifying the data as an array of arrays (instead of a TableData object), and specify the coercionType as Microsoft.Office.Matrix or \"matrix\".</span></span> <span data-ttu-id=\"b4495-689\">Toutefois, cette technique bloque la fonctionnalité «colonnes calculées» uniquement lorsque l'une des conditions suivantes est remplie: (1) vous écrivez sur toutes les cellules de la colonne ou (2) il y a déjà au moins deux formules différentes dans la colonne.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-689\">However, this technique will block the \"calculated columns\" feature only when one of the following conditions is met: (1) you are writing to all the cells of the column, or (2) there are already at least two different formulas in the column.</span></span>"
          type:
            - 'string | TableData | any[][]'
        - id: options
          description: <span data-ttu-id="b4495-690">Fournit des options permettant d'insérer des données dans la sélection.</span><span class="sxs-lookup"><span data-stu-id="b4495-690">Provides options for how to insert data to the selection.</span></span>
          type:
            - office.Office.SetSelectedDataOptions
        - id: callback
          description: '<span data-ttu-id="b4495-691">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="b4495-691">Optional.</span></span> <span data-ttu-id="b4495-692">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="b4495-692">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b4495-693">.</span><span class="sxs-lookup"><span data-stu-id="b4495-693"></span></span> <span data-ttu-id="b4495-694">La propriété AsyncResult. Value renvoie toujours undefined, car il n''existe aucun objet ni aucune donnée à récupérer.</span><span class="sxs-lookup"><span data-stu-id="b4495-694">The AsyncResult.value property always returns undefined because there is no object or data to retrieve.</span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.Document.setSelectedDataAsync_1
    summary: <span data-ttu-id="b4495-695">Écrit les données spécifiées dans la sélection actuelle.</span><span class="sxs-lookup"><span data-stu-id="b4495-695">Writes the specified data into the current selection.</span></span>
    remarks: |-
      <span data-ttu-id="b4495-696">**Ensembles de conditions requises**:</span><span class="sxs-lookup"><span data-stu-id="b4495-696">**Requirement sets**:</span></span>

      - [<span data-ttu-id="b4495-697">HtmlCoercion</span><span class="sxs-lookup"><span data-stu-id="b4495-697">HtmlCoercion</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#htmlcoercion)<!-- --><span data-ttu-id="b4495-698">, (lorsque vous utilisez`Office.CoercionType.Html`</span><span class="sxs-lookup"><span data-stu-id="b4495-698">, (when using `Office.CoercionType.Html`</span></span><!-- --><span data-ttu-id="b4495-699">)</span><span class="sxs-lookup"><span data-stu-id="b4495-699"></span></span>

      - <span data-ttu-id="b4495-700">[ImageCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#imagecoercion) (lorsque vous utilisez`Office.CoercionType.Image`</span><span class="sxs-lookup"><span data-stu-id="b4495-700">[ImageCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#imagecoercion) (when using `Office.CoercionType.Image`</span></span><!-- --><span data-ttu-id="b4495-701">)</span><span class="sxs-lookup"><span data-stu-id="b4495-701"></span></span>

      - <span data-ttu-id="b4495-702">[MatrixCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixcoercion) (lorsque vous utilisez`Office.CoercionType.Matrix`</span><span class="sxs-lookup"><span data-stu-id="b4495-702">[MatrixCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixcoercion) (when using `Office.CoercionType.Matrix`</span></span><!-- --><span data-ttu-id="b4495-703">)</span><span class="sxs-lookup"><span data-stu-id="b4495-703"></span></span>

      - <span data-ttu-id="b4495-704">[OoxmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#ooxmlcoercion) (lorsque vous utilisez`Office.CoercionType.Ooxml`</span><span class="sxs-lookup"><span data-stu-id="b4495-704">[OoxmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#ooxmlcoercion) (when using `Office.CoercionType.Ooxml`</span></span><!-- --><span data-ttu-id="b4495-705">)</span><span class="sxs-lookup"><span data-stu-id="b4495-705"></span></span>

      - [<span data-ttu-id="b4495-706">Selection</span><span class="sxs-lookup"><span data-stu-id="b4495-706">Selection</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#selection)

      - <span data-ttu-id="b4495-707">[TableCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablecoercion) (lorsque vous utilisez`Office.CoercionType.Table`</span><span class="sxs-lookup"><span data-stu-id="b4495-707">[TableCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablecoercion) (when using `Office.CoercionType.Table`</span></span><!-- --><span data-ttu-id="b4495-708">)</span><span class="sxs-lookup"><span data-stu-id="b4495-708"></span></span>

      - <span data-ttu-id="b4495-709">[TextCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textcoercion) (lorsque vous utilisez`Office.CoercionType.Text`</span><span class="sxs-lookup"><span data-stu-id="b4495-709">[TextCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textcoercion) (when using `Office.CoercionType.Text`</span></span><!-- --><span data-ttu-id="b4495-710">)</span><span class="sxs-lookup"><span data-stu-id="b4495-710"></span></span>

      <span data-ttu-id="b4495-711">**Comportements propres à l’application**</span><span class="sxs-lookup"><span data-stu-id="b4495-711">**Application-specific behaviors**</span></span>

      <span data-ttu-id="b4495-712">Les actions suivantes spécifiques à l'application s'appliquent lors de l'écriture de données dans une sélection.</span><span class="sxs-lookup"><span data-stu-id="b4495-712">The following application-specific actions apply when writing data to a selection.</span></span>

      <table> <tr> <td><span data-ttu-id="b4495-713">Word</span><span class="sxs-lookup"><span data-stu-id="b4495-713">Word</span></span></td> <td><span data-ttu-id="b4495-714">S'il n'y a aucune sélection et que le point d'insertion se trouve à un `data` emplacement valide, le spécifié est inséré au point d'insertion.</span><span class="sxs-lookup"><span data-stu-id="b4495-714">If there is no selection and the insertion point is at a valid location, the specified `data` is inserted at the insertion point</span></span></td> <td><span data-ttu-id="b4495-715">S' `data` il s'agit d'une chaîne, le texte spécifié est inséré.</span><span class="sxs-lookup"><span data-stu-id="b4495-715">If `data` is a string, the specified text is inserted.</span></span></td> </tr> <tr> <td></td> <td></td> <td><span data-ttu-id="b4495-716">Si `data` est un tableau de tableaux («matrice») ou un objet TableData, un nouveau tableau Word est inséré.</span><span class="sxs-lookup"><span data-stu-id="b4495-716">If `data` is an array of arrays ("matrix") or a TableData object, a new Word table is inserted.</span></span></td> </tr> <tr> <td></td> <td></td> <td><span data-ttu-id="b4495-717">Si `data` est html, le code HTML spécifié est inséré.</span><span class="sxs-lookup"><span data-stu-id="b4495-717">If `data` is HTML, the specified HTML is inserted.</span></span> <span data-ttu-id="b4495-718">(**Important**: si l'un des éléments HTML que vous insérez n'est pas valide, Word ne génère pas d'erreur.</span><span class="sxs-lookup"><span data-stu-id="b4495-718">(**Important**: If any of the HTML you insert is invalid, Word won't raise an error.</span></span> <span data-ttu-id="b4495-719">Word insère autant de code HTML que possible et omet toutes les données non valides.</span><span class="sxs-lookup"><span data-stu-id="b4495-719">Word will insert as much of the HTML as it can and omits any invalid data).</span></span></td> </tr> <tr> <td></td> <td></td> <td><span data-ttu-id="b4495-720">Si `data` est Office Open XML, le code XML spécifié est inséré.</span><span class="sxs-lookup"><span data-stu-id="b4495-720">If `data` is Office Open XML, the specified XML is inserted.</span></span></td> </tr> <tr> <td></td> <td></td> <td><span data-ttu-id="b4495-721">Si `data` est un flux d'image encodé en base64, l'image spécifiée est insérée.</span><span class="sxs-lookup"><span data-stu-id="b4495-721">If `data` is a base64 encoded image stream, the specified image is inserted.</span></span></td></tr></td> </tr> <tr> <td></td> <td><span data-ttu-id="b4495-722">S'il existe une sélection</span><span class="sxs-lookup"><span data-stu-id="b4495-722">If there is a selection</span></span></td> <td><span data-ttu-id="b4495-723">Il est remplacé par le `data` suivant les mêmes règles que ci-dessus.</span><span class="sxs-lookup"><span data-stu-id="b4495-723">It will be replaced with the specified `data` following the same rules as above.</span></span></td> </tr> <tr> <td></td> <td><span data-ttu-id="b4495-724">Insérer des images</span><span class="sxs-lookup"><span data-stu-id="b4495-724">Insert images</span></span></td> <td><span data-ttu-id="b4495-725">Les images insérées sont placées en ligne.</span><span class="sxs-lookup"><span data-stu-id="b4495-725">Inserted images are placed inline.</span></span> <span data-ttu-id="b4495-726">Les paramètres imageLeft et imageTop sont ignorés.</span><span class="sxs-lookup"><span data-stu-id="b4495-726">The imageLeft and imageTop parameters are ignored.</span></span> <span data-ttu-id="b4495-727">Les proportions de l’image sont toujours verrouillées.</span><span class="sxs-lookup"><span data-stu-id="b4495-727">The image aspect ratio is always locked.</span></span> <span data-ttu-id="b4495-728">Si seul un des paramètres imageWidth et imageHeight est donné, l’autre valeur est automatiquement redimensionnée pour conserver les proportions d’origine.</span><span class="sxs-lookup"><span data-stu-id="b4495-728">If only one of the imageWidth and imageHeight parameter is given, the other value will be automatically scaled to keep the original aspect ratio.</span></span></td> </tr>

      <tr> <td><span data-ttu-id="b4495-729">Excel</span><span class="sxs-lookup"><span data-stu-id="b4495-729">Excel</span></span></td> <td><span data-ttu-id="b4495-730">Si une seule cellule est sélectionnée</span><span class="sxs-lookup"><span data-stu-id="b4495-730">If a single cell is selected</span></span></td> <td><span data-ttu-id="b4495-731">S' `data` il s'agit d'une chaîne, le texte spécifié est inséré en tant que valeur de la cellule active.</span><span class="sxs-lookup"><span data-stu-id="b4495-731">If `data` is a string, the specified text is inserted as the value of the current cell.</span></span></td> </tr> <tr> <td></td> <td></td> <td><span data-ttu-id="b4495-732">Si `data` est un tableau de tableaux («matrice»), l'ensemble spécifié de lignes et de colonnes est inséré, à condition qu'aucune autre donnée des cellules environnantes ne soit remplacée.</span><span class="sxs-lookup"><span data-stu-id="b4495-732">If `data` is an array of arrays ("matrix"), the specified set of rows and columns are inserted, if no other data in surrounding cells will be overwritten.</span></span></td> </tr> <tr> <td></td> <td></td> <td><span data-ttu-id="b4495-733">S' `data` il s'agit d'un objet TableData, un nouveau tableau Excel avec l'ensemble spécifié de lignes et d'en-têtes est inséré, à condition qu'aucune autre donnée des cellules environnantes ne soit remplacée.</span><span class="sxs-lookup"><span data-stu-id="b4495-733">If `data` is a TableData object, a new Excel table with the specified set of rows and headers is inserted, if no other data in surrounding cells will be overwritten.</span></span></td> </tr> <tr> <td></td> <td><span data-ttu-id="b4495-734">Si plusieurs cellules sont sélectionnées</span><span class="sxs-lookup"><span data-stu-id="b4495-734">If multiple cells are selected</span></span></td><td>If the shape does not match the shape of `data`<!-- --><span data-ttu-id="b4495-735">, une erreur est renvoyée.</span><span class="sxs-lookup"><span data-stu-id="b4495-735">, an error is returned.</span></span></td> </tr> <tr> <td></td> <td></td> <td>If the shape of the selection exactly matches the shape of `data`<!-- --><span data-ttu-id="b4495-736">, les valeurs des cellules sélectionnées sont mises à jour en fonction des valeurs de`data`</span><span class="sxs-lookup"><span data-stu-id="b4495-736">, the values of the selected cells are updated based on the values in `data`</span></span><!-- --><span data-ttu-id="b4495-737">.</span><span class="sxs-lookup"><span data-stu-id="b4495-737"></span></span></td> </tr> <tr> <td></td> <td><span data-ttu-id="b4495-738">Insérer des images</span><span class="sxs-lookup"><span data-stu-id="b4495-738">Insert images</span></span></td> <td><span data-ttu-id="b4495-739">Les images insérées sont flottantes.</span><span class="sxs-lookup"><span data-stu-id="b4495-739">Inserted images are floating.</span></span> <span data-ttu-id="b4495-740">Les paramètres imageLeft et imageTop de position sont indiqués par rapport à la ou aux cellule(s) actuellement sélectionnée(s).</span><span class="sxs-lookup"><span data-stu-id="b4495-740">The position imageLeft and imageTop parameters are relative to currently selected cell(s).</span></span> <span data-ttu-id="b4495-741">Les valeurs imageLeft et imageTop négatives sont autorisées et éventuellement réajustées par Excel pour positionner l’image dans une feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="b4495-741">Negative imageLeft and imageTop values are allowed and possibly readjusted by Excel to position the image inside a worksheet.</span></span> <span data-ttu-id="b4495-742">Les proportions sont verrouillées à moins que les paramètres imageWidth et imageHeight soient tous deux indiqués.</span><span class="sxs-lookup"><span data-stu-id="b4495-742">Image aspect ratio is locked unless both imageWidth and imageHeight parameters are provided.</span></span> <span data-ttu-id="b4495-743">Si seul un des paramètres imageWidth et imageHeight est donné, l’autre valeur est automatiquement redimensionnée pour conserver les proportions d’origine.</span><span class="sxs-lookup"><span data-stu-id="b4495-743">If only one of the imageWidth and imageHeight parameter is given, the other value will be automatically scaled to keep the original aspect ratio.</span></span></td> </tr> <tr> <td></td> <td><span data-ttu-id="b4495-744">Tous les autres cas</span><span class="sxs-lookup"><span data-stu-id="b4495-744">All other cases</span></span></td> <td><span data-ttu-id="b4495-745">Une erreur est renvoyée.</span><span class="sxs-lookup"><span data-stu-id="b4495-745">An error is returned.</span></span></td> </tr>

      <tr> <td><span data-ttu-id="b4495-746">Excel Online</span><span class="sxs-lookup"><span data-stu-id="b4495-746">Excel Online</span></span></td> <td><span data-ttu-id="b4495-747">En plus des comportements décrits pour Excel ci-dessus, ces limites s'appliquent lors de l'écriture de données dans Excel online.</span><span class="sxs-lookup"><span data-stu-id="b4495-747">In addition to the behaviors described for Excel above, these limits apply when writing data in Excel Online</span></span></td> <td><span data-ttu-id="b4495-748">Le nombre total de cellules que vous pouvez écrire dans une feuille de `data` calcul avec le paramètre ne peut pas dépasser 20 000 dans un appel unique à cette méthode.</span><span class="sxs-lookup"><span data-stu-id="b4495-748">The total number of cells you can write to a worksheet with the `data` parameter can't exceed 20,000 in a single call to this method.</span></span></td> </tr> <tr> <td></td> <td></td> <td><span data-ttu-id="b4495-749">Le nombre de groupes de mise en forme transmis `cellFormat` au paramètre ne peut pas dépasser 100.</span><span class="sxs-lookup"><span data-stu-id="b4495-749">The number of formatting groups passed to the `cellFormat` parameter can't exceed 100.</span></span> <span data-ttu-id="b4495-750">Un groupe de mise en forme se compose d’un ensemble de mises en forme appliquées à une plage de cellules donnée.</span><span class="sxs-lookup"><span data-stu-id="b4495-750">A single formatting group consists of a set of formatting applied to a specified range of cells.</span></span></td> </tr>

      <tr> <td><span data-ttu-id="b4495-751">PowerPoint</span><span class="sxs-lookup"><span data-stu-id="b4495-751">PowerPoint</span></span></td> <td><span data-ttu-id="b4495-752">Insérer une image</span><span class="sxs-lookup"><span data-stu-id="b4495-752">Insert image</span></span></td> <td><span data-ttu-id="b4495-753">Les images insérées sont flottantes.</span><span class="sxs-lookup"><span data-stu-id="b4495-753">Inserted images are floating.</span></span> <span data-ttu-id="b4495-754">Les paramètres de position imageLeft et imageTop sont facultatifs, mais si fournis, les deux doivent être présents.</span><span class="sxs-lookup"><span data-stu-id="b4495-754">The position imageLeft and imageTop parameters are optional but if provided, both should be present.</span></span> <span data-ttu-id="b4495-755">Si une seule valeur est indiquée, elle sera ignorée.</span><span class="sxs-lookup"><span data-stu-id="b4495-755">If a single value is provided, it will be ignored.</span></span> <span data-ttu-id="b4495-756">Les valeurs imageLeft et imageTop négatives sont autorisées et peuvent positionner une image en dehors d’une diapositive.</span><span class="sxs-lookup"><span data-stu-id="b4495-756">Negative imageLeft and imageTop values are allowed and can position an image outside of a slide.</span></span> <span data-ttu-id="b4495-757">Si aucun paramètre facultatif n’est indiqué et qu’une diapositive présente un espace réservé, l’image remplacera l’espace réservé dans la diapositive.</span><span class="sxs-lookup"><span data-stu-id="b4495-757">If no optional parameter is given and slide has a placeholder, the image will replace the placeholder in the slide.</span></span> <span data-ttu-id="b4495-758">Les proportions de l’image seront verrouillées, sauf si les paramètres imageWidth et imageHeight sont tous deux indiqués.</span><span class="sxs-lookup"><span data-stu-id="b4495-758">Image aspect ratio will be locked unless both imageWidth and imageHeight parameters are provided.</span></span> <span data-ttu-id="b4495-759">Si seul un des paramètres imageWidth et imageHeight est donné, l’autre valeur est automatiquement redimensionnée pour conserver les proportions d’origine.</span><span class="sxs-lookup"><span data-stu-id="b4495-759">If only one of the imageWidth and imageHeight parameter is given, the other value will be automatically scaled to keep the original aspect ratio.</span></span></td> </tr> </table>

      <span data-ttu-id="b4495-760">Les valeurs possibles pour le paramètre [Office. CoercionType](xref:office.Office.CoercionType) varient en fonction de l'hôte.</span><span class="sxs-lookup"><span data-stu-id="b4495-760">The possible values for the [Office.CoercionType](xref:office.Office.CoercionType) parameter vary by the host.</span></span>

      <table> <tr> <th><span data-ttu-id="b4495-761">Host (Hôte)</span><span class="sxs-lookup"><span data-stu-id="b4495-761">Host</span></span></th> <th><span data-ttu-id="b4495-762">coercionType pris en charge</span><span class="sxs-lookup"><span data-stu-id="b4495-762">Supported coercionType</span></span></th> </tr> <tr> <td><span data-ttu-id="b4495-763">Excel, PowerPoint, Project et Word</span><span class="sxs-lookup"><span data-stu-id="b4495-763">Excel, PowerPoint, Project, and Word</span></span></td> <td><span data-ttu-id="b4495-764">`Office.CoercionType.Text`chaîne</span><span class="sxs-lookup"><span data-stu-id="b4495-764">`Office.CoercionType.Text` (string)</span></span></td> </tr> <tr> <td><span data-ttu-id="b4495-765">Excel et Word</span><span class="sxs-lookup"><span data-stu-id="b4495-765">Excel and Word</span></span></td> <td><span data-ttu-id="b4495-766">`Office.CoercionType.Matrix`(tableau de tableaux)</span><span class="sxs-lookup"><span data-stu-id="b4495-766">`Office.CoercionType.Matrix` (array of arrays)</span></span></td> </tr> <tr> <td><span data-ttu-id="b4495-767">Access, Excel et Word</span><span class="sxs-lookup"><span data-stu-id="b4495-767">Access, Excel, and Word</span></span></td> <td><span data-ttu-id="b4495-768">`Office.CoercionType.Table`(Objet TableData)</span><span class="sxs-lookup"><span data-stu-id="b4495-768">`Office.CoercionType.Table` (TableData object)</span></span></td> </tr> <tr> <td><span data-ttu-id="b4495-769">Word</span><span class="sxs-lookup"><span data-stu-id="b4495-769">Word</span></span></td> <td>`Office.CoercionType.Html`</td> </tr> <tr> <td><span data-ttu-id="b4495-770">Word</span><span class="sxs-lookup"><span data-stu-id="b4495-770">Word</span></span></td> <td><span data-ttu-id="b4495-771">`Office.CoercionType.Ooxml`(Office Open XML)</span><span class="sxs-lookup"><span data-stu-id="b4495-771">`Office.CoercionType.Ooxml` (Office Open XML)</span></span></td> </tr> <tr> <td><span data-ttu-id="b4495-772">PowerPoint et PowerPoint Online</span><span class="sxs-lookup"><span data-stu-id="b4495-772">PowerPoint and PowerPoint Online</span></span></td> <td>`Office.CoercionType.SlideRange`</td> </tr> <tr> <td><span data-ttu-id="b4495-773">Excel, PowerPoint et Word</span><span class="sxs-lookup"><span data-stu-id="b4495-773">Excel, PowerPoint, and Word</span></span></td> <td>`Office.CoercionType.XmlSvg`</td> </tr> </table>
    name: 'setSelectedDataAsync(data, callback)'
    fullName: 'setSelectedDataAsync(data, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setSelectedDataAsync(data: string | TableData | any[][], callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: data
          description: "<span data-ttu-id=\"b4495-774\">Données à définir.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-774\">The data to be set.</span></span> <span data-ttu-id=\"b4495-775\">Valeur de type String ou [Office. CoercionType](xref:office.Office.CoercionType) , tableau 2D ou objet TableData.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-775\">Either a string or [Office.CoercionType](xref:office.Office.CoercionType) value, 2d array or TableData object.</span></span>\n\n<span data-ttu-id=\"b4495-776\">Si la valeur de `data` est:</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-776\">If the value passed for `data` is:</span></span>\n\n- <span data-ttu-id=\"b4495-777\">Une chaîne\_: Du texte brut ou tout élément dont le type peut être forcé en type string sera inséré.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-777\">A string: Plain text or anything that can be coerced to a string will be inserted.</span></span> <span data-ttu-id=\"b4495-778\">Dans Excel, vous pouvez également spécifier des données en tant que formule valide pour ajouter cette formule à la cellule sélectionnée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-778\">In Excel, you can also specify data as a valid formula to add that formula to the selected cell.</span></span> <span data-ttu-id=\"b4495-779\">Par exemple, la définition du paramètre data sur \"=SUM(A1:A5)\" totalisera les valeurs de la plage spécifiée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-779\">For example, setting data to \"=SUM(A1:A5)\" will total the values in the specified range.</span></span> <span data-ttu-id=\"b4495-780\">Toutefois, après avoir défini une formule sur la cellule liée, vous ne pouvez pas lire la formule ajoutée (ni les formules préexistantes) à partir de la cellule liée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-780\">However, when you set a formula on the bound cell, after doing so, you can't read the added formula (or any pre-existing formula) from the bound cell.</span></span> <span data-ttu-id=\"b4495-781\">Si vous appelez la méthode Document.getSelectedDataAsync sur la cellule sélectionnée pour en lire les données, la méthode peut renvoyer uniquement les données affichées dans la cellule (le résultat de la formule).</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-781\">If you call the Document.getSelectedDataAsync method on the selected cell to read its data, the method can return only the data displayed in the cell (the formula's result).</span></span>\n\n- <span data-ttu-id=\"b4495-782\">Un tableau de tableaux («\_matrice\_»)\_: Des données tabulaires sans en-tête seront insérées.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-782\">An array of arrays (\"matrix\"): Tabular data without headers will be inserted.</span></span> <span data-ttu-id=\"b4495-783\">Par exemple, pour écrire des données sur trois lignes dans deux colonnes, vous pouvez transmettre un tableau comme suit \\[ \\[: «R1C1», «R1C2\\]» \\[, «R2C1», «R2C2\\]» \\[, «R3C1», «R3C2\\]\\]».</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-783\">For example, to write data to three rows in two columns, you can pass an array like this: \\[\\[\"R1C1\", \"R1C2\"\\], \\[\"R2C1\", \"R2C2\"\\], \\[\"R3C1\", \"R3C2\"\\]\\].</span></span> <span data-ttu-id=\"b4495-784\">Pour écrire une seule colonne de trois lignes, transmettez un tableau comme suit \\[ \\[: «R1C1\\]» \\[, «R2C1\\]» \\[, «R3C1»\\]\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-784\">To write a single column of three rows, pass an array like this: \\[\\[\"R1C1\"\\], \\[\"R2C1\"\\], \\[\"R3C1\"\\]\\]</span></span>\n\n<span data-ttu-id=\"b4495-785\">Dans Excel, vous pouvez également spécifier le paramètre data en tant que tableau de tableaux contenant des formules valides pour les ajouter aux cellules sélectionnées.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-785\">In Excel, you can also specify data as an array of arrays that contains valid formulas to add them to the selected cells.</span></span> <span data-ttu-id=\"b4495-786\">Par exemple, si aucune autre donnée n'est remplacée, la définition des \\[ \\[données sur \"= Sum (a1: a5)\", \"= Average (a1:\\] \\] a5)\" ajoutera ces deux formules à la sélection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-786\">For example if no other data will be overwritten, setting data to \\[\\[\"=SUM(A1:A5)\",\"=AVERAGE(A1:A5)\"\\]\\] will add those two formulas to the selection.</span></span> <span data-ttu-id=\"b4495-787\">Comme lors de la définition d’une formule sur une cellule unique en tant que «\_texte\_», vous ne pouvez pas lire les formules ajoutées (ni les formules préexistantes) après leur définition. Vous pouvez uniquement lire les résultats des formules.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-787\">Just as when setting a formula on a single cell as \"text\", you can't read the added formulas (or any pre-existing formulas) after they have been set - you can only read the formulas' results.</span></span>\n\n- <span data-ttu-id=\"b4495-788\">Un objet TableData\_: Un tableau avec des en-têtes est inséré.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-788\">A TableData object: A table with headers will be inserted.</span></span> <span data-ttu-id=\"b4495-789\">Dans Excel, si vous spécifiez des formules dans l'objet TableData que vous transmettez au paramètre Data, vous risquez de ne pas obtenir les résultats attendus en raison de la fonctionnalité «colonnes calculées» d'Excel, qui duplique automatiquement les formules dans une colonne.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-789\">In Excel, if you specify formulas in the TableData object you pass for the data parameter, you might not get the results you expect due to the \"calculated columns\" feature of Excel, which automatically duplicates formulas within a column.</span></span> <span data-ttu-id=\"b4495-790\">Pour contourner ce contournement lorsque vous souhaitez écrire `data` des formules contenant des formules dans un tableau sélectionné, essayez de spécifier les données sous la forme d'un tableau de tableaux (au lieu d'un objet TableData) et spécifiez l'coercionType en tant que Microsoft. Office. Matrix ou \"Matrix\".</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-790\">To work around this when you want to write `data` that contains formulas to a selected table, try specifying the data as an array of arrays (instead of a TableData object), and specify the coercionType as Microsoft.Office.Matrix or \"matrix\".</span></span> <span data-ttu-id=\"b4495-791\">Toutefois, cette technique bloque la fonctionnalité «colonnes calculées» uniquement lorsque l'une des conditions suivantes est remplie: (1) vous écrivez sur toutes les cellules de la colonne ou (2) il y a déjà au moins deux formules différentes dans la colonne.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4495-791\">However, this technique will block the \"calculated columns\" feature only when one of the following conditions is met: (1) you are writing to all the cells of the column, or (2) there are already at least two different formulas in the column.</span></span>"
          type:
            - 'string | TableData | any[][]'
        - id: callback
          description: '<span data-ttu-id="b4495-792">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="b4495-792">Optional.</span></span> <span data-ttu-id="b4495-793">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="b4495-793">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b4495-794">.</span><span class="sxs-lookup"><span data-stu-id="b4495-794"></span></span> <span data-ttu-id="b4495-795">La propriété AsyncResult. Value renvoie toujours undefined, car il n''existe aucun objet ni aucune donnée à récupérer.</span><span class="sxs-lookup"><span data-stu-id="b4495-795">The AsyncResult.value property always returns undefined because there is no object or data to retrieve.</span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.Document.setTaskFieldAsync
    summary: |-
      <span data-ttu-id="b4495-796">Documents de projet uniquement.</span><span class="sxs-lookup"><span data-stu-id="b4495-796">Project documents only.</span></span> <span data-ttu-id="b4495-797">Définir le champ de tâche pour l'ID de tâche spécifié.</span><span class="sxs-lookup"><span data-stu-id="b4495-797">Set task field for specified task Id.</span></span>

      <span data-ttu-id="b4495-798">**Important**: cette API fonctionne uniquement dans Project 2016 sur le bureau Windows.</span><span class="sxs-lookup"><span data-stu-id="b4495-798">**Important**: This API works only in Project 2016 on Windows desktop.</span></span>
    name: 'setTaskFieldAsync(taskId, fieldId, fieldValue, options, callback)'
    fullName: 'setTaskFieldAsync(taskId, fieldId, fieldValue, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setTaskFieldAsync(taskId: string, fieldId: number, fieldValue: string | number | boolean | object, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: taskId
          description: '<span data-ttu-id="b4495-799">Soit une chaîne, soit une valeur de l''ID de tâche.</span><span class="sxs-lookup"><span data-stu-id="b4495-799">Either a string or value of the Task Id.</span></span>'
          type:
            - string
        - id: fieldId
          description: <span data-ttu-id="b4495-800">Champs de tâche.</span><span class="sxs-lookup"><span data-stu-id="b4495-800">Task Fields.</span></span>
          type:
            - number
        - id: fieldValue
          description: <span data-ttu-id="b4495-801">Valeur du champ cible.</span><span class="sxs-lookup"><span data-stu-id="b4495-801">Value of the target field.</span></span>
          type:
            - string | number | boolean | object
        - id: options
          description: '<span data-ttu-id="b4495-802">Fournit une option permettant de conserver les données de contexte de n''importe quel type, inchangées, pour une utilisation dans un rappel.</span><span class="sxs-lookup"><span data-stu-id="b4495-802">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="b4495-803">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="b4495-803">Optional.</span></span> <span data-ttu-id="b4495-804">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="b4495-804">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b4495-805">.</span><span class="sxs-lookup"><span data-stu-id="b4495-805"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.Document.setTaskFieldAsync_1
    summary: |-
      <span data-ttu-id="b4495-806">Documents de projet uniquement.</span><span class="sxs-lookup"><span data-stu-id="b4495-806">Project documents only.</span></span> <span data-ttu-id="b4495-807">Définir le champ de tâche pour l'ID de tâche spécifié.</span><span class="sxs-lookup"><span data-stu-id="b4495-807">Set task field for specified task Id.</span></span>

      <span data-ttu-id="b4495-808">**Important**: cette API fonctionne uniquement dans Project 2016 sur le bureau Windows.</span><span class="sxs-lookup"><span data-stu-id="b4495-808">**Important**: This API works only in Project 2016 on Windows desktop.</span></span>
    name: 'setTaskFieldAsync(taskId, fieldId, fieldValue, callback)'
    fullName: 'setTaskFieldAsync(taskId, fieldId, fieldValue, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setTaskFieldAsync(taskId: string, fieldId: number, fieldValue: string | number | boolean | object, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="b4495-809">Exemples</span><span class="sxs-lookup"><span data-stu-id="b4495-809">Examples</span></span>

          ```javascript
          // The following code example calls getSelectedTaskAsync to get the GUID of the task that's
          // currently selected in a task view. Then it sets two task field values by calling
          // setTaskFieldAsync recursively.
          // The getSelectedTaskAsync method used in the example requires that a task view
          // (for example, Task Usage) is the active view and that a task is selected. See the
          // addHandlerAsync method for an example that activates a button based on the active view type.
          // The example assumes your add-in has a reference to the jQuery library and that the
          // following page controls are defined in the content div in the page body:
          // <input id="set-info" type="button" value="Set info" /><br />
          // <span id="message"></span>

          (function () {
              "use strict";

              // The initialize function must be run each time a new page is loaded.
              Office.initialize = function (reason) {
                  $(document).ready(function () {
                      
                      // After the DOM is loaded, add-in-specific code can run.
                      app.initialize();
                      $('#set-info').click(setTaskInfo);
                  });
              };

              // Get the GUID of the task, and then get the task fields.
              function setTaskInfo() {
                  getTaskGuid().then(
                      function (data) {
                          setTaskFields(data);
                      }
                  );
              }

              // Get the GUID of the selected task.
              function getTaskGuid() {
                  var defer = $.Deferred();
                  Office.context.document.getSelectedTaskAsync(
                      function (result) {
                          if (result.status === Office.AsyncResultStatus.Failed) {
                              onError(result.error);
                          }
                          else {
                              defer.resolve(result.value);
                          }
                      }
                  );
                  return defer.promise();
              }

              // Set the specified fields for the selected task.
              function setTaskFields(taskGuid) {
                  var targetFields = [Office.ProjectTaskFields.Active, Office.ProjectTaskFields.Notes];
                  var fieldValues = [true, 'Notes for the task.'];

                  // Set the field value. If the call is successful, set the next field.
                  for (var i = 0; i < targetFields.length; i++) {
                      Office.context.document.setTaskFieldAsync(
                          taskGuid,
                          targetFields[i],
                          fieldValues[i],
                          function (result) {
                              if (result.status === Office.AsyncResultStatus.Succeeded) {
                                  i++;
                              }
                              else {
                                  onError(result.error);
                              }
                          }
                      );
                  }
                  $('#message').html('Field values set');
              }

              function onError(error) {
                  app.showNotification(error.name + ' ' + error.code + ': ' + error.message);
              }
          })();
          ```
      parameters:
        - id: taskId
          description: '<span data-ttu-id="b4495-810">Soit une chaîne, soit une valeur de l''ID de tâche.</span><span class="sxs-lookup"><span data-stu-id="b4495-810">Either a string or value of the Task Id.</span></span>'
          type:
            - string
        - id: fieldId
          description: <span data-ttu-id="b4495-811">Champs de tâche.</span><span class="sxs-lookup"><span data-stu-id="b4495-811">Task Fields.</span></span>
          type:
            - number
        - id: fieldValue
          description: <span data-ttu-id="b4495-812">Valeur du champ cible.</span><span class="sxs-lookup"><span data-stu-id="b4495-812">Value of the target field.</span></span>
          type:
            - string | number | boolean | object
        - id: callback
          description: '<span data-ttu-id="b4495-813">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="b4495-813">Optional.</span></span> <span data-ttu-id="b4495-814">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="b4495-814">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b4495-815">.</span><span class="sxs-lookup"><span data-stu-id="b4495-815"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.Document.bindings
    summary: <span data-ttu-id="b4495-816">Obtient un objet qui fournit l’accès aux liaisons définies dans le document.</span><span class="sxs-lookup"><span data-stu-id="b4495-816">Gets an object that provides access to the bindings defined in the document.</span></span>
    remarks: |-
      <span data-ttu-id="b4495-817">Vous n'instanciez pas l'objet document directement dans votre script.</span><span class="sxs-lookup"><span data-stu-id="b4495-817">You don't instantiate the Document object directly in your script.</span></span> <span data-ttu-id="b4495-818">Pour appeler des membres de l’objet Document afin d’interagir avec le document actif ou la feuille de calcul active, utilisez `Office.context.document` dans votre script.</span><span class="sxs-lookup"><span data-stu-id="b4495-818">To call members of the Document object to interact with the current document or worksheet, use `Office.context.document` in your script.</span></span>

      #### <a name="examples"></a><span data-ttu-id="b4495-819">Exemples</span><span class="sxs-lookup"><span data-stu-id="b4495-819">Examples</span></span>

      ```javascript
      function displayAllBindings() {
          Office.context.document.bindings.getAllAsync(function (asyncResult) {
              var bindingString = '';
              for (var i in asyncResult.value) {
                  bindingString += asyncResult.value[i].id + '\n';
              }
              write('Existing bindings: ' + bindingString);
          });
      }

      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: bindings
    fullName: bindings
    langs:
      - typeScript
    type: property
    syntax:
      content: 'bindings: Bindings;'
      return:
        type:
          - office.Office.Bindings
  - uid: office.Office.Document.customXmlParts
    summary: <span data-ttu-id="b4495-820">Obtient un objet qui représente les parties XML personnalisées contenues dans le document.</span><span class="sxs-lookup"><span data-stu-id="b4495-820">Gets an object that represents the custom XML parts in the document.</span></span>
    name: customXmlParts
    fullName: customXmlParts
    langs:
      - typeScript
    type: property
    syntax:
      content: 'customXmlParts: CustomXmlParts;'
      return:
        type:
          - office.Office.CustomXmlParts
        description: |-


          #### <a name="examples"></a><span data-ttu-id="b4495-821">Exemples</span><span class="sxs-lookup"><span data-stu-id="b4495-821">Examples</span></span>

          ```javascript
          function getCustomXmlParts(){
              Office.context.document.customXmlParts.getByNamespaceAsync('http://tempuri.org', function (asyncResult) {
                  write('Retrieved ' + asyncResult.value.length + ' custom XML parts');
              });
          }

          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```
  - uid: office.Office.Document.mode
    summary: <span data-ttu-id="b4495-822">Obtient le mode dans lequel se trouve le document.</span><span class="sxs-lookup"><span data-stu-id="b4495-822">Gets the mode the document is in.</span></span>
    name: mode
    fullName: mode
    langs:
      - typeScript
    type: property
    syntax:
      content: 'mode: DocumentMode;'
      return:
        type:
          - office.Office.DocumentMode
        description: |-


          #### <a name="examples"></a><span data-ttu-id="b4495-823">Exemples</span><span class="sxs-lookup"><span data-stu-id="b4495-823">Examples</span></span>

          ```javascript
          function displayDocumentMode() {
              write(Office.context.document.mode);
          }

          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```
          ```javascript
          // The following example initializes the add-in and then gets properties of the
          // Document object that are available in the context of a Project document.
          // A Project document is the opened, active project. To access members of the
          // ProjectDocument object, use the Office.context.document object as shown in
          // the code examples for ProjectDocument methods and events.
          // The example assumes your add-in has a reference to the jQuery library and
          // that the following page control is defined in the content div in the page body:
          // <span id="message"></span>

          (function () {
              "use strict";

              // The initialize function must be run each time a new page is loaded.
              Office.initialize = function (reason) {
                  $(document).ready(function () {

                      // Get information about the document.
                      showDocumentProperties();
                  });
              };

              // Get the document mode and the URL of the active project.
              function showDocumentProperties() {
                  var output = String.format(
                      'The document mode is {0}.<br/>The URL of the active project is {1}.',
                      Office.context.document.mode,
                      Office.context.document.url);
                  $('#message').html(output);
              }
          })();
          ```
  - uid: office.Office.Document.settings
    summary: <span data-ttu-id="b4495-824">Obtient un objet qui représente les paramètres personnalisés enregistrés du complément de contenu ou de volet des tâches pour le document actif.</span><span class="sxs-lookup"><span data-stu-id="b4495-824">Gets an object that represents the saved custom settings of the content or task pane add-in for the current document.</span></span>
    name: settings
    fullName: settings
    langs:
      - typeScript
    type: property
    syntax:
      content: 'settings: Settings;'
      return:
        type:
          - office.Office.Settings
  - uid: office.Office.Document.url
    summary: <span data-ttu-id="b4495-825">Obtient l’URL du document actuellement ouvert dans l’application hôte.</span><span class="sxs-lookup"><span data-stu-id="b4495-825">Gets the URL of the document that the host application currently has open.</span></span> <span data-ttu-id="b4495-826">Renvoie la valeur null si l'URL n'est pas disponible.</span><span class="sxs-lookup"><span data-stu-id="b4495-826">Returns null if the URL is unavailable.</span></span>
    name: url
    fullName: url
    langs:
      - typeScript
    type: property
    syntax:
      content: 'url: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="b4495-827">範例</span><span class="sxs-lookup"><span data-stu-id="b4495-827">Examples</span></span>

          ```javascript
          function displayDocumentUrl() {
              write(Office.context.document.url);
          }

          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```