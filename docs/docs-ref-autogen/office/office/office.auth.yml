### YamlMime:TSType
name: Office.Auth
uid: office!Office.Auth:interface
package: office!
fullName: Office.Auth
summary: Espace de noms d’authentification Office, `Office.context.auth`<!-- -->, fournit une méthode qui permet à l’application cliente Office d’obtenir un jeton d’accès à l’application Web du complément. Indirectement, ceci active également le complément pour accéder aux données de Microsoft Graph de l’utilisateur sans que l’utilisateur ne doive se connecter une deuxième fois.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
- name: getAccessToken(options)
  uid: office!Office.Auth#getAccessToken:member(1)
  package: office!
  fullName: getAccessToken(options)
  summary: Appelle le point de terminaison Azure Active Directory V 2.0 pour obtenir un jeton d’accès à l’application web de votre complément. Permet à des compléments d’identifier les utilisateurs. Le code côté serveur peut utiliser ce jeton pour accéder à Microsoft Graph pour l’application Web du complément à l’aide du [flux OAuth « de la part de »](https://docs.microsoft.com/azure/active-directory/develop/active-directory-v2-protocols-oauth-on-behalf-of)<!-- -->. Cette API nécessite une configuration à authentification unique qui relie le complément à une application Azure. Les utilisateurs d’Office se connectent avec des comptes d’organisation et des comptes Microsoft. Microsoft Azure renvoie des jetons destinés aux deux types de comptes utilisateur afin d’accéder aux ressources dans Microsoft Graph.
  remarks: >-
    **Hôtes**: Excel, OneNote, Outlook, PowerPoint, Word


    **Important**: dans Outlook, cette API n’est pas prise en charge si le complément est chargé dans une boîte aux lettres Outlook.com ou gmail.


    **Ensemble de conditions requises**: [ensembles](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/identity-api-requirement-sets)
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getAccessToken(options?: AuthOptions): Promise<string>;'
    parameters:
    - id: options
      description: Facultatif. Accepte un `AuthOptions` objet pour définir les comportements de connexion.
      type: <xref uid="office!Office.AuthOptions:interface" />
    return:
      type: Promise&lt;string&gt;
      description: Promesse du jeton d’accès.
- name: getAccessTokenAsync(options, callback)
  uid: office!Office.Auth#getAccessTokenAsync:member(1)
  package: office!
  fullName: getAccessTokenAsync(options, callback)
  summary: Appelle le point de terminaison Azure Active Directory V 2.0 pour obtenir un jeton d’accès à l’application web de votre complément. Permet à des compléments d’identifier les utilisateurs. Le code côté serveur peut utiliser ce jeton pour accéder à Microsoft Graph pour l’application Web du complément à l’aide du [flux OAuth « de la part de »](https://docs.microsoft.com/azure/active-directory/develop/active-directory-v2-protocols-oauth-on-behalf-of)<!-- -->.
  remarks: >-
    **Hôtes**: Excel, OneNote, Outlook, PowerPoint, Word


    **Ensemble de conditions requises**: [ensembles](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/identity-api-requirement-sets)


    Cette API nécessite une configuration à authentification unique qui relie le complément à une application Azure. Les utilisateurs d’Office se connectent avec des comptes d’organisation et des comptes Microsoft. Microsoft Azure renvoie des jetons destinés aux deux types de comptes utilisateur afin d’accéder aux ressources dans Microsoft Graph.


    #### <a name="examples"></a>Exemples


    ```javascript

    Office.context.auth.getAccessTokenAsync(function(result) {
        if (result.status === "succeeded") {
            var token = result.value;
            // ...
        } else {
            console.log("Error obtaining token", result.error);
        }
    });

    ```
  isPreview: false
  isDeprecated: true
  customDeprecatedMessage: >-
    Use Office.auth.getAccessToken instead.


    \*\*Important\*\*: In Outlook, this API is not supported if the add-in is loaded in an Outlook.com or Gmail mailbox.
  syntax:
    content: 'getAccessTokenAsync(options?: AuthOptions, callback?: (result: AsyncResult<string>) => void): void;'
    parameters:
    - id: options
      description: Facultatif. Accepte un `AuthOptions` objet pour définir les comportements de connexion.
      type: <xref uid="office!Office.AuthOptions:interface" />
    - id: callback
      description: 'Facultatif. Accepte une méthode de rappel qui peut analyser le jeton pour l’ID de l’utilisateur ou utilisez le jeton dans le flux de « de la part de » pour accéder à Microsoft Graph. Si `AsyncResult.status` le est « réussi », alors `AsyncResult.value` est le AAD brut v. 2.0: le jeton d’accès mis en forme.'
      type: '(result: <xref uid="office!Office.AsyncResult:interface" />&lt;string&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: getAccessTokenAsync(callback)
  uid: office!Office.Auth#getAccessTokenAsync:member(2)
  package: office!
  fullName: getAccessTokenAsync(callback)
  summary: Appelle le point de terminaison Azure Active Directory V 2.0 pour obtenir un jeton d’accès à l’application web de votre complément. Permet à des compléments d’identifier les utilisateurs. Le code côté serveur peut utiliser ce jeton pour accéder à Microsoft Graph pour l’application Web du complément à l’aide du [flux OAuth « de la part de »](https://docs.microsoft.com/azure/active-directory/develop/active-directory-v2-protocols-oauth-on-behalf-of)<!-- -->.
  remarks: >-
    **Hôtes**: Excel, OneNote, Outlook, PowerPoint, Word


    **Ensemble de conditions requises**: [ensembles](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/identity-api-requirement-sets)


    Cette API nécessite une configuration à authentification unique qui relie le complément à une application Azure. Les utilisateurs d’Office se connectent avec des comptes d’organisation et des comptes Microsoft. Microsoft Azure renvoie des jetons destinés aux deux types de comptes utilisateur afin d’accéder aux ressources dans Microsoft Graph.
  isPreview: false
  isDeprecated: true
  customDeprecatedMessage: >-
    Use `Office.auth.getAccessToken` instead.


    \*\*Important\*\*: In Outlook, this API is not supported if the add-in is loaded in an Outlook.com or Gmail mailbox.
  syntax:
    content: 'getAccessTokenAsync(callback?: (result: AsyncResult<string>) => void): void;'
    parameters:
    - id: callback
      description: 'Facultatif. Accepte une méthode de rappel qui peut analyser le jeton pour l’ID de l’utilisateur ou utilisez le jeton dans le flux de « de la part de » pour accéder à Microsoft Graph. Si `AsyncResult.status` le est « réussi », alors `AsyncResult.value` est le AAD brut v. 2.0: le jeton d’accès mis en forme.'
      type: '(result: <xref uid="office!Office.AsyncResult:interface" />&lt;string&gt;) =&gt; void'
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: f358cf8605650d9d78c052c49a6b257c762e92d6
  ms.sourcegitcommit: 3bab97ab3b91da7cca497f6fc895408a76bd8b46
  ms.translationtype: MT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 11/18/2020
  ms.locfileid: "49329693"
