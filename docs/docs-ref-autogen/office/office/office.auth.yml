### YamlMime:TSType
name: Office.Auth
uid: office!Office.Auth:interface
package: office!
fullName: Office.Auth
summary: Espace de noms Office Auth, `Office.context.auth`<!-- -->fournit une méthode qui permet à l’application cliente Office d’obtenir un jeton d’accès à l’application web du module. Indirectement, ceci active également le complément pour accéder aux données de Microsoft Graph de l’utilisateur sans que l’utilisateur ne doive se connecter une deuxième fois.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
- name: getAccessToken(options)
  uid: office!Office.Auth#getAccessToken:member(1)
  package: office!
  fullName: getAccessToken(options)
  summary: Appelle le point de terminaison Azure Active Directory V 2.0 pour obtenir un jeton d’accès à l’application web de votre complément. Permet aux add-ins d’identifier les utilisateurs. Le code côté serveur peut utiliser ce jeton pour accéder à Microsoft Graph pour l’application web du add-in à l’aide du flux [OAuth «](https://docs.microsoft.com/azure/active-directory/develop/active-directory-v2-protocols-oauth-on-behalf-of) de la part de »<!-- -->. Cette API nécessite une configuration à authentification unique qui relie le complément à une application Azure. Les utilisateurs Office se connectent avec les comptes d’organisation et les comptes Microsoft. Microsoft Azure renvoie des jetons destinés aux deux types de comptes utilisateur afin d’accéder aux ressources dans Microsoft Graph.
  remarks: >-
    **Hôtes**: Excel, OneNote, Outlook, PowerPoint, Word


    **Important**: dans Outlook, cette API n’est pas prise en charge si le module est chargé dans une boîte aux lettres Outlook.com ou Gmail.


    **Ensemble de conditions requises** [: IdentityAPI](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/identity-api-requirement-sets)
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getAccessToken(options?: AuthOptions): Promise<string>;'
    parameters:
    - id: options
      description: Facultatif. Accepte un objet `AuthOptions` pour définir les comportements d' sign-on.
      type: <xref uid="office!Office.AuthOptions:interface" />
    return:
      type: Promise&lt;string&gt;
      description: Promise to the access token.
- name: getAccessTokenAsync(options, callback)
  uid: office!Office.Auth#getAccessTokenAsync:member(1)
  package: office!
  fullName: getAccessTokenAsync(options, callback)
  summary: >-
    Appelle le point de terminaison Azure Active Directory V 2.0 pour obtenir un jeton d’accès à l’application web de votre complément. Permet aux add-ins d’identifier les utilisateurs. Le code côté serveur peut utiliser ce jeton pour accéder à Microsoft Graph pour l’application web du add-in à l’aide du flux [OAuth «](https://docs.microsoft.com/azure/active-directory/develop/active-directory-v2-protocols-oauth-on-behalf-of) de la part de »<!-- -->.


    **Important**: dans Outlook, cette API n’est pas prise en charge si le module est chargé dans une boîte aux lettres Outlook.com ou Gmail.


    **Avertissement**: `getAccessTokenAsync` a été supprimé. À `Office.auth.getAccessToken` utiliser à la place.
  remarks: >-
    **Hôtes**: Excel, OneNote, Outlook, PowerPoint, Word


    **Ensemble de conditions requises** [: IdentityAPI](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/identity-api-requirement-sets)


    Cette API nécessite une configuration à authentification unique qui relie le complément à une application Azure. Les utilisateurs Office se connectent avec les comptes d’organisation et les comptes Microsoft. Microsoft Azure renvoie des jetons destinés aux deux types de comptes utilisateur afin d’accéder aux ressources dans Microsoft Graph.


    #### <a name="examples"></a>Exemples


    ```javascript

    Office.context.auth.getAccessTokenAsync(function(result) {
        if (result.status === "succeeded") {
            var token = result.value;
            // ...
        } else {
            console.log("Error obtaining token", result.error);
        }
    });

    ```
  isPreview: false
  isDeprecated: true
  customDeprecatedMessage: Use `Office.auth.getAccessToken` instead.
  syntax:
    content: 'getAccessTokenAsync(options?: AuthOptions, callback?: (result: AsyncResult<string>) => void): void;'
    parameters:
    - id: options
      description: Facultatif. Accepte un objet `AuthOptions` pour définir les comportements d' sign-on.
      type: <xref uid="office!Office.AuthOptions:interface" />
    - id: callback
      description: 'Facultatif. Accepte une méthode de rappel qui peut analyser le jeton pour l’ID de l’utilisateur ou utilisez le jeton dans le flux de « de la part de » pour accéder à Microsoft Graph. Si « a réussi », alors est le `AsyncResult.status` `AsyncResult.value` AAD v brut. 2.0: le jeton d’accès mis en forme.'
      type: '(result: <xref uid="office!Office.AsyncResult:interface" />&lt;string&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: getAccessTokenAsync(callback)
  uid: office!Office.Auth#getAccessTokenAsync:member(2)
  package: office!
  fullName: getAccessTokenAsync(callback)
  summary: >-
    Appelle le point de terminaison Azure Active Directory V 2.0 pour obtenir un jeton d’accès à l’application web de votre complément. Permet aux add-ins d’identifier les utilisateurs. Le code côté serveur peut utiliser ce jeton pour accéder à Microsoft Graph pour l’application web du add-in à l’aide du flux [OAuth «](https://docs.microsoft.com/azure/active-directory/develop/active-directory-v2-protocols-oauth-on-behalf-of) de la part de »<!-- -->.


    **Important**: dans Outlook, cette API n’est pas prise en charge si le module est chargé dans une boîte aux lettres Outlook.com ou Gmail.


    **Avertissement**: `getAccessTokenAsync` a été supprimé. À `Office.auth.getAccessToken` utiliser à la place.
  remarks: >-
    **Hôtes**: Excel, OneNote, Outlook, PowerPoint, Word


    **Ensemble de conditions requises** [: IdentityAPI](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/identity-api-requirement-sets)


    Cette API nécessite une configuration à authentification unique qui relie le complément à une application Azure. Les utilisateurs Office se connectent avec les comptes d’organisation et les comptes Microsoft. Microsoft Azure renvoie des jetons destinés aux deux types de comptes utilisateur afin d’accéder aux ressources dans Microsoft Graph.
  isPreview: false
  isDeprecated: true
  customDeprecatedMessage: Use `Office.auth.getAccessToken` instead.
  syntax:
    content: 'getAccessTokenAsync(callback?: (result: AsyncResult<string>) => void): void;'
    parameters:
    - id: callback
      description: 'Facultatif. Accepte une méthode de rappel qui peut analyser le jeton pour l’ID de l’utilisateur ou utilisez le jeton dans le flux de « de la part de » pour accéder à Microsoft Graph. Si « a réussi », alors est le `AsyncResult.status` `AsyncResult.value` AAD v brut. 2.0: le jeton d’accès mis en forme.'
      type: '(result: <xref uid="office!Office.AsyncResult:interface" />&lt;string&gt;) =&gt; void'
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: 061fdbf3ebc16abeabcda82deb61d890dd2aa251
  ms.sourcegitcommit: a8a86cfcaff5ad7dacc653d63502c76b1fedbebe
  ms.translationtype: MT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 03/26/2021
  ms.locfileid: "51320537"
