### YamlMime:TSType
name: Office.Settings
uid: office!Office.Settings:interface
package: office!
fullName: Office.Settings
summary: Représente des paramètres personnalisés pour un complément de contenu ou de volet des tâches qui sont stockés dans le document hôte comme paires nom/valeur.
remarks: >-
  **Hôtes**: Excel, PowerPoint, Word


  Les paramètres créés à l’aide des méthodes de l’objet Settings sont enregistrés par complément et par document. En d’autres termes, ils ne sont disponibles que pour le complément qui les a créés et uniquement dans le document où ils sont enregistrés.


  Le nom d’un paramètre est une chaîne, tandis que la valeur peut être une chaîne, un nombre, une valeur Boolean, NULL, un objet ou un tableau.


  L’objet Settings est chargé automatiquement dans le cadre de l’objet document et est disponible en appelant la propriété Settings de cet objet lorsque le complément est activé.


  Le développeur est responsable de l’appel de la méthode saveAsync après l’ajout ou la suppression de paramètres pour enregistrer les paramètres dans le document.
isPreview: false
isDeprecated: false
type: interface
methods:
- name: addHandlerAsync(eventType, handler, options, callback)
  uid: office!Office.Settings#addHandlerAsync:member(1)
  package: office!
  fullName: addHandlerAsync(eventType, handler, options, callback)
  summary: >-
    Ajoute un gestionnaire d’événements pour l’événement settingsChanged.


    **Important**: le code de votre complément peut inscrire un gestionnaire pour l’événement settingsChanged lorsque le complément est exécuté avec n’importe quel client Excel, mais l’événement se déclenche uniquement lorsque le complément est chargé avec une feuille de calcul ouverte dans Excel sur le Web et que plusieurs utilisateurs modifient la feuille de calcul (co-création). Par conséquent, l’événement settingsChanged est effectivement pris en charge uniquement dans Excel sur le Web dans les scénarios de cocréation.
  remarks: >-
    **Ensemble de conditions requises**: [pas dans un ensemble](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#methods-that-arent-part-of-a-requirement-set)


    Vous pouvez ajouter plusieurs gestionnaires d’événements pour le eventType spécifié à condition que le nom de chaque fonction de gestionnaire d’événements soit unique.
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'addHandlerAsync(eventType: Office.EventType, handler: any, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    parameters:
    - id: eventType
      description: Spécifie le type d’événement à ajouter. Obligatoire.
      type: <xref uid="office!Office.EventType:enum" />
    - id: handler
      description: Fonction du gestionnaire d’événements à ajouter, dont le seul paramètre est de type [Office. SettingsChangedEventArgs](xref:office!Office.SettingsChangedEventArgs:interface)<!-- -->. Obligatoire.
      type: any
    - id: options
      description: Fournit une option permettant de conserver les données de contexte de n’importe quel type, inchangées, pour une utilisation dans un rappel.
      type: <xref uid="office!Office.AsyncContextOptions:interface" />
    - id: callback
      description: >-
        Facultatif. Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office!Office.AsyncResult:interface)<!-- -->.


        <table> <tr> <th>Propriété</th> <th>Utiliser pour...</th> </tr> <tr> <td>AsyncResult.value</td> <td>Renvoie toujours undefined car il n’existe aucun objet ou aucune donnée à récupérer lors de l’ajout d’un gestionnaire d’événements.</td> </tr> <tr> <td>AsyncResult. Status</td> <td>Déterminer si l’opération a réussi ou échoué.</td> </tr> <tr> <td>AsyncResult.error</td> <td>Accéder à un objet Error fournissant des informations sur l’erreur en cas d’échec de l’opération.</td> </tr> <tr> <td>AsyncResult.asyncContext</td> <td>Élément de tout type défini par l’utilisateur qui est renvoyé dans l’objet AsyncResult sans être modifié.</td> </tr> </table>
      type: '(result: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: addHandlerAsync(eventType, handler, callback)
  uid: office!Office.Settings#addHandlerAsync:member(2)
  package: office!
  fullName: addHandlerAsync(eventType, handler, callback)
  summary: >-
    Ajoute un gestionnaire d’événements pour l’événement settingsChanged.


    **Important**: le code de votre complément peut inscrire un gestionnaire pour l’événement settingsChanged lorsque le complément est exécuté avec n’importe quel client Excel, mais l’événement se déclenche uniquement lorsque le complément est chargé avec une feuille de calcul ouverte dans Excel sur le Web et que plusieurs utilisateurs modifient la feuille de calcul (co-création). Par conséquent, l’événement settingsChanged est effectivement pris en charge uniquement dans Excel sur le Web dans les scénarios de cocréation.
  remarks: "**Ensemble de conditions requises**: [pas dans un ensemble](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#methods-that-arent-part-of-a-requirement-set)\n\nVous pouvez ajouter plusieurs gestionnaires d’événements pour le eventType spécifié à condition que le nom de chaque fonction de gestionnaire d’événements soit unique.\n\n#### <a name=\"examples\"></a>範例\n\n```javascript\nfunction addSelectionChangedEventHandler() {\n    Office.context.document.settings.addHandlerAsync(Office.EventType.SettingsChanged, MyHandler);\n}\n\nfunction MyHandler(eventArgs) {\n    write('Event raised: ' + eventArgs.type);\n    doSomethingWithSettings(eventArgs.settings);\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'addHandlerAsync(eventType: Office.EventType, handler: any, callback?: (result: AsyncResult<void>) => void): void;'
    parameters:
    - id: eventType
      description: Spécifie le type d’événement à ajouter. Obligatoire.
      type: <xref uid="office!Office.EventType:enum" />
    - id: handler
      description: Fonction du gestionnaire d’événements à ajouter, dont le seul paramètre est de type [Office. SettingsChangedEventArgs](xref:office!Office.SettingsChangedEventArgs:interface)<!-- -->. Obligatoire.
      type: any
    - id: callback
      description: >-
        Facultatif. Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office!Office.AsyncResult:interface)<!-- -->.


        <table> <tr> <th>Propriété</th> <th>Utiliser pour...</th> </tr> <tr> <td>AsyncResult.value</td> <td>Renvoie toujours undefined car il n’existe aucun objet ou aucune donnée à récupérer lors de l’ajout d’un gestionnaire d’événements.</td> </tr> <tr> <td>AsyncResult. Status</td> <td>Déterminer si l’opération a réussi ou échoué.</td> </tr> <tr> <td>AsyncResult.error</td> <td>Accéder à un objet Error fournissant des informations sur l’erreur en cas d’échec de l’opération.</td> </tr> <tr> <td>AsyncResult.asyncContext</td> <td>Élément de tout type défini par l’utilisateur qui est renvoyé dans l’objet AsyncResult sans être modifié.</td> </tr> </table>
      type: '(result: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: get(name)
  uid: office!Office.Settings#get:member(1)
  package: office!
  fullName: get(name)
  summary: Récupère le paramètre spécifié.
  remarks: "**Ensemble de conditions requises**: [paramètres](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#settings)\n\n#### <a name=\"examples\"></a>範例\n\n```javascript\nfunction displayMySetting() {\n    write('Current value for mySetting: ' + Office.context.document.settings.get('mySetting'));\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'get(name: string): any;'
    parameters:
    - id: name
      description: ''
      type: string
    return:
      type: any
      description: Objet dont les noms de propriété sont mappés à des valeurs sérialisées JSON.
- name: refreshAsync(callback)
  uid: office!Office.Settings#refreshAsync:member(1)
  package: office!
  fullName: refreshAsync(callback)
  summary: Lit tous les paramètres persistants dans le document et actualise la copie de ces paramètres en mémoire pour le complément de contenu ou du volet Office.
  remarks: "**Ensemble de conditions requises**: [pas dans un ensemble](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#methods-that-arent-part-of-a-requirement-set)\n\nCette méthode est utile dans les scénarios de co-création Excel, Word et PowerPoint lorsque plusieurs instances du même complément travaillent sur le même document. Étant donné que chaque complément utilise une copie en mémoire des paramètres chargés à partir du document au moment de l’ouverture par l’utilisateur, les valeurs de paramètres utilisées par chaque utilisateur ne sont pas synchronisées. Cela peut se produire chaque fois qu’une instance du complément appelle la méthode Settings. saveAsync pour conserver tous les paramètres de cet utilisateur dans le document. L’appel de la méthode refreshAsync à partir du gestionnaire d’événements pour l’événement settingsChanged du complément actualise les valeurs des paramètres pour tous les utilisateurs.\n\nDans la fonction de rappel passée à la méthode refreshAsync, vous pouvez utiliser les propriétés de l’objet AsyncResult pour renvoyer les informations suivantes.\n\n<table> <tr> <th>Propriété</th> <th>Utiliser pour...</th> </tr> <tr> <td>AsyncResult.value</td> <td>Accéder à un objet Settings avec les valeurs actualisées.</td> </tr> <tr> <td>AsyncResult. Status</td> <td>Déterminer si l’opération a réussi ou échoué.</td> </tr> <tr> <td>AsyncResult.error</td> <td>Accéder à un objet Error fournissant des informations sur l’erreur en cas d’échec de l’opération.</td> </tr> <tr> <td>AsyncResult.asyncContext</td> <td>Élément de tout type défini par l’utilisateur qui est renvoyé dans l’objet AsyncResult sans être modifié.</td> </tr> </table>\n\n#### <a name=\"examples\"></a>範例\n\n```javascript\nfunction refreshSettings() {\n    Office.context.document.settings.refreshAsync(function (asyncResult) {\n        write('Settings refreshed with status: ' + asyncResult.status);\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'refreshAsync(callback?: (result: AsyncResult<Office.Settings>) => void): void;'
    parameters:
    - id: callback
      description: Facultatif. Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office!Office.AsyncResult:interface)<!-- -->. La `value` propriété du résultat est un objet [Office. Settings](xref:office!Office.Settings:interface) avec les valeurs actualisées.
      type: '(result: <xref uid="office!Office.AsyncResult:interface" />&lt;<xref uid="office!Office.Settings:interface" />&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: remove(name)
  uid: office!Office.Settings#remove:member(1)
  package: office!
  fullName: remove(name)
  summary: >-
    Supprime le paramètre spécifié.


    **Important**: n’oubliez pas que la méthode Settings. Remove n’affecte que la copie en mémoire du conteneur de propriétés de paramètres. To persist the removal of the specified setting in the document, at some point after calling the Settings.remove method and before the add-in is closed, you must call the Settings.saveAsync method.
  remarks: >-
    **Ensemble de conditions requises**: [paramètres](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#settings)


    null est une valeur valide pour un paramètre. Ainsi, l’affectation de la valeur null au paramètre n’entraînera pas sa suppression du conteneur des propriétés des paramètres.


    #### <a name="examples"></a>範例


    ```javascript

    function removeMySetting() {
        Office.context.document.settings.remove('mySetting');
    }

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'remove(name: string): void;'
    parameters:
    - id: name
      description: ''
      type: string
    return:
      type: void
      description: ''
- name: removeHandlerAsync(eventType, options, callback)
  uid: office!Office.Settings#removeHandlerAsync:member(1)
  package: office!
  fullName: removeHandlerAsync(eventType, options, callback)
  summary: Supprime un gestionnaire d’événements pour l’événement settingsChanged.
  remarks: >-
    **Ensemble de conditions requises**: [pas dans un ensemble](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#methods-that-arent-part-of-a-requirement-set)


    Si le paramètre facultatif Handler est omis lors de l’appel de la méthode removeHandlerAsync, tous les gestionnaires d’événements pour le paramètre eventType spécifié sont supprimés.


    Lorsque la fonction que vous avez transmise au paramètre callback s’exécute, elle reçoit un objet AsyncResult accessible à partir du seul paramètre de la fonction de rappel.


    Dans la fonction de rappel transmise à la méthode removeHandlerAsync, vous pouvez utiliser les propriétés de l’objet AsyncResult pour renvoyer les informations suivantes.
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'removeHandlerAsync(eventType: Office.EventType, options?: RemoveHandlerOptions, callback?: (result: AsyncResult<void>) => void): void;'
    parameters:
    - id: eventType
      description: Spécifie le type d’événement à supprimer. Obligatoire.
      type: <xref uid="office!Office.EventType:enum" />
    - id: options
      description: Fournit des options permettant de déterminer le gestionnaire d’événements ou les gestionnaires supprimés.
      type: <xref uid="office!Office.RemoveHandlerOptions:interface" />
    - id: callback
      description: Facultatif. Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office!Office.AsyncResult:interface)<!-- -->.
      type: '(result: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: removeHandlerAsync(eventType, callback)
  uid: office!Office.Settings#removeHandlerAsync:member(2)
  package: office!
  fullName: removeHandlerAsync(eventType, callback)
  summary: Supprime un gestionnaire d’événements pour l’événement settingsChanged.
  remarks: "**Ensemble de conditions requises**: [pas dans un ensemble](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#methods-that-arent-part-of-a-requirement-set)\n\nSi le paramètre facultatif Handler est omis lors de l’appel de la méthode removeHandlerAsync, tous les gestionnaires d’événements pour le paramètre eventType spécifié sont supprimés.\n\nLorsque la fonction que vous avez transmise au paramètre callback s’exécute, elle reçoit un objet AsyncResult accessible à partir du seul paramètre de la fonction de rappel.\n\nDans la fonction de rappel transmise à la méthode removeHandlerAsync, vous pouvez utiliser les propriétés de l’objet AsyncResult pour renvoyer les informations suivantes.\n\n#### <a name=\"examples\"></a>範例\n\n```javascript\nfunction removeSettingsChangedEventHandler() {\n    Office.context.document.settings.removeHandlerAsync(Office.EventType.SettingsChanged, MyHandler);\n}\n\nfunction MyHandler(eventArgs) {\n    write('Event raised: ' + eventArgs.type);\n    doSomethingWithSettings(eventArgs.settings);\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'removeHandlerAsync(eventType: Office.EventType, callback?: (result: AsyncResult<void>) => void): void;'
    parameters:
    - id: eventType
      description: Spécifie le type d’événement à supprimer. Obligatoire.
      type: <xref uid="office!Office.EventType:enum" />
    - id: callback
      description: Facultatif. Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office!Office.AsyncResult:interface)<!-- -->.
      type: '(result: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: saveAsync(options, callback)
  uid: office!Office.Settings#saveAsync:member(1)
  package: office!
  fullName: saveAsync(options, callback)
  summary: Fait persister la copie en mémoire du conteneur de propriétés des paramètres dans le document.
  remarks: >-
    **Ensemble de conditions requises**: [paramètres](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#settings)


    Tout paramètre précédemment enregistré par un complément est chargé lors de son initialisation ; ainsi, pendant la durée de vie de la session, vous pouvez simplement utiliser les méthodes Set et Get pour utiliser la copie en mémoire du conteneur de propriétés des paramètres. Lorsque vous souhaitez conserver les paramètres afin qu’ils soient disponibles la prochaine fois que le complément est utilisé, utilisez la méthode saveAsync.


    **Remarque**: la méthode saveAsync conserve le conteneur des propriétés des paramètres en mémoire dans le fichier de document. Toutefois, les modifications apportées au fichier de document lui-même ne sont enregistrées que lorsque l’utilisateur (ou le paramètre de récupération automatique) enregistre le document dans le système de fichiers. La méthode refreshAsync est utile uniquement dans les scénarios de cocréation lorsque d’autres instances du même complément peuvent modifier les paramètres et que ces modifications doivent être mises à la disposition de toutes les instances.


    <table> <tr> <th>Propriété</th> <th>Utiliser pour...</th> </tr> <tr> <td>AsyncResult.value</td> <td>Toujours renvoyer undefined car il n’existe aucun objet ou aucune donnée à récupérer.</td> </tr> <tr> <td>AsyncResult. Status</td> <td>Déterminer si l’opération a réussi ou échoué.</td> </tr> <tr> <td>AsyncResult.error</td> <td>Accéder à un objet Error fournissant des informations sur l’erreur en cas d’échec de l’opération.</td> </tr> <tr> <td>AsyncResult.asyncContext</td> <td>Élément de tout type défini par l’utilisateur qui est renvoyé dans l’objet AsyncResult sans être modifié.</td> </tr> </table>
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'saveAsync(options?: SaveSettingsOptions, callback?: (result: AsyncResult<void>) => void): void;'
    parameters:
    - id: options
      description: Fournit des options pour l’enregistrement des paramètres.
      type: <xref uid="office!Office.SaveSettingsOptions:interface" />
    - id: callback
      description: Facultatif. Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office!Office.AsyncResult:interface)<!-- -->.
      type: '(result: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: saveAsync(callback)
  uid: office!Office.Settings#saveAsync:member(2)
  package: office!
  fullName: saveAsync(callback)
  summary: Fait persister la copie en mémoire du conteneur de propriétés des paramètres dans le document.
  remarks: "**Ensemble de conditions requises**: [paramètres](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#settings)\n\nTout paramètre précédemment enregistré par un complément est chargé lors de son initialisation ; ainsi, pendant la durée de vie de la session, vous pouvez simplement utiliser les méthodes Set et Get pour utiliser la copie en mémoire du conteneur de propriétés des paramètres. Lorsque vous souhaitez conserver les paramètres afin qu’ils soient disponibles la prochaine fois que le complément est utilisé, utilisez la méthode saveAsync.\n\n**Remarque**: la méthode saveAsync conserve le conteneur des propriétés des paramètres en mémoire dans le fichier de document. Toutefois, les modifications apportées au fichier de document lui-même ne sont enregistrées que lorsque l’utilisateur (ou le paramètre de récupération automatique) enregistre le document dans le système de fichiers. La méthode refreshAsync est utile uniquement dans les scénarios de cocréation lorsque d’autres instances du même complément peuvent modifier les paramètres et que ces modifications doivent être mises à la disposition de toutes les instances.\n\n<table> <tr> <th>Propriété</th> <th>Utiliser pour...</th> </tr> <tr> <td>AsyncResult.value</td> <td>Toujours renvoyer undefined car il n’existe aucun objet ou aucune donnée à récupérer.</td> </tr> <tr> <td>AsyncResult. Status</td> <td>Déterminer si l’opération a réussi ou échoué.</td> </tr> <tr> <td>AsyncResult.error</td> <td>Accéder à un objet Error fournissant des informations sur l’erreur en cas d’échec de l’opération.</td> </tr> <tr> <td>AsyncResult.asyncContext</td> <td>Élément de tout type défini par l’utilisateur qui est renvoyé dans l’objet AsyncResult sans être modifié.</td> </tr> </table>\n\n#### <a name=\"examples\"></a>範例\n\n```javascript\nfunction persistSettings() {\n    Office.context.document.settings.saveAsync(function (asyncResult) {\n        write('Settings saved with status: ' + asyncResult.status);\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'saveAsync(callback?: (result: AsyncResult<void>) => void): void;'
    parameters:
    - id: callback
      description: Facultatif. Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office!Office.AsyncResult:interface)<!-- -->.
      type: '(result: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: set(name, value)
  uid: office!Office.Settings#set:member(1)
  package: office!
  fullName: set(name, value)
  summary: >-
    Définit ou crée le paramètre spécifié.


    **Important**: n’oubliez pas que la méthode Settings. Set n’affecte que la copie en mémoire du conteneur de propriétés de paramètres. To make sure that additions or changes to settings will be available to your add-in the next time the document is opened, at some point after calling the Settings.set method and before the add-in is closed, you must call the Settings.saveAsync method to persist settings in the document.
  remarks: >-
    **Ensemble de conditions requises**: [paramètres](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#settings)


    La méthode Set crée un nouveau paramètre du nom spécifié s’il n’existe pas déjà, ou définit un paramètre existant du nom spécifié dans la copie en mémoire du conteneur de propriétés des paramètres. Une fois que vous avez appelé la méthode Settings. saveAsync, la valeur est stockée dans le document en tant que représentation JSON sérialisée de son type de données.


    #### <a name="examples"></a>範例


    ```javascript

    function setMySetting() {
        Office.context.document.settings.set('mySetting', 'mySetting value');
    }

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(name: string, value: any): void;'
    parameters:
    - id: name
      description: ''
      type: string
    - id: value
      description: Spécifie la valeur à stocker.
      type: any
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: 82b6e37b0e22462670d0f209c2a1f4a81fabe5ad
  ms.sourcegitcommit: 3bab97ab3b91da7cca497f6fc895408a76bd8b46
  ms.translationtype: MT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 11/18/2020
  ms.locfileid: "49265863"
