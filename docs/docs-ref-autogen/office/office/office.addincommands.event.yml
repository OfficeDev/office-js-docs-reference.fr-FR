### YamlMime:UniversalReference
items:
  - uid: office.Office.AddinCommands.Event
    summary: <span data-ttu-id="1571e-101">L’objet Event est transmis en tant que paramètre aux fonctions de complément appelées par les boutons de commande sans interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="1571e-101">The event object is passed as a parameter to add-in functions invoked by UI-less command buttons.</span></span> <span data-ttu-id="1571e-102">Cet objet permet au complément d’identifier le bouton sur lequel l’utilisateur a cliqué et d’informer l’hôte que son traitement est terminé.</span><span class="sxs-lookup"><span data-stu-id="1571e-102">The object allows the add-in to identify which button was clicked and to signal the host that it has completed its processing.</span></span>
    remarks: |-
      <span data-ttu-id="1571e-103">Pour plus d’informations sur la prise en charge, consultez la rubrique [conditions requises](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/add-in-commands-requirement-sets) pour les commandes de complément.</span><span class="sxs-lookup"><span data-stu-id="1571e-103">See [Add-in commands requirement sets](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/add-in-commands-requirement-sets) for more support information.</span></span>

      <span data-ttu-id="1571e-104">**<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: restreint</span><span class="sxs-lookup"><span data-stu-id="1571e-104">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: Restricted</span></span>

      <span data-ttu-id="1571e-105">**<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition ou lecture</span><span class="sxs-lookup"><span data-stu-id="1571e-105">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose or Read</span></span>
    name: Office.AddinCommands.Event
    fullName: Office.AddinCommands.Event
    langs:
      - typeScript
    type: interface
    package: office
    children:
      - office.Office.AddinCommands.Event.completed
      - office.Office.AddinCommands.Event.source
  - uid: office.Office.AddinCommands.Event.completed
    summary: |-
      <span data-ttu-id="1571e-106">Indique que le complément a terminé le traitement et qu’il est automatiquement fermé.</span><span class="sxs-lookup"><span data-stu-id="1571e-106">Indicates that the add-in has completed processing and will automatically be closed.</span></span>

      <span data-ttu-id="1571e-107">Cette méthode doit être appelée à la fin d’une fonction appelée par le code suivant.</span><span class="sxs-lookup"><span data-stu-id="1571e-107">This method must be called at the end of a function which was invoked by the following.</span></span>

      - <span data-ttu-id="1571e-108">Un bouton sans interface utilisateur (c.-à-d., une commande de complément définie avec un élément action dans lequel l’attribut xsi: type est défini sur ExecuteFunction)</span><span class="sxs-lookup"><span data-stu-id="1571e-108">A UI-less button (i.e., an add-in command defined with an Action element where the xsi:type attribute is set to ExecuteFunction)</span></span>

      - <span data-ttu-id="1571e-109">Un [événement](https://docs.microsoft.com/office/dev/add-ins/reference/manifest/event) défini dans le [point d’extension des événements](https://docs.microsoft.com/office/dev/add-ins/reference/manifest/extensionpoint#events)</span><span class="sxs-lookup"><span data-stu-id="1571e-109">An [event](https://docs.microsoft.com/office/dev/add-ins/reference/manifest/event) defined in the [Events extension point](https://docs.microsoft.com/office/dev/add-ins/reference/manifest/extensionpoint#events)</span></span><!-- --><span data-ttu-id="1571e-110">, par exemple, un `ItemSend` événement</span><span class="sxs-lookup"><span data-stu-id="1571e-110">, e.g., an `ItemSend` event</span></span>

      <span data-ttu-id="1571e-111">\[[Ensemble d’API: boîte aux lettres 1,3](/office/dev/add-ins/reference/javascript-api-for-office)\]</span><span class="sxs-lookup"><span data-stu-id="1571e-111">\[ [API set: Mailbox 1.3](/office/dev/add-ins/reference/javascript-api-for-office) \]</span></span>
    remarks: |-
      <span data-ttu-id="1571e-112">**<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: restreint</span><span class="sxs-lookup"><span data-stu-id="1571e-112">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: Restricted</span></span>

      <span data-ttu-id="1571e-113">**<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composition ou lecture</span><span class="sxs-lookup"><span data-stu-id="1571e-113">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose or Read</span></span>

      <span data-ttu-id="1571e-114">La boîte aux lettres 1,3 ne `options` possède pas le paramètre alors que l’aperçu `options` de la boîte aux lettres ne prend pas en charge le paramètre.</span><span class="sxs-lookup"><span data-stu-id="1571e-114">Mailbox 1.3 does not have the `options` parameter while Mailbox Preview does have support for `options` parameter.</span></span>

      #### <a name="examples"></a><span data-ttu-id="1571e-115">Exemples</span><span class="sxs-lookup"><span data-stu-id="1571e-115">Examples</span></span>

      ```javascript
      // For the following example, the processItem function is
      // defined in the FunctionFile referenced from the add-in manifest,
      // and maps to the FunctionName of the action in the associated button control.
      function processItem(event) {
          // Do some processing

          event.completed();
      }
      ```
      ```javascript
      // For the following example, the checkMessage function was
      // registered as an event handler for ItemSend.
      function checkMessage(event) {
          // Get the item being sent.
          var outgoingMsg = Office.context.mailbox.item;

          // Check if subject contains "BLOCK".
          outgoingMsg.subject.getAsync(function (result) {
              // Subject is in `result.value`.
              // If search term "BLOCK" is found, don't send message.
              const notFound = -1;
              var allowEvent = (result.value.indexOf('BLOCK') === notFound);
              event.completed({allowEvent: allowEvent});
          });
      }
      ```
    name: completed(options)
    fullName: completed(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'completed(options?: EventCompletedOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="1571e-116">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="1571e-116">Optional.</span></span> <span data-ttu-id="1571e-117">Un objet qui spécifie les options de comportement pour le moment où l’événement est terminé.</span><span class="sxs-lookup"><span data-stu-id="1571e-117">An object that specifies behavior options for when the event is completed.</span></span>
          type:
            - office.Office.AddinCommands.EventCompletedOptions
  - uid: office.Office.AddinCommands.Event.source
    summary: <span data-ttu-id="1571e-118">Informations sur le contrôle qui a déclenché l’appel de cette fonction.</span><span class="sxs-lookup"><span data-stu-id="1571e-118">Information about the control that triggered calling this function.</span></span>
    remarks: |-
      <span data-ttu-id="1571e-119">Cette propriété est uniquement prise en charge dans Outlook dans la boîte aux lettres de l' [ensemble de conditions requises](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) 1,3 et versions ultérieures.</span><span class="sxs-lookup"><span data-stu-id="1571e-119">This property is only supported in Outlook in [requirement set](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) Mailbox 1.3 and later.</span></span>

      #### <a name="examples"></a><span data-ttu-id="1571e-120">範例</span><span class="sxs-lookup"><span data-stu-id="1571e-120">Examples</span></span>

      ```javascript
      // In this example, consider a button defined in an add-in manifest as follows:
      //<Control xsi:type="Button" id="eventTestButton">
      //    <Label resid="eventButtonLabel" />
      //    <Tooltip resid="eventButtonTooltip" />
      //    <Supertip>
      //        <Title resid="eventSuperTipTitle" />
      //        <Description resid="eventSuperTipDescription" />
      //    </Supertip>
      //    <Icon>
      //        <bt:Image size="16" resid="blue-icon-16" />
      //        <bt:Image size="32" resid="blue-icon-32" />
      //        <bt:Image size="80" resid="blue-icon-80" />
      //    </Icon>
      //    <Action xsi:type="ExecuteFunction">
      //        <FunctionName>testEventObject</FunctionName>
      //    </Action>
      //</Control>

      // The button has an id attribute set to eventTestButton, and will invoke
      // the testEventObject function defined in the add-in.
      // That function looks like this:
      function testEventObject(event) {
          // The event object implements the Event interface.

          // This value will be "eventTestButton".
          var buttonId = event.source.id;

          // Signal to the host app that processing is complete.
          event.completed();
      }
      ```
      ```javascript
      // Function is used by two buttons:
      // button1 and button2
      function multiButton (event) {
          // Check which button was clicked.
          var buttonId = event.source.id;

          if (buttonId === 'button1') {
              doButton1Action();
          } else {
              doButton2Action();
          }

          event.completed();
      }
      ```
    name: source
    fullName: source
    langs:
      - typeScript
    type: property
    syntax:
      content: 'source:Source;'
      return:
        type:
          - office.Office.AddinCommands.Source