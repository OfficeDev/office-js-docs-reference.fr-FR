### YamlMime:UniversalReference
items:
  - uid: 'office!Office.CustomXmlNode:interface'
    summary: <span data-ttu-id="582da-101">Représente un nœud XML dans une arborescence au sein d’un document.</span><span class="sxs-lookup"><span data-stu-id="582da-101">Represents an XML node in a tree in a document.</span></span>
    remarks: '<span data-ttu-id="582da-102">**Hôtes**: Word</span><span class="sxs-lookup"><span data-stu-id="582da-102">**Hosts**: Word</span></span>'
    name: Office.CustomXmlNode
    fullName: Office.CustomXmlNode
    langs:
      - typeScript
    type: interface
    package: office!
    children:
      - 'office!Office.CustomXmlNode#baseName:member'
      - 'office!Office.CustomXmlNode#getNodesAsync:member(1)'
      - 'office!Office.CustomXmlNode#getNodesAsync:member(2)'
      - 'office!Office.CustomXmlNode#getNodeValueAsync:member(1)'
      - 'office!Office.CustomXmlNode#getNodeValueAsync:member(2)'
      - 'office!Office.CustomXmlNode#getTextAsync:member(1)'
      - 'office!Office.CustomXmlNode#getTextAsync:member(2)'
      - 'office!Office.CustomXmlNode#getXmlAsync:member(1)'
      - 'office!Office.CustomXmlNode#getXmlAsync:member(2)'
      - 'office!Office.CustomXmlNode#namespaceUri:member'
      - 'office!Office.CustomXmlNode#nodeType:member'
      - 'office!Office.CustomXmlNode#setNodeValueAsync:member(1)'
      - 'office!Office.CustomXmlNode#setNodeValueAsync:member(2)'
      - 'office!Office.CustomXmlNode#setTextAsync:member(1)'
      - 'office!Office.CustomXmlNode#setTextAsync:member(2)'
      - 'office!Office.CustomXmlNode#setXmlAsync:member(1)'
      - 'office!Office.CustomXmlNode#setXmlAsync:member(2)'
  - uid: 'office!Office.CustomXmlNode#baseName:member'
    summary: '<span data-ttu-id="582da-103">Obtient le nom de base du nœud sans le préfixe d’espace de noms, s’il en existe un.</span><span class="sxs-lookup"><span data-stu-id="582da-103">Gets the base name of the node without the namespace prefix, if one exists.</span></span>'
    name: baseName
    fullName: baseName
    langs:
      - typeScript
    type: property
    syntax:
      content: 'baseName: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="582da-104">Exemples</span><span class="sxs-lookup"><span data-stu-id="582da-104">Examples</span></span>

          ```javascript
          function showXmlNodeBaseNames() {
              Office.context.document.customXmlParts.getByIdAsync(
                  "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
                  var xmlPart = result.value;
                  xmlPart.getNodesAsync('*/*', function (nodeResults) {
                      for (i = 0; i < nodeResults.value.length; i++) {
                          var node = nodeResults.value[i];
                          write(node.baseName);
                      }
                  });
              });
          }
          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```
  - uid: 'office!Office.CustomXmlNode#getNodesAsync:member(1)'
    summary: <span data-ttu-id="582da-105">Obtient les nœuds associés à l’expression XPath.</span><span class="sxs-lookup"><span data-stu-id="582da-105">Gets the nodes associated with the XPath expression.</span></span>
    remarks: '<span data-ttu-id="582da-106">**Ensemble de conditions requises**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="582da-106">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: 'getNodesAsync(xPath, options, callback)'
    fullName: 'getNodesAsync(xPath, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNodesAsync(xPath: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<CustomXmlNode[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: xPath
          description: <span data-ttu-id="582da-107">Expression XPath qui spécifie les nœuds à obtenir.</span><span class="sxs-lookup"><span data-stu-id="582da-107">The XPath expression that specifies the nodes to get.</span></span> <span data-ttu-id="582da-108">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="582da-108">Required.</span></span>
          type:
            - string
        - id: options
          description: '<span data-ttu-id="582da-109">Fournit une option permettant de conserver les données de contexte de n’importe quel type, inchangées, pour une utilisation dans un rappel.</span><span class="sxs-lookup"><span data-stu-id="582da-109">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: '<span data-ttu-id="582da-110">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="582da-110">Optional.</span></span> <span data-ttu-id="582da-111">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office!Office.AsyncResult:interface)</span><span class="sxs-lookup"><span data-stu-id="582da-111">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="582da-112">.</span><span class="sxs-lookup"><span data-stu-id="582da-112"></span></span> <span data-ttu-id="582da-113">La `value` propriété du résultat est un tableau d’objets CustomXmlNode qui représentent les nœuds spécifiés par l’expression XPath transmise `xPath` au paramètre.</span><span class="sxs-lookup"><span data-stu-id="582da-113">The `value` property of the result is an array of CustomXmlNode objects that represent the nodes specified by the XPath expression passed to the `xPath` parameter.</span></span>'
          type:
            - 'office!Office.CustomXmlNode#getNodesAsync~0:complex'
  - uid: 'office!Office.CustomXmlNode#getNodesAsync:member(2)'
    summary: <span data-ttu-id="582da-114">Obtient les nœuds associés à l’expression XPath.</span><span class="sxs-lookup"><span data-stu-id="582da-114">Gets the nodes associated with the XPath expression.</span></span>
    remarks: |-
      <span data-ttu-id="582da-115">**Ensemble de conditions requises**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="582da-115">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="582da-116">Exemples</span><span class="sxs-lookup"><span data-stu-id="582da-116">Examples</span></span>

      ```javascript
      function showXmlChildNodes() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.getNodesAsync('*', function (nodeResults) {
                  for (i = 0; i < nodeResults.value.length; i++) {
                      var node = nodeResults.value[i];
                      node.getNodesAsync('*', function (nodeResults) {
                          write(nodeResults.value.length + " childNodes");
                      });
                  }
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: 'getNodesAsync(xPath, callback)'
    fullName: 'getNodesAsync(xPath, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNodesAsync(xPath: string, callback?: (result: AsyncResult<CustomXmlNode[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: xPath
          description: <span data-ttu-id="582da-117">Expression XPath qui spécifie les nœuds à obtenir.</span><span class="sxs-lookup"><span data-stu-id="582da-117">The XPath expression that specifies the nodes to get.</span></span> <span data-ttu-id="582da-118">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="582da-118">Required.</span></span>
          type:
            - string
        - id: callback
          description: '<span data-ttu-id="582da-119">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="582da-119">Optional.</span></span> <span data-ttu-id="582da-120">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office!Office.AsyncResult:interface)</span><span class="sxs-lookup"><span data-stu-id="582da-120">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="582da-121">.</span><span class="sxs-lookup"><span data-stu-id="582da-121"></span></span> <span data-ttu-id="582da-122">La `value` propriété du résultat est un tableau d’objets CustomXmlNode qui représentent les nœuds spécifiés par l’expression XPath transmise `xPath` au paramètre.</span><span class="sxs-lookup"><span data-stu-id="582da-122">The `value` property of the result is an array of CustomXmlNode objects that represent the nodes specified by the XPath expression passed to the `xPath` parameter.</span></span>'
          type:
            - 'office!Office.CustomXmlNode#getNodesAsync~1:complex'
  - uid: 'office!Office.CustomXmlNode#getNodeValueAsync:member(1)'
    summary: <span data-ttu-id="582da-123">Obtient la valeur du nœud.</span><span class="sxs-lookup"><span data-stu-id="582da-123">Gets the node value.</span></span>
    remarks: '<span data-ttu-id="582da-124">**Ensemble de conditions requises**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="582da-124">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: 'getNodeValueAsync(options, callback)'
    fullName: 'getNodeValueAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNodeValueAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="582da-125">Fournit une option permettant de conserver les données de contexte de n’importe quel type, inchangées, pour une utilisation dans un rappel.</span><span class="sxs-lookup"><span data-stu-id="582da-125">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: '<span data-ttu-id="582da-126">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="582da-126">Optional.</span></span> <span data-ttu-id="582da-127">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office!Office.AsyncResult:interface)</span><span class="sxs-lookup"><span data-stu-id="582da-127">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="582da-128">.</span><span class="sxs-lookup"><span data-stu-id="582da-128"></span></span> <span data-ttu-id="582da-129">La `value` propriété du résultat est une chaîne qui contient la valeur du nœud référencé.</span><span class="sxs-lookup"><span data-stu-id="582da-129">The `value` property of the result is a string that contains the value of the referenced node.</span></span>'
          type:
            - 'office!Office.CustomXmlNode#getNodeValueAsync~0:complex'
  - uid: 'office!Office.CustomXmlNode#getNodeValueAsync:member(2)'
    summary: <span data-ttu-id="582da-130">Obtient la valeur du nœud.</span><span class="sxs-lookup"><span data-stu-id="582da-130">Gets the node value.</span></span>
    remarks: |-
      <span data-ttu-id="582da-131">**Ensemble de conditions requises**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="582da-131">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="582da-132">Exemples</span><span class="sxs-lookup"><span data-stu-id="582da-132">Examples</span></span>

      ```javascript
      function showXmlNodeValues() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.getNodesAsync('*/*', function (nodeResults) {
                  for (i = 0; i < nodeResults.value.length; i++) {
                      var node = nodeResults.value[i];
                      node.getNodeValueAsync(function (asyncResult) {
                          write(asyncResult.value);
                      });
                  }
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: getNodeValueAsync(callback)
    fullName: getNodeValueAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNodeValueAsync(callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="582da-133">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="582da-133">Optional.</span></span> <span data-ttu-id="582da-134">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office!Office.AsyncResult:interface)</span><span class="sxs-lookup"><span data-stu-id="582da-134">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="582da-135">.</span><span class="sxs-lookup"><span data-stu-id="582da-135"></span></span> <span data-ttu-id="582da-136">La `value` propriété du résultat est une chaîne qui contient la valeur du nœud référencé.</span><span class="sxs-lookup"><span data-stu-id="582da-136">The `value` property of the result is a string that contains the value of the referenced node.</span></span>'
          type:
            - 'office!Office.CustomXmlNode#getNodeValueAsync~1:complex'
  - uid: 'office!Office.CustomXmlNode#getTextAsync:member(1)'
    summary: <span data-ttu-id="582da-137">Obtient le texte d’un nœud XML dans une partie XML personnalisée.</span><span class="sxs-lookup"><span data-stu-id="582da-137">Gets the text of an XML node in a custom XML part.</span></span>
    remarks: |-
      <span data-ttu-id="582da-138">**Ensemble de conditions requises**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="582da-138">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="582da-139">Exemples</span><span class="sxs-lookup"><span data-stu-id="582da-139">Examples</span></span>

      ```javascript
      // Get the built-in core properties XML part by using its ID. This results in a call to Word.
      Office.context.document.customXmlParts.getByIdAsync(
          "{6C3C8BC8-F283-45AE-878A-BAB7291924A1}", function (getByIdAsyncResult) {
          
          // Access the XML part.
          var xmlPart = getByIdAsyncResult.value;
          
          // Add namespaces to the namespace manager. These two calls result in two calls to Word.
          xmlPart.namespaceManager.addNamespaceAsync(
              'cp',
              'http://schemas.openxmlformats.org/package/2006/metadata/core-properties',
              function () {
              xmlPart.namespaceManager.addNamespaceAsync(
                  'dc', 
                  'http://purl.org/dc/elements/1.1/', 
                  function () {

                  // Get XML nodes by using an Xpath expression. This results in a call to Word.
                  xmlPart.getNodesAsync("/cp:coreProperties/dc:title", function (getNodesAsyncResult) {
                      
                      // Get the first node returned by using the Xpath expression. 
                      var node = getNodesAsyncResult.value[0];
                      
                      // Get the text value of the node and use the asyncContext. This results in a call to Word. 
                      // The results are logged to the browser console.
                      node.getTextAsync({asyncContext: "StateNormal"}, function (getTextAsyncResult) {
                        console.log("Text of the title element = " + getTextAsyncResult.value;
                        console.log("The asyncContext value = " + getTextAsyncResult.asyncContext;
                      });
                  });
              });
          });
      });
      ```
    name: 'getTextAsync(options, callback)'
    fullName: 'getTextAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTextAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="582da-140">Fournit une option permettant de conserver les données de contexte de n’importe quel type, inchangées, pour une utilisation dans un rappel.</span><span class="sxs-lookup"><span data-stu-id="582da-140">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: '<span data-ttu-id="582da-141">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="582da-141">Optional.</span></span> <span data-ttu-id="582da-142">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office!Office.AsyncResult:interface)</span><span class="sxs-lookup"><span data-stu-id="582da-142">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="582da-143">.</span><span class="sxs-lookup"><span data-stu-id="582da-143"></span></span> <span data-ttu-id="582da-144">La `value` propriété du résultat est une chaîne qui contient le texte interne des nœuds référencés.</span><span class="sxs-lookup"><span data-stu-id="582da-144">The `value` property of the result is a string that contains the inner text of the referenced nodes.</span></span>'
          type:
            - 'office!Office.CustomXmlNode#getTextAsync~0:complex'
  - uid: 'office!Office.CustomXmlNode#getTextAsync:member(2)'
    summary: <span data-ttu-id="582da-145">Obtient le texte d’un nœud XML dans une partie XML personnalisée.</span><span class="sxs-lookup"><span data-stu-id="582da-145">Gets the text of an XML node in a custom XML part.</span></span>
    remarks: '<span data-ttu-id="582da-146">**Ensemble de conditions requises**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="582da-146">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: getTextAsync(callback)
    fullName: getTextAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTextAsync(callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="582da-147">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="582da-147">Optional.</span></span> <span data-ttu-id="582da-148">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office!Office.AsyncResult:interface)</span><span class="sxs-lookup"><span data-stu-id="582da-148">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="582da-149">.</span><span class="sxs-lookup"><span data-stu-id="582da-149"></span></span> <span data-ttu-id="582da-150">La `value` propriété du résultat est une chaîne qui contient le texte interne des nœuds référencés.</span><span class="sxs-lookup"><span data-stu-id="582da-150">The `value` property of the result is a string that contains the inner text of the referenced nodes.</span></span>'
          type:
            - 'office!Office.CustomXmlNode#getTextAsync~1:complex'
  - uid: 'office!Office.CustomXmlNode#getXmlAsync:member(1)'
    summary: <span data-ttu-id="582da-151">Obtient le code XML du nœud.</span><span class="sxs-lookup"><span data-stu-id="582da-151">Gets the node's XML.</span></span>
    remarks: '<span data-ttu-id="582da-152">**Ensemble de conditions requises**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="582da-152">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: 'getXmlAsync(options, callback)'
    fullName: 'getXmlAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getXmlAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="582da-153">Fournit une option permettant de conserver les données de contexte de n’importe quel type, inchangées, pour une utilisation dans un rappel.</span><span class="sxs-lookup"><span data-stu-id="582da-153">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: '<span data-ttu-id="582da-154">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="582da-154">Optional.</span></span> <span data-ttu-id="582da-155">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office!Office.AsyncResult:interface)</span><span class="sxs-lookup"><span data-stu-id="582da-155">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="582da-156">.</span><span class="sxs-lookup"><span data-stu-id="582da-156"></span></span> <span data-ttu-id="582da-157">La `value` propriété du résultat est une chaîne qui contient le code XML du nœud référencé.</span><span class="sxs-lookup"><span data-stu-id="582da-157">The `value` property of the result is a string that contains the XML of the referenced node.</span></span>'
          type:
            - 'office!Office.CustomXmlNode#getXmlAsync~0:complex'
  - uid: 'office!Office.CustomXmlNode#getXmlAsync:member(2)'
    summary: <span data-ttu-id="582da-158">Obtient le code XML du nœud.</span><span class="sxs-lookup"><span data-stu-id="582da-158">Gets the node's XML.</span></span>
    remarks: |-
      <span data-ttu-id="582da-159">**Ensemble de conditions requises**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="582da-159">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="582da-160">Exemples</span><span class="sxs-lookup"><span data-stu-id="582da-160">Examples</span></span>

      ```javascript
      function showXmlNodeInnerXml() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.getNodesAsync('*', function (nodeResults) {
                  for (i = 0; i < nodeResults.value.length; i++) {
                      var node = nodeResults.value[i];
                      node.getXmlAsync(function (asyncResult) {
                          write(asyncResult.value);
                      });
                  }
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: getXmlAsync(callback)
    fullName: getXmlAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getXmlAsync(callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="582da-161">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="582da-161">Optional.</span></span> <span data-ttu-id="582da-162">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office!Office.AsyncResult:interface)</span><span class="sxs-lookup"><span data-stu-id="582da-162">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="582da-163">.</span><span class="sxs-lookup"><span data-stu-id="582da-163"></span></span> <span data-ttu-id="582da-164">La `value` propriété du résultat est une chaîne qui contient le code XML du nœud référencé.</span><span class="sxs-lookup"><span data-stu-id="582da-164">The `value` property of the result is a string that contains the XML of the referenced node.</span></span>'
          type:
            - 'office!Office.CustomXmlNode#getXmlAsync~1:complex'
  - uid: 'office!Office.CustomXmlNode#namespaceUri:member'
    summary: <span data-ttu-id="582da-165">Récupère le GUID de chaîne de CustomXMLPart.</span><span class="sxs-lookup"><span data-stu-id="582da-165">Retrieves the string GUID of the CustomXMLPart.</span></span>
    name: namespaceUri
    fullName: namespaceUri
    langs:
      - typeScript
    type: property
    syntax:
      content: 'namespaceUri: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="582da-166">Exemples</span><span class="sxs-lookup"><span data-stu-id="582da-166">Examples</span></span>

          ```javascript
          function showXmlNamespaceUri() {
              Office.context.document.customXmlParts.getByIdAsync(
                  "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
                  var xmlPart = result.value;
                  xmlPart.getNodesAsync('*/*', function (nodeResults) {
                      for (i = 0; i < nodeResults.value.length; i++) {
                          var node = nodeResults.value[i];
                          write(node.namespaceUri);
                      }
                  });
              });
          }
          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```
  - uid: 'office!Office.CustomXmlNode#nodeType:member'
    summary: <span data-ttu-id="582da-167">Obtient le type de CustomXMLNode.</span><span class="sxs-lookup"><span data-stu-id="582da-167">Gets the type of the CustomXMLNode.</span></span>
    name: nodeType
    fullName: nodeType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'nodeType: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="582da-168">Exemples</span><span class="sxs-lookup"><span data-stu-id="582da-168">Examples</span></span>

          ```javascript
          function showXmlNodeType() {
              Office.context.document.customXmlParts.getByIdAsync(
                  "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
                  var xmlPart = result.value;
                  xmlPart.getNodesAsync('*/*', function (nodeResults) {
                      for (i = 0; i < nodeResults.value.length; i++) {
                          var node = nodeResults.value[i];
                          write(node.nodeType);
                      }
                  });
              });
          }
          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```
  - uid: 'office!Office.CustomXmlNode#setNodeValueAsync:member(1)'
    summary: <span data-ttu-id="582da-169">Définit la valeur du nœud.</span><span class="sxs-lookup"><span data-stu-id="582da-169">Sets the node value.</span></span>
    remarks: '<span data-ttu-id="582da-170">**Ensemble de conditions requises**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="582da-170">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: 'setNodeValueAsync(value, options, callback)'
    fullName: 'setNodeValueAsync(value, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setNodeValueAsync(value: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: value
          description: <span data-ttu-id="582da-171">Valeur à définir sur le nœud.</span><span class="sxs-lookup"><span data-stu-id="582da-171">The value to be set on the node</span></span>
          type:
            - string
        - id: options
          description: '<span data-ttu-id="582da-172">Fournit une option permettant de conserver les données de contexte de n’importe quel type, inchangées, pour une utilisation dans un rappel.</span><span class="sxs-lookup"><span data-stu-id="582da-172">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: '<span data-ttu-id="582da-173">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="582da-173">Optional.</span></span> <span data-ttu-id="582da-174">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office!Office.AsyncResult:interface)</span><span class="sxs-lookup"><span data-stu-id="582da-174">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="582da-175">.</span><span class="sxs-lookup"><span data-stu-id="582da-175"></span></span>'
          type:
            - 'office!Office.CustomXmlNode#setNodeValueAsync~0:complex'
  - uid: 'office!Office.CustomXmlNode#setNodeValueAsync:member(2)'
    summary: <span data-ttu-id="582da-176">Définit la valeur du nœud.</span><span class="sxs-lookup"><span data-stu-id="582da-176">Sets the node value.</span></span>
    remarks: |-
      <span data-ttu-id="582da-177">**Ensemble de conditions requises**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="582da-177">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="582da-178">Exemples</span><span class="sxs-lookup"><span data-stu-id="582da-178">Examples</span></span>

      ```javascript
      function setXmlNodeValue() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.getNodesAsync('*/*', function (nodeResults) {
                  for (i = 0; i < nodeResults.value.length; i++) {
                      var node = nodeResults.value[i];
                      write(node);
                      node.setNodeValueAsync("item number" + i, function (result) { });
                  }
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: 'setNodeValueAsync(value, callback)'
    fullName: 'setNodeValueAsync(value, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setNodeValueAsync(value: string, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: value
          description: <span data-ttu-id="582da-179">Valeur à définir sur le nœud.</span><span class="sxs-lookup"><span data-stu-id="582da-179">The value to be set on the node</span></span>
          type:
            - string
        - id: callback
          description: '<span data-ttu-id="582da-180">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="582da-180">Optional.</span></span> <span data-ttu-id="582da-181">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office!Office.AsyncResult:interface)</span><span class="sxs-lookup"><span data-stu-id="582da-181">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="582da-182">.</span><span class="sxs-lookup"><span data-stu-id="582da-182"></span></span>'
          type:
            - 'office!Office.CustomXmlNode#setNodeValueAsync~1:complex'
  - uid: 'office!Office.CustomXmlNode#setTextAsync:member(1)'
    summary: <span data-ttu-id="582da-183">Définit de manière asynchrone le texte d’un nœud XML dans une partie XML personnalisée.</span><span class="sxs-lookup"><span data-stu-id="582da-183">Asynchronously sets the text of an XML node in a custom XML part.</span></span>
    remarks: |-
      <span data-ttu-id="582da-184">**Ensemble de conditions requises**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="582da-184">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="582da-185">Exemples</span><span class="sxs-lookup"><span data-stu-id="582da-185">Examples</span></span>

      ```javascript
      // Learn how to set the text value of a node in a custom XML part from the following example.

      // Get the built-in core properties XML part by using its ID. This results in a call to Word.
      Office.context.document.customXmlParts.getByIdAsync(
          "{6C3C8BC8-F283-45AE-878A-BAB7291924A1}",
          function (getByIdAsyncResult) {
          
          // Access the XML part.
          var xmlPart = getByIdAsyncResult.value;
          
          // Add namespaces to the namespace manager. These two calls result in two calls to Word.
          xmlPart.namespaceManager.addNamespaceAsync(
              'cp', 
              'http://schemas.openxmlformats.org/package/2006/metadata/core-properties', 
              function () {
              xmlPart.namespaceManager.addNamespaceAsync(
                  'dc', 
                  'http://purl.org/dc/elements/1.1/', 
                  function () {

                  // Get XML nodes by using an Xpath expression. This results in a call to the host.
                  xmlPart.getNodesAsync("/cp:coreProperties/dc:subject", function (getNodesAsyncResult) {
                      
                      // Get the first node returned by using the Xpath expression.
                      // This will be the subject element in this example.
                      var subjectNode = getNodesAsyncResult.value[0];
                      
                      // Set the text value of the subject node and use the asyncContext. 
                      // This results in a call to the host.  The results are logged to the browser console.
                      subjectNode.setTextAsync(
                          "newSubject", 
                          {asyncContext: "StateNormal"}, 
                          function (setTextAsyncResult) {
                              console.log("The status of the call: " + setTextAsyncResult.status);
                              console.log("The asyncContext value = " + setTextAsyncResult.asyncContext);
                      });
                  });
              });
          });
      });
      ```
    name: 'setTextAsync(text, options, callback)'
    fullName: 'setTextAsync(text, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setTextAsync(text: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: text
          description: Obligatoire. <span data-ttu-id="582da-187">Valeur de texte du nœud XML.</span><span class="sxs-lookup"><span data-stu-id="582da-187">The text value of the XML node.</span></span>
          type:
            - string
        - id: options
          description: '<span data-ttu-id="582da-188">Fournit une option permettant de conserver les données de contexte de n’importe quel type, inchangées, pour une utilisation dans un rappel.</span><span class="sxs-lookup"><span data-stu-id="582da-188">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: '<span data-ttu-id="582da-189">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="582da-189">Optional.</span></span> <span data-ttu-id="582da-190">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office!Office.AsyncResult:interface)</span><span class="sxs-lookup"><span data-stu-id="582da-190">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="582da-191">.</span><span class="sxs-lookup"><span data-stu-id="582da-191"></span></span>'
          type:
            - 'office!Office.CustomXmlNode#setTextAsync~0:complex'
  - uid: 'office!Office.CustomXmlNode#setTextAsync:member(2)'
    summary: <span data-ttu-id="582da-192">Définit de manière asynchrone le texte d’un nœud XML dans une partie XML personnalisée.</span><span class="sxs-lookup"><span data-stu-id="582da-192">Asynchronously sets the text of an XML node in a custom XML part.</span></span>
    remarks: '<span data-ttu-id="582da-193">**Ensemble de conditions requises**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="582da-193">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: 'setTextAsync(text, callback)'
    fullName: 'setTextAsync(text, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setTextAsync(text: string, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: text
          description: <span data-ttu-id="582da-194">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="582da-194">Required.</span></span> <span data-ttu-id="582da-195">Valeur de texte du nœud XML.</span><span class="sxs-lookup"><span data-stu-id="582da-195">The text value of the XML node.</span></span>
          type:
            - string
        - id: callback
          description: '<span data-ttu-id="582da-196">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="582da-196">Optional.</span></span> <span data-ttu-id="582da-197">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office!Office.AsyncResult:interface)</span><span class="sxs-lookup"><span data-stu-id="582da-197">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="582da-198">.</span><span class="sxs-lookup"><span data-stu-id="582da-198"></span></span>'
          type:
            - 'office!Office.CustomXmlNode#setTextAsync~1:complex'
  - uid: 'office!Office.CustomXmlNode#setXmlAsync:member(1)'
    summary: <span data-ttu-id="582da-199">Définit le code XML du nœud.</span><span class="sxs-lookup"><span data-stu-id="582da-199">Sets the node XML.</span></span>
    remarks: |-
      <span data-ttu-id="582da-200">**Ensemble de conditions requises**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="582da-200">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="582da-201">Exemples</span><span class="sxs-lookup"><span data-stu-id="582da-201">Examples</span></span>

      ```javascript
      function setXmlNodeInnerXml() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.getNodesAsync('*', function (nodeResults) {
                  for (i = 0; i < nodeResults.value.length; i++) {
                      var node = nodeResults.value[i];
                      node.setXmlAsync("<childNode>" + i + "</childNode>");
                  }
              });
          });
      }
      ```
    name: 'setXmlAsync(xml, options, callback)'
    fullName: 'setXmlAsync(xml, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setXmlAsync(xml: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: xml
          description: <span data-ttu-id="582da-202">Le code XML à définir sur le nœud.</span><span class="sxs-lookup"><span data-stu-id="582da-202">The XML to be set on the node</span></span>
          type:
            - string
        - id: options
          description: '<span data-ttu-id="582da-203">Fournit une option permettant de conserver les données de contexte de n’importe quel type, inchangées, pour une utilisation dans un rappel.</span><span class="sxs-lookup"><span data-stu-id="582da-203">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: '<span data-ttu-id="582da-204">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="582da-204">Optional.</span></span> <span data-ttu-id="582da-205">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office!Office.AsyncResult:interface)</span><span class="sxs-lookup"><span data-stu-id="582da-205">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="582da-206">.</span><span class="sxs-lookup"><span data-stu-id="582da-206"></span></span>'
          type:
            - 'office!Office.CustomXmlNode#setXmlAsync~0:complex'
  - uid: 'office!Office.CustomXmlNode#setXmlAsync:member(2)'
    summary: <span data-ttu-id="582da-207">Définit le code XML du nœud.</span><span class="sxs-lookup"><span data-stu-id="582da-207">Sets the node XML.</span></span>
    remarks: '<span data-ttu-id="582da-208">**Ensemble de conditions requises**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="582da-208">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: 'setXmlAsync(xml, callback)'
    fullName: 'setXmlAsync(xml, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setXmlAsync(xml: string, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: xml
          description: <span data-ttu-id="582da-209">Le code XML à définir sur le nœud.</span><span class="sxs-lookup"><span data-stu-id="582da-209">The XML to be set on the node</span></span>
          type:
            - string
        - id: callback
          description: '<span data-ttu-id="582da-210">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="582da-210">Optional.</span></span> <span data-ttu-id="582da-211">Fonction appelée lorsque le rappel est renvoyé, dont le seul paramètre est de type [Office. AsyncResult](xref:office!Office.AsyncResult:interface)</span><span class="sxs-lookup"><span data-stu-id="582da-211">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="582da-212">.</span><span class="sxs-lookup"><span data-stu-id="582da-212"></span></span>'
          type:
            - 'office!Office.CustomXmlNode#setXmlAsync~1:complex'
references:
  - uid: 'office!Office.AsyncContextOptions:interface'
    name: Office.AsyncContextOptions
  - uid: 'office!Office.CustomXmlNode#getNodesAsync~0:complex'
    name: '(result: AsyncResult<CustomXmlNode[]>) => void'
    fullName: '(result: Office.AsyncResult<Office.CustomXmlNode[]>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'office!Office.CustomXmlNode:interface'
        name: CustomXmlNode
        fullName: Office.CustomXmlNode
      - name: '[]>) => void'
        fullName: '[]>) => void'
  - uid: 'office!Office.CustomXmlNode#getNodesAsync~1:complex'
    name: '(result: AsyncResult<CustomXmlNode[]>) => void'
    fullName: '(result: Office.AsyncResult<Office.CustomXmlNode[]>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'office!Office.CustomXmlNode:interface'
        name: CustomXmlNode
        fullName: Office.CustomXmlNode
      - name: '[]>) => void'
        fullName: '[]>) => void'
  - uid: 'office!Office.CustomXmlNode#getNodeValueAsync~0:complex'
    name: '(result: AsyncResult<string>) => void'
    fullName: '(result: Office.AsyncResult<string>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <string>) => void
        fullName: <string>) => void
  - uid: 'office!Office.CustomXmlNode#getNodeValueAsync~1:complex'
    name: '(result: AsyncResult<string>) => void'
    fullName: '(result: Office.AsyncResult<string>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <string>) => void
        fullName: <string>) => void
  - uid: 'office!Office.CustomXmlNode#getTextAsync~0:complex'
    name: '(result: AsyncResult<string>) => void'
    fullName: '(result: Office.AsyncResult<string>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <string>) => void
        fullName: <string>) => void
  - uid: 'office!Office.CustomXmlNode#getTextAsync~1:complex'
    name: '(result: AsyncResult<string>) => void'
    fullName: '(result: Office.AsyncResult<string>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <string>) => void
        fullName: <string>) => void
  - uid: 'office!Office.CustomXmlNode#getXmlAsync~0:complex'
    name: '(result: AsyncResult<string>) => void'
    fullName: '(result: Office.AsyncResult<string>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <string>) => void
        fullName: <string>) => void
  - uid: 'office!Office.CustomXmlNode#getXmlAsync~1:complex'
    name: '(result: AsyncResult<string>) => void'
    fullName: '(result: Office.AsyncResult<string>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <string>) => void
        fullName: <string>) => void
  - uid: 'office!Office.CustomXmlNode#setNodeValueAsync~0:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'office!Office.CustomXmlNode#setNodeValueAsync~1:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'office!Office.CustomXmlNode#setTextAsync~0:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'office!Office.CustomXmlNode#setTextAsync~1:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'office!Office.CustomXmlNode#setXmlAsync~0:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'office!Office.CustomXmlNode#setXmlAsync~1:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void