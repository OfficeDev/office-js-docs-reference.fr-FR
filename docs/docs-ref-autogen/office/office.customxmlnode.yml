### YamlMime:UniversalReference
ms.openlocfilehash: 76d0713ffe5aa33cf020eb37a24a216e9adbc93c
ms.sourcegitcommit: beffe9455dace422e85b92f0105c54ff7b594cbf
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 09/20/2018
ms.locfileid: "24044231"
items:
- uid: office.Office.CustomXmlNode
  summary: <span data-ttu-id="7dbcd-101">Représente un nœud XML dans une arborescence au sein d’un document.</span><span class="sxs-lookup"><span data-stu-id="7dbcd-101">Represents an XML node in a tree in a document.</span></span>
  remarks: >-
    <table><tr><td><span data-ttu-id="7dbcd-102">Ensembles de ressources</span><span class="sxs-lookup"><span data-stu-id="7dbcd-102">Requirement Sets</span></span></td><td><span data-ttu-id="7dbcd-103">CustomXmlParts</span><span class="sxs-lookup"><span data-stu-id="7dbcd-103">CustomXmlParts</span></span></td></tr></table>


    <span data-ttu-id="7dbcd-104">**Informations de prise en charge**</span><span class="sxs-lookup"><span data-stu-id="7dbcd-104">**Support details**</span></span>


    <span data-ttu-id="7dbcd-105">MAJUSCULE Y dans le tableau suivant indique que cette interface est prise en charge dans l’application hôte Office correspondante.</span><span class="sxs-lookup"><span data-stu-id="7dbcd-105">A capital Y in the following matrix indicates that this interface is supported in the corresponding Office host application.</span></span> <span data-ttu-id="7dbcd-106">Une cellule vide indique que l’application hôte Office ne prennent en charge cette interface.</span><span class="sxs-lookup"><span data-stu-id="7dbcd-106">An empty cell indicates that the Office host application doesn't support this interface.</span></span>


    <span data-ttu-id="7dbcd-107">Pour plus d’informations sur les exigences des applications et le serveur hôte Office, voir [Configuration requise pour exécuter des compléments Office](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="7dbcd-107">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="7dbcd-108">*Hôtes pris en charge par la plateforme*</span><span class="sxs-lookup"><span data-stu-id="7dbcd-108">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="7dbcd-109">Office pour Bureau Windows</span><span class="sxs-lookup"><span data-stu-id="7dbcd-109">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="7dbcd-110">Office Online (dans un navigateur)</span><span class="sxs-lookup"><span data-stu-id="7dbcd-110">Office Online (in browser)</span></span> </th><th> <span data-ttu-id="7dbcd-111">Office pour iPad</span><span class="sxs-lookup"><span data-stu-id="7dbcd-111">Office for iPad</span></span> </th></tr> <tr><td><span data-ttu-id="7dbcd-112"><strong>Word</strong></span><span class="sxs-lookup"><span data-stu-id="7dbcd-112"><strong> Word </strong></span></span></td><td> <span data-ttu-id="7dbcd-113">Y</span><span class="sxs-lookup"><span data-stu-id="7dbcd-113">Y</span></span> </td><td> <span data-ttu-id="7dbcd-114">Y</span><span class="sxs-lookup"><span data-stu-id="7dbcd-114">Y</span></span> </td><td> <span data-ttu-id="7dbcd-115">Y</span><span class="sxs-lookup"><span data-stu-id="7dbcd-115">Y</span></span> </td></tr> </table>
  name: Office.CustomXmlNode
  fullName: office.Office.CustomXmlNode
  langs:
  - typeScript
  type: interface
  package: office
  children:
  - office.Office.CustomXmlNode.baseName
  - office.Office.CustomXmlNode.getNodesAsync
  - office.Office.CustomXmlNode.getNodeValueAsync
  - office.Office.CustomXmlNode.getTextAsync
  - office.Office.CustomXmlNode.getXmlAsync
  - office.Office.CustomXmlNode.namespaceUri
  - office.Office.CustomXmlNode.nodeType
  - office.Office.CustomXmlNode.setNodeValueAsync
  - office.Office.CustomXmlNode.setTextAsync
  - office.Office.CustomXmlNode.setXmlAsync
- uid: office.Office.CustomXmlNode.baseName
  summary: <span data-ttu-id="7dbcd-116">Obtient le nom de base du nœud sans le préfixe d’espace de noms, s’il en existe un.</span><span class="sxs-lookup"><span data-stu-id="7dbcd-116">Gets the base name of the node without the namespace prefix, if one exists.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"7dbcd-117\">Ensembles de ressources</span><span class=\"sxs-lookup\"><span data-stu-id=\"7dbcd-117\">Requirement Sets</span></span></td><td><span data-ttu-id=\"7dbcd-118\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"7dbcd-118\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"7dbcd-119\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"7dbcd-119\">Examples</span></span>\n\n```javascript\nfunction showXmlNodeBaseNames() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getNodesAsync('*/*', function (nodeResults) {\n            for (i = 0; i < nodeResults.value.length; i++) {\n                var node = nodeResults.value[i];\n                write(node.baseName);\n            }\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: baseName
  fullName: office.Office.CustomXmlNode.baseName
  langs:
  - typeScript
  type: property
  syntax:
    content: 'baseName: string;'
    return:
      type:
      - string
- uid: office.Office.CustomXmlNode.getNodesAsync
  summary: <span data-ttu-id="7dbcd-120">Obtient les nœuds associés à l’expression XPath.</span><span class="sxs-lookup"><span data-stu-id="7dbcd-120">Gets the nodes associated with the XPath expression.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"7dbcd-121\">Ensembles de ressources</span><span class=\"sxs-lookup\"><span data-stu-id=\"7dbcd-121\">Requirement Sets</span></span></td><td><span data-ttu-id=\"7dbcd-122\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"7dbcd-122\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"7dbcd-123\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"7dbcd-123\">Examples</span></span>\n\n```javascript\nfunction showXmlChildNodes() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getNodesAsync('*', function (nodeResults) {\n            for (i = 0; i < nodeResults.value.length; i++) {\n                var node = nodeResults.value[i];\n                node.getNodesAsync('*', function (nodeResults) {\n                    write(nodeResults.value.length + \" childNodes\");\n                });\n            }\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: getNodesAsync(xPath, options, callback)
  fullName: office.Office.CustomXmlNode.getNodesAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getNodesAsync(xPath: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<CustomXmlNode[]>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: xPath
      description: <span data-ttu-id="7dbcd-124">L’expression XPath qui spécifie les nœuds à obtenir.</span><span class="sxs-lookup"><span data-stu-id="7dbcd-124">The XPath expression that specifies the nodes to get.</span></span> <span data-ttu-id="7dbcd-125">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="7dbcd-125">Required.</span></span>
      type:
      - string
    - id: options
      description: <span data-ttu-id="7dbcd-126">Fournit une option de conservation des données de contexte d’un type quelconque, inchangé, pour une utilisation dans un rappel.</span><span class="sxs-lookup"><span data-stu-id="7dbcd-126">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="7dbcd-127">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="7dbcd-127">Optional.</span></span> <span data-ttu-id="7dbcd-128">Une fonction qui est appelée quand le rappel retourné, dont le seul paramètre est de type[Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="7dbcd-128">A function that is invoked when the callback returns, whose only parameter is of type[Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="7dbcd-129">Le `value` propriété du résultat est un tableau d’objets CustomXmlNode qui représentent les nœuds spécifiés par l’expression XPath passée à la `xPath` paramètre.</span><span class="sxs-lookup"><span data-stu-id="7dbcd-129">The `value` property of the result is an array of CustomXmlNode objects that represent the nodes specified by the XPath expression passed to the `xPath` parameter.</span></span>
      type:
      - '(result: AsyncResult<CustomXmlNode[]>) => void'
- uid: office.Office.CustomXmlNode.getNodeValueAsync
  summary: <span data-ttu-id="7dbcd-130">Obtient la valeur du nœud.</span><span class="sxs-lookup"><span data-stu-id="7dbcd-130">Gets the node value.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"7dbcd-131\">Ensembles de ressources</span><span class=\"sxs-lookup\"><span data-stu-id=\"7dbcd-131\">Requirement Sets</span></span></td><td><span data-ttu-id=\"7dbcd-132\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"7dbcd-132\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"7dbcd-133\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"7dbcd-133\">Examples</span></span>\n\n```javascript\nfunction showXmlNodeValues() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getNodesAsync('*/*', function (nodeResults) {\n            for (i = 0; i < nodeResults.value.length; i++) {\n                var node = nodeResults.value[i];\n                node.getNodeValueAsync(function (asyncResult) {\n                    write(asyncResult.value);\n                });\n            }\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: getNodeValueAsync(options, callback)
  fullName: office.Office.CustomXmlNode.getNodeValueAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getNodeValueAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: <span data-ttu-id="7dbcd-134">Fournit une option de conservation des données de contexte d’un type quelconque, inchangé, pour une utilisation dans un rappel.</span><span class="sxs-lookup"><span data-stu-id="7dbcd-134">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="7dbcd-135">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="7dbcd-135">Optional.</span></span> <span data-ttu-id="7dbcd-136">Une fonction qui est appelée quand le rappel retourné, dont le seul paramètre est de type[Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="7dbcd-136">A function that is invoked when the callback returns, whose only parameter is of type[Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="7dbcd-137">Le `value` propriété du résultat est une chaîne qui contient la valeur du nœud référencé.</span><span class="sxs-lookup"><span data-stu-id="7dbcd-137">The `value` property of the result is a string that contains the value of the referenced node.</span></span>
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.CustomXmlNode.getTextAsync
  summary: <span data-ttu-id="7dbcd-138">Obtient le texte d’un nœud XML dans une partie XML personnalisée.</span><span class="sxs-lookup"><span data-stu-id="7dbcd-138">Gets the text of an XML node in a custom XML part.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"7dbcd-139\">Ensembles de ressources</span><span class=\"sxs-lookup\"><span data-stu-id=\"7dbcd-139\">Requirement Sets</span></span></td><td><span data-ttu-id=\"7dbcd-140\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"7dbcd-140\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"7dbcd-141\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"7dbcd-141\">Examples</span></span>\n\n```javascript\n// Get the built-in core properties XML part by using its ID. This results in a call to Word.\nOffice.context.document.customXmlParts.getByIdAsync(\n    \"{6C3C8BC8-F283-45AE-878A-BAB7291924A1}\", function (getByIdAsyncResult) {\n    \n    // Access the XML part.\n    var xmlPart = getByIdAsyncResult.value;\n    \n    // Add namespaces to the namespace manager. These two calls result in two calls to Word.\n    xmlPart.namespaceManager.addNamespaceAsync(\n        'cp',\n        'http://schemas.openxmlformats.org/package/2006/metadata/core-properties',\n        function () {\n        xmlPart.namespaceManager.addNamespaceAsync(\n            'dc', \n            'http://purl.org/dc/elements/1.1/', \n            function () {\n\n            // Get XML nodes by using an Xpath expression. This results in a call to Word.\n            xmlPart.getNodesAsync(\"/cp:coreProperties/dc:title\", function (getNodesAsyncResult) {\n                \n                // Get the first node returned by using the Xpath expression. \n                var node = getNodesAsyncResult.value[0];\n                \n                // Get the text value of the node and use the asyncContext. This results in a call to Word. \n                // The results are logged to the browser console.\n                node.getTextAsync({asyncContext: \"StateNormal\"}, function (getTextAsyncResult) {\n                  console.log(\"Text of the title element = \" + getTextAsyncResult.value;\n                  console.log(\"The asyncContext value = \" + getTextAsyncResult.asyncContext;\n                });\n            });\n        });\n    });\n});\n```"
  name: getTextAsync(options, callback)
  fullName: office.Office.CustomXmlNode.getTextAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getTextAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: <span data-ttu-id="7dbcd-142">Fournit une option de conservation des données de contexte d’un type quelconque, inchangé, pour une utilisation dans un rappel.</span><span class="sxs-lookup"><span data-stu-id="7dbcd-142">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="7dbcd-143">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="7dbcd-143">Optional.</span></span> <span data-ttu-id="7dbcd-144">Une fonction qui est appelée quand le rappel retourné, dont le seul paramètre est de type[Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="7dbcd-144">A function that is invoked when the callback returns, whose only parameter is of type[Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="7dbcd-145">Le `value` propriété du résultat est une chaîne qui contient le texte interne de nœuds référencés.</span><span class="sxs-lookup"><span data-stu-id="7dbcd-145">The `value` property of the result is a string that contains the inner text of the referenced nodes.</span></span>
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.CustomXmlNode.getXmlAsync
  summary: <span data-ttu-id="7dbcd-146">Obtient XML le nœud.</span><span class="sxs-lookup"><span data-stu-id="7dbcd-146">Gets the node's XML.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"7dbcd-147\">Ensembles de ressources</span><span class=\"sxs-lookup\"><span data-stu-id=\"7dbcd-147\">Requirement Sets</span></span></td><td><span data-ttu-id=\"7dbcd-148\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"7dbcd-148\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"7dbcd-149\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"7dbcd-149\">Examples</span></span>\n\n```javascript\nfunction showXmlNodeInnerXml() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getNodesAsync('*', function (nodeResults) {\n            for (i = 0; i < nodeResults.value.length; i++) {\n                var node = nodeResults.value[i];\n                node.getXmlAsync(function (asyncResult) {\n                    write(asyncResult.value);\n                });\n            }\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: getXmlAsync(options, callback)
  fullName: office.Office.CustomXmlNode.getXmlAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getXmlAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: <span data-ttu-id="7dbcd-150">Fournit une option de conservation des données de contexte d’un type quelconque, inchangé, pour une utilisation dans un rappel.</span><span class="sxs-lookup"><span data-stu-id="7dbcd-150">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="7dbcd-151">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="7dbcd-151">Optional.</span></span> <span data-ttu-id="7dbcd-152">Une fonction qui est appelée quand le rappel retourné, dont le seul paramètre est de type[Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="7dbcd-152">A function that is invoked when the callback returns, whose only parameter is of type[Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="7dbcd-153">Le `value` propriété du résultat est une chaîne qui contient le code XML du nœud référencé.</span><span class="sxs-lookup"><span data-stu-id="7dbcd-153">The `value` property of the result is a string that contains the XML of the referenced node.</span></span>
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.CustomXmlNode.namespaceUri
  summary: <span data-ttu-id="7dbcd-154">Récupère le GUID de chaîne de l’objet CustomXMLPart.</span><span class="sxs-lookup"><span data-stu-id="7dbcd-154">Retrieves the string GUID of the CustomXMLPart.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"7dbcd-155\">Ensembles de ressources</span><span class=\"sxs-lookup\"><span data-stu-id=\"7dbcd-155\">Requirement Sets</span></span></td><td><span data-ttu-id=\"7dbcd-156\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"7dbcd-156\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"7dbcd-157\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"7dbcd-157\">Examples</span></span>\n\n```javascript\nfunction showXmlNamespaceUri() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getNodesAsync('*/*', function (nodeResults) {\n            for (i = 0; i < nodeResults.value.length; i++) {\n                var node = nodeResults.value[i];\n                write(node.namespaceUri);\n            }\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: namespaceUri
  fullName: office.Office.CustomXmlNode.namespaceUri
  langs:
  - typeScript
  type: property
  syntax:
    content: 'namespaceUri: string;'
    return:
      type:
      - string
- uid: office.Office.CustomXmlNode.nodeType
  summary: <span data-ttu-id="7dbcd-158">Obtient le type de l’objet CustomXMLNode.</span><span class="sxs-lookup"><span data-stu-id="7dbcd-158">Gets the type of the CustomXMLNode.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"7dbcd-159\">Ensembles de ressources</span><span class=\"sxs-lookup\"><span data-stu-id=\"7dbcd-159\">Requirement Sets</span></span></td><td><span data-ttu-id=\"7dbcd-160\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"7dbcd-160\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"7dbcd-161\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"7dbcd-161\">Examples</span></span>\n\n```javascript\nfunction showXmlNodeType() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getNodesAsync('*/*', function (nodeResults) {\n            for (i = 0; i < nodeResults.value.length; i++) {\n                var node = nodeResults.value[i];\n                write(node.nodeType);\n            }\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: nodeType
  fullName: office.Office.CustomXmlNode.nodeType
  langs:
  - typeScript
  type: property
  syntax:
    content: 'nodeType: string;'
    return:
      type:
      - string
- uid: office.Office.CustomXmlNode.setNodeValueAsync
  summary: <span data-ttu-id="7dbcd-162">Définit la valeur du nœud.</span><span class="sxs-lookup"><span data-stu-id="7dbcd-162">Sets the node value.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"7dbcd-163\">Ensembles de ressources</span><span class=\"sxs-lookup\"><span data-stu-id=\"7dbcd-163\">Requirement Sets</span></span></td><td><span data-ttu-id=\"7dbcd-164\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"7dbcd-164\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"7dbcd-165\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"7dbcd-165\">Examples</span></span>\n\n```javascript\nfunction setXmlNodeValue() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getNodesAsync('*/*', function (nodeResults) {\n            for (i = 0; i < nodeResults.value.length; i++) {\n                var node = nodeResults.value[i];\n                write(node);\n                node.setNodeValueAsync(\"item number\" + i, {}, function (result) { });\n            }\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: setNodeValueAsync(value, options, callback)
  fullName: office.Office.CustomXmlNode.setNodeValueAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setNodeValueAsync(value: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: value
      description: <span data-ttu-id="7dbcd-166">La valeur à définir sur le nœud</span><span class="sxs-lookup"><span data-stu-id="7dbcd-166">The value to be set on the node</span></span>
      type:
      - string
    - id: options
      description: <span data-ttu-id="7dbcd-167">Fournit une option de conservation des données de contexte d’un type quelconque, inchangé, pour une utilisation dans un rappel.</span><span class="sxs-lookup"><span data-stu-id="7dbcd-167">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="7dbcd-168">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="7dbcd-168">Optional.</span></span> <span data-ttu-id="7dbcd-169">Une fonction qui est appelée quand le rappel retourné, dont le seul paramètre est de type[Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="7dbcd-169">A function that is invoked when the callback returns, whose only parameter is of type[Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.CustomXmlNode.setTextAsync
  summary: <span data-ttu-id="7dbcd-170">Définit de manière asynchrone le texte d’un nœud XML dans une partie XML personnalisée.</span><span class="sxs-lookup"><span data-stu-id="7dbcd-170">Asynchronously sets the text of an XML node in a custom XML part.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"7dbcd-171\">Hôtes</span><span class=\"sxs-lookup\"><span data-stu-id=\"7dbcd-171\">Hosts</span></span></td><td><span data-ttu-id=\"7dbcd-172\">Word</span><span class=\"sxs-lookup\"><span data-stu-id=\"7dbcd-172\">Word</span></span></td></tr>\n\n<tr><td><span data-ttu-id=\"7dbcd-173\">Ensembles de ressources</span><span class=\"sxs-lookup\"><span data-stu-id=\"7dbcd-173\">Requirement Sets</span></span></td><td><span data-ttu-id=\"7dbcd-174\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"7dbcd-174\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"7dbcd-175\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"7dbcd-175\">Examples</span></span>\n\n```javascript\n// Learn how to set the text value of a node in a custom XML part from the following example.\n\n// Get the built-in core properties XML part by using its ID. This results in a call to Word.\nOffice.context.document.customXmlParts.getByIdAsync(\n    \"{6C3C8BC8-F283-45AE-878A-BAB7291924A1}\",\n    function (getByIdAsyncResult) {\n    \n    // Access the XML part.\n    var xmlPart = getByIdAsyncResult.value;\n    \n    // Add namespaces to the namespace manager. These two calls result in two calls to Word.\n    xmlPart.namespaceManager.addNamespaceAsync(\n        'cp', \n        'http://schemas.openxmlformats.org/package/2006/metadata/core-properties', \n        function () {\n        xmlPart.namespaceManager.addNamespaceAsync(\n            'dc', \n            'http://purl.org/dc/elements/1.1/', \n            function () {\n\n            // Get XML nodes by using an Xpath expression. This results in a call to the host.\n            xmlPart.getNodesAsync(\"/cp:coreProperties/dc:subject\", function (getNodesAsyncResult) {\n                \n                // Get the first node returned by using the Xpath expression.\n                // This will be the subject element in this example.\n                var subjectNode = getNodesAsyncResult.value[0];\n                \n                // Set the text value of the subject node and use the asyncContext. \n                // This results in a call to the host.  The results are logged to the browser console.\n                subjectNode.setTextAsync(\n                    \"newSubject\", \n                    {asyncContext: \"StateNormal\"}, \n                    function (setTextAsyncResult) {\n                        console.log(\"The status of the call: \" + setTextAsyncResult.status);\n                        console.log(\"The asyncContext value = \" + setTextAsyncResult.asyncContext);\n                });\n            });\n        });\n    });\n});\n```"
  name: setTextAsync(text, options, callback)
  fullName: office.Office.CustomXmlNode.setTextAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setTextAsync(text: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: text
      description: <span data-ttu-id="7dbcd-p108">Obligatoire. Valeur de texte du nœud XML.</span><span class="sxs-lookup"><span data-stu-id="7dbcd-p108">Required. The text value of the XML node.</span></span>
      type:
      - string
    - id: options
      description: <span data-ttu-id="7dbcd-178">Fournit une option de conservation des données de contexte d’un type quelconque, inchangé, pour une utilisation dans un rappel.</span><span class="sxs-lookup"><span data-stu-id="7dbcd-178">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="7dbcd-179">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="7dbcd-179">Optional.</span></span> <span data-ttu-id="7dbcd-180">Une fonction qui est appelée quand le rappel retourné, dont le seul paramètre est de type[Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="7dbcd-180">A function that is invoked when the callback returns, whose only parameter is of type[Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.CustomXmlNode.setXmlAsync
  summary: <span data-ttu-id="7dbcd-181">Définit le nœud XML.</span><span class="sxs-lookup"><span data-stu-id="7dbcd-181">Sets the node XML.</span></span>
  remarks: >-
    <table><tr><td><span data-ttu-id="7dbcd-182">Ensembles de ressources</span><span class="sxs-lookup"><span data-stu-id="7dbcd-182">Requirement Sets</span></span></td><td><span data-ttu-id="7dbcd-183">CustomXmlParts</span><span class="sxs-lookup"><span data-stu-id="7dbcd-183">CustomXmlParts</span></span></td></tr></table>

    #### <span data-ttu-id="7dbcd-184">Exemples</span><span class="sxs-lookup"><span data-stu-id="7dbcd-184">Examples</span></span>


    ```javascript

    function setXmlNodeInnerXml() {
        Office.context.document.customXmlParts.getByIdAsync(
            "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
            var xmlPart = result.value;
            xmlPart.getNodesAsync('*', function (nodeResults) {
                for (i = 0; i < nodeResults.value.length; i++) {
                    var node = nodeResults.value[i];
                    node.setXmlAsync("<childNode>" + i + "</childNode>");
                }
            });
        });
    }

    ```
  name: setXmlAsync(xml, options, callback)
  fullName: office.Office.CustomXmlNode.setXmlAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setXmlAsync(xml: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: xml
      description: <span data-ttu-id="7dbcd-185">Le code XML à définir sur le nœud</span><span class="sxs-lookup"><span data-stu-id="7dbcd-185">The XML to be set on the node</span></span>
      type:
      - string
    - id: options
      description: <span data-ttu-id="7dbcd-186">Fournit une option de conservation des données de contexte d’un type quelconque, inchangé, pour une utilisation dans un rappel.</span><span class="sxs-lookup"><span data-stu-id="7dbcd-186">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="7dbcd-187">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="7dbcd-187">Optional.</span></span> <span data-ttu-id="7dbcd-188">Une fonction qui est appelée quand le rappel retourné, dont le seul paramètre est de type[Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="7dbcd-188">A function that is invoked when the callback returns, whose only parameter is of type[Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
