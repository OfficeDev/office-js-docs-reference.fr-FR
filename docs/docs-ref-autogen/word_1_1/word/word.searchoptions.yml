### YamlMime:UniversalReference
items:
  - uid: word.Word.SearchOptions
    summary: |-
      <span data-ttu-id="6f057-101">Spécifie les options à inclure dans une opération de recherche.</span><span class="sxs-lookup"><span data-stu-id="6f057-101">Specifies the options to be included in a search operation.</span></span>

      <span data-ttu-id="6f057-102">\[[Ensemble d’API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6f057-102">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: Word.SearchOptions
    fullName: Word.SearchOptions
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: word
    children:
      - word.Word.SearchOptions.context
      - word.Word.SearchOptions.ignorePunct
      - word.Word.SearchOptions.ignoreSpace
      - word.Word.SearchOptions.load
      - word.Word.SearchOptions.load_1
      - word.Word.SearchOptions.load_2
      - word.Word.SearchOptions.matchCase
      - word.Word.SearchOptions.matchPrefix
      - word.Word.SearchOptions.matchSuffix
      - word.Word.SearchOptions.matchWholeWord
      - word.Word.SearchOptions.matchWildcards
      - word.Word.SearchOptions.matchWildCards
      - word.Word.SearchOptions.newObject
      - word.Word.SearchOptions.set
      - word.Word.SearchOptions.set_1
      - word.Word.SearchOptions.toJSON
  - uid: word.Word.SearchOptions.context
    summary: <span data-ttu-id="6f057-103">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="6f057-103">The request context associated with the object.</span></span> <span data-ttu-id="6f057-104">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="6f057-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - word.Word.RequestContext
  - uid: word.Word.SearchOptions.ignorePunct
    summary: |-
      <span data-ttu-id="6f057-p102">Obtient ou définit une valeur indiquant si toutes les marques de ponctuation entre les mots doivent être ignorées. Correspond à la case à cocher Ignorer les marques de ponctuation de la boîte de dialogue Rechercher et remplacer.</span><span class="sxs-lookup"><span data-stu-id="6f057-p102">Gets or sets a value that indicates whether to ignore all punctuation characters between words. Corresponds to the Ignore punctuation check box in the Find and Replace dialog box.</span></span>

      <span data-ttu-id="6f057-107">\[[Ensemble d’API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6f057-107">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: ignorePunct
    fullName: ignorePunct
    langs:
      - typeScript
    type: property
    syntax:
      content: 'ignorePunct: boolean;'
      return:
        type:
          - boolean
  - uid: word.Word.SearchOptions.ignoreSpace
    summary: |-
      <span data-ttu-id="6f057-108">Obtient ou définit une valeur qui indique s’il faut ignorer tous les espaces entre les mots.</span><span class="sxs-lookup"><span data-stu-id="6f057-108">Gets or sets a value that indicates whether to ignore all whitespace between words.</span></span> <span data-ttu-id="6f057-109">Correspond à la case à cocher Ignorer les caractères d’espacement dans la boîte de dialogue Rechercher et remplacer.</span><span class="sxs-lookup"><span data-stu-id="6f057-109">Corresponds to the Ignore whitespace characters check box in the Find and Replace dialog box.</span></span>

      <span data-ttu-id="6f057-110">\[[Ensemble d’API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6f057-110">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: ignoreSpace
    fullName: ignoreSpace
    langs:
      - typeScript
    type: property
    syntax:
      content: 'ignoreSpace: boolean;'
      return:
        type:
          - boolean
  - uid: word.Word.SearchOptions.load
    summary: "<span data-ttu-id=\"6f057-111\">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"6f057-111\">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id=\"6f057-112\">Vous devez appeler «\_context.sync()\_» avant de lire les propriétés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"6f057-112\">You must call \"context.sync()\" before reading the properties.</span></span>"
    remarks: |-
      <span data-ttu-id="6f057-113">En plus de cette signature, cette méthode possède les signatures suivantes:</span><span class="sxs-lookup"><span data-stu-id="6f057-113">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="6f057-114">`load(option?: string | string[]): Word.SearchOptions`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="6f057-114">`load(option?: string | string[]): Word.SearchOptions` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="6f057-115">`load(option?: { select?: string; expand?: string; }): Word.SearchOptions`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="6f057-115">`load(option?: { select?: string; expand?: string; }): Word.SearchOptions` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="6f057-116">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.SearchOptions`-Uniquement disponible sur les types de collection.</span><span class="sxs-lookup"><span data-stu-id="6f057-116">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.SearchOptions` - Only available on collection types.</span></span> <span data-ttu-id="6f057-117">Elle est similaire à la signature précédente.</span><span class="sxs-lookup"><span data-stu-id="6f057-117">It is similar to the preceding signature.</span></span> <span data-ttu-id="6f057-118">Option. Top indique le nombre maximal d’éléments de collection qui peuvent être inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="6f057-118">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="6f057-119">Option. Skip indique le nombre d’éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="6f057-119">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="6f057-120">Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d’éléments.</span><span class="sxs-lookup"><span data-stu-id="6f057-120">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>

      #### <a name="examples"></a><span data-ttu-id="6f057-121">Exemples</span><span class="sxs-lookup"><span data-stu-id="6f057-121">Examples</span></span>

      ```javascript
      // Ignore punctuation search
      // Run a batch operation against the Word object model.
      Word.run(function (context) {
          
          // Queue a command to search the document and ignore punctuation.
          var searchResults = context.document.body.search('video you', {ignorePunct: true});

          // Queue a command to load the search results and get the font property values.
          context.load(searchResults, 'font');
          
          // Synchronize the document state by executing the queued commands, 
          // and return a promise to indicate task completion.
          return context.sync().then(function () {
              console.log('Found count: ' + searchResults.items.length);

              // Queue a set of commands to change the font for each found item.
              for (var i = 0; i < searchResults.items.length; i++) {
                  searchResults.items[i].font.color = 'purple';
                  searchResults.items[i].font.highlightColor = '#FFFF00'; //Yellow
                  searchResults.items[i].font.bold = true;
              }
              
              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync();
          });  
      })
      .catch(function (error) {
          console.log('Error: ' + JSON.stringify(error));
          if (error instanceof OfficeExtension.Error) {
              console.log('Debug info: ' + JSON.stringify(error.debugInfo));
          }
      });
      ```
      ```javascript
      // Search based on a prefix
      // Run a batch operation against the Word object model.
      Word.run(function (context) {
          
          // Queue a command to search the document based on a prefix.
          var searchResults = context.document.body.search('vid', {matchPrefix: true});

          // Queue a command to load the search results and get the font property values.
          context.load(searchResults, 'font');
          
          // Synchronize the document state by executing the queued commands, 
          // and return a promise to indicate task completion.
          return context.sync().then(function () {
              console.log('Found count: ' + searchResults.items.length);

              // Queue a set of commands to change the font for each found item.
              for (var i = 0; i < searchResults.items.length; i++) {
                  searchResults.items[i].font.color = 'purple';
                  searchResults.items[i].font.highlightColor = '#FFFF00'; //Yellow
                  searchResults.items[i].font.bold = true;
              }
              
              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync();
          });  
      })
      .catch(function (error) {
          console.log('Error: ' + JSON.stringify(error));
          if (error instanceof OfficeExtension.Error) {
              console.log('Debug info: ' + JSON.stringify(error.debugInfo));
          }
      });
      ```
      ```javascript
      // Search based on a suffix
      // Run a batch operation against the Word object model.
      Word.run(function (context) {

          // Queue a command to search the document for any string of characters after 'ly'.
          var searchResults = context.document.body.search('ly', {matchSuffix: true});

          // Queue a command to load the search results and get the font property values.
          context.load(searchResults, 'font');
          
          // Synchronize the document state by executing the queued commands, 
          // and return a promise to indicate task completion.
          return context.sync().then(function () {
              console.log('Found count: ' + searchResults.items.length);

              // Queue a set of commands to change the font for each found item.
              for (var i = 0; i < searchResults.items.length; i++) {
                  searchResults.items[i].font.color = 'orange';
                  searchResults.items[i].font.highlightColor = 'black';
                  searchResults.items[i].font.bold = true;
              }
              
              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync();
          });  
      })
      .catch(function (error) {
          console.log('Error: ' + JSON.stringify(error));
          if (error instanceof OfficeExtension.Error) {
              console.log('Debug info: ' + JSON.stringify(error.debugInfo));
          }
      });
      ```
      ```javascript
      // Search using a wildcard
      // Run a batch operation against the Word object model.
      Word.run(function (context) {
          
          // Queue a command to search the document with a wildcard
          // for any string of characters that starts with 'to' and ends with 'n'.
          var searchResults = context.document.body.search('to*n', {matchWildCards: true});

          // Queue a command to load the search results and get the font property values.
          context.load(searchResults, 'font');
          
          // Synchronize the document state by executing the queued commands, 
          // and return a promise to indicate task completion.
          return context.sync().then(function () {
              console.log('Found count: ' + searchResults.items.length);

              // Queue a set of commands to change the font for each found item.
              for (var i = 0; i < searchResults.items.length; i++) {
                  searchResults.items[i].font.color = 'purple';
                  searchResults.items[i].font.highlightColor = 'pink';
                  searchResults.items[i].font.bold = true;
              }
              
              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync();
          });  
      })
      .catch(function (error) {
          console.log('Error: ' + JSON.stringify(error));
          if (error instanceof OfficeExtension.Error) {
              console.log('Debug info: ' + JSON.stringify(error.debugInfo));
          }
      });
      ```
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Word.Interfaces.SearchOptionsLoadOptions): Word.SearchOptions;'
      return:
        type:
          - word.Word.SearchOptions
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - word.Word.Interfaces.SearchOptionsLoadOptions
  - uid: word.Word.SearchOptions.load_1
    summary: <span data-ttu-id="6f057-122">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="6f057-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="6f057-123">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="6f057-123">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.SearchOptions;'
      return:
        type:
          - word.Word.SearchOptions
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="6f057-124">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="6f057-124">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: word.Word.SearchOptions.load_2
    summary: <span data-ttu-id="6f057-125">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="6f057-125">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="6f057-126">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="6f057-126">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Word.SearchOptions;'
      return:
        type:
          - word.Word.SearchOptions
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="6f057-127">Où propertyNamesAndPaths. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et propertyNamesAndPaths. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="6f057-127">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: word.Word.SearchOptions.matchCase
    summary: |-
      <span data-ttu-id="6f057-128">Obtient ou définit une valeur indiquant si la recherche respecte la casse.</span><span class="sxs-lookup"><span data-stu-id="6f057-128">Gets or sets a value that indicates whether to perform a case sensitive search.</span></span> <span data-ttu-id="6f057-129">Correspond à la case à cocher respecter la casse dans la boîte de dialogue Rechercher et remplacer.</span><span class="sxs-lookup"><span data-stu-id="6f057-129">Corresponds to the Match case check box in the Find and Replace dialog box.</span></span>

      <span data-ttu-id="6f057-130">\[[Ensemble d’API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6f057-130">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: matchCase
    fullName: matchCase
    langs:
      - typeScript
    type: property
    syntax:
      content: 'matchCase: boolean;'
      return:
        type:
          - boolean
  - uid: word.Word.SearchOptions.matchPrefix
    summary: |-
      <span data-ttu-id="6f057-p109">Obtient ou définit une valeur indiquant si la recherche doit porter sur les mots qui commencent par la chaîne entrée. Correspond à la case à cocher Préfixe de la boîte de dialogue Rechercher et remplacer.</span><span class="sxs-lookup"><span data-stu-id="6f057-p109">Gets or sets a value that indicates whether to match words that begin with the search string. Corresponds to the Match prefix check box in the Find and Replace dialog box.</span></span>

      <span data-ttu-id="6f057-133">\[[Ensemble d’API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6f057-133">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: matchPrefix
    fullName: matchPrefix
    langs:
      - typeScript
    type: property
    syntax:
      content: 'matchPrefix: boolean;'
      return:
        type:
          - boolean
  - uid: word.Word.SearchOptions.matchSuffix
    summary: |-
      <span data-ttu-id="6f057-p110">Obtient ou définit une valeur indiquant si la recherche doit porter sur les mots qui se terminent par la chaîne entrée. Correspond à la case à cocher Suffixe de la boîte de dialogue Rechercher et remplacer.</span><span class="sxs-lookup"><span data-stu-id="6f057-p110">Gets or sets a value that indicates whether to match words that end with the search string. Corresponds to the Match suffix check box in the Find and Replace dialog box.</span></span>

      <span data-ttu-id="6f057-136">\[[Ensemble d’API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6f057-136">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: matchSuffix
    fullName: matchSuffix
    langs:
      - typeScript
    type: property
    syntax:
      content: 'matchSuffix: boolean;'
      return:
        type:
          - boolean
  - uid: word.Word.SearchOptions.matchWholeWord
    summary: |-
      <span data-ttu-id="6f057-p111">Obtient ou définit une valeur indiquant si la recherche doit uniquement porter sur des mots entiers et exclure le texte s’il est inclus dans un mot plus long. Correspond à la case à cocher Mot entier de la boîte de dialogue Rechercher et remplacer.</span><span class="sxs-lookup"><span data-stu-id="6f057-p111">Gets or sets a value that indicates whether to find operation only entire words, not text that is part of a larger word. Corresponds to the Find whole words only check box in the Find and Replace dialog box.</span></span>

      <span data-ttu-id="6f057-139">\[[Ensemble d’API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6f057-139">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: matchWholeWord
    fullName: matchWholeWord
    langs:
      - typeScript
    type: property
    syntax:
      content: 'matchWholeWord: boolean;'
      return:
        type:
          - boolean
  - uid: word.Word.SearchOptions.matchWildcards
    summary: |-
      <span data-ttu-id="6f057-p112">Obtient ou définit une valeur indiquant si la recherche est effectuée à l’aide d’opérateurs de recherche spéciaux. Correspond à la case Caractères génériques de la boîte de dialogue Rechercher et remplacer.</span><span class="sxs-lookup"><span data-stu-id="6f057-p112">Gets or sets a value that indicates whether the search will be performed using special search operators. Corresponds to the Use wildcards check box in the Find and Replace dialog box.</span></span>

      <span data-ttu-id="6f057-142">\[[Ensemble d’API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6f057-142">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: matchWildcards
    fullName: matchWildcards
    langs:
      - typeScript
    type: property
    syntax:
      content: 'matchWildcards: boolean;'
      return:
        type:
          - boolean
  - uid: word.Word.SearchOptions.matchWildCards
    name: matchWildCards
    fullName: matchWildCards
    langs:
      - typeScript
    type: property
    syntax:
      content: 'matchWildCards: boolean;'
      return:
        type:
          - boolean
  - uid: word.Word.SearchOptions.newObject
    summary: <span data-ttu-id="6f057-143">Créer une nouvelle instance de l’objet Word. SearchOptions</span><span class="sxs-lookup"><span data-stu-id="6f057-143">Create a new instance of Word.SearchOptions object</span></span>
    name: newObject(context)
    fullName: newObject(context)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'static newObject(context: OfficeExtension.ClientRequestContext): Word.SearchOptions;'
      return:
        type:
          - word.Word.SearchOptions
        description: ''
      parameters:
        - id: context
          description: ''
          type:
            - OfficeExtension.ClientRequestContext
  - uid: word.Word.SearchOptions.set
    summary: '<span data-ttu-id="6f057-144">Définit plusieurs propriétés d’un objet en même temps.</span><span class="sxs-lookup"><span data-stu-id="6f057-144">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="6f057-145">Vous pouvez transmettre un objet plain avec les propriétés appropriées, ou un autre objet API du même type.</span><span class="sxs-lookup"><span data-stu-id="6f057-145">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="6f057-146">Cette méthode est dotée de la signature supplémentaire suivante:</span><span class="sxs-lookup"><span data-stu-id="6f057-146">This method has the following additional signature:</span></span>

      `set(properties: Word.SearchOptions): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.SearchOptionsUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="6f057-147">Objet JavaScript avec des propriétés qui sont structurées isomorphically vers les propriétés de l’objet sur lequel la méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="6f057-147">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.SearchOptionsUpdateData
        - id: options
          description: <span data-ttu-id="6f057-148">Fournit une option permettant de supprimer les erreurs si l’objet Properties tente de définir des propriétés en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="6f057-148">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - OfficeExtension.UpdateOptions
  - uid: word.Word.SearchOptions.set_1
    summary: '<span data-ttu-id="6f057-149">Définit plusieurs propriétés de l’objet en même temps, en fonction d’un objet chargé existant.</span><span class="sxs-lookup"><span data-stu-id="6f057-149">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Word.SearchOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - word.Word.SearchOptions
  - uid: word.Word.SearchOptions.toJSON
    summary: '<span data-ttu-id="6f057-150">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="6f057-150">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="6f057-151">.</span><span class="sxs-lookup"><span data-stu-id="6f057-151"></span></span> <span data-ttu-id="6f057-152">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="6f057-152"></span></span><!-- --><span data-ttu-id="6f057-153">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que l’objet Word. SearchOptions d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`Word.Interfaces.SearchOptionsData`</span><span class="sxs-lookup"><span data-stu-id="6f057-153">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Word.SearchOptions object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.SearchOptionsData`</span></span><!-- --><span data-ttu-id="6f057-154">) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l’objet d’origine.</span><span class="sxs-lookup"><span data-stu-id="6f057-154">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.SearchOptionsData;'
      return:
        type:
          - word.Word.Interfaces.SearchOptionsData
        description: ''