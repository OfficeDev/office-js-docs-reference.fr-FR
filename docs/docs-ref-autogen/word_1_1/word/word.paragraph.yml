### YamlMime:UniversalReference
items:
  - uid: 'word!Word.Paragraph:class'
    summary: "<span data-ttu-id=\"0a108-101\">Représente un seul paragraphe dans une sélection, une plage, un contrôle de contenu ou le corps d’un document.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-101\">Represents a single paragraph in a selection, range, content control, or document body.</span></span>\n\n<span data-ttu-id=\"0a108-102\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-102\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: Word.Paragraph
    fullName: Word.Paragraph
    langs:
      - typeScript
    type: class
    extends:
      - 'word!OfficeExtension.ClientObject:class'
    package: word!
    children:
      - 'word!Word.Paragraph#alignment:member'
      - 'word!Word.Paragraph#clear:member(1)'
      - 'word!Word.Paragraph#contentControls:member'
      - 'word!Word.Paragraph#context:member'
      - 'word!Word.Paragraph#delete:member(1)'
      - 'word!Word.Paragraph#firstLineIndent:member'
      - 'word!Word.Paragraph#font:member'
      - 'word!Word.Paragraph#getHtml:member(1)'
      - 'word!Word.Paragraph#getOoxml:member(1)'
      - 'word!Word.Paragraph#inlinePictures:member'
      - 'word!Word.Paragraph#insertBreak:member(1)'
      - 'word!Word.Paragraph#insertBreak:member(2)'
      - 'word!Word.Paragraph#insertContentControl:member(1)'
      - 'word!Word.Paragraph#insertFileFromBase64:member(1)'
      - 'word!Word.Paragraph#insertFileFromBase64:member(2)'
      - 'word!Word.Paragraph#insertHtml:member(1)'
      - 'word!Word.Paragraph#insertHtml:member(2)'
      - 'word!Word.Paragraph#insertInlinePictureFromBase64:member(1)'
      - 'word!Word.Paragraph#insertInlinePictureFromBase64:member(2)'
      - 'word!Word.Paragraph#insertOoxml:member(1)'
      - 'word!Word.Paragraph#insertOoxml:member(2)'
      - 'word!Word.Paragraph#insertParagraph:member(1)'
      - 'word!Word.Paragraph#insertParagraph:member(2)'
      - 'word!Word.Paragraph#insertText:member(1)'
      - 'word!Word.Paragraph#insertText:member(2)'
      - 'word!Word.Paragraph#leftIndent:member'
      - 'word!Word.Paragraph#lineSpacing:member'
      - 'word!Word.Paragraph#lineUnitAfter:member'
      - 'word!Word.Paragraph#lineUnitBefore:member'
      - 'word!Word.Paragraph#load:member(1)'
      - 'word!Word.Paragraph#load:member(2)'
      - 'word!Word.Paragraph#load:member(3)'
      - 'word!Word.Paragraph#outlineLevel:member'
      - 'word!Word.Paragraph#parentContentControl:member'
      - 'word!Word.Paragraph#rightIndent:member'
      - 'word!Word.Paragraph#search:member(1)'
      - 'word!Word.Paragraph#select:member(1)'
      - 'word!Word.Paragraph#select:member(2)'
      - 'word!Word.Paragraph#set:member(1)'
      - 'word!Word.Paragraph#set:member(2)'
      - 'word!Word.Paragraph#spaceAfter:member'
      - 'word!Word.Paragraph#spaceBefore:member'
      - 'word!Word.Paragraph#style:member'
      - 'word!Word.Paragraph#text:member'
      - 'word!Word.Paragraph#toJSON:member(1)'
      - 'word!Word.Paragraph#track:member(1)'
      - 'word!Word.Paragraph#untrack:member(1)'
  - uid: 'word!Word.Paragraph#alignment:member'
    summary: "<span data-ttu-id=\"0a108-103\">Obtient ou définit l’alignement d’un paragraphe.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-103\">Gets or sets the alignment for a paragraph.</span></span> <span data-ttu-id=\"0a108-104\">La valeur peut être «\_left\_» (gauche), «\_centered\_» (centré), «\_right\_» (droite) ou «\_justified\_» (justifié).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-104\">The value can be 'left', 'centered', 'right', or 'justified'.</span></span>\n\n<span data-ttu-id=\"0a108-105\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-105\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: alignment
    fullName: alignment
    langs:
      - typeScript
    type: property
    syntax:
      content: 'alignment: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified";'
      return:
        type:
          - 'word!Word.Paragraph#alignment~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0a108-106">Exemples</span><span class="sxs-lookup"><span data-stu-id="0a108-106">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            // Centers last paragraph alignment.
            context.document.body.paragraphs.getLast().alignment = "Centered";

            await context.sync();
          });
          ```
  - uid: 'word!Word.Paragraph#clear:member(1)'
    summary: "<span data-ttu-id=\"0a108-107\">Efface le contenu de l’objet de paragraphe.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-107\">Clears the contents of the paragraph object.</span></span> <span data-ttu-id=\"0a108-108\">L’utilisateur peut effectuer l’opération d’annulation sur le contenu effacé.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-108\">The user can perform the undo operation on the cleared content.</span></span>\n\n<span data-ttu-id=\"0a108-109\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-109\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0a108-110">Exemples</span><span class="sxs-lookup"><span data-stu-id="0a108-110">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the style property for all of the paragraphs.
              context.load(paragraphs, 'style');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to clear the contents of the first paragraph.
                  paragraphs.items[0].clear();

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Cleared the contents of the first paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Paragraph#contentControls:member'
    summary: "<span data-ttu-id=\"0a108-111\">Obtient la collection d’objets de contrôle de contenu dans le paragraphe.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-111\">Gets the collection of content control objects in the paragraph.</span></span> <span data-ttu-id=\"0a108-112\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-112\">Read-only.</span></span>\n\n<span data-ttu-id=\"0a108-113\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-113\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: contentControls
    fullName: contentControls
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly contentControls: Word.ContentControlCollection;'
      return:
        type:
          - 'word!Word.ContentControlCollection:class'
  - uid: 'word!Word.Paragraph#context:member'
    summary: <span data-ttu-id="0a108-114">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="0a108-114">The request context associated with the object.</span></span> <span data-ttu-id="0a108-115">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="0a108-115">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'word!Word.RequestContext:class'
  - uid: 'word!Word.Paragraph#delete:member(1)'
    summary: "<span data-ttu-id=\"0a108-116\">Supprime le paragraphe et son contenu du document.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-116\">Deletes the paragraph and its content from the document.</span></span>\n\n<span data-ttu-id=\"0a108-117\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-117\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0a108-118">Exemples</span><span class="sxs-lookup"><span data-stu-id="0a108-118">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the text property for all of the paragraphs.
              context.load(paragraphs, 'text');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to delete the first paragraph.
                  paragraphs.items[0].delete();

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Deleted the first paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Paragraph#firstLineIndent:member'
    summary: "<span data-ttu-id=\"0a108-p105\">Renvoie ou définit la valeur, en points, du retrait de première ligne ou du retrait négatif. Utilisez une valeur positive pour définir un retrait de première ligne et une valeur négative pour définir un retrait négatif.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-p105\">Gets or sets the value, in points, for a first line or hanging indent. Use a positive value to set a first-line indent, and use a negative value to set a hanging indent.</span></span>\n\n<span data-ttu-id=\"0a108-121\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-121\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: firstLineIndent
    fullName: firstLineIndent
    langs:
      - typeScript
    type: property
    syntax:
      content: 'firstLineIndent: number;'
      return:
        type:
          - number
  - uid: 'word!Word.Paragraph#font:member'
    summary: "<span data-ttu-id=\"0a108-122\">Obtient le format de texte du paragraphe.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-122\">Gets the text format of the paragraph.</span></span> <span data-ttu-id=\"0a108-123\">Utilisez cette propriété pour obtenir et définir le nom de la police, la taille, la couleur et d’autres propriétés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-123\">Use this to get and set font name, size, color, and other properties.</span></span> <span data-ttu-id=\"0a108-124\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-124\">Read-only.</span></span>\n\n<span data-ttu-id=\"0a108-125\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-125\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: font
    fullName: font
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly font: Word.Font;'
      return:
        type:
          - 'word!Word.Font:class'
  - uid: 'word!Word.Paragraph#getHtml:member(1)'
    summary: "<span data-ttu-id=\"0a108-126\">Obtient une représentation HTML de l’objet Paragraph.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-126\">Gets an HTML representation of the paragraph object.</span></span> <span data-ttu-id=\"0a108-127\">Lorsqu’elle est affichée dans une page Web ou dans la visionneuse HTML, la mise en forme est une correspondance ferme, mais pas exacte, avec la mise en forme du document.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-127\">When rendered in a web page or HTML viewer, the formatting will be a close, but not exact, match to the formatting of the document.</span></span> <span data-ttu-id=\"0a108-128\">Cette méthode ne renvoie pas exactement le même code HTML pour le même document sur différentes plateformes (Windows, Mac, etc.).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-128\">This method does not return the exact same HTML for the same document on different platforms (Windows, Mac, etc.).</span></span> <span data-ttu-id=\"0a108-129\">Si vous avez besoin d’une fidélité exacte ou d’une cohérence `Paragraph.getOoxml()` entre les plateformes, utilisez et convertissez le code XML renvoyé en html.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-129\">If you need exact fidelity, or consistency across platforms, use `Paragraph.getOoxml()` and convert the returned XML to HTML.</span></span>\n\n<span data-ttu-id=\"0a108-130\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-130\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: getHtml()
    fullName: getHtml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getHtml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - 'word!Word.Paragraph#getHtml~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0a108-131">Exemples</span><span class="sxs-lookup"><span data-stu-id="0a108-131">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the style property for all of the paragraphs.
              context.load(paragraphs, 'style');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a a set of commands to get the HTML of the first paragraph.
                  var html = paragraphs.items[0].getHtml();

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Paragraph HTML: ' + html.value);
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Paragraph#getOoxml:member(1)'
    summary: "<span data-ttu-id=\"0a108-132\">Obtient la représentation Office Open XML (OOXML) de l’objet de paragraphe.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-132\">Gets the Office Open XML (OOXML) representation of the paragraph object.</span></span>\n\n<span data-ttu-id=\"0a108-133\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-133\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: getOoxml()
    fullName: getOoxml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getOoxml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - 'word!Word.Paragraph#getOoxml~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0a108-134">Exemples</span><span class="sxs-lookup"><span data-stu-id="0a108-134">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the style property for the top 2 paragraphs.
              context.load(paragraphs, {select: 'style', top: 2} );

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a a set of commands to get the OOXML of the first paragraph.
                  var ooxml = paragraphs.items[0].getOoxml();

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Paragraph OOXML: ' + ooxml.value);
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Paragraph#inlinePictures:member'
    summary: "<span data-ttu-id=\"0a108-135\">Obtient la collection d’objets InlinePicture dans le paragraphe.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-135\">Gets the collection of InlinePicture objects in the paragraph.</span></span> <span data-ttu-id=\"0a108-136\">La collection n’inclut pas d’images flottantes.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-136\">The collection does not include floating images.</span></span> <span data-ttu-id=\"0a108-137\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-137\">Read-only.</span></span>\n\n<span data-ttu-id=\"0a108-138\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-138\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: inlinePictures
    fullName: inlinePictures
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly inlinePictures: Word.InlinePictureCollection;'
      return:
        type:
          - 'word!Word.InlinePictureCollection:class'
  - uid: 'word!Word.Paragraph#insertBreak:member(1)'
    summary: "<span data-ttu-id=\"0a108-139\">Insère un saut à l’emplacement spécifié du document principal.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-139\">Inserts a break at the specified location in the main document.</span></span> <span data-ttu-id=\"0a108-140\">La valeur insertLocation peut être définie sur «\_Before\_» (avant) ou «\_After\_» (après).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-140\">The insertLocation value can be 'Before' or 'After'.</span></span>\n\n<span data-ttu-id=\"0a108-141\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-141\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'insertBreak(breakType, insertLocation)'
    fullName: 'insertBreak(breakType, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakType: Word.BreakType, insertLocation: Word.InsertLocation): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0a108-142">Exemples</span><span class="sxs-lookup"><span data-stu-id="0a108-142">Examples</span></span>

          ```typescript
          Word.run(async (context) => {
            context.document.body.paragraphs.getFirst().insertBreak(Word.BreakType.line, "After");

            await context.sync();
            console.log("success");
          });
          ```
          ```typescript
          await Word.run(async (context) => {
            context.document.body.paragraphs.getFirst().insertBreak(Word.BreakType.page, "After");

            await context.sync();
            console.log("success");
          });
          ```
      parameters:
        - id: breakType
          description: <span data-ttu-id="0a108-143">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="0a108-143">Required.</span></span> <span data-ttu-id="0a108-144">Type de saut à ajouter au document.</span><span class="sxs-lookup"><span data-stu-id="0a108-144">The break type to add to the document.</span></span>
          type:
            - 'word!Word.BreakType:enum'
        - id: insertLocation
          description: "<span data-ttu-id=\"0a108-145\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-145\">Required.</span></span> <span data-ttu-id=\"0a108-146\">La valeur peut être «\_Before\_» (avant) » ou «\_After\_» (après).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-146\">The value can be 'Before' or 'After'.</span></span>"
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Paragraph#insertBreak:member(2)'
    summary: "<span data-ttu-id=\"0a108-147\">Insère un saut à l’emplacement spécifié du document principal.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-147\">Inserts a break at the specified location in the main document.</span></span> <span data-ttu-id=\"0a108-148\">La valeur insertLocation peut être définie sur «\_Before\_» (avant) ou «\_After\_» (après).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-148\">The insertLocation value can be 'Before' or 'After'.</span></span>\n\n<span data-ttu-id=\"0a108-149\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-149\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'insertBreak(breakTypeString, insertLocation)'
    fullName: 'insertBreak(breakTypeString, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakTypeString: "Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line", insertLocation: "Before" | "After" | "Start" | "End" | "Replace"): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0a108-150">Exemples</span><span class="sxs-lookup"><span data-stu-id="0a108-150">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the style property for the top 2 paragraphs.
              // We never perform an empty load. We always must request a property.
              context.load(paragraphs, {select: 'style', top: 2} );

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the first paragraph.
                  var paragraph = paragraphs.items[0];

                  // Queue a command to insert a page break after the first paragraph.
                  paragraph.insertBreak('page', 'After');

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Inserted a page break after the paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: breakTypeString
          description: <span data-ttu-id="0a108-151">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="0a108-151">Required.</span></span> <span data-ttu-id="0a108-152">Type de saut à ajouter au document.</span><span class="sxs-lookup"><span data-stu-id="0a108-152">The break type to add to the document.</span></span>
          type:
            - '"Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line"'
        - id: insertLocation
          description: "<span data-ttu-id=\"0a108-153\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-153\">Required.</span></span> <span data-ttu-id=\"0a108-154\">La valeur peut être «\_Before\_» (avant) » ou «\_After\_» (après).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-154\">The value can be 'Before' or 'After'.</span></span>"
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Paragraph#insertContentControl:member(1)'
    summary: "<span data-ttu-id=\"0a108-155\">Encadre l’objet de paragraphe avec un contrôle de contenu de texte enrichi.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-155\">Wraps the paragraph object with a rich text content control.</span></span>\n\n<span data-ttu-id=\"0a108-156\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-156\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: insertContentControl()
    fullName: insertContentControl()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertContentControl(): Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0a108-157">Exemples</span><span class="sxs-lookup"><span data-stu-id="0a108-157">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the style property for the top 2 paragraphs.
              // We never perform an empty load. We always must request a property.
              context.load(paragraphs, {select: 'style', top: 2} );

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the first paragraph.
                  var paragraph = paragraphs.items[0];

                  // Queue a command to wrap the first paragraph in a rich text content control.
                  paragraph.insertContentControl();

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Wrapped the first paragraph in a content control.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Paragraph#insertFileFromBase64:member(1)'
    summary: "<span data-ttu-id=\"0a108-158\">Insère un document dans le paragraphe à l’emplacement spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-158\">Inserts a document into the paragraph at the specified location.</span></span> <span data-ttu-id=\"0a108-159\">La valeur insertLocation peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-159\">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>\n\n<span data-ttu-id=\"0a108-160\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-160\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'insertFileFromBase64(base64File, insertLocation)'
    fullName: 'insertFileFromBase64(base64File, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: base64File
          description: <span data-ttu-id="0a108-161">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="0a108-161">Required.</span></span> <span data-ttu-id="0a108-162">Contenu encodé en base64 d’un fichier. docx.</span><span class="sxs-lookup"><span data-stu-id="0a108-162">The base64 encoded content of a .docx file.</span></span>
          type:
            - string
        - id: insertLocation
          description: "<span data-ttu-id=\"0a108-163\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-163\">Required.</span></span> <span data-ttu-id=\"0a108-164\">La valeur peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-164\">The value can be 'Replace', 'Start', or 'End'.</span></span>"
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Paragraph#insertFileFromBase64:member(2)'
    summary: "<span data-ttu-id=\"0a108-165\">Insère un document dans le paragraphe à l’emplacement spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-165\">Inserts a document into the paragraph at the specified location.</span></span> <span data-ttu-id=\"0a108-166\">La valeur insertLocation peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-166\">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>\n\n<span data-ttu-id=\"0a108-167\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-167\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'insertFileFromBase64(base64File, insertLocationString)'
    fullName: 'insertFileFromBase64(base64File, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: base64File
          description: <span data-ttu-id="0a108-168">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="0a108-168">Required.</span></span> <span data-ttu-id="0a108-169">Contenu encodé en base64 d’un fichier. docx.</span><span class="sxs-lookup"><span data-stu-id="0a108-169">The base64 encoded content of a .docx file.</span></span>
          type:
            - string
        - id: insertLocationString
          description: "<span data-ttu-id=\"0a108-170\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-170\">Required.</span></span> <span data-ttu-id=\"0a108-171\">La valeur peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-171\">The value can be 'Replace', 'Start', or 'End'.</span></span>"
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Paragraph#insertHtml:member(1)'
    summary: "<span data-ttu-id=\"0a108-172\">Insère du code HTML dans le paragraphe à l’emplacement spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-172\">Inserts HTML into the paragraph at the specified location.</span></span> <span data-ttu-id=\"0a108-173\">La valeur insertLocation peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-173\">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>\n\n<span data-ttu-id=\"0a108-174\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-174\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'insertHtml(html, insertLocation)'
    fullName: 'insertHtml(html, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0a108-175">Exemples</span><span class="sxs-lookup"><span data-stu-id="0a108-175">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the style property for the top 2 paragraphs.
              // We never perform an empty load. We always must request a property.
              context.load(paragraphs, {select: 'style', top: 2} );

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the first paragraph.
                  var paragraph = paragraphs.items[0];

                  // Queue a command to insert HTML content at the end of the first paragraph.
                  paragraph.insertHtml('<strong>Inserted HTML.</strong>', Word.InsertLocation.end);

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Inserted HTML content at the end of the first paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: html
          description: <span data-ttu-id="0a108-176">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="0a108-176">Required.</span></span> <span data-ttu-id="0a108-177">Code HTML à insérer dans le paragraphe.</span><span class="sxs-lookup"><span data-stu-id="0a108-177">The HTML to be inserted in the paragraph.</span></span>
          type:
            - string
        - id: insertLocation
          description: "<span data-ttu-id=\"0a108-178\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-178\">Required.</span></span> <span data-ttu-id=\"0a108-179\">La valeur peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-179\">The value can be 'Replace', 'Start', or 'End'.</span></span>"
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Paragraph#insertHtml:member(2)'
    summary: "<span data-ttu-id=\"0a108-180\">Insère du code HTML dans le paragraphe à l’emplacement spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-180\">Inserts HTML into the paragraph at the specified location.</span></span> <span data-ttu-id=\"0a108-181\">La valeur insertLocation peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-181\">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>\n\n<span data-ttu-id=\"0a108-182\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-182\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'insertHtml(html, insertLocationString)'
    fullName: 'insertHtml(html, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: html
          description: <span data-ttu-id="0a108-183">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="0a108-183">Required.</span></span> <span data-ttu-id="0a108-184">Code HTML à insérer dans le paragraphe.</span><span class="sxs-lookup"><span data-stu-id="0a108-184">The HTML to be inserted in the paragraph.</span></span>
          type:
            - string
        - id: insertLocationString
          description: "<span data-ttu-id=\"0a108-185\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-185\">Required.</span></span> <span data-ttu-id=\"0a108-186\">La valeur peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-186\">The value can be 'Replace', 'Start', or 'End'.</span></span>"
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Paragraph#insertInlinePictureFromBase64:member(1)'
    summary: "<span data-ttu-id=\"0a108-187\">Insère une image dans le paragraphe à l’emplacement spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-187\">Inserts a picture into the paragraph at the specified location.</span></span> <span data-ttu-id=\"0a108-188\">La valeur insertLocation peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-188\">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>\n\n<span data-ttu-id=\"0a108-189\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-189\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocation)'
    fullName: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocation: Word.InsertLocation): Word.InlinePicture;'
      return:
        type:
          - 'word!Word.InlinePicture:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0a108-190">Exemples</span><span class="sxs-lookup"><span data-stu-id="0a108-190">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the style property for all of the paragraphs.
              context.load(paragraphs, 'style');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the first paragraph.
                  var paragraph = paragraphs.items[0];

                  var b64encodedImg = "iVBORw0KGgoAAAANSUhEUgAAAB4AAAANCAIAAAAxEEnAAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAACFSURBVDhPtY1BEoQwDMP6/0+XgIMTBAeYoTqso9Rkx1zG+tNj1H94jgGzeNSjteO5vtQQuG2seO0av8LzGbe3anzRoJ4ybm/VeKEerAEbAUpW4aWQCmrGFWykRzGBCnYy2ha3oAIq2MloW9yCCqhgJ6NtcQsqoIKdjLbFLaiACnYyf2fODbrjZcXfr2F4AAAAAElFTkSuQmCC";

                  // Queue a command to insert a base64 encoded image at the beginning of the first paragraph.
                  paragraph.insertInlinePictureFromBase64(b64encodedImg, Word.InsertLocation.start);

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Added an image to the first paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: base64EncodedImage
          description: <span data-ttu-id="0a108-191">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="0a108-191">Required.</span></span> <span data-ttu-id="0a108-192">Image encodée en base64 à insérer.</span><span class="sxs-lookup"><span data-stu-id="0a108-192">The base64 encoded image to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: "<span data-ttu-id=\"0a108-193\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-193\">Required.</span></span> <span data-ttu-id=\"0a108-194\">La valeur peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-194\">The value can be 'Replace', 'Start', or 'End'.</span></span>"
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Paragraph#insertInlinePictureFromBase64:member(2)'
    summary: "<span data-ttu-id=\"0a108-195\">Insère une image dans le paragraphe à l’emplacement spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-195\">Inserts a picture into the paragraph at the specified location.</span></span> <span data-ttu-id=\"0a108-196\">La valeur insertLocation peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-196\">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>\n\n<span data-ttu-id=\"0a108-197\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-197\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)'
    fullName: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.InlinePicture;'
      return:
        type:
          - 'word!Word.InlinePicture:class'
        description: ''
      parameters:
        - id: base64EncodedImage
          description: <span data-ttu-id="0a108-198">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="0a108-198">Required.</span></span> <span data-ttu-id="0a108-199">Image encodée en base64 à insérer.</span><span class="sxs-lookup"><span data-stu-id="0a108-199">The base64 encoded image to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: "<span data-ttu-id=\"0a108-200\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-200\">Required.</span></span> <span data-ttu-id=\"0a108-201\">La valeur peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-201\">The value can be 'Replace', 'Start', or 'End'.</span></span>"
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Paragraph#insertOoxml:member(1)'
    summary: "<span data-ttu-id=\"0a108-202\">Insère OOXML dans le paragraphe à l’emplacement spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-202\">Inserts OOXML into the paragraph at the specified location.</span></span> <span data-ttu-id=\"0a108-203\">La valeur insertLocation peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-203\">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>\n\n<span data-ttu-id=\"0a108-204\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-204\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'insertOoxml(ooxml, insertLocation)'
    fullName: 'insertOoxml(ooxml, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: ooxml
          description: <span data-ttu-id="0a108-205">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="0a108-205">Required.</span></span> <span data-ttu-id="0a108-206">OOXML à insérer dans le paragraphe.</span><span class="sxs-lookup"><span data-stu-id="0a108-206">The OOXML to be inserted in the paragraph.</span></span>
          type:
            - string
        - id: insertLocation
          description: "<span data-ttu-id=\"0a108-207\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-207\">Required.</span></span> <span data-ttu-id=\"0a108-208\">La valeur peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-208\">The value can be 'Replace', 'Start', or 'End'.</span></span>"
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Paragraph#insertOoxml:member(2)'
    summary: "<span data-ttu-id=\"0a108-209\">Insère OOXML dans le paragraphe à l’emplacement spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-209\">Inserts OOXML into the paragraph at the specified location.</span></span> <span data-ttu-id=\"0a108-210\">La valeur insertLocation peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-210\">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>\n\n<span data-ttu-id=\"0a108-211\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-211\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'insertOoxml(ooxml, insertLocationString)'
    fullName: 'insertOoxml(ooxml, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: ooxml
          description: <span data-ttu-id="0a108-212">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="0a108-212">Required.</span></span> <span data-ttu-id="0a108-213">OOXML à insérer dans le paragraphe.</span><span class="sxs-lookup"><span data-stu-id="0a108-213">The OOXML to be inserted in the paragraph.</span></span>
          type:
            - string
        - id: insertLocationString
          description: "<span data-ttu-id=\"0a108-214\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-214\">Required.</span></span> <span data-ttu-id=\"0a108-215\">La valeur peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-215\">The value can be 'Replace', 'Start', or 'End'.</span></span>"
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Paragraph#insertParagraph:member(1)'
    summary: "<span data-ttu-id=\"0a108-216\">Insère un paragraphe à l’emplacement spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-216\">Inserts a paragraph at the specified location.</span></span> <span data-ttu-id=\"0a108-217\">La valeur insertLocation peut être définie sur «\_Before\_» (avant) ou «\_After\_» (après).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-217\">The insertLocation value can be 'Before' or 'After'.</span></span>\n\n<span data-ttu-id=\"0a108-218\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-218\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'insertParagraph(paragraphText, insertLocation)'
    fullName: 'insertParagraph(paragraphText, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0a108-219">Exemples</span><span class="sxs-lookup"><span data-stu-id="0a108-219">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the style property for the top 2 paragraphs.
              // We never perform an empty load. We always must request a property.
              context.load(paragraphs, {select: 'style', top: 2} );

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the first paragraph.
                  var paragraph = paragraphs.items[0];

                  // Queue a command to insert the paragraph after the current paragraph.
                  paragraph.insertParagraph('Content of a new paragraph', Word.InsertLocation.after);

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Inserted a new paragraph at the end of the first paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```typescript
          await Word.run(async (context) => {
            // Second sentence, let's insert it as a paragraph after the previously inserted one.
            let secondSentence = context.document.body.insertParagraph(
              "This is the first text with a custom style.",
              "End"
            );
            secondSentence.font.set({
              bold: false,
              italic: true,
              name: "Berlin Sans FB",
              color: "blue",
              size: 30
            });

            await context.sync();
          });
          ```
      parameters:
        - id: paragraphText
          description: <span data-ttu-id="0a108-220">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="0a108-220">Required.</span></span> <span data-ttu-id="0a108-221">Texte de paragraphe à insérer.</span><span class="sxs-lookup"><span data-stu-id="0a108-221">The paragraph text to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: "<span data-ttu-id=\"0a108-222\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-222\">Required.</span></span> <span data-ttu-id=\"0a108-223\">La valeur peut être «\_Before\_» (avant) » ou «\_After\_» (après).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-223\">The value can be 'Before' or 'After'.</span></span>"
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Paragraph#insertParagraph:member(2)'
    summary: "<span data-ttu-id=\"0a108-224\">Insère un paragraphe à l’emplacement spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-224\">Inserts a paragraph at the specified location.</span></span> <span data-ttu-id=\"0a108-225\">La valeur insertLocation peut être définie sur «\_Before\_» (avant) ou «\_After\_» (après).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-225\">The insertLocation value can be 'Before' or 'After'.</span></span>\n\n<span data-ttu-id=\"0a108-226\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-226\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'insertParagraph(paragraphText, insertLocationString)'
    fullName: 'insertParagraph(paragraphText, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
      parameters:
        - id: paragraphText
          description: <span data-ttu-id="0a108-227">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="0a108-227">Required.</span></span> <span data-ttu-id="0a108-228">Texte de paragraphe à insérer.</span><span class="sxs-lookup"><span data-stu-id="0a108-228">The paragraph text to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: "<span data-ttu-id=\"0a108-229\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-229\">Required.</span></span> <span data-ttu-id=\"0a108-230\">La valeur peut être «\_Before\_» (avant) » ou «\_After\_» (après).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-230\">The value can be 'Before' or 'After'.</span></span>"
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Paragraph#insertText:member(1)'
    summary: "<span data-ttu-id=\"0a108-231\">Insère du texte dans le paragraphe à l’emplacement spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-231\">Inserts text into the paragraph at the specified location.</span></span> <span data-ttu-id=\"0a108-232\">La valeur insertLocation peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-232\">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>\n\n<span data-ttu-id=\"0a108-233\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-233\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'insertText(text, insertLocation)'
    fullName: 'insertText(text, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0a108-234">Exemples</span><span class="sxs-lookup"><span data-stu-id="0a108-234">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the style property for the top 2 paragraphs.
              // We never perform an empty load. We always must request a property.
              context.load(paragraphs, {select: 'style', top: 2} );

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the first paragraph.
                  var paragraph = paragraphs.items[0];

                  // Queue a command to insert text into the end of the paragraph.
                  paragraph.insertText('New text inserted into the paragraph.', Word.InsertLocation.end);

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Inserted text at the end of the first paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```typescript
          await Word.run(async (context) => {
            // Replace the last paragraph.
            let range = context.document.body.paragraphs.getLast().insertText("Just replaced the last paragraph!", "Replace");
            range.font.highlightColor = "black";
            range.font.color = "white";

            await context.sync();
          });
          ```
      parameters:
        - id: text
          description: <span data-ttu-id="0a108-235">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="0a108-235">Required.</span></span> <span data-ttu-id="0a108-236">Texte à insérer.</span><span class="sxs-lookup"><span data-stu-id="0a108-236">Text to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: "<span data-ttu-id=\"0a108-237\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-237\">Required.</span></span> <span data-ttu-id=\"0a108-238\">La valeur peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-238\">The value can be 'Replace', 'Start', or 'End'.</span></span>"
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Paragraph#insertText:member(2)'
    summary: "<span data-ttu-id=\"0a108-239\">Insère du texte dans le paragraphe à l’emplacement spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-239\">Inserts text into the paragraph at the specified location.</span></span> <span data-ttu-id=\"0a108-240\">La valeur insertLocation peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-240\">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>\n\n<span data-ttu-id=\"0a108-241\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-241\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'insertText(text, insertLocationString)'
    fullName: 'insertText(text, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: text
          description: <span data-ttu-id="0a108-242">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="0a108-242">Required.</span></span> <span data-ttu-id="0a108-243">Texte à insérer.</span><span class="sxs-lookup"><span data-stu-id="0a108-243">Text to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: "<span data-ttu-id=\"0a108-244\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-244\">Required.</span></span> <span data-ttu-id=\"0a108-245\">La valeur peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-245\">The value can be 'Replace', 'Start', or 'End'.</span></span>"
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Paragraph#leftIndent:member'
    summary: "<span data-ttu-id=\"0a108-246\">Obtient ou définit la valeur de retrait à gauche, en points, pour le paragraphe.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-246\">Gets or sets the left indent value, in points, for the paragraph.</span></span>\n\n<span data-ttu-id=\"0a108-247\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-247\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: leftIndent
    fullName: leftIndent
    langs:
      - typeScript
    type: property
    syntax:
      content: 'leftIndent: number;'
      return:
        type:
          - number
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0a108-248">Exemples</span><span class="sxs-lookup"><span data-stu-id="0a108-248">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            // Indents the first paragraph.
            context.document.body.paragraphs.getFirst().leftIndent = 75; //units = points

            return context.sync();
          });
          ```
  - uid: 'word!Word.Paragraph#lineSpacing:member'
    summary: "<span data-ttu-id=\"0a108-249\">Obtient ou définit l’interligne, en points, pour le paragraphe spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-249\">Gets or sets the line spacing, in points, for the specified paragraph.</span></span> <span data-ttu-id=\"0a108-250\">Dans l’interface utilisateur de Word, cette valeur est divisée par\_12.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-250\">In the Word UI, this value is divided by 12.</span></span>\n\n<span data-ttu-id=\"0a108-251\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-251\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: lineSpacing
    fullName: lineSpacing
    langs:
      - typeScript
    type: property
    syntax:
      content: 'lineSpacing: number;'
      return:
        type:
          - number
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0a108-252">Exemples</span><span class="sxs-lookup"><span data-stu-id="0a108-252">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            // Adjusts line spacing.
            context.document.body.paragraphs.getFirst().lineSpacing = 20;

            await context.sync();
          });
          ```
  - uid: 'word!Word.Paragraph#lineUnitAfter:member'
    summary: "<span data-ttu-id=\"0a108-253\">Obtient ou définit la quantité d’espace, dans le quadrillage, après le paragraphe.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-253\">Gets or sets the amount of spacing, in grid lines, after the paragraph.</span></span>\n\n<span data-ttu-id=\"0a108-254\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-254\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: lineUnitAfter
    fullName: lineUnitAfter
    langs:
      - typeScript
    type: property
    syntax:
      content: 'lineUnitAfter: number;'
      return:
        type:
          - number
  - uid: 'word!Word.Paragraph#lineUnitBefore:member'
    summary: "<span data-ttu-id=\"0a108-255\">Obtient ou définit la quantité d’espace, en lignes de quadrillage, avant le paragraphe.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-255\">Gets or sets the amount of spacing, in grid lines, before the paragraph.</span></span>\n\n<span data-ttu-id=\"0a108-256\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-256\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: lineUnitBefore
    fullName: lineUnitBefore
    langs:
      - typeScript
    type: property
    syntax:
      content: 'lineUnitBefore: number;'
      return:
        type:
          - number
  - uid: 'word!Word.Paragraph#load:member(1)'
    summary: "<span data-ttu-id=\"0a108-257\">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-257\">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id=\"0a108-258\">Vous devez appeler «\_context.sync()\_» avant de lire les propriétés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-258\">You must call \"context.sync()\" before reading the properties.</span></span>"
    remarks: "<span data-ttu-id=\"0a108-259\">En plus de cette signature, cette méthode possède les signatures suivantes\_:</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-259\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"0a108-260\">`load(option?: string | string[]): Word.Paragraph`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-260\">`load(option?: string | string[]): Word.Paragraph` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>\n\n<span data-ttu-id=\"0a108-261\">`load(option?: { select?: string; expand?: string; }): Word.Paragraph`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-261\">`load(option?: { select?: string; expand?: string; }): Word.Paragraph` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"0a108-262\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Paragraph`-Uniquement disponible sur les types de collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-262\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Paragraph` - Only available on collection types.</span></span> <span data-ttu-id=\"0a108-263\">Elle est similaire à la signature précédente.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-263\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"0a108-264\">Option. Top indique le nombre maximal d’éléments de collection qui peuvent être inclus dans le résultat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-264\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"0a108-265\">Option. Skip indique le nombre d’éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-265\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"0a108-266\">Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d’éléments.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-266\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>"
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Word.Interfaces.ParagraphLoadOptions): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'word!Word.Interfaces.ParagraphLoadOptions:interface'
  - uid: 'word!Word.Paragraph#load:member(2)'
    summary: <span data-ttu-id="0a108-267">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="0a108-267">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0a108-268">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="0a108-268">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="0a108-269">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="0a108-269">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'word!Word.Paragraph#load:member(3)'
    summary: <span data-ttu-id="0a108-270">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="0a108-270">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0a108-271">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="0a108-271">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="0a108-272">Où propertyNamesAndPaths. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et propertyNamesAndPaths. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="0a108-272">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'word!Word.Paragraph#outlineLevel:member'
    summary: "<span data-ttu-id=\"0a108-273\">Obtient ou définit le niveau hiérarchique pour le paragraphe.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-273\">Gets or sets the outline level for the paragraph.</span></span>\n\n<span data-ttu-id=\"0a108-274\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-274\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: outlineLevel
    fullName: outlineLevel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'outlineLevel: number;'
      return:
        type:
          - number
  - uid: 'word!Word.Paragraph#parentContentControl:member'
    summary: "<span data-ttu-id=\"0a108-275\">Obtient le contrôle de contenu qui contient le paragraphe.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-275\">Gets the content control that contains the paragraph.</span></span> <span data-ttu-id=\"0a108-276\">S’il n’existe pas de contrôle de contenu parent.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-276\">Throws if there isn't a parent content control.</span></span> <span data-ttu-id=\"0a108-277\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-277\">Read-only.</span></span>\n\n<span data-ttu-id=\"0a108-278\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-278\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: parentContentControl
    fullName: parentContentControl
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentContentControl: Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
  - uid: 'word!Word.Paragraph#rightIndent:member'
    summary: "<span data-ttu-id=\"0a108-279\">Obtient ou définit la valeur de retrait à droite, en points, pour le paragraphe.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-279\">Gets or sets the right indent value, in points, for the paragraph.</span></span>\n\n<span data-ttu-id=\"0a108-280\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-280\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: rightIndent
    fullName: rightIndent
    langs:
      - typeScript
    type: property
    syntax:
      content: 'rightIndent: number;'
      return:
        type:
          - number
  - uid: 'word!Word.Paragraph#search:member(1)'
    summary: "<span data-ttu-id=\"0a108-281\">Effectue une recherche avec le SearchOptions spécifié sur l’étendue de l’objet Paragraph.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-281\">Performs a search with the specified SearchOptions on the scope of the paragraph object.</span></span> <span data-ttu-id=\"0a108-282\">Les résultats de la recherche sont un ensemble d’objets de plage.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-282\">The search results are a collection of range objects.</span></span>\n\n<span data-ttu-id=\"0a108-283\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-283\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'search(searchText, searchOptions)'
    fullName: 'search(searchText, searchOptions)'
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        search(searchText: string, searchOptions?: Word.SearchOptions | {
                    ignorePunct?: boolean;
                    ignoreSpace?: boolean;
                    matchCase?: boolean;
                    matchPrefix?: boolean;
                    matchSuffix?: boolean;
                    matchWholeWord?: boolean;
                    matchWildcards?: boolean;
                }): Word.RangeCollection;
      return:
        type:
          - 'word!Word.RangeCollection:class'
        description: ''
      parameters:
        - id: searchText
          description: <span data-ttu-id="0a108-284">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="0a108-284">Required.</span></span> <span data-ttu-id="0a108-285">Texte de recherche.</span><span class="sxs-lookup"><span data-stu-id="0a108-285">The search text.</span></span>
          type:
            - string
        - id: searchOptions
          description: <span data-ttu-id="0a108-286">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="0a108-286">Optional.</span></span> <span data-ttu-id="0a108-287">Options de la recherche.</span><span class="sxs-lookup"><span data-stu-id="0a108-287">Options for the search.</span></span>
          type:
            - 'word!Word.Paragraph#search~0:complex'
  - uid: 'word!Word.Paragraph#select:member(1)'
    summary: "<span data-ttu-id=\"0a108-288\">Sélectionne le paragraphe et y accède via l’interface utilisateur de Word.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-288\">Selects and navigates the Word UI to the paragraph.</span></span>\n\n<span data-ttu-id=\"0a108-289\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-289\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: select(selectionMode)
    fullName: select(selectionMode)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionMode?: Word.SelectionMode): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0a108-290">Exemples</span><span class="sxs-lookup"><span data-stu-id="0a108-290">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the style property for all of the paragraphs.
              context.load(paragraphs, 'style');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the last paragraph a create a
                  // proxy paragraph object.
                  var paragraph = paragraphs.items[paragraphs.items.length - 1];

                  // Queue a command to select the paragraph. The Word UI will
                  // move to the selected paragraph.
                  paragraph.select();

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Selected the last paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```typescript
          await Word.run(async (context) => {
            // If select is called with no parameters, it selects the object.
            context.document.body.paragraphs.getLast().select();

            await context.sync();
          });
          ```
          ```typescript
          await Word.run(async (context) => {
            // Select can be at the start or end of a range; this by definition moves the insertion point without selecting the range.
            context.document.body.paragraphs.getLast().select("End");

            await context.sync();
          });
          ```
      parameters:
        - id: selectionMode
          description: "<span data-ttu-id=\"0a108-291\">Facultatif.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-291\">Optional.</span></span> <span data-ttu-id=\"0a108-292\">Le mode de sélection peut être «\_Select\_» (sélectionner), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-292\">The selection mode can be 'Select', 'Start', or 'End'.</span></span> <span data-ttu-id=\"0a108-293\">«\_Select\_» (sélectionner) est la valeur par défaut.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-293\">'Select' is the default.</span></span>"
          type:
            - 'word!Word.SelectionMode:enum'
  - uid: 'word!Word.Paragraph#select:member(2)'
    summary: "<span data-ttu-id=\"0a108-294\">Sélectionne le paragraphe et y accède via l’interface utilisateur de Word.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-294\">Selects and navigates the Word UI to the paragraph.</span></span>\n\n<span data-ttu-id=\"0a108-295\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-295\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: select(selectionModeString)
    fullName: select(selectionModeString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionModeString?: "Select" | "Start" | "End"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: selectionModeString
          description: "<span data-ttu-id=\"0a108-296\">Facultatif.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-296\">Optional.</span></span> <span data-ttu-id=\"0a108-297\">Le mode de sélection peut être «\_Select\_» (sélectionner), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-297\">The selection mode can be 'Select', 'Start', or 'End'.</span></span> <span data-ttu-id=\"0a108-298\">«\_Select\_» (sélectionner) est la valeur par défaut.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-298\">'Select' is the default.</span></span>"
          type:
            - '"Select" | "Start" | "End"'
  - uid: 'word!Word.Paragraph#set:member(1)'
    summary: '<span data-ttu-id="0a108-299">Définit plusieurs propriétés d’un objet en même temps.</span><span class="sxs-lookup"><span data-stu-id="0a108-299">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="0a108-300">Vous pouvez transmettre un objet plain avec les propriétés appropriées, ou un autre objet API du même type.</span><span class="sxs-lookup"><span data-stu-id="0a108-300">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: "<span data-ttu-id=\"0a108-301\">Cette méthode est dotée de la signature supplémentaire suivante\_:</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-301\">This method has the following additional signature:</span></span>\n\n`set(properties: Word.Paragraph): void`\n\n#### <a name=\"examples\"></a><span data-ttu-id=\"0a108-302\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-302\">Examples</span></span>\n\n```typescript\nawait Word.run(async (context) => {\n  const paragraph = context.document.body.paragraphs.getFirst();\n  paragraph.set({\n    leftIndent: 30,\n    font: {\n      bold: true,\n      color: \"red\"\n    }\n  });\n\n  await context.sync();\n});\n```\n```typescript\nawait Word.run(async (context) => {\n  const firstParagraph = context.document.body.paragraphs.getFirst();\n  const secondParagraph = firstParagraph.getNext();\n  firstParagraph.load(\"text, font/color, font/bold, leftIndent\");\n\n  await context.sync();\n\n  secondParagraph.set(firstParagraph);\n\n  await context.sync();\n});\n```"
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ParagraphUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="0a108-303">Objet JavaScript avec des propriétés qui sont structurées isomorphically vers les propriétés de l’objet sur lequel la méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="0a108-303">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'word!Word.Interfaces.ParagraphUpdateData:interface'
        - id: options
          description: <span data-ttu-id="0a108-304">Fournit une option permettant de supprimer les erreurs si l’objet Properties tente de définir des propriétés en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="0a108-304">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'word!OfficeExtension.UpdateOptions:interface'
  - uid: 'word!Word.Paragraph#set:member(2)'
    summary: '<span data-ttu-id="0a108-305">Définit plusieurs propriétés de l’objet en même temps, en fonction d’un objet chargé existant.</span><span class="sxs-lookup"><span data-stu-id="0a108-305">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Word.Paragraph): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'word!Word.Paragraph:class'
  - uid: 'word!Word.Paragraph#spaceAfter:member'
    summary: "<span data-ttu-id=\"0a108-306\">Obtient ou définit l’espacement, en points, après le paragraphe.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-306\">Gets or sets the spacing, in points, after the paragraph.</span></span>\n\n<span data-ttu-id=\"0a108-307\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-307\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: spaceAfter
    fullName: spaceAfter
    langs:
      - typeScript
    type: property
    syntax:
      content: 'spaceAfter: number;'
      return:
        type:
          - number
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0a108-308">Exemples</span><span class="sxs-lookup"><span data-stu-id="0a108-308">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            // Adjust space between paragraphs.
            context.document.body.paragraphs.getFirst().spaceAfter = 20;

            await context.sync();
          });
          ```
  - uid: 'word!Word.Paragraph#spaceBefore:member'
    summary: "<span data-ttu-id=\"0a108-309\">Obtient ou définit l’espacement, en points, avant le paragraphe.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-309\">Gets or sets the spacing, in points, before the paragraph.</span></span>\n\n<span data-ttu-id=\"0a108-310\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-310\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: spaceBefore
    fullName: spaceBefore
    langs:
      - typeScript
    type: property
    syntax:
      content: 'spaceBefore: number;'
      return:
        type:
          - number
  - uid: 'word!Word.Paragraph#style:member'
    summary: "<span data-ttu-id=\"0a108-311\">Obtient ou définit le nom du style du paragraphe.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-311\">Gets or sets the style name for the paragraph.</span></span> <span data-ttu-id=\"0a108-312\">Utilisez cette propriété pour les noms des styles personnalisés et localisés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-312\">Use this property for custom styles and localized style names.</span></span> <span data-ttu-id=\"0a108-313\">Pour utiliser les styles prédéfinis qui sont portables entre différents paramètres régionaux, voir la propriété «\_styleBuiltIn\_».</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-313\">To use the built-in styles that are portable between locales, see the \"styleBuiltIn\" property.</span></span>\n\n<span data-ttu-id=\"0a108-314\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-314\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: string;'
      return:
        type:
          - string
  - uid: 'word!Word.Paragraph#text:member'
    summary: "<span data-ttu-id=\"0a108-315\">Obtient le texte du paragraphe.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-315\">Gets the text of the paragraph.</span></span> <span data-ttu-id=\"0a108-316\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-316\">Read-only.</span></span>\n\n<span data-ttu-id=\"0a108-317\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-317\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: text
    fullName: text
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly text: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0a108-318">Exemples</span><span class="sxs-lookup"><span data-stu-id="0a108-318">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            // The collection of paragraphs of the current selection returns the full paragraphs contained in it.
            let paragraph = context.document.getSelection().paragraphs.getFirst();
            paragraph.load("text");

            await context.sync();
            console.log(paragraph.text);
          });
          ```
  - uid: 'word!Word.Paragraph#toJSON:member(1)'
    summary: '<span data-ttu-id="0a108-319">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="0a108-319">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="0a108-320">.</span><span class="sxs-lookup"><span data-stu-id="0a108-320"></span></span> <span data-ttu-id="0a108-321">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="0a108-321"></span></span><!-- --><span data-ttu-id="0a108-322">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que l’objet Word. Paragraph d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`Word.Interfaces.ParagraphData`</span><span class="sxs-lookup"><span data-stu-id="0a108-322">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Word.Paragraph object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.ParagraphData`</span></span><!-- --><span data-ttu-id="0a108-323">) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l’objet d’origine.</span><span class="sxs-lookup"><span data-stu-id="0a108-323">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.ParagraphData;'
      return:
        type:
          - 'word!Word.Interfaces.ParagraphData:interface'
        description: ''
  - uid: 'word!Word.Paragraph#track:member(1)'
    summary: "<span data-ttu-id=\"0a108-324\">Effectuer le suivi de l’objet pour l’ajustement automatique en fonction environnant des modifications dans le document.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-324\">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id=\"0a108-325\">Cet appel est abréviations context.trackedObjects.add(thisObject).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-325\">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id=\"0a108-326\">Si vous utilisez cet objet au sein de «\_.sync\_» appels et en dehors de l’exécution séquentielle d’un lot de «\_.run\_» et rencontrez un message d’erreur «\_InvalidObjectPath\_» lors de la définition d’une propriété ou appeler une méthode sur l’objet, vous devez ajouter l’objet à l’objet de suivi collection de sites lors de l’objet a été créé.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-326\">If you are using this object across \".sync\" calls and outside the sequential execution of a \".run\" batch, and get an \"InvalidObjectPath\" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>"
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
  - uid: 'word!Word.Paragraph#untrack:member(1)'
    summary: "<span data-ttu-id=\"0a108-327\">Publication mémoire associée à cet objet si elle a été précédemment suivie.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-327\">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id=\"0a108-328\">Cet appel est abréviations context.trackedObjects.add(thisObject).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-328\">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id=\"0a108-329\">Vous rencontrez de nombreux objets suivies ralentit l’application hôte, donc n’oubliez pas de libérer les objets que l'on ajoute, une fois que vous avez terminé à les utiliser.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-329\">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them.</span></span> <span data-ttu-id=\"0a108-330\">Vous devez appeler «\_context.sync()\_» avant la publication de mémoire prend effet.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0a108-330\">You will need to call \"context.sync()\" before the memory release takes effect.</span></span>"
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
references:
  - uid: 'word!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'word!Word.Paragraph#alignment~0:complex'
    name: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified"
    fullName: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified"
    spec.typeScript:
      - uid: 'word!Word.Alignment:enum'
        name: Word.Alignment
        fullName: Word.Alignment
      - name: ' | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified"'
        fullName: ' | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified"'
  - uid: 'word!Word.ContentControlCollection:class'
    name: Word.ContentControlCollection
  - uid: 'word!Word.RequestContext:class'
    name: RequestContext
  - uid: 'word!Word.Font:class'
    name: Word.Font
  - uid: 'word!Word.Paragraph#getHtml~0:complex'
    name: OfficeExtension.ClientResult<string>
    fullName: OfficeExtension.ClientResult<string>
    spec.typeScript:
      - uid: 'word!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <string>
        fullName: <string>
  - uid: 'word!Word.Paragraph#getOoxml~0:complex'
    name: OfficeExtension.ClientResult<string>
    fullName: OfficeExtension.ClientResult<string>
    spec.typeScript:
      - uid: 'word!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <string>
        fullName: <string>
  - uid: 'word!Word.InlinePictureCollection:class'
    name: Word.InlinePictureCollection
  - uid: 'word!Word.BreakType:enum'
    name: Word.BreakType
  - uid: 'word!Word.InsertLocation:enum'
    name: Word.InsertLocation
  - uid: 'word!Word.ContentControl:class'
    name: Word.ContentControl
  - uid: 'word!Word.Range:class'
    name: Word.Range
  - uid: 'word!Word.InlinePicture:class'
    name: Word.InlinePicture
  - uid: 'word!Word.Paragraph:class'
    name: Word.Paragraph
  - uid: 'word!Word.Interfaces.ParagraphLoadOptions:interface'
    name: Word.Interfaces.ParagraphLoadOptions
  - uid: 'word!Word.RangeCollection:class'
    name: Word.RangeCollection
  - uid: 'word!Word.Paragraph#search~0:complex'
    name: |-
      Word.SearchOptions | {
                  ignorePunct?: boolean;
                  ignoreSpace?: boolean;
                  matchCase?: boolean;
                  matchPrefix?: boolean;
                  matchSuffix?: boolean;
                  matchWholeWord?: boolean;
                  matchWildcards?: boolean;
              }
    fullName: |-
      Word.SearchOptions | {
                  ignorePunct?: boolean;
                  ignoreSpace?: boolean;
                  matchCase?: boolean;
                  matchPrefix?: boolean;
                  matchSuffix?: boolean;
                  matchWholeWord?: boolean;
                  matchWildcards?: boolean;
              }
    spec.typeScript:
      - uid: 'word!Word.SearchOptions:class'
        name: Word.SearchOptions
        fullName: Word.SearchOptions
      - name: |2-
           | {
                      ignorePunct?: boolean;
                      ignoreSpace?: boolean;
                      matchCase?: boolean;
                      matchPrefix?: boolean;
                      matchSuffix?: boolean;
                      matchWholeWord?: boolean;
                      matchWildcards?: boolean;
                  }
        fullName: |2-
           | {
                      ignorePunct?: boolean;
                      ignoreSpace?: boolean;
                      matchCase?: boolean;
                      matchPrefix?: boolean;
                      matchSuffix?: boolean;
                      matchWholeWord?: boolean;
                      matchWildcards?: boolean;
                  }
  - uid: 'word!Word.SelectionMode:enum'
    name: Word.SelectionMode
  - uid: 'word!Word.Interfaces.ParagraphUpdateData:interface'
    name: Interfaces.ParagraphUpdateData
  - uid: 'word!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'word!Word.Interfaces.ParagraphData:interface'
    name: Word.Interfaces.ParagraphData