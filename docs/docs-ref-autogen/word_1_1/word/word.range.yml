### YamlMime:UniversalReference
items:
  - uid: word.Word.Range
    summary: |-
      <span data-ttu-id="28693-101">Représente une zone contiguë dans un document.</span><span class="sxs-lookup"><span data-stu-id="28693-101">Represents a contiguous area in a document.</span></span>

      <span data-ttu-id="28693-102">\[[Ensemble d’API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="28693-102">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: Word.Range
    fullName: Word.Range
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: word
    children:
      - word.Word.Range.clear
      - word.Word.Range.contentControls
      - word.Word.Range.context
      - word.Word.Range.delete
      - word.Word.Range.font
      - word.Word.Range.getHtml
      - word.Word.Range.getOoxml
      - word.Word.Range.insertBreak
      - word.Word.Range.insertBreak_1
      - word.Word.Range.insertContentControl
      - word.Word.Range.insertFileFromBase64
      - word.Word.Range.insertFileFromBase64_1
      - word.Word.Range.insertHtml
      - word.Word.Range.insertHtml_1
      - word.Word.Range.insertOoxml
      - word.Word.Range.insertOoxml_1
      - word.Word.Range.insertParagraph
      - word.Word.Range.insertParagraph_1
      - word.Word.Range.insertText
      - word.Word.Range.insertText_1
      - word.Word.Range.load
      - word.Word.Range.load_1
      - word.Word.Range.load_2
      - word.Word.Range.paragraphs
      - word.Word.Range.parentContentControl
      - word.Word.Range.search
      - word.Word.Range.select
      - word.Word.Range.select_1
      - word.Word.Range.set
      - word.Word.Range.set_1
      - word.Word.Range.style
      - word.Word.Range.text
      - word.Word.Range.toJSON
      - word.Word.Range.track
      - word.Word.Range.untrack
  - uid: word.Word.Range.clear
    summary: |-
      <span data-ttu-id="28693-103">Efface le contenu de l’objet de plage.</span><span class="sxs-lookup"><span data-stu-id="28693-103">Clears the contents of the range object.</span></span> <span data-ttu-id="28693-104">L’utilisateur peut effectuer l’opération d’annulation sur le contenu effacé.</span><span class="sxs-lookup"><span data-stu-id="28693-104">The user can perform the undo operation on the cleared content.</span></span>

      <span data-ttu-id="28693-105">\[[Ensemble d’API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="28693-105">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="28693-106">Exemples</span><span class="sxs-lookup"><span data-stu-id="28693-106">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a commmand to clear the contents of the proxy range object.
              range.clear();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Cleared the selection (range object)');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word.Word.Range.contentControls
    summary: |-
      <span data-ttu-id="28693-107">Obtient la collection d’objets de contrôle de contenu dans la plage.</span><span class="sxs-lookup"><span data-stu-id="28693-107">Gets the collection of content control objects in the range.</span></span> <span data-ttu-id="28693-108">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="28693-108">Read-only.</span></span>

      <span data-ttu-id="28693-109">\[[Ensemble d’API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="28693-109">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: contentControls
    fullName: contentControls
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly contentControls: Word.ContentControlCollection;'
      return:
        type:
          - word.Word.ContentControlCollection
  - uid: word.Word.Range.context
    summary: <span data-ttu-id="28693-110">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="28693-110">The request context associated with the object.</span></span> <span data-ttu-id="28693-111">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="28693-111">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - word.Word.RequestContext
  - uid: word.Word.Range.delete
    summary: |-
      <span data-ttu-id="28693-112">Supprime la plage et son contenu du document.</span><span class="sxs-lookup"><span data-stu-id="28693-112">Deletes the range and its content from the document.</span></span>

      <span data-ttu-id="28693-113">\[[Ensemble d’API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="28693-113">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="28693-114">Exemples</span><span class="sxs-lookup"><span data-stu-id="28693-114">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a commmand to delete the range object.
              range.delete();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Deleted the selection (range object)');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word.Word.Range.font
    summary: |-
      <span data-ttu-id="28693-115">Obtient le format de texte de la plage.</span><span class="sxs-lookup"><span data-stu-id="28693-115">Gets the text format of the range.</span></span> <span data-ttu-id="28693-116">Utilisez cette propriété pour obtenir et définir le nom de la police, la taille, la couleur et d’autres propriétés.</span><span class="sxs-lookup"><span data-stu-id="28693-116">Use this to get and set font name, size, color, and other properties.</span></span> <span data-ttu-id="28693-117">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="28693-117">Read-only.</span></span>

      <span data-ttu-id="28693-118">\[[Ensemble d’API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="28693-118">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: font
    fullName: font
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly font: Word.Font;'
      return:
        type:
          - word.Word.Font
  - uid: word.Word.Range.getHtml
    summary: |-
      <span data-ttu-id="28693-119">Obtient une représentation HTML de l’objet de plage.</span><span class="sxs-lookup"><span data-stu-id="28693-119">Gets an HTML representation of the range object.</span></span> <span data-ttu-id="28693-120">Lorsqu’elle est affichée dans une page Web ou dans la visionneuse HTML, la mise en forme est une correspondance ferme, mais pas exacte, avec la mise en forme du document.</span><span class="sxs-lookup"><span data-stu-id="28693-120">When rendered in a web page or HTML viewer, the formatting will be a close, but not exact, match to the formatting of the document.</span></span> <span data-ttu-id="28693-121">Cette méthode ne renvoie pas exactement le même code HTML pour le même document sur différentes plateformes (Windows, Mac, etc.).</span><span class="sxs-lookup"><span data-stu-id="28693-121">This method does not return the exact same HTML for the same document on different platforms (Windows, Mac, etc.).</span></span> <span data-ttu-id="28693-122">Si vous avez besoin d’une fidélité exacte ou d’une cohérence `Range.getOoxml()` entre les plateformes, utilisez et convertissez le code XML renvoyé en html.</span><span class="sxs-lookup"><span data-stu-id="28693-122">If you need exact fidelity, or consistency across platforms, use `Range.getOoxml()` and convert the returned XML to HTML.</span></span>

      <span data-ttu-id="28693-123">\[[Ensemble d’API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="28693-123">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getHtml()
    fullName: getHtml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getHtml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - OfficeExtension.ClientResult<string>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="28693-124">Exemples</span><span class="sxs-lookup"><span data-stu-id="28693-124">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a commmand to get the HTML of the current selection.
              var html = range.getHtml();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('The HTML read from the document was: ' + html.value);
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word.Word.Range.getOoxml
    summary: |-
      <span data-ttu-id="28693-125">Obtient la représentation OOXML de l’objet de plage.</span><span class="sxs-lookup"><span data-stu-id="28693-125">Gets the OOXML representation of the range object.</span></span>

      <span data-ttu-id="28693-126">\[[Ensemble d’API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="28693-126">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getOoxml()
    fullName: getOoxml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getOoxml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - OfficeExtension.ClientResult<string>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="28693-127">Exemples</span><span class="sxs-lookup"><span data-stu-id="28693-127">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a commmand to get the OOXML of the current selection.
              var ooxml = range.getOoxml();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('The OOXML read from the document was:  ' + ooxml.value);
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word.Word.Range.insertBreak
    summary: "<span data-ttu-id=\"28693-128\">Insère un saut à l’emplacement spécifié du document principal.</span><span class=\"sxs-lookup\"><span data-stu-id=\"28693-128\">Inserts a break at the specified location in the main document.</span></span> <span data-ttu-id=\"28693-129\">La valeur insertLocation peut être définie sur «\_Before\_» (avant) ou «\_After\_» (après).</span><span class=\"sxs-lookup\"><span data-stu-id=\"28693-129\">The insertLocation value can be 'Before' or 'After'.</span></span>\n\n<span data-ttu-id=\"28693-130\">\\[[Ensemble d’API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"28693-130\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'insertBreak(breakType, insertLocation)'
    fullName: 'insertBreak(breakType, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakType: Word.BreakType, insertLocation: Word.InsertLocation): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: breakType
          description: <span data-ttu-id="28693-131">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="28693-131">Required.</span></span> <span data-ttu-id="28693-132">Type de saut à ajouter.</span><span class="sxs-lookup"><span data-stu-id="28693-132">The break type to add.</span></span>
          type:
            - word.Word.BreakType
        - id: insertLocation
          description: "<span data-ttu-id=\"28693-133\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"28693-133\">Required.</span></span> <span data-ttu-id=\"28693-134\">La valeur peut être «\_Before\_» (avant) » ou «\_After\_» (après).</span><span class=\"sxs-lookup\"><span data-stu-id=\"28693-134\">The value can be 'Before' or 'After'.</span></span>"
          type:
            - word.Word.InsertLocation
  - uid: word.Word.Range.insertBreak_1
    summary: "<span data-ttu-id=\"28693-135\">Insère un saut à l’emplacement spécifié du document principal.</span><span class=\"sxs-lookup\"><span data-stu-id=\"28693-135\">Inserts a break at the specified location in the main document.</span></span> <span data-ttu-id=\"28693-136\">La valeur insertLocation peut être définie sur «\_Before\_» (avant) ou «\_After\_» (après).</span><span class=\"sxs-lookup\"><span data-stu-id=\"28693-136\">The insertLocation value can be 'Before' or 'After'.</span></span>\n\n<span data-ttu-id=\"28693-137\">\\[[Ensemble d’API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"28693-137\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'insertBreak(breakTypeString, insertLocation)'
    fullName: 'insertBreak(breakTypeString, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakTypeString: "Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line", insertLocation: "Before" | "After" | "Start" | "End" | "Replace"): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="28693-138">Exemples</span><span class="sxs-lookup"><span data-stu-id="28693-138">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a commmand to insert a page break after the selected text.
              range.insertBreak('page', 'After');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Inserted a page break after the selected text.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: breakTypeString
          description: <span data-ttu-id="28693-139">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="28693-139">Required.</span></span> <span data-ttu-id="28693-140">Type de saut à ajouter.</span><span class="sxs-lookup"><span data-stu-id="28693-140">The break type to add.</span></span>
          type:
            - '"Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line"'
        - id: insertLocation
          description: "<span data-ttu-id=\"28693-141\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"28693-141\">Required.</span></span> <span data-ttu-id=\"28693-142\">La valeur peut être «\_Before\_» (avant) » ou «\_After\_» (après).</span><span class=\"sxs-lookup\"><span data-stu-id=\"28693-142\">The value can be 'Before' or 'After'.</span></span>"
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word.Word.Range.insertContentControl
    summary: |-
      <span data-ttu-id="28693-143">Encadre l’objet de plage avec un contrôle de contenu de texte enrichi.</span><span class="sxs-lookup"><span data-stu-id="28693-143">Wraps the range object with a rich text content control.</span></span>

      <span data-ttu-id="28693-144">\[[Ensemble d’API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="28693-144">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: insertContentControl()
    fullName: insertContentControl()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertContentControl(): Word.ContentControl;'
      return:
        type:
          - word.Word.ContentControl
        description: |-


          #### <a name="examples"></a><span data-ttu-id="28693-145">Exemples</span><span class="sxs-lookup"><span data-stu-id="28693-145">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a commmand to insert a content control around the selected text,
              // and create a proxy content control object. We'll update the properties
              // on the content control.
              var myContentControl = range.insertContentControl();
              myContentControl.tag = "Customer-Address";
              myContentControl.title = "Enter Customer Address Here:";
              myContentControl.style = "Normal";
              myContentControl.insertText("One Microsoft Way, Redmond, WA 98052", 'Replace');
              myContentControl.cannotEdit = true;

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Wrapped a content control around the selected text.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```typescript
          await Word.run(async (context) => {
              let results = context.document.body.search("Contractor");
              results.load("font/bold");

              // Check to make sure these content controls haven't been added yet.
              let customerContentControls = context.document.contentControls.getByTag("customer");
              customerContentControls.load("text");
              await context.sync();

            if (customerContentControls.items.length === 0) {
              for (var i = 0; i < results.items.length; i++) { 
                  results.items[i].font.bold = true;
                  var cc = results.items[i].insertContentControl();
                  cc.tag = "customer";  // This value is used in the next step of this sample.
                  cc.title = "Customer Name " + i;
              }
            }
              await context.sync();
          });
          ```
  - uid: word.Word.Range.insertFileFromBase64
    summary: |-
      <span data-ttu-id="28693-146">Insère un document à l’emplacement spécifié.</span><span class="sxs-lookup"><span data-stu-id="28693-146">Inserts a document at the specified location.</span></span> <span data-ttu-id="28693-147">La valeur insertLocation peut être «Replace», «Start», «end», «Before» ou «after».</span><span class="sxs-lookup"><span data-stu-id="28693-147">The insertLocation value can be 'Replace', 'Start', 'End', 'Before', or 'After'.</span></span>

      <span data-ttu-id="28693-148">\[[Ensemble d’API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="28693-148">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertFileFromBase64(base64File, insertLocation)'
    fullName: 'insertFileFromBase64(base64File, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - word.Word.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="28693-149">Exemples</span><span class="sxs-lookup"><span data-stu-id="28693-149">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a commmand to insert base64 encoded .docx at the beginning of the range.
              // You'll need to implement getBase64() to make this work.
              range.insertFileFromBase64(getBase64(), Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Added base64 encoded text to the beginning of the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: base64File
          description: <span data-ttu-id="28693-150">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="28693-150">Required.</span></span> <span data-ttu-id="28693-151">Contenu encodé en base64 d’un fichier. docx.</span><span class="sxs-lookup"><span data-stu-id="28693-151">The base64 encoded content of a .docx file.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="28693-152">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="28693-152">Required.</span></span> <span data-ttu-id="28693-153">La valeur peut être «remplacer», «démarrer», «fin», «avant» ou «après».</span><span class="sxs-lookup"><span data-stu-id="28693-153">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - word.Word.InsertLocation
  - uid: word.Word.Range.insertFileFromBase64_1
    summary: |-
      <span data-ttu-id="28693-154">Insère un document à l’emplacement spécifié.</span><span class="sxs-lookup"><span data-stu-id="28693-154">Inserts a document at the specified location.</span></span> <span data-ttu-id="28693-155">La valeur insertLocation peut être «Replace», «Start», «end», «Before» ou «after».</span><span class="sxs-lookup"><span data-stu-id="28693-155">The insertLocation value can be 'Replace', 'Start', 'End', 'Before', or 'After'.</span></span>

      <span data-ttu-id="28693-156">\[[Ensemble d’API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="28693-156">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertFileFromBase64(base64File, insertLocationString)'
    fullName: 'insertFileFromBase64(base64File, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - word.Word.Range
        description: ''
      parameters:
        - id: base64File
          description: <span data-ttu-id="28693-157">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="28693-157">Required.</span></span> <span data-ttu-id="28693-158">Contenu encodé en base64 d’un fichier. docx.</span><span class="sxs-lookup"><span data-stu-id="28693-158">The base64 encoded content of a .docx file.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="28693-159">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="28693-159">Required.</span></span> <span data-ttu-id="28693-160">La valeur peut être «remplacer», «démarrer», «fin», «avant» ou «après».</span><span class="sxs-lookup"><span data-stu-id="28693-160">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word.Word.Range.insertHtml
    summary: |-
      <span data-ttu-id="28693-161">Insère du code HTML à l’emplacement spécifié.</span><span class="sxs-lookup"><span data-stu-id="28693-161">Inserts HTML at the specified location.</span></span> <span data-ttu-id="28693-162">La valeur insertLocation peut être «Replace», «Start», «end», «Before» ou «after».</span><span class="sxs-lookup"><span data-stu-id="28693-162">The insertLocation value can be 'Replace', 'Start', 'End', 'Before', or 'After'.</span></span>

      <span data-ttu-id="28693-163">\[[Ensemble d’API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="28693-163">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertHtml(html, insertLocation)'
    fullName: 'insertHtml(html, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - word.Word.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="28693-164">Exemples</span><span class="sxs-lookup"><span data-stu-id="28693-164">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a commmand to insert HTML in to the beginning of the range.
              range.insertHtml('<strong>This is text inserted with range.insertHtml()</strong>', Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('HTML added to the beginning of the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: html
          description: <span data-ttu-id="28693-165">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="28693-165">Required.</span></span> <span data-ttu-id="28693-166">CODE HTML à insérer.</span><span class="sxs-lookup"><span data-stu-id="28693-166">The HTML to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="28693-167">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="28693-167">Required.</span></span> <span data-ttu-id="28693-168">La valeur peut être «remplacer», «démarrer», «fin», «avant» ou «après».</span><span class="sxs-lookup"><span data-stu-id="28693-168">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - word.Word.InsertLocation
  - uid: word.Word.Range.insertHtml_1
    summary: |-
      <span data-ttu-id="28693-169">Insère du code HTML à l’emplacement spécifié.</span><span class="sxs-lookup"><span data-stu-id="28693-169">Inserts HTML at the specified location.</span></span> <span data-ttu-id="28693-170">La valeur insertLocation peut être «Replace», «Start», «end», «Before» ou «after».</span><span class="sxs-lookup"><span data-stu-id="28693-170">The insertLocation value can be 'Replace', 'Start', 'End', 'Before', or 'After'.</span></span>

      <span data-ttu-id="28693-171">\[[Ensemble d’API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="28693-171">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertHtml(html, insertLocationString)'
    fullName: 'insertHtml(html, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - word.Word.Range
        description: ''
      parameters:
        - id: html
          description: <span data-ttu-id="28693-172">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="28693-172">Required.</span></span> <span data-ttu-id="28693-173">CODE HTML à insérer.</span><span class="sxs-lookup"><span data-stu-id="28693-173">The HTML to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="28693-174">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="28693-174">Required.</span></span> <span data-ttu-id="28693-175">La valeur peut être «remplacer», «démarrer», «fin», «avant» ou «après».</span><span class="sxs-lookup"><span data-stu-id="28693-175">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word.Word.Range.insertOoxml
    summary: |-
      <span data-ttu-id="28693-176">Insère du code OOXML à l’emplacement spécifié.</span><span class="sxs-lookup"><span data-stu-id="28693-176">Inserts OOXML at the specified location.</span></span> <span data-ttu-id="28693-177">La valeur insertLocation peut être «Replace», «Start», «end», «Before» ou «after».</span><span class="sxs-lookup"><span data-stu-id="28693-177">The insertLocation value can be 'Replace', 'Start', 'End', 'Before', or 'After'.</span></span>

      <span data-ttu-id="28693-178">\[[Ensemble d’API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="28693-178">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertOoxml(ooxml, insertLocation)'
    fullName: 'insertOoxml(ooxml, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - word.Word.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="28693-179">Exemples</span><span class="sxs-lookup"><span data-stu-id="28693-179">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a commmand to insert OOXML in to the beginning of the range.
              range.insertOoxml("<pkg:package xmlns:pkg='http://schemas.microsoft.com/office/2006/xmlPackage'><pkg:part pkg:name='/_rels/.rels' pkg:contentType='application/vnd.openxmlformats-package.relationships+xml' pkg:padding='512'><pkg:xmlData><Relationships xmlns='http://schemas.openxmlformats.org/package/2006/relationships'><Relationship Id='rId1' Type='http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument' Target='word/document.xml'/></Relationships></pkg:xmlData></pkg:part><pkg:part pkg:name='/word/document.xml' pkg:contentType='application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml'><pkg:xmlData><w:document xmlns:w='http://schemas.openxmlformats.org/wordprocessingml/2006/main' ><w:body><w:p><w:pPr><w:spacing w:before='360' w:after='0' w:line='480' w:lineRule='auto'/><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr></w:pPr><w:r><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr><w:t>This text has formatting directly applied to achieve its font size, color, line spacing, and paragraph spacing.</w:t></w:r></w:p></w:body></w:document></pkg:xmlData></pkg:part></pkg:package>", Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('OOXML added to the beginning of the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });

          // Read "Create better add-ins for Word with Office Open XML" for guidance on working with OOXML.
          // https://docs.microsoft.com/office/dev/add-ins/word/create-better-add-ins-for-word-with-office-open-xml
          ```
      parameters:
        - id: ooxml
          description: <span data-ttu-id="28693-180">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="28693-180">Required.</span></span> <span data-ttu-id="28693-181">Code OOXML à insérer.</span><span class="sxs-lookup"><span data-stu-id="28693-181">The OOXML to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="28693-182">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="28693-182">Required.</span></span> <span data-ttu-id="28693-183">La valeur peut être «remplacer», «démarrer», «fin», «avant» ou «après».</span><span class="sxs-lookup"><span data-stu-id="28693-183">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - word.Word.InsertLocation
  - uid: word.Word.Range.insertOoxml_1
    summary: |-
      <span data-ttu-id="28693-184">Insère du code OOXML à l’emplacement spécifié.</span><span class="sxs-lookup"><span data-stu-id="28693-184">Inserts OOXML at the specified location.</span></span> <span data-ttu-id="28693-185">La valeur insertLocation peut être «Replace», «Start», «end», «Before» ou «after».</span><span class="sxs-lookup"><span data-stu-id="28693-185">The insertLocation value can be 'Replace', 'Start', 'End', 'Before', or 'After'.</span></span>

      <span data-ttu-id="28693-186">\[[Ensemble d’API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="28693-186">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertOoxml(ooxml, insertLocationString)'
    fullName: 'insertOoxml(ooxml, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - word.Word.Range
        description: ''
      parameters:
        - id: ooxml
          description: <span data-ttu-id="28693-187">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="28693-187">Required.</span></span> <span data-ttu-id="28693-188">Code OOXML à insérer.</span><span class="sxs-lookup"><span data-stu-id="28693-188">The OOXML to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="28693-189">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="28693-189">Required.</span></span> <span data-ttu-id="28693-190">La valeur peut être «remplacer», «démarrer», «fin», «avant» ou «après».</span><span class="sxs-lookup"><span data-stu-id="28693-190">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word.Word.Range.insertParagraph
    summary: |-
      <span data-ttu-id="28693-191">Insère un paragraphe à l’emplacement spécifié.</span><span class="sxs-lookup"><span data-stu-id="28693-191">Inserts a paragraph at the specified location.</span></span> <span data-ttu-id="28693-192">La valeur insertLocation peut être définie sur « Before » (avant) ou « After » (après).</span><span class="sxs-lookup"><span data-stu-id="28693-192">The insertLocation value can be 'Before' or 'After'.</span></span>

      <span data-ttu-id="28693-193">\[[Ensemble d’API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="28693-193">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertParagraph(paragraphText, insertLocation)'
    fullName: 'insertParagraph(paragraphText, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation): Word.Paragraph;'
      return:
        type:
          - word.Word.Paragraph
        description: |-


          #### <a name="examples"></a><span data-ttu-id="28693-194">Exemples</span><span class="sxs-lookup"><span data-stu-id="28693-194">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a commmand to insert the paragraph after the range.
              range.insertParagraph('Content of a new paragraph', Word.InsertLocation.after);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Paragraph added to the end of the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: paragraphText
          description: <span data-ttu-id="28693-195">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="28693-195">Required.</span></span> <span data-ttu-id="28693-196">Texte de paragraphe à insérer.</span><span class="sxs-lookup"><span data-stu-id="28693-196">The paragraph text to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: "<span data-ttu-id=\"28693-197\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"28693-197\">Required.</span></span> <span data-ttu-id=\"28693-198\">La valeur peut être «\_Before\_» (avant) » ou «\_After\_» (après).</span><span class=\"sxs-lookup\"><span data-stu-id=\"28693-198\">The value can be 'Before' or 'After'.</span></span>"
          type:
            - word.Word.InsertLocation
  - uid: word.Word.Range.insertParagraph_1
    summary: |-
      <span data-ttu-id="28693-199">Insère un paragraphe à l’emplacement spécifié.</span><span class="sxs-lookup"><span data-stu-id="28693-199">Inserts a paragraph at the specified location.</span></span> <span data-ttu-id="28693-200">La valeur insertLocation peut être définie sur « Before » (avant) ou « After » (après).</span><span class="sxs-lookup"><span data-stu-id="28693-200">The insertLocation value can be 'Before' or 'After'.</span></span>

      <span data-ttu-id="28693-201">\[[Ensemble d’API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="28693-201">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertParagraph(paragraphText, insertLocationString)'
    fullName: 'insertParagraph(paragraphText, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Paragraph;'
      return:
        type:
          - word.Word.Paragraph
        description: ''
      parameters:
        - id: paragraphText
          description: <span data-ttu-id="28693-202">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="28693-202">Required.</span></span> <span data-ttu-id="28693-203">Texte de paragraphe à insérer.</span><span class="sxs-lookup"><span data-stu-id="28693-203">The paragraph text to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: "<span data-ttu-id=\"28693-204\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"28693-204\">Required.</span></span> <span data-ttu-id=\"28693-205\">La valeur peut être «\_Before\_» (avant) » ou «\_After\_» (après).</span><span class=\"sxs-lookup\"><span data-stu-id=\"28693-205\">The value can be 'Before' or 'After'.</span></span>"
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word.Word.Range.insertText
    summary: |-
      <span data-ttu-id="28693-206">Insère du texte à l’emplacement spécifié.</span><span class="sxs-lookup"><span data-stu-id="28693-206">Inserts text at the specified location.</span></span> <span data-ttu-id="28693-207">La valeur insertLocation peut être «Replace», «Start», «end», «Before» ou «after».</span><span class="sxs-lookup"><span data-stu-id="28693-207">The insertLocation value can be 'Replace', 'Start', 'End', 'Before', or 'After'.</span></span>

      <span data-ttu-id="28693-208">\[[Ensemble d’API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="28693-208">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertText(text, insertLocation)'
    fullName: 'insertText(text, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - word.Word.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="28693-209">Exemples</span><span class="sxs-lookup"><span data-stu-id="28693-209">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a commmand to insert the paragraph at the end of the range.
              range.insertText('New text inserted into the range.', Word.InsertLocation.end);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Text added to the end of the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: text
          description: <span data-ttu-id="28693-210">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="28693-210">Required.</span></span> <span data-ttu-id="28693-211">Texte à insérer.</span><span class="sxs-lookup"><span data-stu-id="28693-211">Text to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="28693-212">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="28693-212">Required.</span></span> <span data-ttu-id="28693-213">La valeur peut être «remplacer», «démarrer», «fin», «avant» ou «après».</span><span class="sxs-lookup"><span data-stu-id="28693-213">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - word.Word.InsertLocation
  - uid: word.Word.Range.insertText_1
    summary: |-
      <span data-ttu-id="28693-214">Insère du texte à l’emplacement spécifié.</span><span class="sxs-lookup"><span data-stu-id="28693-214">Inserts text at the specified location.</span></span> <span data-ttu-id="28693-215">La valeur insertLocation peut être «Replace», «Start», «end», «Before» ou «after».</span><span class="sxs-lookup"><span data-stu-id="28693-215">The insertLocation value can be 'Replace', 'Start', 'End', 'Before', or 'After'.</span></span>

      <span data-ttu-id="28693-216">\[[Ensemble d’API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="28693-216">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertText(text, insertLocationString)'
    fullName: 'insertText(text, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - word.Word.Range
        description: ''
      parameters:
        - id: text
          description: <span data-ttu-id="28693-217">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="28693-217">Required.</span></span> <span data-ttu-id="28693-218">Texte à insérer.</span><span class="sxs-lookup"><span data-stu-id="28693-218">Text to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="28693-219">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="28693-219">Required.</span></span> <span data-ttu-id="28693-220">La valeur peut être «remplacer», «démarrer», «fin», «avant» ou «après».</span><span class="sxs-lookup"><span data-stu-id="28693-220">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word.Word.Range.load
    summary: "<span data-ttu-id=\"28693-221\">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"28693-221\">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id=\"28693-222\">Vous devez appeler «\_context.sync()\_» avant de lire les propriétés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"28693-222\">You must call \"context.sync()\" before reading the properties.</span></span>"
    remarks: |-
      <span data-ttu-id="28693-223">En plus de cette signature, cette méthode possède les signatures suivantes:</span><span class="sxs-lookup"><span data-stu-id="28693-223">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="28693-224">`load(option?: string | string[]): Word.Range`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="28693-224">`load(option?: string | string[]): Word.Range` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="28693-225">`load(option?: { select?: string; expand?: string; }): Word.Range`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="28693-225">`load(option?: { select?: string; expand?: string; }): Word.Range` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="28693-226">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Range`-Uniquement disponible sur les types de collection.</span><span class="sxs-lookup"><span data-stu-id="28693-226">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Range` - Only available on collection types.</span></span> <span data-ttu-id="28693-227">Elle est similaire à la signature précédente.</span><span class="sxs-lookup"><span data-stu-id="28693-227">It is similar to the preceding signature.</span></span> <span data-ttu-id="28693-228">Option. Top indique le nombre maximal d’éléments de collection qui peuvent être inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="28693-228">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="28693-229">Option. Skip indique le nombre d’éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="28693-229">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="28693-230">Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d’éléments.</span><span class="sxs-lookup"><span data-stu-id="28693-230">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Word.Interfaces.RangeLoadOptions): Word.Range;'
      return:
        type:
          - word.Word.Range
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - word.Word.Interfaces.RangeLoadOptions
  - uid: word.Word.Range.load_1
    summary: <span data-ttu-id="28693-231">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="28693-231">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="28693-232">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="28693-232">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.Range;'
      return:
        type:
          - word.Word.Range
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="28693-233">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="28693-233">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: word.Word.Range.load_2
    summary: <span data-ttu-id="28693-234">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="28693-234">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="28693-235">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="28693-235">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Word.Range;'
      return:
        type:
          - word.Word.Range
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="28693-236">Où propertyNamesAndPaths. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et propertyNamesAndPaths. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="28693-236">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: word.Word.Range.paragraphs
    summary: |-
      <span data-ttu-id="28693-237">Obtient la collection d’objets Paragraph dans la plage.</span><span class="sxs-lookup"><span data-stu-id="28693-237">Gets the collection of paragraph objects in the range.</span></span> <span data-ttu-id="28693-238">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="28693-238">Read-only.</span></span>

      <span data-ttu-id="28693-239">\[[Ensemble d’API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="28693-239">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: paragraphs
    fullName: paragraphs
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly paragraphs: Word.ParagraphCollection;'
      return:
        type:
          - word.Word.ParagraphCollection
  - uid: word.Word.Range.parentContentControl
    summary: |-
      <span data-ttu-id="28693-240">Obtient le contrôle de contenu qui contient la plage.</span><span class="sxs-lookup"><span data-stu-id="28693-240">Gets the content control that contains the range.</span></span> <span data-ttu-id="28693-241">S’il n’existe pas de contrôle de contenu parent.</span><span class="sxs-lookup"><span data-stu-id="28693-241">Throws if there isn't a parent content control.</span></span> <span data-ttu-id="28693-242">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="28693-242">Read-only.</span></span>

      <span data-ttu-id="28693-243">\[[Ensemble d’API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="28693-243">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentContentControl
    fullName: parentContentControl
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentContentControl: Word.ContentControl;'
      return:
        type:
          - word.Word.ContentControl
  - uid: word.Word.Range.search
    summary: |-
      <span data-ttu-id="28693-244">Effectue une recherche avec le SearchOptions spécifié sur l’étendue de l’objet Range.</span><span class="sxs-lookup"><span data-stu-id="28693-244">Performs a search with the specified SearchOptions on the scope of the range object.</span></span> <span data-ttu-id="28693-245">Les résultats de la recherche sont un ensemble d’objets de plage.</span><span class="sxs-lookup"><span data-stu-id="28693-245">The search results are a collection of range objects.</span></span>

      <span data-ttu-id="28693-246">\[[Ensemble d’API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="28693-246">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'search(searchText, searchOptions)'
    fullName: 'search(searchText, searchOptions)'
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        search(searchText: string, searchOptions?: Word.SearchOptions | {
                    ignorePunct?: boolean;
                    ignoreSpace?: boolean;
                    matchCase?: boolean;
                    matchPrefix?: boolean;
                    matchSuffix?: boolean;
                    matchWholeWord?: boolean;
                    matchWildcards?: boolean;
                }): Word.RangeCollection;
      return:
        type:
          - word.Word.RangeCollection
        description: ''
      parameters:
        - id: searchText
          description: <span data-ttu-id="28693-247">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="28693-247">Required.</span></span> <span data-ttu-id="28693-248">Texte de recherche.</span><span class="sxs-lookup"><span data-stu-id="28693-248">The search text.</span></span>
          type:
            - string
        - id: searchOptions
          description: <span data-ttu-id="28693-249">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="28693-249">Optional.</span></span> <span data-ttu-id="28693-250">Options de la recherche.</span><span class="sxs-lookup"><span data-stu-id="28693-250">Options for the search.</span></span>
          type:
            - |-
              Word.SearchOptions | {
                          ignorePunct?: boolean;
                          ignoreSpace?: boolean;
                          matchCase?: boolean;
                          matchPrefix?: boolean;
                          matchSuffix?: boolean;
                          matchWholeWord?: boolean;
                          matchWildcards?: boolean;
                      }
  - uid: word.Word.Range.select
    summary: |-
      <span data-ttu-id="28693-251">Sélectionne la plage et y accède via l’interface utilisateur de Word.</span><span class="sxs-lookup"><span data-stu-id="28693-251">Selects and navigates the Word UI to the range.</span></span>

      <span data-ttu-id="28693-252">\[[Ensemble d’API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="28693-252">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: select(selectionMode)
    fullName: select(selectionMode)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionMode?: Word.SelectionMode): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="28693-253">Exemples</span><span class="sxs-lookup"><span data-stu-id="28693-253">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a commmand to insert HTML in to the beginning of the range.
              range.insertHtml('<strong>This is text inserted with range.insertHtml()</strong>', Word.InsertLocation.start);

              // Queue a command to select the HTML that was inserted.
              range.select();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Selected the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: selectionMode
          description: "<span data-ttu-id=\"28693-254\">Facultatif.</span><span class=\"sxs-lookup\"><span data-stu-id=\"28693-254\">Optional.</span></span> <span data-ttu-id=\"28693-255\">Le mode de sélection peut être «\_Select\_» (sélectionner), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"28693-255\">The selection mode can be 'Select', 'Start', or 'End'.</span></span> <span data-ttu-id=\"28693-256\">«\_Select\_» (sélectionner) est la valeur par défaut.</span><span class=\"sxs-lookup\"><span data-stu-id=\"28693-256\">'Select' is the default.</span></span>"
          type:
            - word.Word.SelectionMode
  - uid: word.Word.Range.select_1
    summary: |-
      <span data-ttu-id="28693-257">Sélectionne la plage et y accède via l’interface utilisateur de Word.</span><span class="sxs-lookup"><span data-stu-id="28693-257">Selects and navigates the Word UI to the range.</span></span>

      <span data-ttu-id="28693-258">\[[Ensemble d’API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="28693-258">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: select(selectionModeString)
    fullName: select(selectionModeString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionModeString?: "Select" | "Start" | "End"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: selectionModeString
          description: "<span data-ttu-id=\"28693-259\">Facultatif.</span><span class=\"sxs-lookup\"><span data-stu-id=\"28693-259\">Optional.</span></span> <span data-ttu-id=\"28693-260\">Le mode de sélection peut être «\_Select\_» (sélectionner), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"28693-260\">The selection mode can be 'Select', 'Start', or 'End'.</span></span> <span data-ttu-id=\"28693-261\">«\_Select\_» (sélectionner) est la valeur par défaut.</span><span class=\"sxs-lookup\"><span data-stu-id=\"28693-261\">'Select' is the default.</span></span>"
          type:
            - '"Select" | "Start" | "End"'
  - uid: word.Word.Range.set
    summary: '<span data-ttu-id="28693-262">Définit plusieurs propriétés d’un objet en même temps.</span><span class="sxs-lookup"><span data-stu-id="28693-262">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="28693-263">Vous pouvez transmettre un objet plain avec les propriétés appropriées, ou un autre objet API du même type.</span><span class="sxs-lookup"><span data-stu-id="28693-263">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="28693-264">Cette méthode est dotée de la signature supplémentaire suivante:</span><span class="sxs-lookup"><span data-stu-id="28693-264">This method has the following additional signature:</span></span>

      `set(properties: Word.Range): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.RangeUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="28693-265">Objet JavaScript avec des propriétés qui sont structurées isomorphically vers les propriétés de l’objet sur lequel la méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="28693-265">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.RangeUpdateData
        - id: options
          description: <span data-ttu-id="28693-266">Fournit une option permettant de supprimer les erreurs si l’objet Properties tente de définir des propriétés en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="28693-266">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - OfficeExtension.UpdateOptions
  - uid: word.Word.Range.set_1
    summary: '<span data-ttu-id="28693-267">Définit plusieurs propriétés de l’objet en même temps, en fonction d’un objet chargé existant.</span><span class="sxs-lookup"><span data-stu-id="28693-267">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Word.Range): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - word.Word.Range
  - uid: word.Word.Range.style
    summary: "<span data-ttu-id=\"28693-268\">Obtient ou définit le nom du style de la plage.</span><span class=\"sxs-lookup\"><span data-stu-id=\"28693-268\">Gets or sets the style name for the range.</span></span> <span data-ttu-id=\"28693-269\">Utilisez cette propriété pour les noms des styles personnalisés et localisés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"28693-269\">Use this property for custom styles and localized style names.</span></span> <span data-ttu-id=\"28693-270\">Pour utiliser les styles prédéfinis qui sont portables entre différents paramètres régionaux, voir la propriété «\_styleBuiltIn\_».</span><span class=\"sxs-lookup\"><span data-stu-id=\"28693-270\">To use the built-in styles that are portable between locales, see the \"styleBuiltIn\" property.</span></span>\n\n<span data-ttu-id=\"28693-271\">\\[[Ensemble d’API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"28693-271\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: string;'
      return:
        type:
          - string
  - uid: word.Word.Range.text
    summary: |-
      <span data-ttu-id="28693-272">Obtient le texte de la plage.</span><span class="sxs-lookup"><span data-stu-id="28693-272">Gets the text of the range.</span></span> <span data-ttu-id="28693-273">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="28693-273">Read-only.</span></span>

      <span data-ttu-id="28693-274">\[[Ensemble d’API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="28693-274">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: text
    fullName: text
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly text: string;'
      return:
        type:
          - string
  - uid: word.Word.Range.toJSON
    summary: '<span data-ttu-id="28693-275">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="28693-275">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="28693-276">.</span><span class="sxs-lookup"><span data-stu-id="28693-276"></span></span> <span data-ttu-id="28693-277">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="28693-277"></span></span><!-- --><span data-ttu-id="28693-278">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que l’objet Word. Range d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`Word.Interfaces.RangeData`</span><span class="sxs-lookup"><span data-stu-id="28693-278">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Word.Range object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.RangeData`</span></span><!-- --><span data-ttu-id="28693-279">) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l’objet d’origine.</span><span class="sxs-lookup"><span data-stu-id="28693-279">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.RangeData;'
      return:
        type:
          - word.Word.Interfaces.RangeData
        description: ''
  - uid: word.Word.Range.track
    summary: "<span data-ttu-id=\"28693-280\">Effectuer le suivi de l’objet pour l’ajustement automatique en fonction environnant des modifications dans le document.</span><span class=\"sxs-lookup\"><span data-stu-id=\"28693-280\">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id=\"28693-281\">Cet appel est abréviations context.trackedObjects.add(thisObject).</span><span class=\"sxs-lookup\"><span data-stu-id=\"28693-281\">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id=\"28693-282\">Si vous utilisez cet objet au sein de «\_.sync\_» appels et en dehors de l’exécution séquentielle d’un lot de «\_.run\_» et rencontrez un message d’erreur «\_InvalidObjectPath\_» lors de la définition d’une propriété ou appeler une méthode sur l’objet, vous devez ajouter l’objet à l’objet de suivi collection de sites lors de l’objet a été créé.</span><span class=\"sxs-lookup\"><span data-stu-id=\"28693-282\">If you are using this object across \".sync\" calls and outside the sequential execution of a \".run\" batch, and get an \"InvalidObjectPath\" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>"
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.Range;'
      return:
        type:
          - word.Word.Range
        description: ''
  - uid: word.Word.Range.untrack
    summary: "<span data-ttu-id=\"28693-283\">Publication mémoire associée à cet objet si elle a été précédemment suivie.</span><span class=\"sxs-lookup\"><span data-stu-id=\"28693-283\">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id=\"28693-284\">Cet appel est abréviations context.trackedObjects.add(thisObject).</span><span class=\"sxs-lookup\"><span data-stu-id=\"28693-284\">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id=\"28693-285\">Vous rencontrez de nombreux objets suivies ralentit l’application hôte, donc n’oubliez pas de libérer les objets que l'on ajoute, une fois que vous avez terminé à les utiliser.</span><span class=\"sxs-lookup\"><span data-stu-id=\"28693-285\">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them.</span></span> <span data-ttu-id=\"28693-286\">Vous devez appeler «\_context.sync()\_» avant la publication de mémoire prend effet.</span><span class=\"sxs-lookup\"><span data-stu-id=\"28693-286\">You will need to call \"context.sync()\" before the memory release takes effect.</span></span>"
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.Range;'
      return:
        type:
          - word.Word.Range
        description: ''