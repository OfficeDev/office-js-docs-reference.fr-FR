### YamlMime:UniversalReference
items:
  - uid: 'word!Word.Body:class'
    summary: "<span data-ttu-id=\"35e65-101\">Représente le corps d’un document ou d’une section.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-101\">Represents the body of a document or a section.</span></span>\n\n<span data-ttu-id=\"35e65-102\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-102\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: Word.Body
    fullName: Word.Body
    langs:
      - typeScript
    type: class
    extends:
      - 'word!OfficeExtension.ClientObject:class'
    package: word!
    children:
      - 'word!Word.Body#clear:member(1)'
      - 'word!Word.Body#contentControls:member'
      - 'word!Word.Body#context:member'
      - 'word!Word.Body#font:member'
      - 'word!Word.Body#getHtml:member(1)'
      - 'word!Word.Body#getOoxml:member(1)'
      - 'word!Word.Body#inlinePictures:member'
      - 'word!Word.Body#insertBreak:member(1)'
      - 'word!Word.Body#insertBreak:member(2)'
      - 'word!Word.Body#insertContentControl:member(1)'
      - 'word!Word.Body#insertFileFromBase64:member(1)'
      - 'word!Word.Body#insertFileFromBase64:member(2)'
      - 'word!Word.Body#insertHtml:member(1)'
      - 'word!Word.Body#insertHtml:member(2)'
      - 'word!Word.Body#insertOoxml:member(1)'
      - 'word!Word.Body#insertOoxml:member(2)'
      - 'word!Word.Body#insertParagraph:member(1)'
      - 'word!Word.Body#insertParagraph:member(2)'
      - 'word!Word.Body#insertText:member(1)'
      - 'word!Word.Body#insertText:member(2)'
      - 'word!Word.Body#load:member(1)'
      - 'word!Word.Body#load:member(2)'
      - 'word!Word.Body#load:member(3)'
      - 'word!Word.Body#paragraphs:member'
      - 'word!Word.Body#parentContentControl:member'
      - 'word!Word.Body#search:member(1)'
      - 'word!Word.Body#select:member(1)'
      - 'word!Word.Body#select:member(2)'
      - 'word!Word.Body#set:member(1)'
      - 'word!Word.Body#set:member(2)'
      - 'word!Word.Body#style:member'
      - 'word!Word.Body#text:member'
      - 'word!Word.Body#toJSON:member(1)'
      - 'word!Word.Body#track:member(1)'
      - 'word!Word.Body#untrack:member(1)'
  - uid: 'word!Word.Body#clear:member(1)'
    summary: "<span data-ttu-id=\"35e65-103\">Efface le contenu de l’objet de corps.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-103\">Clears the contents of the body object.</span></span> <span data-ttu-id=\"35e65-104\">L’utilisateur peut effectuer l’opération d’annulation sur le contenu effacé.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-104\">The user can perform the undo operation on the cleared content.</span></span>\n\n<span data-ttu-id=\"35e65-105\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-105\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="35e65-106">Exemples</span><span class="sxs-lookup"><span data-stu-id="35e65-106">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a command to clear the contents of the body.
              body.clear();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Cleared the body contents.');
              });
          })
          .catch(function (error) {
              console.log("Error: " + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });

          // The Silly stories add-in sample shows how the 
          // clear method can be used to clear the contents of a document.
          // https://aka.ms/sillystorywordaddin
          ```
  - uid: 'word!Word.Body#contentControls:member'
    summary: "<span data-ttu-id=\"35e65-107\">Obtient la collection d’objets de contrôle de contenu de texte enrichi dans le corps.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-107\">Gets the collection of rich text content control objects in the body.</span></span> <span data-ttu-id=\"35e65-108\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-108\">Read-only.</span></span>\n\n<span data-ttu-id=\"35e65-109\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-109\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: contentControls
    fullName: contentControls
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly contentControls: Word.ContentControlCollection;'
      return:
        type:
          - 'word!Word.ContentControlCollection:class'
  - uid: 'word!Word.Body#context:member'
    summary: <span data-ttu-id="35e65-110">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="35e65-110">The request context associated with the object.</span></span> <span data-ttu-id="35e65-111">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="35e65-111">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'word!Word.RequestContext:class'
  - uid: 'word!Word.Body#font:member'
    summary: "<span data-ttu-id=\"35e65-112\">Obtient le format de texte du corps.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-112\">Gets the text format of the body.</span></span> <span data-ttu-id=\"35e65-113\">Utilisez cette valeur pour obtenir et définir le nom, la taille, la couleur et d’autres propriétés de la police.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-113\">Use this to get and set font name, size, color and other properties.</span></span> <span data-ttu-id=\"35e65-114\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-114\">Read-only.</span></span>\n\n<span data-ttu-id=\"35e65-115\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-115\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: font
    fullName: font
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly font: Word.Font;'
      return:
        type:
          - 'word!Word.Font:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="35e65-116">Exemples</span><span class="sxs-lookup"><span data-stu-id="35e65-116">Examples</span></span>

          ```javascript
          // Get the style and the font size, font name, and font color properties on the body object.
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a command to load font and style information for the document body.
              context.load(body, 'font/size, font/name, font/color, style');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  // Show the results of the load method. Here we show the
                  // property values on the body object.
                  var results = 'Font size: ' + body.font.size +
                                '; Font name: ' + body.font.name +
                                '; Font color: ' + body.font.color +
                                '; Body style: ' + body.style;

                  console.log(results);
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Body#getHtml:member(1)'
    summary: "<span data-ttu-id=\"35e65-117\">Obtient une représentation HTML de l’objet Body.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-117\">Gets an HTML representation of the body object.</span></span> <span data-ttu-id=\"35e65-118\">Lorsqu’elle est affichée dans une page Web ou dans la visionneuse HTML, la mise en forme est une correspondance ferme, mais pas exacte, avec la mise en forme du document.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-118\">When rendered in a web page or HTML viewer, the formatting will be a close, but not exact, match to the formatting of the document.</span></span> <span data-ttu-id=\"35e65-119\">Cette méthode ne renvoie pas exactement le même code HTML pour le même document sur différentes plateformes (Windows, Mac, etc.).</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-119\">This method does not return the exact same HTML for the same document on different platforms (Windows, Mac, etc.).</span></span> <span data-ttu-id=\"35e65-120\">Si vous avez besoin d’une fidélité exacte ou d’une cohérence `Body.getOoxml()` entre les plateformes, utilisez et convertissez le code XML renvoyé en html.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-120\">If you need exact fidelity, or consistency across platforms, use `Body.getOoxml()` and convert the returned XML to HTML.</span></span>\n\n<span data-ttu-id=\"35e65-121\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-121\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: getHtml()
    fullName: getHtml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getHtml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - 'word!Word.Body#getHtml~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="35e65-122">Exemples</span><span class="sxs-lookup"><span data-stu-id="35e65-122">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a command to get the HTML contents of the body.
              var bodyHTML = body.getHtml();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log("Body HTML contents: " + bodyHTML.value);
              });
          })
          .catch(function (error) {
              console.log("Error: " + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Body#getOoxml:member(1)'
    summary: "<span data-ttu-id=\"35e65-123\">Obtient la représentation OOXML (Office Open XML) de l’objet de corps.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-123\">Gets the OOXML (Office Open XML) representation of the body object.</span></span>\n\n<span data-ttu-id=\"35e65-124\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-124\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: getOoxml()
    fullName: getOoxml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getOoxml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - 'word!Word.Body#getOoxml~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="35e65-125">Exemples</span><span class="sxs-lookup"><span data-stu-id="35e65-125">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a command to get the OOXML contents of the body.
              var bodyOOXML = body.getOoxml();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log("Body OOXML contents: " + bodyOOXML.value);
              });
          })
          .catch(function (error) {
              console.log("Error: " + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Body#inlinePictures:member'
    summary: "<span data-ttu-id=\"35e65-126\">Obtient la collection d’objets InlinePicture dans le corps.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-126\">Gets the collection of InlinePicture objects in the body.</span></span> <span data-ttu-id=\"35e65-127\">La collection n’inclut pas d’images flottantes.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-127\">The collection does not include floating images.</span></span> <span data-ttu-id=\"35e65-128\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-128\">Read-only.</span></span>\n\n<span data-ttu-id=\"35e65-129\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-129\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: inlinePictures
    fullName: inlinePictures
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly inlinePictures: Word.InlinePictureCollection;'
      return:
        type:
          - 'word!Word.InlinePictureCollection:class'
  - uid: 'word!Word.Body#insertBreak:member(1)'
    summary: "<span data-ttu-id=\"35e65-130\">Insère un saut à l’emplacement spécifié du document principal.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-130\">Inserts a break at the specified location in the main document.</span></span> <span data-ttu-id=\"35e65-131\">La valeur insertLocation peut être «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-131\">The insertLocation value can be 'Start' or 'End'.</span></span>\n\n<span data-ttu-id=\"35e65-132\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-132\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'insertBreak(breakType, insertLocation)'
    fullName: 'insertBreak(breakType, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakType: Word.BreakType, insertLocation: Word.InsertLocation): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="35e65-133">Exemples</span><span class="sxs-lookup"><span data-stu-id="35e65-133">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (ctx) {

              // Create a proxy object for the document body.
              var body = ctx.document.body;

              // Queue a command to insert a page break at the start of the document body.
              body.insertBreak(Word.BreakType.page, Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  console.log('Added a page break at the start of the document body.');
              });
          })
          .catch(function (error) {
              console.log("Error: " + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: breakType
          description: <span data-ttu-id="35e65-134">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="35e65-134">Required.</span></span> <span data-ttu-id="35e65-135">Type de saut à ajouter au corps.</span><span class="sxs-lookup"><span data-stu-id="35e65-135">The break type to add to the body.</span></span>
          type:
            - 'word!Word.BreakType:enum'
        - id: insertLocation
          description: "<span data-ttu-id=\"35e65-136\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-136\">Required.</span></span> <span data-ttu-id=\"35e65-137\">La valeur peut être «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-137\">The value can be 'Start' or 'End'.</span></span>"
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Body#insertBreak:member(2)'
    summary: "<span data-ttu-id=\"35e65-138\">Insère un saut à l’emplacement spécifié du document principal.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-138\">Inserts a break at the specified location in the main document.</span></span> <span data-ttu-id=\"35e65-139\">La valeur insertLocation peut être «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-139\">The insertLocation value can be 'Start' or 'End'.</span></span>\n\n<span data-ttu-id=\"35e65-140\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-140\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'insertBreak(breakTypeString, insertLocation)'
    fullName: 'insertBreak(breakTypeString, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakTypeString: "Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line", insertLocation: "Before" | "After" | "Start" | "End" | "Replace"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: breakTypeString
          description: <span data-ttu-id="35e65-141">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="35e65-141">Required.</span></span> <span data-ttu-id="35e65-142">Type de saut à ajouter au corps.</span><span class="sxs-lookup"><span data-stu-id="35e65-142">The break type to add to the body.</span></span>
          type:
            - '"Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line"'
        - id: insertLocation
          description: "<span data-ttu-id=\"35e65-143\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-143\">Required.</span></span> <span data-ttu-id=\"35e65-144\">La valeur peut être «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-144\">The value can be 'Start' or 'End'.</span></span>"
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Body#insertContentControl:member(1)'
    summary: "<span data-ttu-id=\"35e65-145\">Encadre l’objet de corps avec un contrôle de contenu de texte enrichi.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-145\">Wraps the body object with a Rich Text content control.</span></span>\n\n<span data-ttu-id=\"35e65-146\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-146\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: insertContentControl()
    fullName: insertContentControl()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertContentControl(): Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="35e65-147">Exemples</span><span class="sxs-lookup"><span data-stu-id="35e65-147">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a command to wrap the body in a content control.
              body.insertContentControl();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Wrapped the body in a content control.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Body#insertFileFromBase64:member(1)'
    summary: "<span data-ttu-id=\"35e65-148\">Insère un document dans le corps à l’emplacement spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-148\">Inserts a document into the body at the specified location.</span></span> <span data-ttu-id=\"35e65-149\">La valeur insertLocation peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-149\">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>\n\n<span data-ttu-id=\"35e65-150\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-150\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'insertFileFromBase64(base64File, insertLocation)'
    fullName: 'insertFileFromBase64(base64File, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="35e65-151">Exemples</span><span class="sxs-lookup"><span data-stu-id="35e65-151">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a command to insert base64 encoded .docx at the beginning of the content body.
              // You will need to implement getBase64() to pass in a string of a base64 encoded docx file.
              body.insertFileFromBase64(getBase64(), Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Added base64 encoded text to the beginning of the document body.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: base64File
          description: <span data-ttu-id="35e65-152">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="35e65-152">Required.</span></span> <span data-ttu-id="35e65-153">Contenu encodé en base64 d’un fichier. docx.</span><span class="sxs-lookup"><span data-stu-id="35e65-153">The base64 encoded content of a .docx file.</span></span>
          type:
            - string
        - id: insertLocation
          description: "<span data-ttu-id=\"35e65-154\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-154\">Required.</span></span> <span data-ttu-id=\"35e65-155\">La valeur peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-155\">The value can be 'Replace', 'Start', or 'End'.</span></span>"
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Body#insertFileFromBase64:member(2)'
    summary: "<span data-ttu-id=\"35e65-156\">Insère un document dans le corps à l’emplacement spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-156\">Inserts a document into the body at the specified location.</span></span> <span data-ttu-id=\"35e65-157\">La valeur insertLocation peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-157\">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>\n\n<span data-ttu-id=\"35e65-158\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-158\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'insertFileFromBase64(base64File, insertLocationString)'
    fullName: 'insertFileFromBase64(base64File, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: base64File
          description: <span data-ttu-id="35e65-159">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="35e65-159">Required.</span></span> <span data-ttu-id="35e65-160">Contenu encodé en base64 d’un fichier. docx.</span><span class="sxs-lookup"><span data-stu-id="35e65-160">The base64 encoded content of a .docx file.</span></span>
          type:
            - string
        - id: insertLocationString
          description: "<span data-ttu-id=\"35e65-161\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-161\">Required.</span></span> <span data-ttu-id=\"35e65-162\">La valeur peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-162\">The value can be 'Replace', 'Start', or 'End'.</span></span>"
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Body#insertHtml:member(1)'
    summary: "<span data-ttu-id=\"35e65-163\">Insère du code HTML à l’emplacement spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-163\">Inserts HTML at the specified location.</span></span> <span data-ttu-id=\"35e65-164\">La valeur insertLocation peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-164\">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>\n\n<span data-ttu-id=\"35e65-165\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-165\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'insertHtml(html, insertLocation)'
    fullName: 'insertHtml(html, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="35e65-166">Exemples</span><span class="sxs-lookup"><span data-stu-id="35e65-166">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a command to insert HTML in to the beginning of the body.
              body.insertHtml(
                  '<strong>This is text inserted with body.insertHtml()</strong>', Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('HTML added to the beginning of the document body.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: html
          description: <span data-ttu-id="35e65-167">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="35e65-167">Required.</span></span> <span data-ttu-id="35e65-168">Code HTML à insérer dans le document.</span><span class="sxs-lookup"><span data-stu-id="35e65-168">The HTML to be inserted in the document.</span></span>
          type:
            - string
        - id: insertLocation
          description: "<span data-ttu-id=\"35e65-169\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-169\">Required.</span></span> <span data-ttu-id=\"35e65-170\">La valeur peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-170\">The value can be 'Replace', 'Start', or 'End'.</span></span>"
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Body#insertHtml:member(2)'
    summary: "<span data-ttu-id=\"35e65-171\">Insère du code HTML à l’emplacement spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-171\">Inserts HTML at the specified location.</span></span> <span data-ttu-id=\"35e65-172\">La valeur insertLocation peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-172\">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>\n\n<span data-ttu-id=\"35e65-173\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-173\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'insertHtml(html, insertLocationString)'
    fullName: 'insertHtml(html, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: html
          description: <span data-ttu-id="35e65-174">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="35e65-174">Required.</span></span> <span data-ttu-id="35e65-175">Code HTML à insérer dans le document.</span><span class="sxs-lookup"><span data-stu-id="35e65-175">The HTML to be inserted in the document.</span></span>
          type:
            - string
        - id: insertLocationString
          description: "<span data-ttu-id=\"35e65-176\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-176\">Required.</span></span> <span data-ttu-id=\"35e65-177\">La valeur peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-177\">The value can be 'Replace', 'Start', or 'End'.</span></span>"
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Body#insertOoxml:member(1)'
    summary: "<span data-ttu-id=\"35e65-178\">Insère du code OOXML à l’emplacement spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-178\">Inserts OOXML at the specified location.</span></span> <span data-ttu-id=\"35e65-179\">La valeur insertLocation peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-179\">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>\n\n<span data-ttu-id=\"35e65-180\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-180\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'insertOoxml(ooxml, insertLocation)'
    fullName: 'insertOoxml(ooxml, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: ooxml
          description: <span data-ttu-id="35e65-181">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="35e65-181">Required.</span></span> <span data-ttu-id="35e65-182">Code OOXML à insérer.</span><span class="sxs-lookup"><span data-stu-id="35e65-182">The OOXML to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: "<span data-ttu-id=\"35e65-183\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-183\">Required.</span></span> <span data-ttu-id=\"35e65-184\">La valeur peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-184\">The value can be 'Replace', 'Start', or 'End'.</span></span>"
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Body#insertOoxml:member(2)'
    summary: "<span data-ttu-id=\"35e65-185\">Insère du code OOXML à l’emplacement spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-185\">Inserts OOXML at the specified location.</span></span> <span data-ttu-id=\"35e65-186\">La valeur insertLocation peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-186\">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>\n\n<span data-ttu-id=\"35e65-187\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-187\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'insertOoxml(ooxml, insertLocationString)'
    fullName: 'insertOoxml(ooxml, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: ooxml
          description: <span data-ttu-id="35e65-188">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="35e65-188">Required.</span></span> <span data-ttu-id="35e65-189">Code OOXML à insérer.</span><span class="sxs-lookup"><span data-stu-id="35e65-189">The OOXML to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: "<span data-ttu-id=\"35e65-190\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-190\">Required.</span></span> <span data-ttu-id=\"35e65-191\">La valeur peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-191\">The value can be 'Replace', 'Start', or 'End'.</span></span>"
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Body#insertParagraph:member(1)'
    summary: "<span data-ttu-id=\"35e65-192\">Insère un paragraphe à l’emplacement spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-192\">Inserts a paragraph at the specified location.</span></span> <span data-ttu-id=\"35e65-193\">La valeur insertLocation peut être «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-193\">The insertLocation value can be 'Start' or 'End'.</span></span>\n\n<span data-ttu-id=\"35e65-194\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-194\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'insertParagraph(paragraphText, insertLocation)'
    fullName: 'insertParagraph(paragraphText, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="35e65-195">Exemples</span><span class="sxs-lookup"><span data-stu-id="35e65-195">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a command to insert the paragraph at the end of the document body.
              body.insertParagraph('Content of a new paragraph', Word.InsertLocation.end);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Paragraph added at the end of the document body.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });

          // The Word-Add-in-DocumentAssembly sample shows how you can use the insertParagraph method to assemble a document.
          // https://github.com/OfficeDev/Word-Add-in-DocumentAssembly
          ```
          ```typescript
          await Word.run(async (context) => {
              let paragraph = context.document.body.insertParagraph("Timeline", "End");
              paragraph.style = "Heading 2";
              let paragraph2 = context.document.body.insertParagraph("The Services shall commence on July 31, 2015, and shall continue through July 29, 2015.", "End");
              paragraph2.style = "Normal";
              let paragraph3 = context.document.body.insertParagraph("Project Costs by Phase", "End");
              paragraph3.style = "Heading 2";
              // Note a content control with the title of "ProjectCosts" is added. Content will be replaced later.
              let paragraph4 = context.document.body.insertParagraph("<Add Project Costs Here>", "End");
              paragraph4.style = "Normal";
              paragraph4.font.highlightColor = "#FFFF00";
              let contentControl = paragraph4.insertContentControl();
              contentControl.title = "ProjectCosts";
              let paragraph5 = context.document.body.insertParagraph("Project Team", "End");
              paragraph5.style = "Heading 2";
              paragraph5.font.highlightColor = "#FFFFFF";
              let paragraph6 = context.document.body.insertParagraph("Terms of Work", "End");
              paragraph6.style = "Heading 1";
              let paragraph7 = context.document.body.insertParagraph("Contractor shall provide the Services and Deliverable(s) as follows:", "End");
              paragraph7.style = "Normal";
              let paragraph8 = context.document.body.insertParagraph("Out-of-Pocket Expenses / Invoice Procedures", "End");
              paragraph8.style = "Heading 2";
              let paragraph9 = context.document.body.insertParagraph("Client will be invoiced monthly for the consulting services and T&L expenses. Standard Contractor invoicing is assumed to be acceptable. Invoices are due upon receipt. client will be invoiced all costs associated with out-of-pocket expenses (including, without limitation, costs and expenses associated with meals, lodging, local transportation and any other applicable business expenses) listed on the invoice as a separate line item. Reimbursement for out-of-pocket expenses in connection with performance of this SOW, when authorized and up to the limits set forth in this SOW, shall be in accordance with Client's then-current published policies governing travel and associated business expenses, which information shall be provided by the Client Project Manager.", "End");
              paragraph9.style = "Normal";
              // Insert a page break at the end of the document.
              context.document.body.insertBreak("Page", "End");

              await context.sync();
          });
          ```
      parameters:
        - id: paragraphText
          description: <span data-ttu-id="35e65-196">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="35e65-196">Required.</span></span> <span data-ttu-id="35e65-197">Texte de paragraphe à insérer.</span><span class="sxs-lookup"><span data-stu-id="35e65-197">The paragraph text to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: "<span data-ttu-id=\"35e65-198\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-198\">Required.</span></span> <span data-ttu-id=\"35e65-199\">La valeur peut être «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-199\">The value can be 'Start' or 'End'.</span></span>"
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Body#insertParagraph:member(2)'
    summary: "<span data-ttu-id=\"35e65-200\">Insère un paragraphe à l’emplacement spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-200\">Inserts a paragraph at the specified location.</span></span> <span data-ttu-id=\"35e65-201\">La valeur insertLocation peut être «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-201\">The insertLocation value can be 'Start' or 'End'.</span></span>\n\n<span data-ttu-id=\"35e65-202\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-202\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'insertParagraph(paragraphText, insertLocationString)'
    fullName: 'insertParagraph(paragraphText, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
      parameters:
        - id: paragraphText
          description: <span data-ttu-id="35e65-203">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="35e65-203">Required.</span></span> <span data-ttu-id="35e65-204">Texte de paragraphe à insérer.</span><span class="sxs-lookup"><span data-stu-id="35e65-204">The paragraph text to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: "<span data-ttu-id=\"35e65-205\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-205\">Required.</span></span> <span data-ttu-id=\"35e65-206\">La valeur peut être «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-206\">The value can be 'Start' or 'End'.</span></span>"
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Body#insertText:member(1)'
    summary: "<span data-ttu-id=\"35e65-207\">Insère du texte dans le corps à l’emplacement spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-207\">Inserts text into the body at the specified location.</span></span> <span data-ttu-id=\"35e65-208\">La valeur insertLocation peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-208\">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>\n\n<span data-ttu-id=\"35e65-209\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-209\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'insertText(text, insertLocation)'
    fullName: 'insertText(text, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="35e65-210">Exemples</span><span class="sxs-lookup"><span data-stu-id="35e65-210">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a command to insert text in to the beginning of the body.
              body.insertText('This is text inserted with body.insertText()', Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Text added to the beginning of the document body.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: text
          description: <span data-ttu-id="35e65-211">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="35e65-211">Required.</span></span> <span data-ttu-id="35e65-212">Texte à insérer.</span><span class="sxs-lookup"><span data-stu-id="35e65-212">Text to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: "<span data-ttu-id=\"35e65-213\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-213\">Required.</span></span> <span data-ttu-id=\"35e65-214\">La valeur peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-214\">The value can be 'Replace', 'Start', or 'End'.</span></span>"
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Body#insertText:member(2)'
    summary: "<span data-ttu-id=\"35e65-215\">Insère du texte dans le corps à l’emplacement spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-215\">Inserts text into the body at the specified location.</span></span> <span data-ttu-id=\"35e65-216\">La valeur insertLocation peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-216\">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>\n\n<span data-ttu-id=\"35e65-217\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-217\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'insertText(text, insertLocationString)'
    fullName: 'insertText(text, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: text
          description: <span data-ttu-id="35e65-218">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="35e65-218">Required.</span></span> <span data-ttu-id="35e65-219">Texte à insérer.</span><span class="sxs-lookup"><span data-stu-id="35e65-219">Text to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: "<span data-ttu-id=\"35e65-220\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-220\">Required.</span></span> <span data-ttu-id=\"35e65-221\">La valeur peut être «\_Replace\_» (remplacer), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-221\">The value can be 'Replace', 'Start', or 'End'.</span></span>"
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Body#load:member(1)'
    summary: "<span data-ttu-id=\"35e65-222\">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-222\">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id=\"35e65-223\">Vous devez appeler «\_context.sync()\_» avant de lire les propriétés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-223\">You must call \"context.sync()\" before reading the properties.</span></span>"
    remarks: "<span data-ttu-id=\"35e65-224\">En plus de cette signature, cette méthode possède les signatures suivantes\_:</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-224\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"35e65-225\">`load(option?: string | string[]): Word.Body`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-225\">`load(option?: string | string[]): Word.Body` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>\n\n<span data-ttu-id=\"35e65-226\">`load(option?: { select?: string; expand?: string; }): Word.Body`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-226\">`load(option?: { select?: string; expand?: string; }): Word.Body` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"35e65-227\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Body`-Uniquement disponible sur les types de collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-227\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Body` - Only available on collection types.</span></span> <span data-ttu-id=\"35e65-228\">Elle est similaire à la signature précédente.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-228\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"35e65-229\">Option. Top indique le nombre maximal d’éléments de collection qui peuvent être inclus dans le résultat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-229\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"35e65-230\">Option. Skip indique le nombre d’éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-230\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"35e65-231\">Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d’éléments.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-231\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>"
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Word.Interfaces.BodyLoadOptions): Word.Body;'
      return:
        type:
          - 'word!Word.Body:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'word!Word.Interfaces.BodyLoadOptions:interface'
  - uid: 'word!Word.Body#load:member(2)'
    summary: <span data-ttu-id="35e65-232">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="35e65-232">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="35e65-233">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="35e65-233">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.Body;'
      return:
        type:
          - 'word!Word.Body:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="35e65-234">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="35e65-234">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'word!Word.Body#load:member(3)'
    summary: <span data-ttu-id="35e65-235">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="35e65-235">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="35e65-236">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="35e65-236">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Word.Body;'
      return:
        type:
          - 'word!Word.Body:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="35e65-237">Où propertyNamesAndPaths. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et propertyNamesAndPaths. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="35e65-237">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'word!Word.Body#paragraphs:member'
    summary: "<span data-ttu-id=\"35e65-238\">Obtient la collection d’objets Paragraph dans le corps.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-238\">Gets the collection of paragraph objects in the body.</span></span> <span data-ttu-id=\"35e65-239\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-239\">Read-only.</span></span>\n\n<span data-ttu-id=\"35e65-240\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-240\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: paragraphs
    fullName: paragraphs
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly paragraphs: Word.ParagraphCollection;'
      return:
        type:
          - 'word!Word.ParagraphCollection:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="35e65-241">Exemples</span><span class="sxs-lookup"><span data-stu-id="35e65-241">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            let paragraphs = context.document.body.paragraphs;
            paragraphs.load("text");
            await context.sync();

            let text = [];
            paragraphs.items.forEach((item) => {
              let paragraph = item.text.trim();
              if (paragraph) {
                paragraph.split(" ").forEach((term) => {
                  let currentTerm = term.trim();
                  if (currentTerm) {
                    text.push(currentTerm);
                  }
                });
              }
            });

            let makeTextDistinct = new Set(text);
            let distinctText = Array.from(makeTextDistinct);
            let allSearchResults = [];

            for (let i = 0; i < distinctText.length; i++) {
              let results = context.document.body.search(distinctText[i], { matchCase: true, matchWholeWord: true });
              results.load("text");

              // Map search term with its results.
              let correlatedResults = {
                searchTerm: distinctText[i],
                hits: results
              };

              allSearchResults.push(correlatedResults);
            }

            await context.sync();

            // Display counts.
            allSearchResults.forEach((result) => {
              let length = result.hits.items.length;

              console.log("Search term: " + result.searchTerm + " => Count: " + length);
            });
          });
          ```
  - uid: 'word!Word.Body#parentContentControl:member'
    summary: "<span data-ttu-id=\"35e65-242\">Obtient le contrôle de contenu qui contient le corps.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-242\">Gets the content control that contains the body.</span></span> <span data-ttu-id=\"35e65-243\">S’il n’existe pas de contrôle de contenu parent.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-243\">Throws if there isn't a parent content control.</span></span> <span data-ttu-id=\"35e65-244\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-244\">Read-only.</span></span>\n\n<span data-ttu-id=\"35e65-245\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-245\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: parentContentControl
    fullName: parentContentControl
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentContentControl: Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
  - uid: 'word!Word.Body#search:member(1)'
    summary: "<span data-ttu-id=\"35e65-246\">Effectue une recherche avec le SearchOptions spécifié sur l’étendue de l’objet Body.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-246\">Performs a search with the specified SearchOptions on the scope of the body object.</span></span> <span data-ttu-id=\"35e65-247\">Les résultats de la recherche sont un ensemble d’objets de plage.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-247\">The search results are a collection of range objects.</span></span>\n\n<span data-ttu-id=\"35e65-248\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-248\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'search(searchText, searchOptions)'
    fullName: 'search(searchText, searchOptions)'
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        search(searchText: string, searchOptions?: Word.SearchOptions | {
                    ignorePunct?: boolean;
                    ignoreSpace?: boolean;
                    matchCase?: boolean;
                    matchPrefix?: boolean;
                    matchSuffix?: boolean;
                    matchWholeWord?: boolean;
                    matchWildcards?: boolean;
                }): Word.RangeCollection;
      return:
        type:
          - 'word!Word.RangeCollection:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="35e65-249">Exemples</span><span class="sxs-lookup"><span data-stu-id="35e65-249">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a command to search the document.
              var searchResults = context.document.body.search('video', {matchCase: false});

              // Queue a command to load the results.
              context.load(searchResults, 'text, font');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  var results = 'Found count: ' + searchResults.items.length +
                                '; we highlighted the results.';

                  // Queue a command to change the font for each found item.
                  for (var i = 0; i < searchResults.items.length; i++) {
                    searchResults.items[i].font.color = '#FF0000'    // Change color to Red
                    searchResults.items[i].font.highlightColor = '#FFFF00';
                    searchResults.items[i].font.bold = true;
                  }

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log(results);
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });

          // The Word-Add-in-DocumentAssembly sample provides another example of how to search a document.
          // https://github.com/OfficeDev/Word-Add-in-DocumentAssembly
          ```
          ```typescript
          await Word.run(async (context) => {
            let results = context.document.body.search("Online");
            results.load("length");

            await context.sync();

            // Let's traverse the search results... and highlight...
            for (let i = 0; i < results.items.length; i++) {
              results.items[i].font.highlightColor = "yellow";
            }

            await context.sync();
          });
          ```
          ```typescript
          await Word.run(async (context) => {
            // Check out how wildcard expression are built, also use the second parameter of the search method to include search modes
            // (i.e. use wildcards).
            let results = context.document.body.search("$*.[0-9][0-9]", { matchWildcards: true });
            results.load("length");

            await context.sync();

            // Let's traverse the search results... and highlight...
            for (let i = 0; i < results.items.length; i++) {
              results.items[i].font.highlightColor = "red";
              results.items[i].font.color = "white";
            }

            await context.sync();
          });
          ```
          ```typescript
          await Word.run(async (context) => {
            let paragraphs = context.document.body.paragraphs;
            paragraphs.load("text");
            await context.sync();

            let text = [];
            paragraphs.items.forEach((item) => {
              let paragraph = item.text.trim();
              if (paragraph) {
                paragraph.split(" ").forEach((term) => {
                  let currentTerm = term.trim();
                  if (currentTerm) {
                    text.push(currentTerm);
                  }
                });
              }
            });

            let makeTextDistinct = new Set(text);
            let distinctText = Array.from(makeTextDistinct);
            let allSearchResults = [];

            for (let i = 0; i < distinctText.length; i++) {
              let results = context.document.body.search(distinctText[i], { matchCase: true, matchWholeWord: true });
              results.load("text");

              // Map search term with its results.
              let correlatedResults = {
                searchTerm: distinctText[i],
                hits: results
              };

              allSearchResults.push(correlatedResults);
            }

            await context.sync();

            // Display counts.
            allSearchResults.forEach((result) => {
              let length = result.hits.items.length;

              console.log("Search term: " + result.searchTerm + " => Count: " + length);
            });
          });
          ```
      parameters:
        - id: searchText
          description: <span data-ttu-id="35e65-250">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="35e65-250">Required.</span></span> <span data-ttu-id="35e65-251">Texte de recherche.</span><span class="sxs-lookup"><span data-stu-id="35e65-251">The search text.</span></span> <span data-ttu-id="35e65-252">Il peut s’agir d’un maximum de 255 caractères.</span><span class="sxs-lookup"><span data-stu-id="35e65-252">Can be a maximum of 255 characters.</span></span>
          type:
            - string
        - id: searchOptions
          description: <span data-ttu-id="35e65-253">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="35e65-253">Optional.</span></span> <span data-ttu-id="35e65-254">Options de la recherche.</span><span class="sxs-lookup"><span data-stu-id="35e65-254">Options for the search.</span></span>
          type:
            - 'word!Word.Body#search~0:complex'
  - uid: 'word!Word.Body#select:member(1)'
    summary: "<span data-ttu-id=\"35e65-255\">Sélectionne le corps et y accède via l’interface utilisateur de Word.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-255\">Selects the body and navigates the Word UI to it.</span></span>\n\n<span data-ttu-id=\"35e65-256\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-256\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: select(selectionMode)
    fullName: select(selectionMode)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionMode?: Word.SelectionMode): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="35e65-257">Exemples</span><span class="sxs-lookup"><span data-stu-id="35e65-257">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a command to select the document body. The Word UI will
              // move to the selected document body.
              body.select();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Selected the document body.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: selectionMode
          description: "<span data-ttu-id=\"35e65-258\">Facultatif.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-258\">Optional.</span></span> <span data-ttu-id=\"35e65-259\">Le mode de sélection peut être «\_Select\_» (sélectionner), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-259\">The selection mode can be 'Select', 'Start', or 'End'.</span></span> <span data-ttu-id=\"35e65-260\">«\_Select\_» (sélectionner) est la valeur par défaut.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-260\">'Select' is the default.</span></span>"
          type:
            - 'word!Word.SelectionMode:enum'
  - uid: 'word!Word.Body#select:member(2)'
    summary: "<span data-ttu-id=\"35e65-261\">Sélectionne le corps et y accède via l’interface utilisateur de Word.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-261\">Selects the body and navigates the Word UI to it.</span></span>\n\n<span data-ttu-id=\"35e65-262\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-262\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: select(selectionModeString)
    fullName: select(selectionModeString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionModeString?: "Select" | "Start" | "End"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: selectionModeString
          description: "<span data-ttu-id=\"35e65-263\">Facultatif.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-263\">Optional.</span></span> <span data-ttu-id=\"35e65-264\">Le mode de sélection peut être «\_Select\_» (sélectionner), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-264\">The selection mode can be 'Select', 'Start', or 'End'.</span></span> <span data-ttu-id=\"35e65-265\">«\_Select\_» (sélectionner) est la valeur par défaut.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-265\">'Select' is the default.</span></span>"
          type:
            - '"Select" | "Start" | "End"'
  - uid: 'word!Word.Body#set:member(1)'
    summary: '<span data-ttu-id="35e65-266">Définit plusieurs propriétés d’un objet en même temps.</span><span class="sxs-lookup"><span data-stu-id="35e65-266">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="35e65-267">Vous pouvez transmettre un objet plain avec les propriétés appropriées, ou un autre objet API du même type.</span><span class="sxs-lookup"><span data-stu-id="35e65-267">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: "<span data-ttu-id=\"35e65-268\">Cette méthode est dotée de la signature supplémentaire suivante\_:</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-268\">This method has the following additional signature:</span></span>\n\n`set(properties: Word.Body): void`"
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.BodyUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="35e65-269">Objet JavaScript avec des propriétés qui sont structurées isomorphically vers les propriétés de l’objet sur lequel la méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="35e65-269">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'word!Word.Interfaces.BodyUpdateData:interface'
        - id: options
          description: <span data-ttu-id="35e65-270">Fournit une option permettant de supprimer les erreurs si l’objet Properties tente de définir des propriétés en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="35e65-270">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'word!OfficeExtension.UpdateOptions:interface'
  - uid: 'word!Word.Body#set:member(2)'
    summary: '<span data-ttu-id="35e65-271">Définit plusieurs propriétés de l’objet en même temps, en fonction d’un objet chargé existant.</span><span class="sxs-lookup"><span data-stu-id="35e65-271">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Word.Body): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'word!Word.Body:class'
  - uid: 'word!Word.Body#style:member'
    summary: "<span data-ttu-id=\"35e65-p155\">Obtient ou définit le nom de style du corps. Utilisez cette propriété pour les noms des styles personnalisés et localisés. Pour utiliser les styles prédéfinis qui sont portables entre différents paramètres régionaux, voir la propriété «\_styleBuiltIn\_».</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-p155\">Gets or sets the style name for the body. Use this property for custom styles and localized style names. To use the built-in styles that are portable between locales, see the \"styleBuiltIn\" property.</span></span>\n\n<span data-ttu-id=\"35e65-275\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-275\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: string;'
      return:
        type:
          - string
  - uid: 'word!Word.Body#text:member'
    summary: "<span data-ttu-id=\"35e65-276\">Obtient le texte du corps.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-276\">Gets the text of the body.</span></span> <span data-ttu-id=\"35e65-277\">Utilisez la méthode insertText pour insérer du texte.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-277\">Use the insertText method to insert text.</span></span> <span data-ttu-id=\"35e65-278\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-278\">Read-only.</span></span>\n\n<span data-ttu-id=\"35e65-279\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-279\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: text
    fullName: text
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly text: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="35e65-280">Exemples</span><span class="sxs-lookup"><span data-stu-id="35e65-280">Examples</span></span>

          ```javascript
          // Get the text property on the body object
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a command to load the text in document body.
              context.load(body, 'text');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log("Body contents: " + body.text);
              });
          })
          .catch(function (error) {
              console.log("Error: " + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Body#toJSON:member(1)'
    summary: '<span data-ttu-id="35e65-281">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="35e65-281">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="35e65-282">.</span><span class="sxs-lookup"><span data-stu-id="35e65-282"></span></span> <span data-ttu-id="35e65-283">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="35e65-283"></span></span><!-- --><span data-ttu-id="35e65-284">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que l’objet Word. Body d’origine est un objet `toJSON` API, la méthode renvoie un objet JavaScript simple (tapé comme`Word.Interfaces.BodyData`</span><span class="sxs-lookup"><span data-stu-id="35e65-284">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Word.Body object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.BodyData`</span></span><!-- --><span data-ttu-id="35e65-285">) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l’objet d’origine.</span><span class="sxs-lookup"><span data-stu-id="35e65-285">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.BodyData;'
      return:
        type:
          - 'word!Word.Interfaces.BodyData:interface'
        description: ''
  - uid: 'word!Word.Body#track:member(1)'
    summary: "<span data-ttu-id=\"35e65-286\">Effectuer le suivi de l’objet pour l’ajustement automatique en fonction environnant des modifications dans le document.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-286\">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id=\"35e65-287\">Cet appel est abréviations context.trackedObjects.add(thisObject).</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-287\">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id=\"35e65-288\">Si vous utilisez cet objet au sein de «\_.sync\_» appels et en dehors de l’exécution séquentielle d’un lot de «\_.run\_» et rencontrez un message d’erreur «\_InvalidObjectPath\_» lors de la définition d’une propriété ou appeler une méthode sur l’objet, vous devez ajouter l’objet à l’objet de suivi collection de sites lors de l’objet a été créé.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-288\">If you are using this object across \".sync\" calls and outside the sequential execution of a \".run\" batch, and get an \"InvalidObjectPath\" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>"
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.Body;'
      return:
        type:
          - 'word!Word.Body:class'
        description: ''
  - uid: 'word!Word.Body#untrack:member(1)'
    summary: "<span data-ttu-id=\"35e65-289\">Publication mémoire associée à cet objet si elle a été précédemment suivie.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-289\">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id=\"35e65-290\">Cet appel est abréviations context.trackedObjects.add(thisObject).</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-290\">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id=\"35e65-291\">Vous rencontrez de nombreux objets suivies ralentit l’application hôte, donc n’oubliez pas de libérer les objets que l'on ajoute, une fois que vous avez terminé à les utiliser.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-291\">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them.</span></span> <span data-ttu-id=\"35e65-292\">Vous devez appeler «\_context.sync()\_» avant la publication de mémoire prend effet.</span><span class=\"sxs-lookup\"><span data-stu-id=\"35e65-292\">You will need to call \"context.sync()\" before the memory release takes effect.</span></span>"
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.Body;'
      return:
        type:
          - 'word!Word.Body:class'
        description: ''
references:
  - uid: 'word!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'word!Word.ContentControlCollection:class'
    name: Word.ContentControlCollection
  - uid: 'word!Word.RequestContext:class'
    name: RequestContext
  - uid: 'word!Word.Font:class'
    name: Word.Font
  - uid: 'word!Word.Body#getHtml~0:complex'
    name: OfficeExtension.ClientResult<string>
    fullName: OfficeExtension.ClientResult<string>
    spec.typeScript:
      - uid: 'word!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <string>
        fullName: <string>
  - uid: 'word!Word.Body#getOoxml~0:complex'
    name: OfficeExtension.ClientResult<string>
    fullName: OfficeExtension.ClientResult<string>
    spec.typeScript:
      - uid: 'word!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <string>
        fullName: <string>
  - uid: 'word!Word.InlinePictureCollection:class'
    name: Word.InlinePictureCollection
  - uid: 'word!Word.BreakType:enum'
    name: Word.BreakType
  - uid: 'word!Word.InsertLocation:enum'
    name: Word.InsertLocation
  - uid: 'word!Word.ContentControl:class'
    name: Word.ContentControl
  - uid: 'word!Word.Range:class'
    name: Word.Range
  - uid: 'word!Word.Paragraph:class'
    name: Word.Paragraph
  - uid: 'word!Word.Body:class'
    name: Word.Body
  - uid: 'word!Word.Interfaces.BodyLoadOptions:interface'
    name: Word.Interfaces.BodyLoadOptions
  - uid: 'word!Word.ParagraphCollection:class'
    name: Word.ParagraphCollection
  - uid: 'word!Word.RangeCollection:class'
    name: Word.RangeCollection
  - uid: 'word!Word.Body#search~0:complex'
    name: |-
      Word.SearchOptions | {
                  ignorePunct?: boolean;
                  ignoreSpace?: boolean;
                  matchCase?: boolean;
                  matchPrefix?: boolean;
                  matchSuffix?: boolean;
                  matchWholeWord?: boolean;
                  matchWildcards?: boolean;
              }
    fullName: |-
      Word.SearchOptions | {
                  ignorePunct?: boolean;
                  ignoreSpace?: boolean;
                  matchCase?: boolean;
                  matchPrefix?: boolean;
                  matchSuffix?: boolean;
                  matchWholeWord?: boolean;
                  matchWildcards?: boolean;
              }
    spec.typeScript:
      - uid: 'word!Word.SearchOptions:class'
        name: Word.SearchOptions
        fullName: Word.SearchOptions
      - name: |2-
           | {
                      ignorePunct?: boolean;
                      ignoreSpace?: boolean;
                      matchCase?: boolean;
                      matchPrefix?: boolean;
                      matchSuffix?: boolean;
                      matchWholeWord?: boolean;
                      matchWildcards?: boolean;
                  }
        fullName: |2-
           | {
                      ignorePunct?: boolean;
                      ignoreSpace?: boolean;
                      matchCase?: boolean;
                      matchPrefix?: boolean;
                      matchSuffix?: boolean;
                      matchWholeWord?: boolean;
                      matchWildcards?: boolean;
                  }
  - uid: 'word!Word.SelectionMode:enum'
    name: Word.SelectionMode
  - uid: 'word!Word.Interfaces.BodyUpdateData:interface'
    name: Interfaces.BodyUpdateData
  - uid: 'word!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'word!Word.Interfaces.BodyData:interface'
    name: Word.Interfaces.BodyData