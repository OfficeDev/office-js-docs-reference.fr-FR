### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.TextConditionalFormat:class'
    summary: "<span data-ttu-id=\"23c2c-101\">Représente un format conditionnel de texte spécifique.</span><span class=\"sxs-lookup\"><span data-stu-id=\"23c2c-101\">Represents a specific text conditional format.</span></span>\n\n<span data-ttu-id=\"23c2c-102\">\\[[Ensemble d’API\_: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"23c2c-102\">\\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: Excel.TextConditionalFormat
    fullName: Excel.TextConditionalFormat
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.TextConditionalFormat#context:member'
      - 'excel!Excel.TextConditionalFormat#format:member'
      - 'excel!Excel.TextConditionalFormat#load:member(1)'
      - 'excel!Excel.TextConditionalFormat#load:member(2)'
      - 'excel!Excel.TextConditionalFormat#load:member(3)'
      - 'excel!Excel.TextConditionalFormat#rule:member'
      - 'excel!Excel.TextConditionalFormat#set:member(1)'
      - 'excel!Excel.TextConditionalFormat#set:member(2)'
      - 'excel!Excel.TextConditionalFormat#toJSON:member(1)'
  - uid: 'excel!Excel.TextConditionalFormat#context:member'
    summary: <span data-ttu-id="23c2c-103">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="23c2c-103">The request context associated with the object.</span></span> <span data-ttu-id="23c2c-104">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="23c2c-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.TextConditionalFormat#format:member'
    summary: "<span data-ttu-id=\"23c2c-105\">Renvoie un objet format qui encapsule la police, le remplissage, les bordures et d’autres propriétés des formats conditionnels.</span><span class=\"sxs-lookup\"><span data-stu-id=\"23c2c-105\">Returns a format object, encapsulating the conditional formats font, fill, borders, and other properties.</span></span> <span data-ttu-id=\"23c2c-106\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"23c2c-106\">Read-only.</span></span>\n\n<span data-ttu-id=\"23c2c-107\">\\[[Ensemble d’API\_: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"23c2c-107\">\\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly format: Excel.ConditionalRangeFormat;'
      return:
        type:
          - 'excel!Excel.ConditionalRangeFormat:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="23c2c-108">Exemples</span><span class="sxs-lookup"><span data-stu-id="23c2c-108">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B16:D18");
              const conditionalFormat = range.conditionalFormats
                  .add(Excel.ConditionalFormatType.containsText);
              conditionalFormat.textComparison.format.font.color = "red";
              conditionalFormat.textComparison.rule = { operator: Excel.ConditionalTextOperator.contains, text: "Delayed" };

              await context.sync();
          });
          ```
  - uid: 'excel!Excel.TextConditionalFormat#load:member(1)'
    summary: "<span data-ttu-id=\"23c2c-109\">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"23c2c-109\">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id=\"23c2c-110\">Vous devez appeler «\_context.sync()\_» avant de lire les propriétés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"23c2c-110\">You must call \"context.sync()\" before reading the properties.</span></span>"
    remarks: "<span data-ttu-id=\"23c2c-111\">En plus de cette signature, cette méthode possède les signatures suivantes\_:</span><span class=\"sxs-lookup\"><span data-stu-id=\"23c2c-111\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"23c2c-112\">`load(option?: string | string[]): Excel.TextConditionalFormat`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class=\"sxs-lookup\"><span data-stu-id=\"23c2c-112\">`load(option?: string | string[]): Excel.TextConditionalFormat` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>\n\n<span data-ttu-id=\"23c2c-113\">`load(option?: { select?: string; expand?: string; }): Excel.TextConditionalFormat`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class=\"sxs-lookup\"><span data-stu-id=\"23c2c-113\">`load(option?: { select?: string; expand?: string; }): Excel.TextConditionalFormat` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"23c2c-114\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TextConditionalFormat`-Uniquement disponible sur les types de collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"23c2c-114\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TextConditionalFormat` - Only available on collection types.</span></span> <span data-ttu-id=\"23c2c-115\">Elle est similaire à la signature précédente.</span><span class=\"sxs-lookup\"><span data-stu-id=\"23c2c-115\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"23c2c-116\">Option. Top indique le nombre maximal d’éléments de collection qui peuvent être inclus dans le résultat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"23c2c-116\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"23c2c-117\">Option. Skip indique le nombre d’éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"23c2c-117\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"23c2c-118\">Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d’éléments.</span><span class=\"sxs-lookup\"><span data-stu-id=\"23c2c-118\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>"
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.TextConditionalFormatLoadOptions): Excel.TextConditionalFormat;'
      return:
        type:
          - 'excel!Excel.TextConditionalFormat:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.Interfaces.TextConditionalFormatLoadOptions:interface'
  - uid: 'excel!Excel.TextConditionalFormat#load:member(2)'
    summary: <span data-ttu-id="23c2c-119">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="23c2c-119">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="23c2c-120">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="23c2c-120">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.TextConditionalFormat;'
      return:
        type:
          - 'excel!Excel.TextConditionalFormat:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="23c2c-121">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="23c2c-121">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.TextConditionalFormat#load:member(3)'
    summary: <span data-ttu-id="23c2c-122">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="23c2c-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="23c2c-123">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="23c2c-123">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.TextConditionalFormat;'
      return:
        type:
          - 'excel!Excel.TextConditionalFormat:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="23c2c-124">Où propertyNamesAndPaths. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et propertyNamesAndPaths. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="23c2c-124">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'excel!Excel.TextConditionalFormat#rule:member'
    summary: "<span data-ttu-id=\"23c2c-125\">Règle de mise en forme conditionnelle.</span><span class=\"sxs-lookup\"><span data-stu-id=\"23c2c-125\">The rule of the conditional format.</span></span>\n\n<span data-ttu-id=\"23c2c-126\">\\[[Ensemble d’API\_: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"23c2c-126\">\\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: rule
    fullName: rule
    langs:
      - typeScript
    type: property
    syntax:
      content: 'rule: Excel.ConditionalTextComparisonRule;'
      return:
        type:
          - 'excel!Excel.ConditionalTextComparisonRule:interface'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="23c2c-127">Exemples</span><span class="sxs-lookup"><span data-stu-id="23c2c-127">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B16:D18");
              const conditionalFormat = range.conditionalFormats
                  .add(Excel.ConditionalFormatType.containsText);
              conditionalFormat.textComparison.format.font.color = "red";
              conditionalFormat.textComparison.rule = { operator: Excel.ConditionalTextOperator.contains, text: "Delayed" };

              await context.sync();
          });
          ```
  - uid: 'excel!Excel.TextConditionalFormat#set:member(1)'
    summary: '<span data-ttu-id="23c2c-128">Définit plusieurs propriétés d’un objet en même temps.</span><span class="sxs-lookup"><span data-stu-id="23c2c-128">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="23c2c-129">Vous pouvez transmettre un objet plain avec les propriétés appropriées, ou un autre objet API du même type.</span><span class="sxs-lookup"><span data-stu-id="23c2c-129">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: "<span data-ttu-id=\"23c2c-130\">Cette méthode est dotée de la signature supplémentaire suivante\_:</span><span class=\"sxs-lookup\"><span data-stu-id=\"23c2c-130\">This method has the following additional signature:</span></span>\n\n`set(properties: Excel.TextConditionalFormat): void`"
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.TextConditionalFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="23c2c-131">Objet JavaScript avec des propriétés qui sont structurées isomorphically vers les propriétés de l’objet sur lequel la méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="23c2c-131">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'excel!Excel.Interfaces.TextConditionalFormatUpdateData:interface'
        - id: options
          description: <span data-ttu-id="23c2c-132">Fournit une option permettant de supprimer les erreurs si l’objet Properties tente de définir des propriétés en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="23c2c-132">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.TextConditionalFormat#set:member(2)'
    summary: '<span data-ttu-id="23c2c-133">Définit plusieurs propriétés de l’objet en même temps, en fonction d’un objet chargé existant.</span><span class="sxs-lookup"><span data-stu-id="23c2c-133">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.TextConditionalFormat): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.TextConditionalFormat:class'
  - uid: 'excel!Excel.TextConditionalFormat#toJSON:member(1)'
    summary: '<span data-ttu-id="23c2c-134">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="23c2c-134">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="23c2c-135">.</span><span class="sxs-lookup"><span data-stu-id="23c2c-135"></span></span> <span data-ttu-id="23c2c-136">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="23c2c-136"></span></span><!-- --><span data-ttu-id="23c2c-137">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que l’objet Excel. TextConditionalFormat d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.TextConditionalFormatData`</span><span class="sxs-lookup"><span data-stu-id="23c2c-137">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.TextConditionalFormat object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TextConditionalFormatData`</span></span><!-- --><span data-ttu-id="23c2c-138">) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l’objet d’origine.</span><span class="sxs-lookup"><span data-stu-id="23c2c-138">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.TextConditionalFormatData;'
      return:
        type:
          - 'excel!Excel.Interfaces.TextConditionalFormatData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.ConditionalRangeFormat:class'
    name: Excel.ConditionalRangeFormat
  - uid: 'excel!Excel.TextConditionalFormat:class'
    name: Excel.TextConditionalFormat
  - uid: 'excel!Excel.Interfaces.TextConditionalFormatLoadOptions:interface'
    name: Excel.Interfaces.TextConditionalFormatLoadOptions
  - uid: 'excel!Excel.ConditionalTextComparisonRule:interface'
    name: Excel.ConditionalTextComparisonRule
  - uid: 'excel!Excel.Interfaces.TextConditionalFormatUpdateData:interface'
    name: Interfaces.TextConditionalFormatUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Interfaces.TextConditionalFormatData:interface'
    name: Excel.Interfaces.TextConditionalFormatData