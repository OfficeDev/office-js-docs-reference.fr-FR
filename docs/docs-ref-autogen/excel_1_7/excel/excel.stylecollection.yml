### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.StyleCollection:class'
    summary: "<span data-ttu-id=\"99671-101\">Représente une collection de tous les styles.</span><span class=\"sxs-lookup\"><span data-stu-id=\"99671-101\">Represents a collection of all the styles.</span></span>\n\n<span data-ttu-id=\"99671-102\">\\[[Ensemble d’API\_: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"99671-102\">\\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: Excel.StyleCollection
    fullName: Excel.StyleCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.StyleCollection#add:member(1)'
      - 'excel!Excel.StyleCollection#context:member'
      - 'excel!Excel.StyleCollection#getItem:member(1)'
      - 'excel!Excel.StyleCollection#items:member'
      - 'excel!Excel.StyleCollection#load:member(1)'
      - 'excel!Excel.StyleCollection#load:member(2)'
      - 'excel!Excel.StyleCollection#load:member(3)'
      - 'excel!Excel.StyleCollection#toJSON:member(1)'
  - uid: 'excel!Excel.StyleCollection#add:member(1)'
    summary: "<span data-ttu-id=\"99671-103\">Ajoute un nouveau style à la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"99671-103\">Adds a new style to the collection.</span></span>\n\n<span data-ttu-id=\"99671-104\">\\[[Ensemble d’API\_: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"99671-104\">\\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: add(name)
    fullName: add(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(name: string): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="99671-105">Exemples</span><span class="sxs-lookup"><span data-stu-id="99671-105">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let styles = context.workbook.styles;

              // Add a new style to the style collection.
              // Styles is in the Home tab ribbon.
              styles.add("Diagonal Orientation Style");
                    
              let newStyle = styles.getItem("Diagonal Orientation Style");
              
              // The "Diagonal Orientation Style" properties.
              newStyle.textOrientation = 38;
              newStyle.autoIndent = true;
              newStyle.includeProtection = true;
              newStyle.shrinkToFit = true;
              newStyle.locked = false;
              
              await context.sync();

              console.log("Successfully added a new style with diagonal orientation to the Home tab ribbon.");
          });
          ```
      parameters:
        - id: name
          description: <span data-ttu-id="99671-106">Nom du style à ajouter.</span><span class="sxs-lookup"><span data-stu-id="99671-106">Name of the style to be added.</span></span>
          type:
            - string
  - uid: 'excel!Excel.StyleCollection#context:member'
    summary: <span data-ttu-id="99671-107">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="99671-107">The request context associated with the object.</span></span> <span data-ttu-id="99671-108">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="99671-108">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.StyleCollection#getItem:member(1)'
    summary: "<span data-ttu-id=\"99671-109\">Obtient un style par nom.</span><span class=\"sxs-lookup\"><span data-stu-id=\"99671-109\">Gets a style by name.</span></span>\n\n<span data-ttu-id=\"99671-110\">\\[[Ensemble d’API\_: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"99671-110\">\\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: getItem(name)
    fullName: getItem(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(name: string): Excel.Style;'
      return:
        type:
          - 'excel!Excel.Style:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="99671-111">Exemples</span><span class="sxs-lookup"><span data-stu-id="99671-111">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let styles = context.workbook.styles;

              // Add a new style to the style collection.
              // Styles is in the Home tab ribbon.
              styles.add("Diagonal Orientation Style");
                    
              let newStyle = styles.getItem("Diagonal Orientation Style");
              
              // The "Diagonal Orientation Style" properties.
              newStyle.textOrientation = 38;
              newStyle.autoIndent = true;
              newStyle.includeProtection = true;
              newStyle.shrinkToFit = true;
              newStyle.locked = false;
              
              await context.sync();

              console.log("Successfully added a new style with diagonal orientation to the Home tab ribbon.");
          });
          ```
      parameters:
        - id: name
          description: <span data-ttu-id="99671-112">Nom du style à récupérer.</span><span class="sxs-lookup"><span data-stu-id="99671-112">Name of the style to be retrieved.</span></span>
          type:
            - string
  - uid: 'excel!Excel.StyleCollection#items:member'
    summary: <span data-ttu-id="99671-113">Obtient l’élément enfant chargé dans cette collection de sites.</span><span class="sxs-lookup"><span data-stu-id="99671-113">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Style[];'
      return:
        type:
          - 'excel!Excel.StyleCollection#items~0:complex'
  - uid: 'excel!Excel.StyleCollection#load:member(1)'
    summary: <span data-ttu-id="99671-114">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="99671-114">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="99671-115">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="99671-115">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.StyleCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.StyleCollection;'
      return:
        type:
          - 'excel!Excel.StyleCollection:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="99671-116">Fournit des options pour les propriétés de l’objet à charger.</span><span class="sxs-lookup"><span data-stu-id="99671-116">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.StyleCollection#load~0:complex'
  - uid: 'excel!Excel.StyleCollection#load:member(2)'
    summary: <span data-ttu-id="99671-117">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="99671-117">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="99671-118">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="99671-118">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.StyleCollection;'
      return:
        type:
          - 'excel!Excel.StyleCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="99671-119">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="99671-119">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.StyleCollection#load:member(3)'
    summary: <span data-ttu-id="99671-120">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="99671-120">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="99671-121">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="99671-121">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Excel.StyleCollection;'
      return:
        type:
          - 'excel!Excel.StyleCollection:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="99671-122">`propertyNamesAndPaths.select`est une chaîne délimitée par des virgules qui spécifie les propriétés à `propertyNamesAndPaths.expand` charger et une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="99671-122">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - 'excel!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.StyleCollection#toJSON:member(1)'
    summary: "<span data-ttu-id=\"99671-123\">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class=\"sxs-lookup\"><span data-stu-id=\"99671-123\">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id=\"99671-124\">.</span><span class=\"sxs-lookup\"><span data-stu-id=\"99671-124\"></span></span> <span data-ttu-id=\"99671-125\">(`JSON.stringify`</span><span class=\"sxs-lookup\"><span data-stu-id=\"99671-125\"></span></span><!-- --><span data-ttu-id=\"99671-126\">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que `Excel.StyleCollection` l’objet d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.StyleCollectionData`</span><span class=\"sxs-lookup\"><span data-stu-id=\"99671-126\">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.StyleCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.StyleCollectionData`</span></span><!-- --><span data-ttu-id=\"99671-127\">) qui contient un tableau «\_éléments\_» avec des copies superficielles de toutes les propriétés chargées des éléments de la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"99671-127\">) that contains an \"items\" array with shallow copies of any loaded properties from the collection's items.</span></span>"
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.StyleCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.StyleCollectionData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.Style:class'
    name: Excel.Style
  - uid: 'excel!Excel.StyleCollection#items~0:complex'
    name: 'Excel.Style[]'
    fullName: 'Excel.Style[]'
    spec.typeScript:
      - uid: 'excel!Excel.Style:class'
        name: Excel.Style
        fullName: Excel.Style
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.StyleCollection:class'
    name: Excel.StyleCollection
  - uid: 'excel!Excel.StyleCollection#load~0:complex'
    name: Excel.Interfaces.StyleCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.StyleCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.StyleCollectionLoadOptions:interface'
        name: Excel.Interfaces.StyleCollectionLoadOptions
        fullName: Excel.Interfaces.StyleCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'excel!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.Interfaces.StyleCollectionData:interface'
    name: Excel.Interfaces.StyleCollectionData