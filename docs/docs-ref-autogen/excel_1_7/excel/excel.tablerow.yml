### YamlMime:UniversalReference
items:
  - uid: excel.Excel.TableRow
    summary: |-
      <span data-ttu-id="48c99-101">Représente une ligne dans un tableau.</span><span class="sxs-lookup"><span data-stu-id="48c99-101">Represents a row in a table.</span></span>

      <span data-ttu-id="48c99-102">Notez que, à la différence des plages ou colonnes, qui s’ajusteront si de nouvelles lignes/colonnes sont ajoutées avant celles-ci, un objet TableRow représente l’emplacement physique de la ligne de table, mais pas les données.</span><span class="sxs-lookup"><span data-stu-id="48c99-102">Note that unlike Ranges or Columns, which will adjust if new rows/columns are added before them, a TableRow object represent the physical location of the table row, but not the data.</span></span> <span data-ttu-id="48c99-103">Autrement dit, si les données sont triées ou si de nouvelles lignes sont ajoutées, une ligne de tableau continue de pointer vers l’index pour lequel elle a été créée.</span><span class="sxs-lookup"><span data-stu-id="48c99-103">That is, if the data is sorted or if new rows are added, a table row will continue to point at the index for which it was created.</span></span>

      <span data-ttu-id="48c99-104">\[[Ensemble d’API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="48c99-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.TableRow
    fullName: Excel.TableRow
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.TableRow.context
      - excel.Excel.TableRow.delete
      - excel.Excel.TableRow.getRange
      - excel.Excel.TableRow.index
      - excel.Excel.TableRow.load
      - excel.Excel.TableRow.load_1
      - excel.Excel.TableRow.load_2
      - excel.Excel.TableRow.set
      - excel.Excel.TableRow.set_1
      - excel.Excel.TableRow.toJSON
      - excel.Excel.TableRow.values
  - uid: excel.Excel.TableRow.context
    summary: <span data-ttu-id="48c99-105">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="48c99-105">The request context associated with the object.</span></span> <span data-ttu-id="48c99-106">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="48c99-106">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.TableRow.delete
    summary: |-
      <span data-ttu-id="48c99-107">Supprime la ligne du tableau.</span><span class="sxs-lookup"><span data-stu-id="48c99-107">Deletes the row from the table.</span></span>

      <span data-ttu-id="48c99-108">\[[Ensemble d’API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="48c99-108">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="48c99-109">Exemples</span><span class="sxs-lookup"><span data-stu-id="48c99-109">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var row = ctx.workbook.tables.getItem(tableName).rows.getItemAt(2);
              row.delete();
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.TableRow.getRange
    summary: |-
      <span data-ttu-id="48c99-110">Renvoie l’objet de plage associé à la ligne entière.</span><span class="sxs-lookup"><span data-stu-id="48c99-110">Returns the range object associated with the entire row.</span></span>

      <span data-ttu-id="48c99-111">\[[Ensemble d’API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="48c99-111">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="48c99-112">Exemples</span><span class="sxs-lookup"><span data-stu-id="48c99-112">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var row = ctx.workbook.tables.getItem(tableName).rows.getItemAt(0);
              var rowRange = row.getRange();
              rowRange.load('address');
              return ctx.sync().then(function() {
                  console.log(rowRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.TableRow.index
    summary: |-
      <span data-ttu-id="48c99-113">Renvoie le numéro d’indice de la ligne dans la collection de lignes du tableau.</span><span class="sxs-lookup"><span data-stu-id="48c99-113">Returns the index number of the row within the rows collection of the table.</span></span> <span data-ttu-id="48c99-114">Avec indice zéro.</span><span class="sxs-lookup"><span data-stu-id="48c99-114">Zero-indexed.</span></span> <span data-ttu-id="48c99-115">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="48c99-115">Read-only.</span></span>

      <span data-ttu-id="48c99-116">\[[Ensemble d’API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="48c99-116">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: index
    fullName: index
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly index: number;'
      return:
        type:
          - number
  - uid: excel.Excel.TableRow.load
    summary: "<span data-ttu-id=\"48c99-117\">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"48c99-117\">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id=\"48c99-118\">Vous devez appeler «\_context.sync()\_» avant de lire les propriétés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"48c99-118\">You must call \"context.sync()\" before reading the properties.</span></span>"
    remarks: |-
      <span data-ttu-id="48c99-119">En plus de cette signature, cette méthode possède les signatures suivantes:</span><span class="sxs-lookup"><span data-stu-id="48c99-119">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="48c99-120">`load(option?: string | string[]): Excel.TableRow`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="48c99-120">`load(option?: string | string[]): Excel.TableRow` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="48c99-121">`load(option?: { select?: string; expand?: string; }): Excel.TableRow`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="48c99-121">`load(option?: { select?: string; expand?: string; }): Excel.TableRow` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="48c99-122">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableRow`-Uniquement disponible sur les types de collection.</span><span class="sxs-lookup"><span data-stu-id="48c99-122">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableRow` - Only available on collection types.</span></span> <span data-ttu-id="48c99-123">Elle est similaire à la signature précédente.</span><span class="sxs-lookup"><span data-stu-id="48c99-123">It is similar to the preceding signature.</span></span> <span data-ttu-id="48c99-124">Option. Top indique le nombre maximal d’éléments de collection qui peuvent être inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="48c99-124">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="48c99-125">Option. Skip indique le nombre d’éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="48c99-125">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="48c99-126">Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d’éléments.</span><span class="sxs-lookup"><span data-stu-id="48c99-126">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.TableRowLoadOptions): Excel.TableRow;'
      return:
        type:
          - excel.Excel.TableRow
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.TableRowLoadOptions
  - uid: excel.Excel.TableRow.load_1
    summary: <span data-ttu-id="48c99-127">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="48c99-127">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="48c99-128">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="48c99-128">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.TableRow;'
      return:
        type:
          - excel.Excel.TableRow
        description: |-


          #### <a name="examples"></a><span data-ttu-id="48c99-129">Exemples</span><span class="sxs-lookup"><span data-stu-id="48c99-129">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var row = ctx.workbook.tables.getItem(tableName).rows.getItem(0);
              row.load('index');
              return ctx.sync().then(function() {
                  console.log(row.index);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          Excel.run(function (ctx) { 
              var tables = ctx.workbook.tables;
              var newValues = [["New", "Values", "For", "New", "Row"]];
              var tableName = 'Table1';
              var row = ctx.workbook.tables.getItem(tableName).rows.getItemAt(2);
              row.values = newValues;
              row.load('values');
              return ctx.sync().then(function() {
                  console.log(row.values);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="48c99-130">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="48c99-130">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.TableRow.load_2
    summary: <span data-ttu-id="48c99-131">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="48c99-131">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="48c99-132">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="48c99-132">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.TableRow;'
      return:
        type:
          - excel.Excel.TableRow
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="48c99-133">Où propertyNamesAndPaths. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et propertyNamesAndPaths. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="48c99-133">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.TableRow.set
    summary: '<span data-ttu-id="48c99-134">Définit plusieurs propriétés d’un objet en même temps.</span><span class="sxs-lookup"><span data-stu-id="48c99-134">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="48c99-135">Vous pouvez transmettre un objet plain avec les propriétés appropriées, ou un autre objet API du même type.</span><span class="sxs-lookup"><span data-stu-id="48c99-135">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="48c99-136">Cette méthode est dotée de la signature supplémentaire suivante:</span><span class="sxs-lookup"><span data-stu-id="48c99-136">This method has the following additional signature:</span></span>

      `set(properties: Excel.TableRow): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.TableRowUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="48c99-137">Objet JavaScript avec des propriétés qui sont structurées isomorphically vers les propriétés de l’objet sur lequel la méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="48c99-137">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.TableRowUpdateData
        - id: options
          description: <span data-ttu-id="48c99-138">Fournit une option permettant de supprimer les erreurs si l’objet Properties tente de définir des propriétés en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="48c99-138">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.TableRow.set_1
    summary: '<span data-ttu-id="48c99-139">Définit plusieurs propriétés de l’objet en même temps, en fonction d’un objet chargé existant.</span><span class="sxs-lookup"><span data-stu-id="48c99-139">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.TableRow): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.TableRow
  - uid: excel.Excel.TableRow.toJSON
    summary: '<span data-ttu-id="48c99-140">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="48c99-140">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="48c99-141">.</span><span class="sxs-lookup"><span data-stu-id="48c99-141"></span></span> <span data-ttu-id="48c99-142">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="48c99-142"></span></span><!-- --><span data-ttu-id="48c99-143">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que l’objet Excel. TableRow d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.TableRowData`</span><span class="sxs-lookup"><span data-stu-id="48c99-143">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.TableRow object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableRowData`</span></span><!-- --><span data-ttu-id="48c99-144">) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l’objet d’origine.</span><span class="sxs-lookup"><span data-stu-id="48c99-144">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.TableRowData;'
      return:
        type:
          - excel.Excel.Interfaces.TableRowData
        description: ''
  - uid: excel.Excel.TableRow.values
    summary: |-
      <span data-ttu-id="48c99-145">Représente les valeurs brutes de la plage spécifiée.</span><span class="sxs-lookup"><span data-stu-id="48c99-145">Represents the raw values of the specified range.</span></span> <span data-ttu-id="48c99-146">Les données renvoyées peuvent être des chaînes, des valeurs numériques ou des valeurs booléennes.</span><span class="sxs-lookup"><span data-stu-id="48c99-146">The data returned could be of type string, number, or a boolean.</span></span> <span data-ttu-id="48c99-147">Les cellules contenant une erreur renvoie la chaîne d’erreur.</span><span class="sxs-lookup"><span data-stu-id="48c99-147">Cells that contain an error will return the error string.</span></span>

      <span data-ttu-id="48c99-148">\[[Ensemble d’API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="48c99-148">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: values
    fullName: values
    langs:
      - typeScript
    type: property
    syntax:
      content: 'values: any[][];'
      return:
        type:
          - 'any[][]'