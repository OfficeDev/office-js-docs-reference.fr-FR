### YamlMime:UniversalReference
items:
  - uid: excel.Excel.NamedItemCollection
    summary: |-
      <span data-ttu-id="2e8c8-101">Collection de tous les objets NamedItem qui font partie du classeur ou de la feuille de calcul, en fonction de la manière dont ils ont été atteints.</span><span class="sxs-lookup"><span data-stu-id="2e8c8-101">A collection of all the NamedItem objects that are part of the workbook or worksheet, depending on how it was reached.</span></span>

      <span data-ttu-id="2e8c8-102">\[[Ensemble d’API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2e8c8-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.NamedItemCollection
    fullName: Excel.NamedItemCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.NamedItemCollection.add
      - excel.Excel.NamedItemCollection.addFormulaLocal
      - excel.Excel.NamedItemCollection.context
      - excel.Excel.NamedItemCollection.getCount
      - excel.Excel.NamedItemCollection.getItem
      - excel.Excel.NamedItemCollection.getItemOrNullObject
      - excel.Excel.NamedItemCollection.items
      - excel.Excel.NamedItemCollection.load
      - excel.Excel.NamedItemCollection.load_1
      - excel.Excel.NamedItemCollection.load_2
      - excel.Excel.NamedItemCollection.toJSON
  - uid: excel.Excel.NamedItemCollection.add
    summary: |-
      <span data-ttu-id="2e8c8-103">Ajoute un nouveau nom à la collection de l’étendue donnée.</span><span class="sxs-lookup"><span data-stu-id="2e8c8-103">Adds a new name to the collection of the given scope.</span></span>

      <span data-ttu-id="2e8c8-104">\[[Ensemble d’API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2e8c8-104">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'add(name, reference, comment)'
    fullName: 'add(name, reference, comment)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(name: string, reference: Range | string, comment?: string): Excel.NamedItem;'
      return:
        type:
          - excel.Excel.NamedItem
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2e8c8-105">Exemples</span><span class="sxs-lookup"><span data-stu-id="2e8c8-105">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const headerRange = sheet.getRange("A1:D1");

              sheet.names.add("ExpensesHeader", headerRange);
              const namedItems = sheet.names.load("name, type");

              await context.sync();
          });
          ```
      parameters:
        - id: name
          description: <span data-ttu-id="2e8c8-106">Nom de l’élément nommé.</span><span class="sxs-lookup"><span data-stu-id="2e8c8-106">The name of the named item.</span></span>
          type:
            - string
        - id: reference
          description: <span data-ttu-id="2e8c8-107">Formule ou plage à laquelle le nom fait référence.</span><span class="sxs-lookup"><span data-stu-id="2e8c8-107">The formula or the range that the name will refer to.</span></span>
          type:
            - Range | string
        - id: comment
          description: <span data-ttu-id="2e8c8-108">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="2e8c8-108">Optional.</span></span> <span data-ttu-id="2e8c8-109">Commentaire associé à l’élément nommé.</span><span class="sxs-lookup"><span data-stu-id="2e8c8-109">The comment associated with the named item.</span></span>
          type:
            - string
  - uid: excel.Excel.NamedItemCollection.addFormulaLocal
    summary: |-
      <span data-ttu-id="2e8c8-110">Ajoute un nouveau nom à la collection de l’étendue donnée à l’aide des paramètres régionaux de l’utilisateur pour la formule.</span><span class="sxs-lookup"><span data-stu-id="2e8c8-110">Adds a new name to the collection of the given scope using the user's locale for the formula.</span></span>

      <span data-ttu-id="2e8c8-111">\[[Ensemble d’API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2e8c8-111">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'addFormulaLocal(name, formula, comment)'
    fullName: 'addFormulaLocal(name, formula, comment)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFormulaLocal(name: string, formula: string, comment?: string): Excel.NamedItem;'
      return:
        type:
          - excel.Excel.NamedItem
        description: ''
      parameters:
        - id: name
          description: "<span data-ttu-id=\"2e8c8-112\">«\_Nom\_» de l’élément nommé.</span><span class=\"sxs-lookup\"><span data-stu-id=\"2e8c8-112\">The \"name\" of the named item.</span></span>"
          type:
            - string
        - id: formula
          description: <span data-ttu-id="2e8c8-113">Formule dans les paramètres régionaux de l’utilisateur à laquelle le nom fait référence.</span><span class="sxs-lookup"><span data-stu-id="2e8c8-113">The formula in the user's locale that the name will refer to.</span></span>
          type:
            - string
        - id: comment
          description: <span data-ttu-id="2e8c8-114">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="2e8c8-114">Optional.</span></span> <span data-ttu-id="2e8c8-115">Commentaire associé à l’élément nommé.</span><span class="sxs-lookup"><span data-stu-id="2e8c8-115">The comment associated with the named item.</span></span>
          type:
            - string
  - uid: excel.Excel.NamedItemCollection.context
    summary: <span data-ttu-id="2e8c8-116">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="2e8c8-116">The request context associated with the object.</span></span> <span data-ttu-id="2e8c8-117">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="2e8c8-117">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.NamedItemCollection.getCount
    summary: |-
      <span data-ttu-id="2e8c8-118">Obtient le nombre d’éléments nommés dans la collection.</span><span class="sxs-lookup"><span data-stu-id="2e8c8-118">Gets the number of named items in the collection.</span></span>

      <span data-ttu-id="2e8c8-119">\[[Ensemble d’API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2e8c8-119">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: excel.Excel.NamedItemCollection.getItem
    summary: |-
      <span data-ttu-id="2e8c8-120">Obtient un objet NamedItem à l’aide de son nom.</span><span class="sxs-lookup"><span data-stu-id="2e8c8-120">Gets a NamedItem object using its name.</span></span>

      <span data-ttu-id="2e8c8-121">\[[Ensemble d’API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2e8c8-121">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItem(name)
    fullName: getItem(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(name: string): Excel.NamedItem;'
      return:
        type:
          - excel.Excel.NamedItem
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2e8c8-122">Exemples</span><span class="sxs-lookup"><span data-stu-id="2e8c8-122">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = 'Sheet1';
              var nameditem = ctx.workbook.names.getItem(sheetName);
              nameditem.load('type');
              return ctx.sync().then(function() {
                      console.log(nameditem.type);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: name
          description: <span data-ttu-id="2e8c8-123">Nom NamedItem.</span><span class="sxs-lookup"><span data-stu-id="2e8c8-123">Nameditem name.</span></span>
          type:
            - string
  - uid: excel.Excel.NamedItemCollection.getItemOrNullObject
    summary: |-
      <span data-ttu-id="2e8c8-124">Obtient un objet NamedItem à l’aide de son nom.</span><span class="sxs-lookup"><span data-stu-id="2e8c8-124">Gets a NamedItem object using its name.</span></span> <span data-ttu-id="2e8c8-125">Si l’objet nameditem n’existe pas, renvoie un objet null.</span><span class="sxs-lookup"><span data-stu-id="2e8c8-125">If the nameditem object does not exist, will return a null object.</span></span>

      <span data-ttu-id="2e8c8-126">\[[Ensemble d’API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2e8c8-126">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemOrNullObject(name)
    fullName: getItemOrNullObject(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(name: string): Excel.NamedItem;'
      return:
        type:
          - excel.Excel.NamedItem
        description: ''
      parameters:
        - id: name
          description: <span data-ttu-id="2e8c8-127">Nom NamedItem.</span><span class="sxs-lookup"><span data-stu-id="2e8c8-127">Nameditem name.</span></span>
          type:
            - string
  - uid: excel.Excel.NamedItemCollection.items
    summary: <span data-ttu-id="2e8c8-128">Obtient l’élément enfant chargé dans cette collection de sites.</span><span class="sxs-lookup"><span data-stu-id="2e8c8-128">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.NamedItem[];'
      return:
        type:
          - 'Excel.NamedItem[]'
  - uid: excel.Excel.NamedItemCollection.load
    summary: "<span data-ttu-id=\"2e8c8-129\">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"2e8c8-129\">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id=\"2e8c8-130\">Vous devez appeler «\_context.sync()\_» avant de lire les propriétés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"2e8c8-130\">You must call \"context.sync()\" before reading the properties.</span></span>"
    remarks: |-
      <span data-ttu-id="2e8c8-131">En plus de cette signature, cette méthode possède les signatures suivantes:</span><span class="sxs-lookup"><span data-stu-id="2e8c8-131">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="2e8c8-132">`load(option?: string | string[]): Excel.NamedItemCollection`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="2e8c8-132">`load(option?: string | string[]): Excel.NamedItemCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="2e8c8-133">`load(option?: { select?: string; expand?: string; }): Excel.NamedItemCollection`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="2e8c8-133">`load(option?: { select?: string; expand?: string; }): Excel.NamedItemCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="2e8c8-134">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.NamedItemCollection`-Uniquement disponible sur les types de collection.</span><span class="sxs-lookup"><span data-stu-id="2e8c8-134">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.NamedItemCollection` - Only available on collection types.</span></span> <span data-ttu-id="2e8c8-135">Elle est similaire à la signature précédente.</span><span class="sxs-lookup"><span data-stu-id="2e8c8-135">It is similar to the preceding signature.</span></span> <span data-ttu-id="2e8c8-136">Option. Top indique le nombre maximal d’éléments de collection qui peuvent être inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="2e8c8-136">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="2e8c8-137">Option. Skip indique le nombre d’éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="2e8c8-137">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="2e8c8-138">Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d’éléments.</span><span class="sxs-lookup"><span data-stu-id="2e8c8-138">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.NamedItemCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.NamedItemCollection;'
      return:
        type:
          - excel.Excel.NamedItemCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.NamedItemCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel.Excel.NamedItemCollection.load_1
    summary: <span data-ttu-id="2e8c8-139">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="2e8c8-139">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="2e8c8-140">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="2e8c8-140">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.NamedItemCollection;'
      return:
        type:
          - excel.Excel.NamedItemCollection
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2e8c8-141">Exemples</span><span class="sxs-lookup"><span data-stu-id="2e8c8-141">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var nameditems = ctx.workbook.names;
              nameditems.load('items');
              return ctx.sync().then(function() {
                  for (var i = 0; i < nameditems.items.length; i++)
                  {
                      console.log(nameditems.items[i].name);
                      console.log(nameditems.items[i].index);
                  }
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="2e8c8-142">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="2e8c8-142">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.NamedItemCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.NamedItemCollection;'
      return:
        type:
          - excel.Excel.NamedItemCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - OfficeExtension.LoadOption
  - uid: excel.Excel.NamedItemCollection.toJSON
    summary: '<span data-ttu-id="2e8c8-143">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="2e8c8-143">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="2e8c8-144">.</span><span class="sxs-lookup"><span data-stu-id="2e8c8-144"></span></span> <span data-ttu-id="2e8c8-145">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="2e8c8-145"></span></span><!-- --><span data-ttu-id="2e8c8-146">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que `Excel.NamedItemCollection` l’objet d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.NamedItemCollectionData`</span><span class="sxs-lookup"><span data-stu-id="2e8c8-146">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.NamedItemCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.NamedItemCollectionData`</span></span><!-- --><span data-ttu-id="2e8c8-147">) qui contient un tableau «éléments» avec des copies superficielles de toutes les propriétés chargées des éléments de la collection.</span><span class="sxs-lookup"><span data-stu-id="2e8c8-147">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.NamedItemCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.NamedItemCollectionData
        description: ''