### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ConditionalFormatRule:class'
    summary: "<span data-ttu-id=\"f06ee-101\">Représente une règle pour tous les jumelages de règles/mises en forme classiques.</span><span class=\"sxs-lookup\"><span data-stu-id=\"f06ee-101\">Represents a rule, for all traditional rule/format pairings.</span></span>\n\n<span data-ttu-id=\"f06ee-102\">\\[[Ensemble d’API\_: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"f06ee-102\">\\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: Excel.ConditionalFormatRule
    fullName: Excel.ConditionalFormatRule
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.ConditionalFormatRule#context:member'
      - 'excel!Excel.ConditionalFormatRule#formula:member'
      - 'excel!Excel.ConditionalFormatRule#formulaLocal:member'
      - 'excel!Excel.ConditionalFormatRule#formulaR1C1:member'
      - 'excel!Excel.ConditionalFormatRule#load:member(1)'
      - 'excel!Excel.ConditionalFormatRule#load:member(2)'
      - 'excel!Excel.ConditionalFormatRule#load:member(3)'
      - 'excel!Excel.ConditionalFormatRule#set:member(1)'
      - 'excel!Excel.ConditionalFormatRule#set:member(2)'
      - 'excel!Excel.ConditionalFormatRule#toJSON:member(1)'
  - uid: 'excel!Excel.ConditionalFormatRule#context:member'
    summary: <span data-ttu-id="f06ee-103">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="f06ee-103">The request context associated with the object.</span></span> <span data-ttu-id="f06ee-104">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="f06ee-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.ConditionalFormatRule#formula:member'
    summary: "<span data-ttu-id=\"f06ee-105\">Formule, si nécessaire, servant à évaluer la règle de mise en forme conditionnelle.</span><span class=\"sxs-lookup\"><span data-stu-id=\"f06ee-105\">The formula, if required, to evaluate the conditional format rule on.</span></span>\n\n<span data-ttu-id=\"f06ee-106\">\\[[Ensemble d’API\_: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"f06ee-106\">\\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: formula
    fullName: formula
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formula: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="f06ee-107">Exemples</span><span class="sxs-lookup"><span data-stu-id="f06ee-107">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B8:E13");
              const conditionalFormat = range.conditionalFormats.add(Excel.ConditionalFormatType.custom);
              conditionalFormat.custom.rule.formula = '=IF(B8>INDIRECT("RC[-1]",0),TRUE)';
              conditionalFormat.custom.format.font.color = "green";

              await context.sync();
          });
          ```
  - uid: 'excel!Excel.ConditionalFormatRule#formulaLocal:member'
    summary: "<span data-ttu-id=\"f06ee-108\">Formule, si nécessaire, servant à évaluer la règle de mise en forme conditionnelle dans la langue de l’utilisateur.</span><span class=\"sxs-lookup\"><span data-stu-id=\"f06ee-108\">The formula, if required, to evaluate the conditional format rule on in the user's language.</span></span>\n\n<span data-ttu-id=\"f06ee-109\">\\[[Ensemble d’API\_: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"f06ee-109\">\\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: formulaLocal
    fullName: formulaLocal
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formulaLocal: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.ConditionalFormatRule#formulaR1C1:member'
    summary: "<span data-ttu-id=\"f06ee-110\">Formule, si nécessaire, servant à évaluer la règle de mise en forme conditionnelle dans la notation du style R1C1.</span><span class=\"sxs-lookup\"><span data-stu-id=\"f06ee-110\">The formula, if required, to evaluate the conditional format rule on in R1C1-style notation.</span></span>\n\n<span data-ttu-id=\"f06ee-111\">\\[[Ensemble d’API\_: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"f06ee-111\">\\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: formulaR1C1
    fullName: formulaR1C1
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formulaR1C1: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.ConditionalFormatRule#load:member(1)'
    summary: <span data-ttu-id="f06ee-112">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="f06ee-112">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="f06ee-113">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="f06ee-113">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.ConditionalFormatRuleLoadOptions): Excel.ConditionalFormatRule;'
      return:
        type:
          - 'excel!Excel.ConditionalFormatRule:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="f06ee-114">Fournit des options pour les propriétés de l’objet à charger.</span><span class="sxs-lookup"><span data-stu-id="f06ee-114">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.Interfaces.ConditionalFormatRuleLoadOptions:interface'
  - uid: 'excel!Excel.ConditionalFormatRule#load:member(2)'
    summary: <span data-ttu-id="f06ee-115">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="f06ee-115">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="f06ee-116">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="f06ee-116">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ConditionalFormatRule;'
      return:
        type:
          - 'excel!Excel.ConditionalFormatRule:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="f06ee-117">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="f06ee-117">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.ConditionalFormatRule#load:member(3)'
    summary: <span data-ttu-id="f06ee-118">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="f06ee-118">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="f06ee-119">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="f06ee-119">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.ConditionalFormatRule;
      return:
        type:
          - 'excel!Excel.ConditionalFormatRule:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="f06ee-120">`propertyNamesAndPaths.select`est une chaîne délimitée par des virgules qui spécifie les propriétés à `propertyNamesAndPaths.expand` charger et une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="f06ee-120">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.ConditionalFormatRule#set:member(1)'
    summary: '<span data-ttu-id="f06ee-121">Définit plusieurs propriétés d’un objet en même temps.</span><span class="sxs-lookup"><span data-stu-id="f06ee-121">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="f06ee-122">Vous pouvez transmettre un objet plain avec les propriétés appropriées, ou un autre objet API du même type.</span><span class="sxs-lookup"><span data-stu-id="f06ee-122">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: "<span data-ttu-id=\"f06ee-123\">Cette méthode est dotée de la signature supplémentaire suivante\_:</span><span class=\"sxs-lookup\"><span data-stu-id=\"f06ee-123\">This method has the following additional signature:</span></span>\n\n`set(properties: Excel.ConditionalFormatRule): void`"
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ConditionalFormatRuleUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="f06ee-124">Objet JavaScript avec des propriétés qui sont structurées isomorphically vers les propriétés de l’objet sur lequel la méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="f06ee-124">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'excel!Excel.Interfaces.ConditionalFormatRuleUpdateData:interface'
        - id: options
          description: <span data-ttu-id="f06ee-125">Fournit une option permettant de supprimer les erreurs si l’objet Properties tente de définir des propriétés en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="f06ee-125">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.ConditionalFormatRule#set:member(2)'
    summary: '<span data-ttu-id="f06ee-126">Définit plusieurs propriétés de l’objet en même temps, en fonction d’un objet chargé existant.</span><span class="sxs-lookup"><span data-stu-id="f06ee-126">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.ConditionalFormatRule): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.ConditionalFormatRule:class'
  - uid: 'excel!Excel.ConditionalFormatRule#toJSON:member(1)'
    summary: '<span data-ttu-id="f06ee-127">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="f06ee-127">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="f06ee-128">.</span><span class="sxs-lookup"><span data-stu-id="f06ee-128"></span></span> <span data-ttu-id="f06ee-129">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="f06ee-129"></span></span><!-- --><span data-ttu-id="f06ee-130">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que l’objet Excel. ConditionalFormatRule d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.ConditionalFormatRuleData`</span><span class="sxs-lookup"><span data-stu-id="f06ee-130">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ConditionalFormatRule object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ConditionalFormatRuleData`</span></span><!-- --><span data-ttu-id="f06ee-131">) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l’objet d’origine.</span><span class="sxs-lookup"><span data-stu-id="f06ee-131">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ConditionalFormatRuleData;'
      return:
        type:
          - 'excel!Excel.Interfaces.ConditionalFormatRuleData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.ConditionalFormatRule:class'
    name: Excel.ConditionalFormatRule
  - uid: 'excel!Excel.Interfaces.ConditionalFormatRuleLoadOptions:interface'
    name: Excel.Interfaces.ConditionalFormatRuleLoadOptions
  - uid: 'excel!Excel.Interfaces.ConditionalFormatRuleUpdateData:interface'
    name: Interfaces.ConditionalFormatRuleUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Interfaces.ConditionalFormatRuleData:interface'
    name: Excel.Interfaces.ConditionalFormatRuleData