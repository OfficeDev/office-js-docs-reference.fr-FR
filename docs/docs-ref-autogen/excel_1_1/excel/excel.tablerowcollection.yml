### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.TableRowCollection:class'
    summary: "<span data-ttu-id=\"f62b4-101\">Représente une collection de toutes les lignes du tableau.</span><span class=\"sxs-lookup\"><span data-stu-id=\"f62b4-101\">Represents a collection of all the rows that are part of the table.</span></span>\n\n<span data-ttu-id=\"f62b4-102\">Notez que, à la différence des plages ou colonnes, qui s’ajusteront si de nouvelles lignes/colonnes sont ajoutées avant celles-ci, un objet TableRow représente l’emplacement physique de la ligne de table, mais pas les données.</span><span class=\"sxs-lookup\"><span data-stu-id=\"f62b4-102\">Note that unlike Ranges or Columns, which will adjust if new rows/columns are added before them, a TableRow object represent the physical location of the table row, but not the data.</span></span> <span data-ttu-id=\"f62b4-103\">Autrement dit, si les données sont triées ou si de nouvelles lignes sont ajoutées, une ligne de tableau continue de pointer vers l’index pour lequel elle a été créée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"f62b4-103\">That is, if the data is sorted or if new rows are added, a table row will continue to point at the index for which it was created.</span></span>\n\n<span data-ttu-id=\"f62b4-104\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"f62b4-104\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: Excel.TableRowCollection
    fullName: Excel.TableRowCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.TableRowCollection#add:member(1)'
      - 'excel!Excel.TableRowCollection#context:member'
      - 'excel!Excel.TableRowCollection#count:member'
      - 'excel!Excel.TableRowCollection#getItemAt:member(1)'
      - 'excel!Excel.TableRowCollection#items:member'
      - 'excel!Excel.TableRowCollection#load:member(1)'
      - 'excel!Excel.TableRowCollection#load:member(2)'
      - 'excel!Excel.TableRowCollection#load:member(3)'
      - 'excel!Excel.TableRowCollection#toJSON:member(1)'
  - uid: 'excel!Excel.TableRowCollection#add:member(1)'
    summary: "<span data-ttu-id=\"f62b4-105\">Ajoute une ou plusieurs lignes dans le tableau.</span><span class=\"sxs-lookup\"><span data-stu-id=\"f62b4-105\">Adds one or more rows to the table.</span></span> <span data-ttu-id=\"f62b4-106\">L’objet renvoyé sera placé en premier dans les lignes récemment ajoutées.</span><span class=\"sxs-lookup\"><span data-stu-id=\"f62b4-106\">The return object will be the top of the newly added row(s).</span></span>\n\n<span data-ttu-id=\"f62b4-107\">Notez que, à la différence des plages ou colonnes, qui s’ajusteront si de nouvelles lignes/colonnes sont ajoutées avant celles-ci, un objet TableRow représente l’emplacement physique de la ligne de table, mais pas les données.</span><span class=\"sxs-lookup\"><span data-stu-id=\"f62b4-107\">Note that unlike Ranges or Columns, which will adjust if new rows/columns are added before them, a TableRow object represent the physical location of the table row, but not the data.</span></span> <span data-ttu-id=\"f62b4-108\">Autrement dit, si les données sont triées ou si de nouvelles lignes sont ajoutées, une ligne de tableau continue de pointer vers l’index pour lequel elle a été créée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"f62b4-108\">That is, if the data is sorted or if new rows are added, a table row will continue to point at the index for which it was created.</span></span>\n\n<span data-ttu-id=\"f62b4-109\">\\[[Ensemble d’API\_: ExcelApi 1,1 pour l’ajout d’une seule ligne\_; 1,4 permet l’ajout de plusieurs lignes.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span><span class=\"sxs-lookup\"><span data-stu-id=\"f62b4-109\">\\[ [API set: ExcelApi 1.1 for adding a single row; 1.4 allows adding of multiple rows.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span></span> <span data-ttu-id=\"f62b4-110\">\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"f62b4-110\"></span></span>"
    name: 'add(index, values)'
    fullName: 'add(index, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(index?: number, values?: Array<Array<boolean | string | number>> | boolean | string | number): Excel.TableRow;'
      return:
        type:
          - 'excel!Excel.TableRow:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="f62b4-111">Exemples</span><span class="sxs-lookup"><span data-stu-id="f62b4-111">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tables = ctx.workbook.tables;
              var values = [["Sample", "Values", "For", "New", "Row"]];
              var row = tables.getItem("Table1").rows.add(null, values);
              row.load('index');
              return ctx.sync().then(function() {
                  console.log(row.index);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: '<span data-ttu-id="f62b4-p105">Facultatif. Spécifie la position relative de la nouvelle ligne. Si la valeur est null ou -1, la ligne est ajoutée à la fin. Toutes les lignes en dessous de la ligne insérée sont déplacées vers le bas. Avec indice zéro.</span><span class="sxs-lookup"><span data-stu-id="f62b4-p105">Optional. Specifies the relative position of the new row. If null or -1, the addition happens at the end. Any rows below the inserted row are shifted downwards. Zero-indexed.</span></span>'
          type:
            - number
        - id: values
          description: "<span data-ttu-id=\"f62b4-117\">Facultatif.</span><span class=\"sxs-lookup\"><span data-stu-id=\"f62b4-117\">Optional.</span></span> <span data-ttu-id=\"f62b4-118\">Matrice\_2D des valeurs non mises en forme de la ligne du tableau.</span><span class=\"sxs-lookup\"><span data-stu-id=\"f62b4-118\">A 2-dimensional array of unformatted values of the table row.</span></span>"
          type:
            - 'excel!Excel.TableRowCollection#add~0:complex'
  - uid: 'excel!Excel.TableRowCollection#context:member'
    summary: <span data-ttu-id="f62b4-119">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="f62b4-119">The request context associated with the object.</span></span> <span data-ttu-id="f62b4-120">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="f62b4-120">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.TableRowCollection#count:member'
    summary: "<span data-ttu-id=\"f62b4-121\">Renvoie le nombre de lignes du tableau.</span><span class=\"sxs-lookup\"><span data-stu-id=\"f62b4-121\">Returns the number of rows in the table.</span></span> <span data-ttu-id=\"f62b4-122\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"f62b4-122\">Read-only.</span></span>\n\n<span data-ttu-id=\"f62b4-123\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"f62b4-123\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.TableRowCollection#getItemAt:member(1)'
    summary: "<span data-ttu-id=\"f62b4-124\">Obtient une ligne en fonction de sa position dans la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"f62b4-124\">Gets a row based on its position in the collection.</span></span>\n\n<span data-ttu-id=\"f62b4-125\">Notez que, à la différence des plages ou colonnes, qui s’ajusteront si de nouvelles lignes/colonnes sont ajoutées avant celles-ci, un objet TableRow représente l’emplacement physique de la ligne de table, mais pas les données.</span><span class=\"sxs-lookup\"><span data-stu-id=\"f62b4-125\">Note that unlike Ranges or Columns, which will adjust if new rows/columns are added before them, a TableRow object represent the physical location of the table row, but not the data.</span></span> <span data-ttu-id=\"f62b4-126\">Autrement dit, si les données sont triées ou si de nouvelles lignes sont ajoutées, une ligne de tableau continue de pointer vers l’index pour lequel elle a été créée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"f62b4-126\">That is, if the data is sorted or if new rows are added, a table row will continue to point at the index for which it was created.</span></span>\n\n<span data-ttu-id=\"f62b4-127\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"f62b4-127\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.TableRow;'
      return:
        type:
          - 'excel!Excel.TableRow:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="f62b4-128">Exemples</span><span class="sxs-lookup"><span data-stu-id="f62b4-128">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tablerow = ctx.workbook.tables.getItem('Table1').rows.getItemAt(0);
              tablerow.load('name');
              return ctx.sync().then(function() {
                      console.log(tablerow.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: <span data-ttu-id="f62b4-129">Valeur d’indice de l’objet à récupérer.</span><span class="sxs-lookup"><span data-stu-id="f62b4-129">Index value of the object to be retrieved.</span></span> <span data-ttu-id="f62b4-130">Avec indice zéro.</span><span class="sxs-lookup"><span data-stu-id="f62b4-130">Zero-indexed.</span></span>
          type:
            - number
  - uid: 'excel!Excel.TableRowCollection#items:member'
    summary: <span data-ttu-id="f62b4-131">Obtient l’élément enfant chargé dans cette collection de sites.</span><span class="sxs-lookup"><span data-stu-id="f62b4-131">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.TableRow[];'
      return:
        type:
          - 'excel!Excel.TableRowCollection#items~0:complex'
  - uid: 'excel!Excel.TableRowCollection#load:member(1)'
    summary: "<span data-ttu-id=\"f62b4-132\">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"f62b4-132\">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id=\"f62b4-133\">Vous devez appeler «\_context.sync()\_» avant de lire les propriétés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"f62b4-133\">You must call \"context.sync()\" before reading the properties.</span></span>"
    remarks: "<span data-ttu-id=\"f62b4-134\">En plus de cette signature, cette méthode possède les signatures suivantes\_:</span><span class=\"sxs-lookup\"><span data-stu-id=\"f62b4-134\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"f62b4-135\">`load(option?: string | string[]): Excel.TableRowCollection`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class=\"sxs-lookup\"><span data-stu-id=\"f62b4-135\">`load(option?: string | string[]): Excel.TableRowCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>\n\n<span data-ttu-id=\"f62b4-136\">`load(option?: { select?: string; expand?: string; }): Excel.TableRowCollection`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class=\"sxs-lookup\"><span data-stu-id=\"f62b4-136\">`load(option?: { select?: string; expand?: string; }): Excel.TableRowCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"f62b4-137\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableRowCollection`-Uniquement disponible sur les types de collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"f62b4-137\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableRowCollection` - Only available on collection types.</span></span> <span data-ttu-id=\"f62b4-138\">Elle est similaire à la signature précédente.</span><span class=\"sxs-lookup\"><span data-stu-id=\"f62b4-138\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"f62b4-139\">Option. Top indique le nombre maximal d’éléments de collection qui peuvent être inclus dans le résultat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"f62b4-139\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"f62b4-140\">Option. Skip indique le nombre d’éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"f62b4-140\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"f62b4-141\">Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d’éléments.</span><span class=\"sxs-lookup\"><span data-stu-id=\"f62b4-141\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>"
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.TableRowCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.TableRowCollection;'
      return:
        type:
          - 'excel!Excel.TableRowCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.TableRowCollection#load~0:complex'
  - uid: 'excel!Excel.TableRowCollection#load:member(2)'
    summary: <span data-ttu-id="f62b4-142">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="f62b4-142">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="f62b4-143">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="f62b4-143">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.TableRowCollection;'
      return:
        type:
          - 'excel!Excel.TableRowCollection:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="f62b4-144">Exemples</span><span class="sxs-lookup"><span data-stu-id="f62b4-144">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tablerows = ctx.workbook.tables.getItem('Table1').rows;
              tablerows.load('items');
              return ctx.sync().then(function() {
                  console.log("tablerows Count: " + tablerows.count);
                  for (var i = 0; i < tablerows.items.length; i++)
                  {
                      console.log(tablerows.items[i].index);
                  }
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // In the example, we'll select the top 100 rows of the table.
          Excel.run(function (ctx) { 
              var table = ctx.workbook.tables.getItem("Table1");
              var tableRows = table.rows.load({"select" : "index, values","top": 100, "skip": 0 })
              return ctx.sync().then(function() {
                  for (var i = 0; i < tableRows.items.length; i++)
                  {
                      console.log(tableRows.items[i].index);
                      console.log(tableRows.items[i].values);
                  }
              });
          }).catch(function(error) {
                  console.log("Error: " + error);
                  if (error instanceof OfficeExtension.Error) {
                      console.log("Debug info: " + JSON.stringify(error.debugInfo));
                  }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="f62b4-145">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="f62b4-145">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.TableRowCollection#load:member(3)'
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.TableRowCollection;'
      return:
        type:
          - 'excel!Excel.TableRowCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.TableRowCollection#toJSON:member(1)'
    summary: "<span data-ttu-id=\"f62b4-146\">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class=\"sxs-lookup\"><span data-stu-id=\"f62b4-146\">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id=\"f62b4-147\">.</span><span class=\"sxs-lookup\"><span data-stu-id=\"f62b4-147\"></span></span> <span data-ttu-id=\"f62b4-148\">(`JSON.stringify`</span><span class=\"sxs-lookup\"><span data-stu-id=\"f62b4-148\"></span></span><!-- --><span data-ttu-id=\"f62b4-149\">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que `Excel.TableRowCollection` l’objet d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.TableRowCollectionData`</span><span class=\"sxs-lookup\"><span data-stu-id=\"f62b4-149\">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.TableRowCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableRowCollectionData`</span></span><!-- --><span data-ttu-id=\"f62b4-150\">) qui contient un tableau «\_éléments\_» avec des copies superficielles de toutes les propriétés chargées des éléments de la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"f62b4-150\">) that contains an \"items\" array with shallow copies of any loaded properties from the collection's items.</span></span>"
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.TableRowCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.TableRowCollectionData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.TableRow:class'
    name: Excel.TableRow
  - uid: 'excel!Excel.TableRowCollection#add~0:complex'
    name: Array<Array<boolean | string | number>> | boolean | string | number
    fullName: Array<Array<boolean | string | number>> | boolean | string | number
    spec.typeScript:
      - uid: '!Array:interface'
        name: Array
        fullName: Array
      - name: <
        fullName: <
      - uid: '!Array:interface'
        name: Array
        fullName: Array
      - name: <boolean | string | number>> | boolean | string | number
        fullName: <boolean | string | number>> | boolean | string | number
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.TableRowCollection#items~0:complex'
    name: 'Excel.TableRow[]'
    fullName: 'Excel.TableRow[]'
    spec.typeScript:
      - uid: 'excel!Excel.TableRow:class'
        name: Excel.TableRow
        fullName: Excel.TableRow
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.TableRowCollection:class'
    name: Excel.TableRowCollection
  - uid: 'excel!Excel.TableRowCollection#load~0:complex'
    name: Excel.Interfaces.TableRowCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.TableRowCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.TableRowCollectionLoadOptions:interface'
        name: Excel.Interfaces.TableRowCollectionLoadOptions
        fullName: Excel.Interfaces.TableRowCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'excel!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.Interfaces.TableRowCollectionData:interface'
    name: Excel.Interfaces.TableRowCollectionData