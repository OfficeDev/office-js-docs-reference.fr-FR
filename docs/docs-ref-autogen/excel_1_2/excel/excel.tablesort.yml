### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.TableSort:class'
    summary: "Gère les opérations de tri des objets Table.\n\n\\[[Ensemble d’API\_: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: Excel.TableSort
    fullName: Excel.TableSort
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.TableSort#apply:member(1)'
      - 'excel!Excel.TableSort#apply:member(2)'
      - 'excel!Excel.TableSort#clear:member(1)'
      - 'excel!Excel.TableSort#context:member'
      - 'excel!Excel.TableSort#fields:member'
      - 'excel!Excel.TableSort#load:member(1)'
      - 'excel!Excel.TableSort#load:member(2)'
      - 'excel!Excel.TableSort#load:member(3)'
      - 'excel!Excel.TableSort#matchCase:member'
      - 'excel!Excel.TableSort#method:member'
      - 'excel!Excel.TableSort#reapply:member(1)'
      - 'excel!Excel.TableSort#toJSON:member(1)'
  - uid: 'excel!Excel.TableSort#apply:member(1)'
    summary: "Effectue une opération de tri.\n\n\\[[Ensemble d’API\_: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: 'apply(fields, matchCase, method)'
    fullName: 'apply(fields, matchCase, method)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'apply(fields: Excel.SortField[], matchCase?: boolean, method?: Excel.SortMethod): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Exemples

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              table.sort.apply([ 
                      {
                          key: 2,
                          ascending: true
                      },
                  ], true);
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: fields
          description: Liste des conditions de tri.
          type:
            - 'excel!Excel.TableSort#apply~0:complex'
        - id: matchCase
          description: Facultatif. Indique si la casse influe sur le classement des chaînes.
          type:
            - boolean
        - id: method
          description: Facultatif. Méthode de classement utilisée pour les caractères chinois.
          type:
            - 'excel!Excel.SortMethod:enum'
  - uid: 'excel!Excel.TableSort#apply:member(2)'
    summary: "Effectue une opération de tri.\n\n\\[[Ensemble d’API\_: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: 'apply(fields, matchCase, methodString)'
    fullName: 'apply(fields, matchCase, methodString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'apply(fields: Excel.SortField[], matchCase?: boolean, methodString?: "PinYin" | "StrokeCount"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: fields
          description: Liste des conditions de tri.
          type:
            - 'excel!Excel.TableSort#apply~1:complex'
        - id: matchCase
          description: Facultatif. Indique si la casse influe sur le classement des chaînes.
          type:
            - boolean
        - id: methodString
          description: Facultatif. Méthode de classement utilisée pour les caractères chinois.
          type:
            - '"PinYin" | "StrokeCount"'
  - uid: 'excel!Excel.TableSort#clear:member(1)'
    summary: "Efface le tri actuellement appliqué au tableau. Même si le classement du tableau n’est pas modifié, l’état des boutons d’en-tête est rétabli.\n\n\\[[Ensemble d’API\_: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel!Excel.TableSort#context:member'
    summary: Contexte de demande associé à l’objet. Cette opération connecte le processus du complément au processus de l’application hôte Office.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.TableSort#fields:member'
    summary: "Dernières conditions utilisées pour trier le tableau. En lecture seule.\n\n\\[[Ensemble d’API\_: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: fields
    fullName: fields
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly fields: Excel.SortField[];'
      return:
        type:
          - 'excel!Excel.TableSort#fields~0:complex'
  - uid: 'excel!Excel.TableSort#load:member(1)'
    summary: "Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez appeler «\_context.sync()\_» avant de lire les propriétés."
    remarks: "En plus de cette signature, cette méthode possède les signatures suivantes\_:\n\n`load(option?: string | string[]): Excel.TableSort`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.\n\n`load(option?: { select?: string; expand?: string; }): Excel.TableSort`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.\n\n`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableSort`-Uniquement disponible sur les types de collection. Elle est similaire à la signature précédente. Option. Top indique le nombre maximal d’éléments de collection qui peuvent être inclus dans le résultat. Option. Skip indique le nombre d’éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat. Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d’éléments."
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.TableSortLoadOptions): Excel.TableSort;'
      return:
        type:
          - 'excel!Excel.TableSort:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.Interfaces.TableSortLoadOptions:interface'
  - uid: 'excel!Excel.TableSort#load:member(2)'
    summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez appeler `context.sync()` avant de lire les propriétés.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.TableSort;'
      return:
        type:
          - 'excel!Excel.TableSort:class'
        description: ''
      parameters:
        - id: propertyNames
          description: Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.TableSort#load:member(3)'
    summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez appeler `context.sync()` avant de lire les propriétés.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.TableSort;'
      return:
        type:
          - 'excel!Excel.TableSort:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: Où propertyNamesAndPaths. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et propertyNamesAndPaths. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'excel!Excel.TableSort#matchCase:member'
    summary: "Indique si la casse a influé sur le dernier tri du tableau. En lecture seule.\n\n\\[[Ensemble d’API\_: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: matchCase
    fullName: matchCase
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly matchCase: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.TableSort#method:member'
    summary: "Dernière méthode de classement des caractères chinois utilisée pour trier le tableau. En lecture seule.\n\n\\[[Ensemble d’API\_: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: method
    fullName: method
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly method: Excel.SortMethod | "PinYin" | "StrokeCount";'
      return:
        type:
          - 'excel!Excel.TableSort#method~0:complex'
  - uid: 'excel!Excel.TableSort#reapply:member(1)'
    summary: "Applique à nouveau les paramètres actuels de tri au tableau.\n\n\\[[Ensemble d’API\_: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: reapply()
    fullName: reapply()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'reapply(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel!Excel.TableSort#toJSON:member(1)'
    summary: 'Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que l’objet Excel. TableSort d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.TableSortData`<!-- -->) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l’objet d’origine.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.TableSortData;'
      return:
        type:
          - 'excel!Excel.Interfaces.TableSortData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.TableSort#apply~0:complex'
    name: 'Excel.SortField[]'
    fullName: 'Excel.SortField[]'
    spec.typeScript:
      - uid: 'excel!Excel.SortField:interface'
        name: Excel.SortField
        fullName: Excel.SortField
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.SortMethod:enum'
    name: Excel.SortMethod
  - uid: 'excel!Excel.TableSort#apply~1:complex'
    name: 'Excel.SortField[]'
    fullName: 'Excel.SortField[]'
    spec.typeScript:
      - uid: 'excel!Excel.SortField:interface'
        name: Excel.SortField
        fullName: Excel.SortField
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.TableSort#fields~0:complex'
    name: 'Excel.SortField[]'
    fullName: 'Excel.SortField[]'
    spec.typeScript:
      - uid: 'excel!Excel.SortField:interface'
        name: Excel.SortField
        fullName: Excel.SortField
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.TableSort:class'
    name: Excel.TableSort
  - uid: 'excel!Excel.Interfaces.TableSortLoadOptions:interface'
    name: Excel.Interfaces.TableSortLoadOptions
  - uid: 'excel!Excel.TableSort#method~0:complex'
    name: Excel.SortMethod | "PinYin" | "StrokeCount"
    fullName: Excel.SortMethod | "PinYin" | "StrokeCount"
    spec.typeScript:
      - uid: 'excel!Excel.SortMethod:enum'
        name: Excel.SortMethod
        fullName: Excel.SortMethod
      - name: ' | "PinYin" | "StrokeCount"'
        fullName: ' | "PinYin" | "StrokeCount"'
  - uid: 'excel!Excel.Interfaces.TableSortData:interface'
    name: Excel.Interfaces.TableSortData