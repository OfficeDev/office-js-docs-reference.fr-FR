### YamlMime:UniversalReference
items:
  - uid: excel.Excel.RangeFont
    summary: |-
      <span data-ttu-id="46080-101">Cet objet représente les attributs de police (nom de la police, taille de police, couleur, etc.) d’un objet.</span><span class="sxs-lookup"><span data-stu-id="46080-101">This object represents the font attributes (font name, font size, color, etc.) for an object.</span></span>

      <span data-ttu-id="46080-102">\[[Ensemble d’API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="46080-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.RangeFont
    fullName: Excel.RangeFont
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.RangeFont.bold
      - excel.Excel.RangeFont.color
      - excel.Excel.RangeFont.context
      - excel.Excel.RangeFont.italic
      - excel.Excel.RangeFont.load
      - excel.Excel.RangeFont.load_1
      - excel.Excel.RangeFont.load_2
      - excel.Excel.RangeFont.name
      - excel.Excel.RangeFont.set
      - excel.Excel.RangeFont.set_1
      - excel.Excel.RangeFont.size
      - excel.Excel.RangeFont.toJSON
      - excel.Excel.RangeFont.underline
  - uid: excel.Excel.RangeFont.bold
    summary: |-
      <span data-ttu-id="46080-103">Représente le format de police Gras.</span><span class="sxs-lookup"><span data-stu-id="46080-103">Represents the bold status of font.</span></span>

      <span data-ttu-id="46080-104">\[[Ensemble d’API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="46080-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: bold
    fullName: bold
    langs:
      - typeScript
    type: property
    syntax:
      content: 'bold: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.RangeFont.color
    summary: |-
      <span data-ttu-id="46080-105">Représentation sous forme de code couleur HTML de la couleur du texte.</span><span class="sxs-lookup"><span data-stu-id="46080-105">HTML color code representation of the text color.</span></span> <span data-ttu-id="46080-106">Par exemple,</span><span class="sxs-lookup"><span data-stu-id="46080-106">E.g.</span></span> <span data-ttu-id="46080-107">\#FF0000 représente le rouge.</span><span class="sxs-lookup"><span data-stu-id="46080-107">\#FF0000 represents Red.</span></span>

      <span data-ttu-id="46080-108">\[[Ensemble d’API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="46080-108">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: color
    fullName: color
    langs:
      - typeScript
    type: property
    syntax:
      content: 'color: string;'
      return:
        type:
          - string
  - uid: excel.Excel.RangeFont.context
    summary: <span data-ttu-id="46080-109">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="46080-109">The request context associated with the object.</span></span> <span data-ttu-id="46080-110">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="46080-110">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.RangeFont.italic
    summary: |-
      <span data-ttu-id="46080-111">Représente le format de police Italique.</span><span class="sxs-lookup"><span data-stu-id="46080-111">Represents the italic status of the font.</span></span>

      <span data-ttu-id="46080-112">\[[Ensemble d’API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="46080-112">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: italic
    fullName: italic
    langs:
      - typeScript
    type: property
    syntax:
      content: 'italic: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.RangeFont.load
    summary: "<span data-ttu-id=\"46080-113\">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"46080-113\">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id=\"46080-114\">Vous devez appeler «\_context.sync()\_» avant de lire les propriétés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"46080-114\">You must call \"context.sync()\" before reading the properties.</span></span>"
    remarks: |-
      <span data-ttu-id="46080-115">En plus de cette signature, cette méthode possède les signatures suivantes:</span><span class="sxs-lookup"><span data-stu-id="46080-115">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="46080-116">`load(option?: string | string[]): Excel.RangeFont`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="46080-116">`load(option?: string | string[]): Excel.RangeFont` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="46080-117">`load(option?: { select?: string; expand?: string; }): Excel.RangeFont`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="46080-117">`load(option?: { select?: string; expand?: string; }): Excel.RangeFont` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="46080-118">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeFont`-Uniquement disponible sur les types de collection.</span><span class="sxs-lookup"><span data-stu-id="46080-118">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeFont` - Only available on collection types.</span></span> <span data-ttu-id="46080-119">Elle est similaire à la signature précédente.</span><span class="sxs-lookup"><span data-stu-id="46080-119">It is similar to the preceding signature.</span></span> <span data-ttu-id="46080-120">Option. Top indique le nombre maximal d’éléments de collection qui peuvent être inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="46080-120">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="46080-121">Option. Skip indique le nombre d’éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="46080-121">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="46080-122">Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d’éléments.</span><span class="sxs-lookup"><span data-stu-id="46080-122">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.RangeFontLoadOptions): Excel.RangeFont;'
      return:
        type:
          - excel.Excel.RangeFont
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.RangeFontLoadOptions
  - uid: excel.Excel.RangeFont.load_1
    summary: <span data-ttu-id="46080-123">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="46080-123">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="46080-124">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="46080-124">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.RangeFont;'
      return:
        type:
          - excel.Excel.RangeFont
        description: |-


          #### <a name="examples"></a><span data-ttu-id="46080-125">Exemples</span><span class="sxs-lookup"><span data-stu-id="46080-125">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "F:G";
              var worksheet = ctx.workbook.worksheets.getItem(sheetName);
              var range = worksheet.getRange(rangeAddress);
              var rangeFont = range.format.font;
              rangeFont.load('name');
              return ctx.sync().then(function() {
                  console.log(rangeFont.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // The example below sets font name. 
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "F:G";
              var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);
              range.format.font.name = 'Times New Roman';
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="46080-126">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="46080-126">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.RangeFont.load_2
    summary: <span data-ttu-id="46080-127">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="46080-127">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="46080-128">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="46080-128">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.RangeFont;'
      return:
        type:
          - excel.Excel.RangeFont
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="46080-129">Où propertyNamesAndPaths. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et propertyNamesAndPaths. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="46080-129">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.RangeFont.name
    summary: "<span data-ttu-id=\"46080-130\">Nom de la police (par exemple «\_Calibri\_»)</span><span class=\"sxs-lookup\"><span data-stu-id=\"46080-130\">Font name (e.g. \"Calibri\")</span></span>\n\n<span data-ttu-id=\"46080-131\">\\[[Ensemble d’API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"46080-131\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: excel.Excel.RangeFont.set
    summary: '<span data-ttu-id="46080-132">Définit plusieurs propriétés d’un objet en même temps.</span><span class="sxs-lookup"><span data-stu-id="46080-132">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="46080-133">Vous pouvez transmettre un objet plain avec les propriétés appropriées, ou un autre objet API du même type.</span><span class="sxs-lookup"><span data-stu-id="46080-133">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="46080-134">Cette méthode est dotée de la signature supplémentaire suivante:</span><span class="sxs-lookup"><span data-stu-id="46080-134">This method has the following additional signature:</span></span>

      `set(properties: Excel.RangeFont): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.RangeFontUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="46080-135">Objet JavaScript avec des propriétés qui sont structurées isomorphically vers les propriétés de l’objet sur lequel la méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="46080-135">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.RangeFontUpdateData
        - id: options
          description: <span data-ttu-id="46080-136">Fournit une option permettant de supprimer les erreurs si l’objet Properties tente de définir des propriétés en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="46080-136">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.RangeFont.set_1
    summary: '<span data-ttu-id="46080-137">Définit plusieurs propriétés de l’objet en même temps, en fonction d’un objet chargé existant.</span><span class="sxs-lookup"><span data-stu-id="46080-137">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.RangeFont): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.RangeFont
  - uid: excel.Excel.RangeFont.size
    summary: |-
      <span data-ttu-id="46080-138">Taille de police</span><span class="sxs-lookup"><span data-stu-id="46080-138">Font size.</span></span>

      <span data-ttu-id="46080-139">\[[Ensemble d’API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="46080-139">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: size
    fullName: size
    langs:
      - typeScript
    type: property
    syntax:
      content: 'size: number;'
      return:
        type:
          - number
  - uid: excel.Excel.RangeFont.toJSON
    summary: '<span data-ttu-id="46080-140">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="46080-140">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="46080-141">.</span><span class="sxs-lookup"><span data-stu-id="46080-141"></span></span> <span data-ttu-id="46080-142">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="46080-142"></span></span><!-- --><span data-ttu-id="46080-143">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que l’objet Excel. RangeFont d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.RangeFontData`</span><span class="sxs-lookup"><span data-stu-id="46080-143">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.RangeFont object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.RangeFontData`</span></span><!-- --><span data-ttu-id="46080-144">) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l’objet d’origine.</span><span class="sxs-lookup"><span data-stu-id="46080-144">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.RangeFontData;'
      return:
        type:
          - excel.Excel.Interfaces.RangeFontData
        description: ''
  - uid: excel.Excel.RangeFont.underline
    summary: |-
      <span data-ttu-id="46080-145">Type de soulignement appliqué à la police.</span><span class="sxs-lookup"><span data-stu-id="46080-145">Type of underline applied to the font.</span></span> <span data-ttu-id="46080-146">Pour plus d’informations, voir Excel. RangeUnderlineStyle.</span><span class="sxs-lookup"><span data-stu-id="46080-146">See Excel.RangeUnderlineStyle for details.</span></span>

      <span data-ttu-id="46080-147">\[[Ensemble d’API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="46080-147">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: underline
    fullName: underline
    langs:
      - typeScript
    type: property
    syntax:
      content: 'underline: Excel.RangeUnderlineStyle | "None" | "Single" | "Double" | "SingleAccountant" | "DoubleAccountant";'
      return:
        type:
          - Excel.RangeUnderlineStyle | "None" | "Single" | "Double" | "SingleAccountant" | "DoubleAccountant"