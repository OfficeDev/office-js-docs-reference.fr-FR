### YamlMime:UniversalReference
items:
  - uid: excel.Excel.Table
    summary: |-
      <span data-ttu-id="0439c-101">Représente un tableau Excel.</span><span class="sxs-lookup"><span data-stu-id="0439c-101">Represents an Excel table.</span></span>

      <span data-ttu-id="0439c-102">\[[Ensemble d’API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0439c-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.Table
    fullName: Excel.Table
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.Table.clearFilters
      - excel.Excel.Table.columns
      - excel.Excel.Table.context
      - excel.Excel.Table.convertToRange
      - excel.Excel.Table.delete
      - excel.Excel.Table.getDataBodyRange
      - excel.Excel.Table.getHeaderRowRange
      - excel.Excel.Table.getRange
      - excel.Excel.Table.getTotalRowRange
      - excel.Excel.Table.id
      - excel.Excel.Table.load
      - excel.Excel.Table.load_1
      - excel.Excel.Table.load_2
      - excel.Excel.Table.name
      - excel.Excel.Table.reapplyFilters
      - excel.Excel.Table.rows
      - excel.Excel.Table.set
      - excel.Excel.Table.set_1
      - excel.Excel.Table.showHeaders
      - excel.Excel.Table.showTotals
      - excel.Excel.Table.sort
      - excel.Excel.Table.style
      - excel.Excel.Table.toJSON
      - excel.Excel.Table.worksheet
  - uid: excel.Excel.Table.clearFilters
    summary: |-
      <span data-ttu-id="0439c-103">Supprime tous les filtres appliqués actuellement sur le tableau.</span><span class="sxs-lookup"><span data-stu-id="0439c-103">Clears all the filters currently applied on the table.</span></span>

      <span data-ttu-id="0439c-104">\[[Ensemble d’API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0439c-104">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: clearFilters()
    fullName: clearFilters()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clearFilters(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel.Excel.Table.columns
    summary: |-
      <span data-ttu-id="0439c-105">Représente une collection de toutes les colonnes du tableau.</span><span class="sxs-lookup"><span data-stu-id="0439c-105">Represents a collection of all the columns in the table.</span></span> <span data-ttu-id="0439c-106">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="0439c-106">Read-only.</span></span>

      <span data-ttu-id="0439c-107">\[[Ensemble d’API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0439c-107">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: columns
    fullName: columns
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly columns: Excel.TableColumnCollection;'
      return:
        type:
          - excel.Excel.TableColumnCollection
  - uid: excel.Excel.Table.context
    summary: <span data-ttu-id="0439c-108">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="0439c-108">The request context associated with the object.</span></span> <span data-ttu-id="0439c-109">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="0439c-109">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.Table.convertToRange
    summary: |-
      <span data-ttu-id="0439c-110">Convertit le tableau en plage normale de cellules.</span><span class="sxs-lookup"><span data-stu-id="0439c-110">Converts the table into a normal range of cells.</span></span> <span data-ttu-id="0439c-111">Toutes les données sont conservées.</span><span class="sxs-lookup"><span data-stu-id="0439c-111">All data is preserved.</span></span>

      <span data-ttu-id="0439c-112">\[[Ensemble d’API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0439c-112">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: convertToRange()
    fullName: convertToRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'convertToRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0439c-113">Exemples</span><span class="sxs-lookup"><span data-stu-id="0439c-113">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              table.convertToRange();
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.Table.delete
    summary: |-
      <span data-ttu-id="0439c-114">Supprime le tableau.</span><span class="sxs-lookup"><span data-stu-id="0439c-114">Deletes the table.</span></span>

      <span data-ttu-id="0439c-115">\[[Ensemble d’API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0439c-115">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0439c-116">Exemples</span><span class="sxs-lookup"><span data-stu-id="0439c-116">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              table.delete();
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.Table.getDataBodyRange
    summary: |-
      <span data-ttu-id="0439c-117">Obtient l’objet de plage associé au corps de données du tableau.</span><span class="sxs-lookup"><span data-stu-id="0439c-117">Gets the range object associated with the data body of the table.</span></span>

      <span data-ttu-id="0439c-118">\[[Ensemble d’API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0439c-118">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getDataBodyRange()
    fullName: getDataBodyRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDataBodyRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0439c-119">Exemples</span><span class="sxs-lookup"><span data-stu-id="0439c-119">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              var tableDataRange = table.getDataBodyRange();
              tableDataRange.load('address')
              return ctx.sync().then(function() {
                      console.log(tableDataRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.Table.getHeaderRowRange
    summary: |-
      <span data-ttu-id="0439c-120">Obtient l’objet de plage associé à la ligne d’en-tête du tableau.</span><span class="sxs-lookup"><span data-stu-id="0439c-120">Gets the range object associated with header row of the table.</span></span>

      <span data-ttu-id="0439c-121">\[[Ensemble d’API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0439c-121">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getHeaderRowRange()
    fullName: getHeaderRowRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getHeaderRowRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0439c-122">Exemples</span><span class="sxs-lookup"><span data-stu-id="0439c-122">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              var tableHeaderRange = table.getHeaderRowRange();
              tableHeaderRange.load('address');
              return ctx.sync().then(function() {
                  console.log(tableHeaderRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.Table.getRange
    summary: |-
      <span data-ttu-id="0439c-123">Renvoie l’objet de plage associé à l’intégralité du tableau.</span><span class="sxs-lookup"><span data-stu-id="0439c-123">Gets the range object associated with the entire table.</span></span>

      <span data-ttu-id="0439c-124">\[[Ensemble d’API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0439c-124">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0439c-125">Exemples</span><span class="sxs-lookup"><span data-stu-id="0439c-125">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              var tableRange = table.getRange();
              tableRange.load('address');    
              return ctx.sync().then(function() {
                      console.log(tableRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.Table.getTotalRowRange
    summary: |-
      <span data-ttu-id="0439c-126">Renvoie l’objet de plage associé à la ligne de total du tableau.</span><span class="sxs-lookup"><span data-stu-id="0439c-126">Gets the range object associated with totals row of the table.</span></span>

      <span data-ttu-id="0439c-127">\[[Ensemble d’API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0439c-127">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getTotalRowRange()
    fullName: getTotalRowRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTotalRowRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0439c-128">Exemples</span><span class="sxs-lookup"><span data-stu-id="0439c-128">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              var tableTotalsRange = table.getTotalRowRange();
              tableTotalsRange.load('address');    
              return ctx.sync().then(function() {
                      console.log(tableTotalsRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.Table.id
    summary: |-
      <span data-ttu-id="0439c-p104">Renvoie une valeur qui identifie le tableau dans un classeur donné. La valeur de l’identificateur reste identique, même lorsque le tableau est renommé. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="0439c-p104">Returns a value that uniquely identifies the table in a given workbook. The value of the identifier remains the same even when the table is renamed. Read-only.</span></span>

      <span data-ttu-id="0439c-132">\[[Ensemble d’API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0439c-132">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Table.load
    summary: "<span data-ttu-id=\"0439c-133\">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0439c-133\">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id=\"0439c-134\">Vous devez appeler «\_context.sync()\_» avant de lire les propriétés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0439c-134\">You must call \"context.sync()\" before reading the properties.</span></span>"
    remarks: |-
      <span data-ttu-id="0439c-135">En plus de cette signature, cette méthode possède les signatures suivantes:</span><span class="sxs-lookup"><span data-stu-id="0439c-135">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="0439c-136">`load(option?: string | string[]): Excel.Table`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="0439c-136">`load(option?: string | string[]): Excel.Table` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="0439c-137">`load(option?: { select?: string; expand?: string; }): Excel.Table`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="0439c-137">`load(option?: { select?: string; expand?: string; }): Excel.Table` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="0439c-138">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Table`-Uniquement disponible sur les types de collection.</span><span class="sxs-lookup"><span data-stu-id="0439c-138">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Table` - Only available on collection types.</span></span> <span data-ttu-id="0439c-139">Elle est similaire à la signature précédente.</span><span class="sxs-lookup"><span data-stu-id="0439c-139">It is similar to the preceding signature.</span></span> <span data-ttu-id="0439c-140">Option. Top indique le nombre maximal d’éléments de collection qui peuvent être inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="0439c-140">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="0439c-141">Option. Skip indique le nombre d’éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="0439c-141">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="0439c-142">Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d’éléments.</span><span class="sxs-lookup"><span data-stu-id="0439c-142">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.TableLoadOptions): Excel.Table;'
      return:
        type:
          - excel.Excel.Table
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.TableLoadOptions
  - uid: excel.Excel.Table.load_1
    summary: <span data-ttu-id="0439c-143">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="0439c-143">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0439c-144">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="0439c-144">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Table;'
      return:
        type:
          - excel.Excel.Table
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0439c-145">Exemples</span><span class="sxs-lookup"><span data-stu-id="0439c-145">Examples</span></span>

          ```javascript
          // Get a table by name. 
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              table.load('index')
              return ctx.sync().then(function() {
                      console.log(table.index);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Get a table by index.
          Excel.run(function (ctx) { 
              var index = 0;
              var table = ctx.workbook.tables.getItemAt(0);
              table.load('id')
              return ctx.sync().then(function() {
                      console.log(table.id);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Set table style. 
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              table.name = 'Table1-Renamed';
              table.showTotals = false;
              table.style = 'TableStyleMedium2';
              table.load('tableStyle');
              return ctx.sync().then(function() {
                      console.log(table.style);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="0439c-146">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="0439c-146">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.Table.load_2
    summary: <span data-ttu-id="0439c-147">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="0439c-147">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0439c-148">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="0439c-148">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Table;'
      return:
        type:
          - excel.Excel.Table
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="0439c-149">Où propertyNamesAndPaths. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et propertyNamesAndPaths. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="0439c-149">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.Table.name
    summary: |-
      <span data-ttu-id="0439c-150">Nom du tableau.</span><span class="sxs-lookup"><span data-stu-id="0439c-150">Name of the table.</span></span>

      <span data-ttu-id="0439c-151">\[[Ensemble d’API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0439c-151">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Table.reapplyFilters
    summary: |-
      <span data-ttu-id="0439c-152">Applique de nouveau tous les filtres actuellement appliqués sur le tableau.</span><span class="sxs-lookup"><span data-stu-id="0439c-152">Reapplies all the filters currently on the table.</span></span>

      <span data-ttu-id="0439c-153">\[[Ensemble d’API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0439c-153">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: reapplyFilters()
    fullName: reapplyFilters()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'reapplyFilters(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel.Excel.Table.rows
    summary: |-
      <span data-ttu-id="0439c-154">Représente une collection de toutes les lignes du tableau.</span><span class="sxs-lookup"><span data-stu-id="0439c-154">Represents a collection of all the rows in the table.</span></span> <span data-ttu-id="0439c-155">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="0439c-155">Read-only.</span></span>

      <span data-ttu-id="0439c-156">\[[Ensemble d’API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0439c-156">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: rows
    fullName: rows
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly rows: Excel.TableRowCollection;'
      return:
        type:
          - excel.Excel.TableRowCollection
  - uid: excel.Excel.Table.set
    summary: '<span data-ttu-id="0439c-157">Définit plusieurs propriétés d’un objet en même temps.</span><span class="sxs-lookup"><span data-stu-id="0439c-157">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="0439c-158">Vous pouvez transmettre un objet plain avec les propriétés appropriées, ou un autre objet API du même type.</span><span class="sxs-lookup"><span data-stu-id="0439c-158">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="0439c-159">Cette méthode est dotée de la signature supplémentaire suivante:</span><span class="sxs-lookup"><span data-stu-id="0439c-159">This method has the following additional signature:</span></span>

      `set(properties: Excel.Table): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.TableUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="0439c-160">Objet JavaScript avec des propriétés qui sont structurées isomorphically vers les propriétés de l’objet sur lequel la méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="0439c-160">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.TableUpdateData
        - id: options
          description: <span data-ttu-id="0439c-161">Fournit une option permettant de supprimer les erreurs si l’objet Properties tente de définir des propriétés en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="0439c-161">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.Table.set_1
    summary: '<span data-ttu-id="0439c-162">Définit plusieurs propriétés de l’objet en même temps, en fonction d’un objet chargé existant.</span><span class="sxs-lookup"><span data-stu-id="0439c-162">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Table): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.Table
  - uid: excel.Excel.Table.showHeaders
    summary: |-
      <span data-ttu-id="0439c-163">Indique si la ligne d’en-tête est visible ou non.</span><span class="sxs-lookup"><span data-stu-id="0439c-163">Indicates whether the header row is visible or not.</span></span> <span data-ttu-id="0439c-164">Cette valeur peut être définie de manière à afficher ou à masquer la ligne d’en-tête.</span><span class="sxs-lookup"><span data-stu-id="0439c-164">This value can be set to show or remove the header row.</span></span>

      <span data-ttu-id="0439c-165">\[[Ensemble d’API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0439c-165">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showHeaders
    fullName: showHeaders
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showHeaders: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Table.showTotals
    summary: |-
      <span data-ttu-id="0439c-166">Indique si la ligne de total est visible ou non.</span><span class="sxs-lookup"><span data-stu-id="0439c-166">Indicates whether the total row is visible or not.</span></span> <span data-ttu-id="0439c-167">Cette valeur peut être définie de manière à afficher ou à masquer la ligne de total.</span><span class="sxs-lookup"><span data-stu-id="0439c-167">This value can be set to show or remove the total row.</span></span>

      <span data-ttu-id="0439c-168">\[[Ensemble d’API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0439c-168">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showTotals
    fullName: showTotals
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showTotals: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Table.sort
    summary: |-
      <span data-ttu-id="0439c-169">Représente le tri du tableau.</span><span class="sxs-lookup"><span data-stu-id="0439c-169">Represents the sorting for the table.</span></span> <span data-ttu-id="0439c-170">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="0439c-170">Read-only.</span></span>

      <span data-ttu-id="0439c-171">\[[Ensemble d’API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0439c-171">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: sort
    fullName: sort
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly sort: Excel.TableSort;'
      return:
        type:
          - excel.Excel.TableSort
  - uid: excel.Excel.Table.style
    summary: "<span data-ttu-id=\"0439c-p114\">Valeur de constante qui représente le style du tableau. Les valeurs possibles sont les suivantes\_: TableStyleLight1 à TableStyleLight21, TableStyleMedium1 à TableStyleMedium28, TableStyleStyleDark1 à TableStyleStyleDark11. Vous pouvez également indiquer un style personnalisé présent dans le classeur.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0439c-p114\">Constant value that represents the Table style. Possible values are: TableStyleLight1 thru TableStyleLight21, TableStyleMedium1 thru TableStyleMedium28, TableStyleStyleDark1 thru TableStyleStyleDark11. A custom user-defined style present in the workbook can also be specified.</span></span>\n\n<span data-ttu-id=\"0439c-175\">\\[[Ensemble d’API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"0439c-175\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Table.toJSON
    summary: '<span data-ttu-id="0439c-176">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="0439c-176">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="0439c-177">.</span><span class="sxs-lookup"><span data-stu-id="0439c-177"></span></span> <span data-ttu-id="0439c-178">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="0439c-178"></span></span><!-- --><span data-ttu-id="0439c-179">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que l’objet Excel. table d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.TableData`</span><span class="sxs-lookup"><span data-stu-id="0439c-179">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Table object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableData`</span></span><!-- --><span data-ttu-id="0439c-180">) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l’objet d’origine.</span><span class="sxs-lookup"><span data-stu-id="0439c-180">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.TableData;'
      return:
        type:
          - excel.Excel.Interfaces.TableData
        description: ''
  - uid: excel.Excel.Table.worksheet
    summary: |-
      <span data-ttu-id="0439c-181">Feuille de calcul contenant le tableau actif.</span><span class="sxs-lookup"><span data-stu-id="0439c-181">The worksheet containing the current table.</span></span> <span data-ttu-id="0439c-182">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="0439c-182">Read-only.</span></span>

      <span data-ttu-id="0439c-183">\[[Ensemble d’API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0439c-183">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: worksheet
    fullName: worksheet
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheet: Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet