### YamlMime:TSType
name: Office.RoamingSettings
uid: outlook!Office.RoamingSettings:interface
package: outlook!
fullName: Office.RoamingSettings
summary: >-
  Les paramètres créés à l’aide des méthodes de l’objet `RoamingSettings` sont enregistrés par complément et par utilisateur. Autrement dit, ils sont disponibles uniquement pour le module qui les a créés, et uniquement à partir de la boîte aux lettres de l’utilisateur dans laquelle ils sont enregistrés.


  Bien que l’API du add-in Outlook limite l’accès à ces paramètres uniquement au module qui les a créés, ces paramètres ne doivent pas être considérés comme un stockage sécurisé. Ils sont accessibles via les services web Exchange ou l’interface MAPI étendue. Nous vous recommandons de ne pas les utiliser pour stocker des informations sensibles telles que des informations d’identification ou des jetons de sécurité.


  Le nom d’un paramètre est une donnée String, alors que sa valeur peut être une donnée String, Number, Boolean, Null, Object ou Array.


  L’objet `RoamingSettings` est accessible via la propriété `roamingSettings` dans l’espace de noms `Office.context`.


  **Important**:


  - L’objet est initialisé à partir du stockage persistant uniquement lorsque le module est chargé `RoamingSettings` pour la première fois. Pour les volets Des tâches, cela signifie qu’il n’est initialisé que lorsque le volet Des tâches s’ouvre pour la première fois. Si le volet Des tâches navigue vers une autre page ou recharge la page actuelle, l’objet en mémoire est réinitialisé à ses valeurs initiales, même si votre add-in a persisté les modifications. Les modifications persistantes ne seront pas disponibles tant que le volet Des tâches (ou l’élément dans le cas de modules sans interface utilisateur) n’aura pas été fermé et rouvert.


  - Lorsqu’ils sont définies et enregistrées via Outlook sur Windows ou Mac, ces paramètres sont reflétés dans Outlook sur le web uniquement après une actualisation du navigateur.
remarks: >-
  **[Niveau d’autorisation minimal](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**:`Restricted`


  **[Mode Outlook applicable](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**  : Rédiger ou Lire
isPreview: false
isDeprecated: false
type: interface
methods:
- name: get(name)
  uid: outlook!Office.RoamingSettings#get:member(1)
  package: outlook!
  fullName: get(name)
  summary: Récupère le paramètre spécifié.
  remarks: >-
    **[Niveau d’autorisation minimal](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**:`Restricted`


    **[Mode Outlook applicable](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**  : Rédiger ou Lire


    #### <a name="examples"></a>Exemples


    ```javascript

    // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/outlook/10-roaming-settings/roaming-settings.yaml

    var settingName = $("#settingName").val();

    var settingValue = Office.context.roamingSettings.get(settingName);

    $("#settingValue").val(settingValue);

    console.log(`The value of setting "${settingName}" is "${settingValue}".`);

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'get(name: string): any;'
    parameters:
    - id: name
      description: Nom respectant l’emploi des majuscules et minuscules pour le paramètre à récupérer.
      type: string
    return:
      type: any
      description: 'Type : Tableau \| d’objets booléens de nombre \| \| de \| chaînes'
- name: remove(name)
  uid: outlook!Office.RoamingSettings#remove:member(1)
  package: outlook!
  fullName: remove(name)
  summary: Supprime le paramètre spécifié
  remarks: >-
    **[Niveau d’autorisation minimal](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**:`Restricted`


    **[Mode Outlook applicable](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**  : Rédiger ou Lire
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'remove(name: string): void;'
    parameters:
    - id: name
      description: Nom respectant l’emploi des majuscules et minuscules pour le paramètre à supprimer.
      type: string
    return:
      type: void
      description: ''
- name: saveAsync(callback)
  uid: outlook!Office.RoamingSettings#saveAsync:member(1)
  package: outlook!
  fullName: saveAsync(callback)
  summary: >-
    Enregistre les paramètres.


    Tous les paramètres précédemment enregistrés par un add-in sont chargés lors de son initialisation. Ainsi, pendant la durée de vie de la session, vous pouvez simplement utiliser l’ensemble et obtenir des méthodes pour utiliser la copie en mémoire du sac des propriétés des paramètres. Lorsque vous souhaitez rendre les paramètres persistants afin qu’ils soient disponibles la prochaine fois que le module est utilisé, utilisez la méthode saveAsync.
  remarks: >-
    **[Niveau d’autorisation minimal](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**:`Restricted`


    **[Mode Outlook applicable](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**  : Rédiger ou Lire


    #### <a name="examples"></a>Exemples


    ```javascript

    // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/outlook/10-roaming-settings/roaming-settings.yaml

    // Save settings in the mailbox to make it available in future sessions.

    Office.context.roamingSettings.saveAsync(function(result) {
      if (result.status !== Office.AsyncResultStatus.Succeeded) {
        console.error(`Action failed with message ${result.error.message}`);
      } else {
        console.log(`Settings saved with status: ${result.status}`);
      }
    });

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'saveAsync(callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    parameters:
    - id: callback
      description: Facultatif. Une fois la méthode terminée, la fonction passée dans le paramètre est appelée avec `callback` un seul paramètre de type `Office.AsyncResult`<!-- -->.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: set(name, value)
  uid: outlook!Office.RoamingSettings#set:member(1)
  package: outlook!
  fullName: set(name, value)
  summary: >-
    Définit ou crée le paramètre spécifié.


    La méthode crée un nouveau paramètre du nom spécifié s’il n’existe pas déjà, ou définit un paramètre existant `set` du nom spécifié. La valeur est stockée dans le document sous forme de représentation JSON sérialisée de son type de données.


    Un maximum de 32 000 To est disponible pour les paramètres de chaque module.


    Les modifications apportées aux paramètres à l’aide de la fonction set ne seront pas enregistrées sur le serveur tant que la `saveAsync` fonction n’aura pas été appelée.
  remarks: >-
    **[Niveau d’autorisation minimal](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**:`Restricted`


    **[Mode Outlook applicable](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**  : Rédiger ou Lire


    #### <a name="examples"></a>Exemples


    ```javascript

    // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/outlook/10-roaming-settings/roaming-settings.yaml

    var settingName = $("#settingName").val();

    var settingValue = $("#settingValue").val();

    Office.context.roamingSettings.set(settingName, settingValue);

    console.log(`Setting "${settingName}" set to value "${settingValue}".`);

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(name: string, value: any): void;'
    parameters:
    - id: name
      description: Nom qui respecte la casse du paramètre à définir ou créer.
      type: string
    - id: value
      description: Spécifie la valeur à stocker.
      type: any
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: 988cefdfe1d01f2fa4b6f345b70014b3f31fd344
  ms.sourcegitcommit: a8a86cfcaff5ad7dacc653d63502c76b1fedbebe
  ms.translationtype: MT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 03/26/2021
  ms.locfileid: "51339584"
