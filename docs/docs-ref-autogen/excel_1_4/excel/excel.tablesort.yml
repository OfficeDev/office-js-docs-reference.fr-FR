### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.TableSort:class'
    summary: "<span data-ttu-id=\"eace6-101\">Gère les opérations de tri des objets Table.</span><span class=\"sxs-lookup\"><span data-stu-id=\"eace6-101\">Manages sorting operations on Table objects.</span></span>\n\n<span data-ttu-id=\"eace6-102\">\\[[Ensemble d’API\_: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"eace6-102\">\\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: Excel.TableSort
    fullName: Excel.TableSort
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.TableSort#apply:member(1)'
      - 'excel!Excel.TableSort#apply:member(2)'
      - 'excel!Excel.TableSort#clear:member(1)'
      - 'excel!Excel.TableSort#context:member'
      - 'excel!Excel.TableSort#fields:member'
      - 'excel!Excel.TableSort#load:member(1)'
      - 'excel!Excel.TableSort#load:member(2)'
      - 'excel!Excel.TableSort#load:member(3)'
      - 'excel!Excel.TableSort#matchCase:member'
      - 'excel!Excel.TableSort#method:member'
      - 'excel!Excel.TableSort#reapply:member(1)'
      - 'excel!Excel.TableSort#toJSON:member(1)'
  - uid: 'excel!Excel.TableSort#apply:member(1)'
    summary: "<span data-ttu-id=\"eace6-103\">Effectue une opération de tri.</span><span class=\"sxs-lookup\"><span data-stu-id=\"eace6-103\">Perform a sort operation.</span></span>\n\n<span data-ttu-id=\"eace6-104\">\\[[Ensemble d’API\_: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"eace6-104\">\\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: 'apply(fields, matchCase, method)'
    fullName: 'apply(fields, matchCase, method)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'apply(fields: Excel.SortField[], matchCase?: boolean, method?: Excel.SortMethod): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="eace6-105">Exemples</span><span class="sxs-lookup"><span data-stu-id="eace6-105">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              table.sort.apply([ 
                      {
                          key: 2,
                          ascending: true
                      },
                  ], true);
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: fields
          description: <span data-ttu-id="eace6-106">Liste des conditions de tri.</span><span class="sxs-lookup"><span data-stu-id="eace6-106">The list of conditions to sort on.</span></span>
          type:
            - 'excel!Excel.TableSort#apply~0:complex'
        - id: matchCase
          description: <span data-ttu-id="eace6-107">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="eace6-107">Optional.</span></span> <span data-ttu-id="eace6-108">Indique si la casse influe sur le classement des chaînes.</span><span class="sxs-lookup"><span data-stu-id="eace6-108">Whether to have the casing impact string ordering.</span></span>
          type:
            - boolean
        - id: method
          description: <span data-ttu-id="eace6-109">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="eace6-109">Optional.</span></span> <span data-ttu-id="eace6-110">Méthode de classement utilisée pour les caractères chinois.</span><span class="sxs-lookup"><span data-stu-id="eace6-110">The ordering method used for Chinese characters.</span></span>
          type:
            - 'excel!Excel.SortMethod:enum'
  - uid: 'excel!Excel.TableSort#apply:member(2)'
    summary: "<span data-ttu-id=\"eace6-111\">Effectue une opération de tri.</span><span class=\"sxs-lookup\"><span data-stu-id=\"eace6-111\">Perform a sort operation.</span></span>\n\n<span data-ttu-id=\"eace6-112\">\\[[Ensemble d’API\_: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"eace6-112\">\\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: 'apply(fields, matchCase, methodString)'
    fullName: 'apply(fields, matchCase, methodString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'apply(fields: Excel.SortField[], matchCase?: boolean, methodString?: "PinYin" | "StrokeCount"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: fields
          description: <span data-ttu-id="eace6-113">Liste des conditions de tri.</span><span class="sxs-lookup"><span data-stu-id="eace6-113">The list of conditions to sort on.</span></span>
          type:
            - 'excel!Excel.TableSort#apply~1:complex'
        - id: matchCase
          description: <span data-ttu-id="eace6-114">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="eace6-114">Optional.</span></span> <span data-ttu-id="eace6-115">Indique si la casse influe sur le classement des chaînes.</span><span class="sxs-lookup"><span data-stu-id="eace6-115">Whether to have the casing impact string ordering.</span></span>
          type:
            - boolean
        - id: methodString
          description: <span data-ttu-id="eace6-116">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="eace6-116">Optional.</span></span> <span data-ttu-id="eace6-117">Méthode de classement utilisée pour les caractères chinois.</span><span class="sxs-lookup"><span data-stu-id="eace6-117">The ordering method used for Chinese characters.</span></span>
          type:
            - '"PinYin" | "StrokeCount"'
  - uid: 'excel!Excel.TableSort#clear:member(1)'
    summary: "<span data-ttu-id=\"eace6-p105\">Efface le tri actuellement appliqué au tableau. Même si le classement du tableau n’est pas modifié, l’état des boutons d’en-tête est rétabli.</span><span class=\"sxs-lookup\"><span data-stu-id=\"eace6-p105\">Clears the sorting that is currently on the table. While this doesn't modify the table's ordering, it clears the state of the header buttons.</span></span>\n\n<span data-ttu-id=\"eace6-120\">\\[[Ensemble d’API\_: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"eace6-120\">\\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel!Excel.TableSort#context:member'
    summary: <span data-ttu-id="eace6-121">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="eace6-121">The request context associated with the object.</span></span> <span data-ttu-id="eace6-122">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="eace6-122">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.TableSort#fields:member'
    summary: "<span data-ttu-id=\"eace6-123\">Dernières conditions utilisées pour trier le tableau.</span><span class=\"sxs-lookup\"><span data-stu-id=\"eace6-123\">Represents the current conditions used to last sort the table.</span></span> <span data-ttu-id=\"eace6-124\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"eace6-124\">Read-only.</span></span>\n\n<span data-ttu-id=\"eace6-125\">\\[[Ensemble d’API\_: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"eace6-125\">\\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: fields
    fullName: fields
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly fields: Excel.SortField[];'
      return:
        type:
          - 'excel!Excel.TableSort#fields~0:complex'
  - uid: 'excel!Excel.TableSort#load:member(1)'
    summary: <span data-ttu-id="eace6-126">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="eace6-126">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="eace6-127">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="eace6-127">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.TableSortLoadOptions): Excel.TableSort;'
      return:
        type:
          - 'excel!Excel.TableSort:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="eace6-128">Fournit des options pour les propriétés de l’objet à charger.</span><span class="sxs-lookup"><span data-stu-id="eace6-128">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.Interfaces.TableSortLoadOptions:interface'
  - uid: 'excel!Excel.TableSort#load:member(2)'
    summary: <span data-ttu-id="eace6-129">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="eace6-129">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="eace6-130">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="eace6-130">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.TableSort;'
      return:
        type:
          - 'excel!Excel.TableSort:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="eace6-131">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="eace6-131">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.TableSort#load:member(3)'
    summary: <span data-ttu-id="eace6-132">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="eace6-132">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="eace6-133">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="eace6-133">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.TableSort;
      return:
        type:
          - 'excel!Excel.TableSort:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="eace6-134">`propertyNamesAndPaths.select`est une chaîne délimitée par des virgules qui spécifie les propriétés à `propertyNamesAndPaths.expand` charger et une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="eace6-134">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.TableSort#matchCase:member'
    summary: "<span data-ttu-id=\"eace6-135\">Indique si la casse a influé sur le dernier tri du tableau.</span><span class=\"sxs-lookup\"><span data-stu-id=\"eace6-135\">Represents whether the casing impacted the last sort of the table.</span></span> <span data-ttu-id=\"eace6-136\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"eace6-136\">Read-only.</span></span>\n\n<span data-ttu-id=\"eace6-137\">\\[[Ensemble d’API\_: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"eace6-137\">\\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: matchCase
    fullName: matchCase
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly matchCase: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.TableSort#method:member'
    summary: "<span data-ttu-id=\"eace6-138\">Dernière méthode de classement des caractères chinois utilisée pour trier le tableau.</span><span class=\"sxs-lookup\"><span data-stu-id=\"eace6-138\">Represents Chinese character ordering method last used to sort the table.</span></span> <span data-ttu-id=\"eace6-139\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"eace6-139\">Read-only.</span></span>\n\n<span data-ttu-id=\"eace6-140\">\\[[Ensemble d’API\_: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"eace6-140\">\\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: method
    fullName: method
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly method: Excel.SortMethod | "PinYin" | "StrokeCount";'
      return:
        type:
          - 'excel!Excel.TableSort#method~0:complex'
  - uid: 'excel!Excel.TableSort#reapply:member(1)'
    summary: "<span data-ttu-id=\"eace6-141\">Applique à nouveau les paramètres actuels de tri au tableau.</span><span class=\"sxs-lookup\"><span data-stu-id=\"eace6-141\">Reapplies the current sorting parameters to the table.</span></span>\n\n<span data-ttu-id=\"eace6-142\">\\[[Ensemble d’API\_: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"eace6-142\">\\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: reapply()
    fullName: reapply()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'reapply(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel!Excel.TableSort#toJSON:member(1)'
    summary: '<span data-ttu-id="eace6-143">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="eace6-143">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="eace6-144">.</span><span class="sxs-lookup"><span data-stu-id="eace6-144"></span></span> <span data-ttu-id="eace6-145">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="eace6-145"></span></span><!-- --><span data-ttu-id="eace6-146">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que l’objet Excel. TableSort d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.TableSortData`</span><span class="sxs-lookup"><span data-stu-id="eace6-146">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.TableSort object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableSortData`</span></span><!-- --><span data-ttu-id="eace6-147">) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l’objet d’origine.</span><span class="sxs-lookup"><span data-stu-id="eace6-147">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.TableSortData;'
      return:
        type:
          - 'excel!Excel.Interfaces.TableSortData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.TableSort#apply~0:complex'
    name: 'Excel.SortField[]'
    fullName: 'Excel.SortField[]'
    spec.typeScript:
      - uid: 'excel!Excel.SortField:interface'
        name: Excel.SortField
        fullName: Excel.SortField
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.SortMethod:enum'
    name: Excel.SortMethod
  - uid: 'excel!Excel.TableSort#apply~1:complex'
    name: 'Excel.SortField[]'
    fullName: 'Excel.SortField[]'
    spec.typeScript:
      - uid: 'excel!Excel.SortField:interface'
        name: Excel.SortField
        fullName: Excel.SortField
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.TableSort#fields~0:complex'
    name: 'Excel.SortField[]'
    fullName: 'Excel.SortField[]'
    spec.typeScript:
      - uid: 'excel!Excel.SortField:interface'
        name: Excel.SortField
        fullName: Excel.SortField
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.TableSort:class'
    name: Excel.TableSort
  - uid: 'excel!Excel.Interfaces.TableSortLoadOptions:interface'
    name: Excel.Interfaces.TableSortLoadOptions
  - uid: 'excel!Excel.TableSort#method~0:complex'
    name: Excel.SortMethod | "PinYin" | "StrokeCount"
    fullName: Excel.SortMethod | "PinYin" | "StrokeCount"
    spec.typeScript:
      - uid: 'excel!Excel.SortMethod:enum'
        name: Excel.SortMethod
        fullName: Excel.SortMethod
      - name: ' | "PinYin" | "StrokeCount"'
        fullName: ' | "PinYin" | "StrokeCount"'
  - uid: 'excel!Excel.Interfaces.TableSortData:interface'
    name: Excel.Interfaces.TableSortData