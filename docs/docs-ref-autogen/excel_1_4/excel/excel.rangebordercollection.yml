### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.RangeBorderCollection:class'
    summary: "<span data-ttu-id=\"e8548-101\">Représente les objets de bordure qui composent la bordure de la plage.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e8548-101\">Represents the border objects that make up the range border.</span></span>\n\n<span data-ttu-id=\"e8548-102\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"e8548-102\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: Excel.RangeBorderCollection
    fullName: Excel.RangeBorderCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.RangeBorderCollection#context:member'
      - 'excel!Excel.RangeBorderCollection#count:member'
      - 'excel!Excel.RangeBorderCollection#getItem:member(1)'
      - 'excel!Excel.RangeBorderCollection#getItem:member(2)'
      - 'excel!Excel.RangeBorderCollection#getItemAt:member(1)'
      - 'excel!Excel.RangeBorderCollection#items:member'
      - 'excel!Excel.RangeBorderCollection#load:member(1)'
      - 'excel!Excel.RangeBorderCollection#load:member(2)'
      - 'excel!Excel.RangeBorderCollection#load:member(3)'
      - 'excel!Excel.RangeBorderCollection#toJSON:member(1)'
  - uid: 'excel!Excel.RangeBorderCollection#context:member'
    summary: <span data-ttu-id="e8548-103">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="e8548-103">The request context associated with the object.</span></span> <span data-ttu-id="e8548-104">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="e8548-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.RangeBorderCollection#count:member'
    summary: "<span data-ttu-id=\"e8548-105\">Nombre d’objets de bordure de la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e8548-105\">Number of border objects in the collection.</span></span> <span data-ttu-id=\"e8548-106\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e8548-106\">Read-only.</span></span>\n\n<span data-ttu-id=\"e8548-107\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"e8548-107\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.RangeBorderCollection#getItem:member(1)'
    summary: "<span data-ttu-id=\"e8548-108\">Obtient un objet de bordure à l’aide de son nom.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e8548-108\">Gets a border object using its name.</span></span>\n\n<span data-ttu-id=\"e8548-109\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"e8548-109\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: getItem(index)
    fullName: getItem(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(index: Excel.BorderIndex): Excel.RangeBorder;'
      return:
        type:
          - 'excel!Excel.RangeBorder:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e8548-110">Exemples</span><span class="sxs-lookup"><span data-stu-id="e8548-110">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "A1:F8";
              var worksheet = ctx.workbook.worksheets.getItem(sheetName);
              var range = worksheet.getRange(rangeAddress);
              var borderName = 'EdgeTop';
              var border = range.format.borders.getItem(borderName);
              border.load('style');
              return ctx.sync().then(function() {
                      console.log(border.style);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: '<span data-ttu-id="e8548-111">Valeur d’indice de l’objet de bordure à récupérer.</span><span class="sxs-lookup"><span data-stu-id="e8548-111">Index value of the border object to be retrieved.</span></span> <span data-ttu-id="e8548-112">Pour plus d’informations, voir Excel. BorderIndex.</span><span class="sxs-lookup"><span data-stu-id="e8548-112">See Excel.BorderIndex for details.</span></span>'
          type:
            - 'excel!Excel.BorderIndex:enum'
  - uid: 'excel!Excel.RangeBorderCollection#getItem:member(2)'
    summary: "<span data-ttu-id=\"e8548-113\">Obtient un objet de bordure à l’aide de son nom.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e8548-113\">Gets a border object using its name.</span></span>\n\n<span data-ttu-id=\"e8548-114\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"e8548-114\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: getItem(indexString)
    fullName: getItem(indexString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(indexString: "EdgeTop" | "EdgeBottom" | "EdgeLeft" | "EdgeRight" | "InsideVertical" | "InsideHorizontal" | "DiagonalDown" | "DiagonalUp"): Excel.RangeBorder;'
      return:
        type:
          - 'excel!Excel.RangeBorder:class'
        description: ''
      parameters:
        - id: indexString
          description: '<span data-ttu-id="e8548-115">Valeur d’indice de l’objet de bordure à récupérer.</span><span class="sxs-lookup"><span data-stu-id="e8548-115">Index value of the border object to be retrieved.</span></span> <span data-ttu-id="e8548-116">Pour plus d’informations, voir Excel. BorderIndex.</span><span class="sxs-lookup"><span data-stu-id="e8548-116">See Excel.BorderIndex for details.</span></span>'
          type:
            - '"EdgeTop" | "EdgeBottom" | "EdgeLeft" | "EdgeRight" | "InsideVertical" | "InsideHorizontal" | "DiagonalDown" | "DiagonalUp"'
  - uid: 'excel!Excel.RangeBorderCollection#getItemAt:member(1)'
    summary: "<span data-ttu-id=\"e8548-117\">Obtient un objet de bordure à l’aide de son indice.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e8548-117\">Gets a border object using its index.</span></span>\n\n<span data-ttu-id=\"e8548-118\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"e8548-118\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.RangeBorder;'
      return:
        type:
          - 'excel!Excel.RangeBorder:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e8548-119">Exemples</span><span class="sxs-lookup"><span data-stu-id="e8548-119">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "A1:F8";
              var worksheet = ctx.workbook.worksheets.getItem(sheetName);
              var range = worksheet.getRange(rangeAddress);
              var border = range.format.borders.getItemAt(0);
              border.load('sideIndex');
              return ctx.sync().then(function() {
                  console.log(border.sideIndex);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: <span data-ttu-id="e8548-120">Valeur d’indice de l’objet à récupérer.</span><span class="sxs-lookup"><span data-stu-id="e8548-120">Index value of the object to be retrieved.</span></span> <span data-ttu-id="e8548-121">Avec indice zéro.</span><span class="sxs-lookup"><span data-stu-id="e8548-121">Zero-indexed.</span></span>
          type:
            - number
  - uid: 'excel!Excel.RangeBorderCollection#items:member'
    summary: <span data-ttu-id="e8548-122">Obtient l’élément enfant chargé dans cette collection de sites.</span><span class="sxs-lookup"><span data-stu-id="e8548-122">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.RangeBorder[];'
      return:
        type:
          - 'excel!Excel.RangeBorderCollection#items~0:complex'
  - uid: 'excel!Excel.RangeBorderCollection#load:member(1)'
    summary: "<span data-ttu-id=\"e8548-123\">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e8548-123\">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id=\"e8548-124\">Vous devez appeler «\_context.sync()\_» avant de lire les propriétés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e8548-124\">You must call \"context.sync()\" before reading the properties.</span></span>"
    remarks: "<span data-ttu-id=\"e8548-125\">En plus de cette signature, cette méthode possède les signatures suivantes\_:</span><span class=\"sxs-lookup\"><span data-stu-id=\"e8548-125\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"e8548-126\">`load(option?: string | string[]): Excel.RangeBorderCollection`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e8548-126\">`load(option?: string | string[]): Excel.RangeBorderCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>\n\n<span data-ttu-id=\"e8548-127\">`load(option?: { select?: string; expand?: string; }): Excel.RangeBorderCollection`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e8548-127\">`load(option?: { select?: string; expand?: string; }): Excel.RangeBorderCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"e8548-128\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeBorderCollection`-Uniquement disponible sur les types de collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e8548-128\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeBorderCollection` - Only available on collection types.</span></span> <span data-ttu-id=\"e8548-129\">Elle est similaire à la signature précédente.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e8548-129\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"e8548-130\">Option. Top indique le nombre maximal d’éléments de collection qui peuvent être inclus dans le résultat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e8548-130\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"e8548-131\">Option. Skip indique le nombre d’éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e8548-131\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"e8548-132\">Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d’éléments.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e8548-132\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>"
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.RangeBorderCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.RangeBorderCollection;'
      return:
        type:
          - 'excel!Excel.RangeBorderCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.RangeBorderCollection#load~0:complex'
  - uid: 'excel!Excel.RangeBorderCollection#load:member(2)'
    summary: <span data-ttu-id="e8548-133">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="e8548-133">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e8548-134">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="e8548-134">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.RangeBorderCollection;'
      return:
        type:
          - 'excel!Excel.RangeBorderCollection:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e8548-135">Exemples</span><span class="sxs-lookup"><span data-stu-id="e8548-135">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "A1:F8";
              var worksheet = ctx.workbook.worksheets.getItem(sheetName);
              var range = worksheet.getRange(rangeAddress);
              var borders = range.format.borders;
              border.load('items');
              return ctx.sync().then(function() {
                  console.log(borders.count);
                  for (var i = 0; i < borders.items.length; i++)
                  {
                      console.log(borders.items[i].sideIndex);
                  }
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // The example below adds grid border around the range.
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "A1:F8";
              var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);
              range.format.borders.getItem('InsideHorizontal').style = 'Continuous';
              range.format.borders.getItem('InsideVertical').style = 'Continuous';
              range.format.borders.getItem('EdgeBottom').style = 'Continuous';
              range.format.borders.getItem('EdgeLeft').style = 'Continuous';
              range.format.borders.getItem('EdgeRight').style = 'Continuous';
              range.format.borders.getItem('EdgeTop').style = 'Continuous';
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="e8548-136">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="e8548-136">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.RangeBorderCollection#load:member(3)'
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.RangeBorderCollection;'
      return:
        type:
          - 'excel!Excel.RangeBorderCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.RangeBorderCollection#toJSON:member(1)'
    summary: "<span data-ttu-id=\"e8548-137\">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class=\"sxs-lookup\"><span data-stu-id=\"e8548-137\">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id=\"e8548-138\">.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e8548-138\"></span></span> <span data-ttu-id=\"e8548-139\">(`JSON.stringify`</span><span class=\"sxs-lookup\"><span data-stu-id=\"e8548-139\"></span></span><!-- --><span data-ttu-id=\"e8548-140\">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que `Excel.RangeBorderCollection` l’objet d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.RangeBorderCollectionData`</span><span class=\"sxs-lookup\"><span data-stu-id=\"e8548-140\">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.RangeBorderCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.RangeBorderCollectionData`</span></span><!-- --><span data-ttu-id=\"e8548-141\">) qui contient un tableau «\_éléments\_» avec des copies superficielles de toutes les propriétés chargées des éléments de la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e8548-141\">) that contains an \"items\" array with shallow copies of any loaded properties from the collection's items.</span></span>"
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.RangeBorderCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.RangeBorderCollectionData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.RangeBorder:class'
    name: Excel.RangeBorder
  - uid: 'excel!Excel.BorderIndex:enum'
    name: Excel.BorderIndex
  - uid: 'excel!Excel.RangeBorderCollection#items~0:complex'
    name: 'Excel.RangeBorder[]'
    fullName: 'Excel.RangeBorder[]'
    spec.typeScript:
      - uid: 'excel!Excel.RangeBorder:class'
        name: Excel.RangeBorder
        fullName: Excel.RangeBorder
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.RangeBorderCollection:class'
    name: Excel.RangeBorderCollection
  - uid: 'excel!Excel.RangeBorderCollection#load~0:complex'
    name: Excel.Interfaces.RangeBorderCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.RangeBorderCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.RangeBorderCollectionLoadOptions:interface'
        name: Excel.Interfaces.RangeBorderCollectionLoadOptions
        fullName: Excel.Interfaces.RangeBorderCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'excel!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.Interfaces.RangeBorderCollectionData:interface'
    name: Excel.Interfaces.RangeBorderCollectionData