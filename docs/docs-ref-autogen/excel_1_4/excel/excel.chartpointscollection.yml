### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ChartPointsCollection:class'
    summary: "<span data-ttu-id=\"d6e0d-101\">Collection de tous les points d’une série sur un graphique.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6e0d-101\">A collection of all the chart points within a series inside a chart.</span></span>\n\n<span data-ttu-id=\"d6e0d-102\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6e0d-102\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: Excel.ChartPointsCollection
    fullName: Excel.ChartPointsCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.ChartPointsCollection#context:member'
      - 'excel!Excel.ChartPointsCollection#count:member'
      - 'excel!Excel.ChartPointsCollection#getCount:member(1)'
      - 'excel!Excel.ChartPointsCollection#getItemAt:member(1)'
      - 'excel!Excel.ChartPointsCollection#items:member'
      - 'excel!Excel.ChartPointsCollection#load:member(1)'
      - 'excel!Excel.ChartPointsCollection#load:member(2)'
      - 'excel!Excel.ChartPointsCollection#load:member(3)'
      - 'excel!Excel.ChartPointsCollection#toJSON:member(1)'
  - uid: 'excel!Excel.ChartPointsCollection#context:member'
    summary: <span data-ttu-id="d6e0d-103">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="d6e0d-103">The request context associated with the object.</span></span> <span data-ttu-id="d6e0d-104">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="d6e0d-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.ChartPointsCollection#count:member'
    summary: "<span data-ttu-id=\"d6e0d-105\">Renvoie le nombre de points de graphique dans la série.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6e0d-105\">Returns the number of chart points in the series.</span></span> <span data-ttu-id=\"d6e0d-106\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6e0d-106\">Read-only.</span></span>\n\n<span data-ttu-id=\"d6e0d-107\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6e0d-107\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.ChartPointsCollection#getCount:member(1)'
    summary: "<span data-ttu-id=\"d6e0d-108\">Renvoie le nombre de points de graphique dans la série.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6e0d-108\">Returns the number of chart points in the series.</span></span>\n\n<span data-ttu-id=\"d6e0d-109\">\\[[Ensemble d’API\_: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6e0d-109\">\\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.ChartPointsCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.ChartPointsCollection#getItemAt:member(1)'
    summary: "<span data-ttu-id=\"d6e0d-110\">Extrait un point en fonction de sa position dans la série.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6e0d-110\">Retrieve a point based on its position within the series.</span></span>\n\n<span data-ttu-id=\"d6e0d-111\">\\[[Ensemble d’API\_: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6e0d-111\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.ChartPoint;'
      return:
        type:
          - 'excel!Excel.ChartPoint:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="d6e0d-112">Exemples</span><span class="sxs-lookup"><span data-stu-id="d6e0d-112">Examples</span></span>

          ```javascript
          // Set the border color for the first points in the points collection
          Excel.run(function (ctx) { 
              var points = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1").series.getItemAt(0).points;
              points.getItemAt(0).format.fill.setSolidColor("8FBC8F");
              return ctx.sync().then(function() {
                  console.log("Point Border Color Changed");
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: <span data-ttu-id="d6e0d-113">Valeur d’indice de l’objet à récupérer.</span><span class="sxs-lookup"><span data-stu-id="d6e0d-113">Index value of the object to be retrieved.</span></span> <span data-ttu-id="d6e0d-114">Avec indice zéro.</span><span class="sxs-lookup"><span data-stu-id="d6e0d-114">Zero-indexed.</span></span>
          type:
            - number
  - uid: 'excel!Excel.ChartPointsCollection#items:member'
    summary: <span data-ttu-id="d6e0d-115">Obtient l’élément enfant chargé dans cette collection de sites.</span><span class="sxs-lookup"><span data-stu-id="d6e0d-115">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.ChartPoint[];'
      return:
        type:
          - 'excel!Excel.ChartPointsCollection#items~0:complex'
  - uid: 'excel!Excel.ChartPointsCollection#load:member(1)'
    summary: "<span data-ttu-id=\"d6e0d-116\">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6e0d-116\">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id=\"d6e0d-117\">Vous devez appeler «\_context.sync()\_» avant de lire les propriétés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6e0d-117\">You must call \"context.sync()\" before reading the properties.</span></span>"
    remarks: "<span data-ttu-id=\"d6e0d-118\">En plus de cette signature, cette méthode possède les signatures suivantes\_:</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6e0d-118\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"d6e0d-119\">`load(option?: string | string[]): Excel.ChartPointsCollection`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6e0d-119\">`load(option?: string | string[]): Excel.ChartPointsCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>\n\n<span data-ttu-id=\"d6e0d-120\">`load(option?: { select?: string; expand?: string; }): Excel.ChartPointsCollection`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6e0d-120\">`load(option?: { select?: string; expand?: string; }): Excel.ChartPointsCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"d6e0d-121\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartPointsCollection`-Uniquement disponible sur les types de collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6e0d-121\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartPointsCollection` - Only available on collection types.</span></span> <span data-ttu-id=\"d6e0d-122\">Elle est similaire à la signature précédente.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6e0d-122\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"d6e0d-123\">Option. Top indique le nombre maximal d’éléments de collection qui peuvent être inclus dans le résultat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6e0d-123\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"d6e0d-124\">Option. Skip indique le nombre d’éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6e0d-124\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"d6e0d-125\">Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d’éléments.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6e0d-125\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>"
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ChartPointsCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.ChartPointsCollection;'
      return:
        type:
          - 'excel!Excel.ChartPointsCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.ChartPointsCollection#load~0:complex'
  - uid: 'excel!Excel.ChartPointsCollection#load:member(2)'
    summary: <span data-ttu-id="d6e0d-126">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="d6e0d-126">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d6e0d-127">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="d6e0d-127">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ChartPointsCollection;'
      return:
        type:
          - 'excel!Excel.ChartPointsCollection:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="d6e0d-128">Exemples</span><span class="sxs-lookup"><span data-stu-id="d6e0d-128">Examples</span></span>

          ```javascript
          // Get the names of points in the points collection
          Excel.run(function (ctx) { 
              var pointsCollection = 
                  ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1").series.getItemAt(0).points;
              pointsCollection.load('items');
              return ctx.sync().then(function() {
                  console.log("Points Collection loaded");
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Get the number of points
          Excel.run(function (ctx) { 
              var pointsCollection = 
                  ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1").series.getItemAt(0).points;
              pointsCollection.load('count');
              return ctx.sync().then(function() {
                  console.log("points: Count= " + pointsCollection.count);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="d6e0d-129">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="d6e0d-129">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.ChartPointsCollection#load:member(3)'
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.ChartPointsCollection;'
      return:
        type:
          - 'excel!Excel.ChartPointsCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.ChartPointsCollection#toJSON:member(1)'
    summary: "<span data-ttu-id=\"d6e0d-130\">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6e0d-130\">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id=\"d6e0d-131\">.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6e0d-131\"></span></span> <span data-ttu-id=\"d6e0d-132\">(`JSON.stringify`</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6e0d-132\"></span></span><!-- --><span data-ttu-id=\"d6e0d-133\">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que `Excel.ChartPointsCollection` l’objet d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`Excel.Interfaces.ChartPointsCollectionData`</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6e0d-133\">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.ChartPointsCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ChartPointsCollectionData`</span></span><!-- --><span data-ttu-id=\"d6e0d-134\">) qui contient un tableau «\_éléments\_» avec des copies superficielles de toutes les propriétés chargées des éléments de la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6e0d-134\">) that contains an \"items\" array with shallow copies of any loaded properties from the collection's items.</span></span>"
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ChartPointsCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.ChartPointsCollectionData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.ChartPointsCollection#getCount~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel!Excel.ChartPoint:class'
    name: Excel.ChartPoint
  - uid: 'excel!Excel.ChartPointsCollection#items~0:complex'
    name: 'Excel.ChartPoint[]'
    fullName: 'Excel.ChartPoint[]'
    spec.typeScript:
      - uid: 'excel!Excel.ChartPoint:class'
        name: Excel.ChartPoint
        fullName: Excel.ChartPoint
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.ChartPointsCollection:class'
    name: Excel.ChartPointsCollection
  - uid: 'excel!Excel.ChartPointsCollection#load~0:complex'
    name: Excel.Interfaces.ChartPointsCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.ChartPointsCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.ChartPointsCollectionLoadOptions:interface'
        name: Excel.Interfaces.ChartPointsCollectionLoadOptions
        fullName: Excel.Interfaces.ChartPointsCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'excel!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.Interfaces.ChartPointsCollectionData:interface'
    name: Excel.Interfaces.ChartPointsCollectionData