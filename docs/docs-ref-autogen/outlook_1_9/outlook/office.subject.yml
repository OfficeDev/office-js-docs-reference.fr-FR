### YamlMime:UniversalReference
items:
  - uid: 'outlook!Office.Subject:interface'
    summary: "Fournit des méthodes pour obtenir et définir l’objet d’un rendez-vous ou d’un message dans un complément Outlook.\n\n\\[[Ensemble d’API\_: boîte aux lettres 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\\]"
    remarks: |-
      ** <!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)**:`ReadItem`

      ** <!-- --> [Mode Outlook applicable](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)**: composition
    name: Office.Subject
    fullName: Office.Subject
    langs:
      - typeScript
    type: interface
    package: outlook!
    children:
      - 'outlook!Office.Subject#getAsync:member(1)'
      - 'outlook!Office.Subject#getAsync:member(2)'
      - 'outlook!Office.Subject#setAsync:member(1)'
      - 'outlook!Office.Subject#setAsync:member(2)'
  - uid: 'outlook!Office.Subject#getAsync:member(1)'
    summary: "Obtient l’objet d’un rendez-vous ou d’un message.\n\nLa méthode `getAsync` lance un appel asynchrone vers le serveur Exchange pour obtenir l’objet d’un rendez-vous ou d’un message.\n\n\\[[Ensemble d’API\_: boîte aux lettres 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\\]"
    remarks: |-
      ** <!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)**:`ReadItem`

      ** <!-- --> [Mode Outlook applicable](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)**: composition
    name: 'getAsync(options, callback)'
    fullName: 'getAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAsync(options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: 'Littéral d’objet contenant une ou plusieurs des propriétés suivantes. `asyncContext`<!-- -->: Les développeurs peuvent fournir n’importe quel objet auquel ils souhaitent accéder dans la méthode de rappel.'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: 'Une fois la méthode exécutée, la fonction transmise au `callback` paramètre est appelée avec un seul paramètre de type `Office.AsyncResult`<!-- -->. La `value` propriété du résultat est l’objet de l’élément.'
          type:
            - 'outlook!Office.Subject#getAsync~0:complex'
  - uid: 'outlook!Office.Subject#getAsync:member(2)'
    summary: "Obtient l’objet d’un rendez-vous ou d’un message.\n\nLa méthode getAsync démarre un appel asynchrone vers le serveur Exchange pour obtenir l’objet d’un rendez-vous ou message.\n\n\\[[Ensemble d’API\_: boîte aux lettres 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\\]"
    remarks: |-
      ** <!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)**:`ReadItem`

      ** <!-- --> [Mode Outlook applicable](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)**: composition

      #### <a name="examples"></a>Exemples

      ```javascript
      Office.context.mailbox.item.subject.getAsync(callback);

      function callback(asyncResult) {
          var subject = asyncResult.value;
      }
      ```
    name: getAsync(callback)
    fullName: getAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAsync(callback: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: 'Une fois la méthode exécutée, la fonction transmise au `callback` paramètre est appelée avec un seul paramètre de type `Office.AsyncResult`<!-- -->. La `value` propriété du résultat est l’objet de l’élément.'
          type:
            - 'outlook!Office.Subject#getAsync~1:complex'
  - uid: 'outlook!Office.Subject#setAsync:member(1)'
    summary: "Définit l’objet d’un rendez-vous ou d’un message.\n\nLa méthode `setAsync` lance un appel asynchrone vers le serveur Exchange pour définir l’objet d’un rendez-vous ou d’un message. La définition de l’objet remplace l’objet actuel, mais laisse tous les préfixes, tels que « Tr: » ou « Re: ».\n\n\\[[Ensemble d’API\_: boîte aux lettres 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\\]"
    remarks: |-
      ** <!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)**:`ReadItem`

      ** <!-- --> [Mode Outlook applicable](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)**: composition

      **Erreurs**:

      - `DataExceedsMaximumSize`<!-- -->: Le paramètre subject est supérieur à 255 caractères.
    name: 'setAsync(subject, options, callback)'
    fullName: 'setAsync(subject, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setAsync(subject: string, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: subject
          description: "Objet du rendez-vous ou du message. La chaîne est limitée à 255\_caractères."
          type:
            - string
        - id: options
          description: 'Facultatif. Littéral d’objet contenant une ou plusieurs des propriétés suivantes. `asyncContext`<!-- -->: Les développeurs peuvent fournir n’importe quel objet auquel ils souhaitent accéder dans la méthode de rappel.'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: 'Facultatif. Une fois la méthode exécutée, la fonction transmise au `callback` paramètre est appelée avec un seul paramètre de type `Office.AsyncResult`<!-- -->. Si la définition de l’objet échoue, la propriété `asyncResult.error` contient un code d’erreur.'
          type:
            - 'outlook!Office.Subject#setAsync~0:complex'
  - uid: 'outlook!Office.Subject#setAsync:member(2)'
    summary: "Définit l’objet d’un rendez-vous ou d’un message.\n\nLa méthode `setAsync` lance un appel asynchrone vers le serveur Exchange pour définir l’objet d’un rendez-vous ou d’un message. La définition de l’objet remplace l’objet actuel, mais laisse tous les préfixes, tels que « Tr: » ou « Re: ».\n\n\\[[Ensemble d’API\_: boîte aux lettres 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\\]"
    remarks: |-
      ** <!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)**:`ReadItem`

      ** <!-- --> [Mode Outlook applicable](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)**: composition

      **Erreurs**:

      - `DataExceedsMaximumSize`<!-- -->: Le paramètre subject est supérieur à 255 caractères.

      #### <a name="examples"></a>Exemples

      ```javascript
      Office.context.mailbox.item.subject.setAsync("New subject!", function (asyncResult) {
          if (asyncResult.status === "failed") {
              console.log("Action failed with error: " + asyncResult.error.message);
          }
      });
      ```
    name: 'setAsync(data, callback)'
    fullName: 'setAsync(data, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setAsync(data: string, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: data
          description: ''
          type:
            - string
        - id: callback
          description: 'Facultatif. Une fois la méthode exécutée, la fonction transmise au `callback` paramètre est appelée avec un seul paramètre de type `Office.AsyncResult`<!-- -->. Si la définition de l’objet échoue, la propriété `asyncResult.error` contient un code d’erreur.'
          type:
            - 'outlook!Office.Subject#setAsync~1:complex'
references:
  - uid: 'office!Office.AsyncContextOptions:interface'
    name: Office.AsyncContextOptions
  - uid: 'outlook!Office.Subject#getAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<string>) => void'
    fullName: '(asyncResult: Office.AsyncResult<string>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'office!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <string>) => void
        fullName: <string>) => void
  - uid: 'outlook!Office.Subject#getAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<string>) => void'
    fullName: '(asyncResult: Office.AsyncResult<string>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'office!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <string>) => void
        fullName: <string>) => void
  - uid: 'outlook!Office.Subject#setAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'office!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.Subject#setAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'office!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void