### YamlMime:UniversalReference
items:
  - uid: 'outlook!Office.Recurrence:interface'
    summary: "L' `Recurrence` objet fournit des méthodes pour obtenir et définir la périodicité des rendez-vous, mais uniquement la périodicité des demandes de réunion. Il aura un dictionnaire avec les clés suivantes\_: `seriesTime`<!-- -->, `recurrenceType`<!-- -->, `recurrenceProperties`<!-- -->et `recurrenceTimeZone` (facultatif).\n\n\\[[Ensemble d’API\_: boîte aux lettres 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\\]"
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)** :`ReadItem`

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)** : composition ou lecture

      **États**

      <table> <tr> <th>État</th> <th>Modification?</th> <th>Rendre?</th> </tr> <tr> <td>Organisateur de rendez-vous-série de composition</td> <td>Oui (setAsync)</td> <td>Oui (getAsync)</td> </tr> <tr> <td>Organisateur de rendez-vous-instance de composition</td> <td>Non (setAsync renvoie une erreur)</td> <td>Oui (getAsync)</td> </tr> <tr> <td>Participant au rendez-vous-série de lectures</td> <td>Non (setAsync non disponible)</td> <td>Oui (élément. périodicité)</td> </tr> <tr> <td>Participant au rendez-vous-instance de lecture</td> <td>Non (setAsync non disponible)</td> <td>Oui (élément. périodicité)</td> </tr> <tr> <td>Demande de réunion-lire la série</td> <td>Non (setAsync non disponible)</td> <td>Oui (élément. périodicité)</td> </tr> <tr> <td>Demande de réunion-instance de lecture</td> <td>Non (setAsync non disponible)</td> <td>Oui (élément. périodicité)</td> </tr> </table>
    name: Office.Recurrence
    fullName: Office.Recurrence
    langs:
      - typeScript
    type: interface
    package: outlook!
    children:
      - 'outlook!Office.Recurrence#getAsync:member(1)'
      - 'outlook!Office.Recurrence#recurrenceProperties:member'
      - 'outlook!Office.Recurrence#recurrenceTimeZone:member'
      - 'outlook!Office.Recurrence#recurrenceType:member'
      - 'outlook!Office.Recurrence#seriesTime:member'
      - 'outlook!Office.Recurrence#setAsync:member(1)'
  - uid: 'outlook!Office.Recurrence#getAsync:member(1)'
    summary: "Renvoie l’objet de périodicité actuelle d’une série de rendez-vous.\n\nCette méthode renvoie l' `Recurrence` objet entier pour la série de rendez-vous.\n\n\\[[Ensemble d’API\_: boîte aux lettres 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\\]"
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)** :`ReadItem`

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)** : composition ou lecture

      #### <a name="examples"></a>Exemples

      ```javascript
      // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/outlook/50-recurrence/get-set-recurrence-appointment-organizer.yaml
      Office.context.mailbox.item.recurrence.getAsync(function(asyncResult) {
        if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
          var recurrence = asyncResult.value;
          if (recurrence === null) {
            console.log("This is a single appointment.");
          } else {
            console.log(`Recurrence pattern: ${JSON.stringify(recurrence)}`);
          }
        } else {
          console.error(asyncResult.error);
        }
      });
      ```
    name: 'getAsync(options, callback)'
    fullName: 'getAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAsync(options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<Recurrence>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: 'Facultatif. Littéral d’objet contenant une ou plusieurs des propriétés suivantes. `asyncContext`<!-- -->: Les développeurs peuvent fournir n’importe quel objet auquel ils souhaitent accéder dans la méthode de rappel.'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: 'Facultatif. Une fois la méthode exécutée, la fonction transmise au `callback` paramètre est appelée avec un seul paramètre, `asyncResult`<!-- -->, qui est un `Office.AsyncResult` objet. La `value` propriété du résultat est un `Recurrence` objet.'
          type:
            - 'outlook!Office.Recurrence#getAsync~0:complex'
  - uid: 'outlook!Office.Recurrence#recurrenceProperties:member'
    summary: "Obtient ou définit les propriétés de la série de rendez-vous périodiques.\n\n\\[[Ensemble d’API\_: boîte aux lettres 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\\]"
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)** :`ReadItem`

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)** : composition ou lecture
    name: recurrenceProperties
    fullName: recurrenceProperties
    langs:
      - typeScript
    type: property
    syntax:
      content: 'recurrenceProperties?: RecurrenceProperties;'
      return:
        type:
          - 'outlook!Office.RecurrenceProperties:interface'
  - uid: 'outlook!Office.Recurrence#recurrenceTimeZone:member'
    summary: "Obtient ou définit les propriétés de la série de rendez-vous périodiques.\n\n\\[[Ensemble d’API\_: boîte aux lettres 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\\]"
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)** :`ReadItem`

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)** : composition ou lecture
    name: recurrenceTimeZone
    fullName: recurrenceTimeZone
    langs:
      - typeScript
    type: property
    syntax:
      content: 'recurrenceTimeZone?: RecurrenceTimeZone;'
      return:
        type:
          - 'outlook!Office.RecurrenceTimeZone:interface'
  - uid: 'outlook!Office.Recurrence#recurrenceType:member'
    summary: "Obtient ou définit le type de série de rendez-vous périodiques.\n\n\\[[Ensemble d’API\_: boîte aux lettres 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\\]"
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)** :`ReadItem`

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)** : composition ou lecture
    name: recurrenceType
    fullName: recurrenceType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'recurrenceType: MailboxEnums.RecurrenceType | string;'
      return:
        type:
          - 'outlook!Office.Recurrence#recurrenceType~0:complex'
  - uid: 'outlook!Office.Recurrence#seriesTime:member'
    summary: "L’objet [SeriesTime](xref:outlook!Office.SeriesTime:interface) vous permet de gérer les dates de début et de fin de la série de rendez-vous périodiques, ainsi que les heures de début et de fin habituelles des instances. **Cet objet n’est pas en heure UTC.** Au lieu de cela, il est défini dans le fuseau horaire spécifié par la `recurrenceTimeZone` valeur ou par défaut sur le fuseau horaire de l’élément.\n\n\\[[Ensemble d’API\_: boîte aux lettres 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\\]"
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)** :`ReadItem`

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)** : composition ou lecture
    name: seriesTime
    fullName: seriesTime
    langs:
      - typeScript
    type: property
    syntax:
      content: 'seriesTime: SeriesTime;'
      return:
        type:
          - 'outlook!Office.SeriesTime:interface'
  - uid: 'outlook!Office.Recurrence#setAsync:member(1)'
    summary: "Définit la périodicité d’une série de rendez-vous.\n\n**Remarque** : ne `setAsync` doit être disponible que pour les éléments de série et non pour les éléments d’instance.\n\n\\[[Ensemble d’API\_: boîte aux lettres 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\\]"
    remarks: |-
      **<!-- --> [Niveau d’autorisation minimal](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)** :`ReadWriteItem`

      **<!-- --> [Mode Outlook applicable](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)** : composition

      **Erreurs** :

      - `InvalidEndTime`<!-- -->: L’heure de fin du rendez-vous est antérieure à l’heure de début.

      #### <a name="examples"></a>Exemples

      ```javascript
      // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/outlook/50-recurrence/get-set-recurrence-appointment-organizer.yaml
      // Important: Can only set the recurrence pattern of an appointment series.

      var currentDate = new Date();
      let seriesTimeObject : Office.SeriesTime;
      // Set series start date to tomorrow.
      seriesTimeObject.setStartDate(
        currentDate.getFullYear(),
        currentDate.getMonth(),
        currentDate.getDay() + 1
      );
      // Set series end date to 1 month from now.
      seriesTimeObject.setEndDate(
        currentDate.getFullYear(),
        currentDate.getMonth() + 1,
        currentDate.getDay()
      );
      // Set start time to 1:30 PM.
      seriesTimeObject.setStartTime(13, 30);
      // Set duration to 30 minutes.
      seriesTimeObject.setDuration(30);

      let pattern : Office.Recurrence = {
        seriesTime: seriesTimeObject,
        recurrenceType: "weekly",
        recurrenceProperties: { interval: 1, days: ["tue", "thu"], firstDayOfWeek: "sun" },
        recurrenceTimeZone: { name: "Pacific Standard Time" }
      };

      Office.context.mailbox.item.recurrence.setAsync(pattern, (asyncResult) => {
        if (asyncResult.status !== Office.AsyncResultStatus.Succeeded) {
          console.error(`Failed to set recurrence. Error: ${asyncResult.error.message}`);
          return;
        }
        console.log(`Succeeded in setting recurrence pattern ${JSON.stringify(pattern)}`);
      });
      ```
    name: 'setAsync(recurrencePattern, options, callback)'
    fullName: 'setAsync(recurrencePattern, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setAsync(recurrencePattern: Recurrence, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: recurrencePattern
          description: Objet recurrence.
          type:
            - 'outlook!Office.Recurrence:interface'
        - id: options
          description: 'Facultatif. Littéral d’objet contenant une ou plusieurs des propriétés suivantes. `asyncContext`<!-- -->: Les développeurs peuvent fournir n’importe quel objet auquel ils souhaitent accéder dans la méthode de rappel.'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: 'Facultatif. Une fois la méthode exécutée, la fonction transmise au `callback` paramètre est appelée avec un seul paramètre, `asyncResult`<!-- -->, qui est un `Office.AsyncResult` objet.'
          type:
            - 'outlook!Office.Recurrence#setAsync~0:complex'
references:
  - uid: 'office!Office.AsyncContextOptions:interface'
    name: Office.AsyncContextOptions
  - uid: 'outlook!Office.Recurrence#getAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<Recurrence>) => void'
    fullName: '(asyncResult: Office.AsyncResult<Office.Recurrence>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'office!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'outlook!Office.Recurrence:interface'
        name: Recurrence
        fullName: Office.Recurrence
      - name: '>) => void'
        fullName: '>) => void'
  - uid: 'outlook!Office.RecurrenceProperties:interface'
    name: RecurrenceProperties
  - uid: 'outlook!Office.RecurrenceTimeZone:interface'
    name: RecurrenceTimeZone
  - uid: 'outlook!Office.Recurrence#recurrenceType~0:complex'
    name: MailboxEnums.RecurrenceType | string
    fullName: Office.MailboxEnums.RecurrenceType | string
    spec.typeScript:
      - uid: 'outlook!Office.MailboxEnums.RecurrenceType:enum'
        name: MailboxEnums.RecurrenceType
        fullName: Office.MailboxEnums.RecurrenceType
      - name: ' | string'
        fullName: ' | string'
  - uid: 'outlook!Office.SeriesTime:interface'
    name: SeriesTime
  - uid: 'outlook!Office.Recurrence:interface'
    name: Recurrence
  - uid: 'outlook!Office.Recurrence#setAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'office!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void