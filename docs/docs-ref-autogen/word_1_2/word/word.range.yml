### YamlMime:UniversalReference
items:
  - uid: 'word!Word.Range:class'
    summary: "<span data-ttu-id=\"d5316-101\">Représente une zone contiguë dans un document.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-101\">Represents a contiguous area in a document.</span></span>\n\n<span data-ttu-id=\"d5316-102\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-102\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: Word.Range
    fullName: Word.Range
    langs:
      - typeScript
    type: class
    extends:
      - 'word!OfficeExtension.ClientObject:class'
    package: word!
    children:
      - 'word!Word.Range#clear:member(1)'
      - 'word!Word.Range#contentControls:member'
      - 'word!Word.Range#context:member'
      - 'word!Word.Range#delete:member(1)'
      - 'word!Word.Range#font:member'
      - 'word!Word.Range#getHtml:member(1)'
      - 'word!Word.Range#getOoxml:member(1)'
      - 'word!Word.Range#inlinePictures:member'
      - 'word!Word.Range#insertBreak:member(1)'
      - 'word!Word.Range#insertBreak:member(2)'
      - 'word!Word.Range#insertContentControl:member(1)'
      - 'word!Word.Range#insertFileFromBase64:member(1)'
      - 'word!Word.Range#insertFileFromBase64:member(2)'
      - 'word!Word.Range#insertHtml:member(1)'
      - 'word!Word.Range#insertHtml:member(2)'
      - 'word!Word.Range#insertInlinePictureFromBase64:member(1)'
      - 'word!Word.Range#insertInlinePictureFromBase64:member(2)'
      - 'word!Word.Range#insertOoxml:member(1)'
      - 'word!Word.Range#insertOoxml:member(2)'
      - 'word!Word.Range#insertParagraph:member(1)'
      - 'word!Word.Range#insertParagraph:member(2)'
      - 'word!Word.Range#insertText:member(1)'
      - 'word!Word.Range#insertText:member(2)'
      - 'word!Word.Range#load:member(1)'
      - 'word!Word.Range#load:member(2)'
      - 'word!Word.Range#load:member(3)'
      - 'word!Word.Range#paragraphs:member'
      - 'word!Word.Range#parentContentControl:member'
      - 'word!Word.Range#search:member(1)'
      - 'word!Word.Range#select:member(1)'
      - 'word!Word.Range#select:member(2)'
      - 'word!Word.Range#set:member(1)'
      - 'word!Word.Range#set:member(2)'
      - 'word!Word.Range#style:member'
      - 'word!Word.Range#text:member'
      - 'word!Word.Range#toJSON:member(1)'
      - 'word!Word.Range#track:member(1)'
      - 'word!Word.Range#untrack:member(1)'
  - uid: 'word!Word.Range#clear:member(1)'
    summary: "<span data-ttu-id=\"d5316-103\">Efface le contenu de l’objet de plage.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-103\">Clears the contents of the range object.</span></span> <span data-ttu-id=\"d5316-104\">L’utilisateur peut effectuer l’opération d’annulation sur le contenu effacé.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-104\">The user can perform the undo operation on the cleared content.</span></span>\n\n<span data-ttu-id=\"d5316-105\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-105\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="d5316-106">Exemples</span><span class="sxs-lookup"><span data-stu-id="d5316-106">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to clear the contents of the proxy range object.
              range.clear();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Cleared the selection (range object)');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Range#contentControls:member'
    summary: "<span data-ttu-id=\"d5316-107\">Obtient la collection d’objets de contrôle de contenu dans la plage.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-107\">Gets the collection of content control objects in the range.</span></span> <span data-ttu-id=\"d5316-108\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-108\">Read-only.</span></span>\n\n<span data-ttu-id=\"d5316-109\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-109\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: contentControls
    fullName: contentControls
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly contentControls: Word.ContentControlCollection;'
      return:
        type:
          - 'word!Word.ContentControlCollection:class'
  - uid: 'word!Word.Range#context:member'
    summary: <span data-ttu-id="d5316-110">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="d5316-110">The request context associated with the object.</span></span> <span data-ttu-id="d5316-111">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="d5316-111">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'word!Word.RequestContext:class'
  - uid: 'word!Word.Range#delete:member(1)'
    summary: "<span data-ttu-id=\"d5316-112\">Supprime la plage et son contenu du document.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-112\">Deletes the range and its content from the document.</span></span>\n\n<span data-ttu-id=\"d5316-113\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-113\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="d5316-114">Exemples</span><span class="sxs-lookup"><span data-stu-id="d5316-114">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to delete the range object.
              range.delete();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Deleted the selection (range object)');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Range#font:member'
    summary: "<span data-ttu-id=\"d5316-115\">Obtient le format de texte de la plage.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-115\">Gets the text format of the range.</span></span> <span data-ttu-id=\"d5316-116\">Utilisez cette propriété pour obtenir et définir le nom de la police, la taille, la couleur et d’autres propriétés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-116\">Use this to get and set font name, size, color, and other properties.</span></span> <span data-ttu-id=\"d5316-117\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-117\">Read-only.</span></span>\n\n<span data-ttu-id=\"d5316-118\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-118\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: font
    fullName: font
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly font: Word.Font;'
      return:
        type:
          - 'word!Word.Font:class'
  - uid: 'word!Word.Range#getHtml:member(1)'
    summary: "<span data-ttu-id=\"d5316-119\">Obtient une représentation HTML de l’objet de plage.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-119\">Gets an HTML representation of the range object.</span></span> <span data-ttu-id=\"d5316-120\">Lorsqu’elle est affichée dans une page Web ou dans la visionneuse HTML, la mise en forme est une correspondance étroite, mais pas exacte, de la mise en forme du document.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-120\">When rendered in a web page or HTML viewer, the formatting will be a close, but not exact, match for of the formatting of the document.</span></span> <span data-ttu-id=\"d5316-121\">Cette méthode ne renvoie pas exactement le même code HTML pour le même document sur différentes plateformes (Windows, Mac, Word pour le Web, etc.).</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-121\">This method does not return the exact same HTML for the same document on different platforms (Windows, Mac, Word for the web, etc.).</span></span> <span data-ttu-id=\"d5316-122\">Si vous avez besoin d’une fidélité exacte ou d’une cohérence `Range.getOoxml()` entre les plateformes, utilisez et convertissez le code XML renvoyé en html.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-122\">If you need exact fidelity, or consistency across platforms, use `Range.getOoxml()` and convert the returned XML to HTML.</span></span>\n\n<span data-ttu-id=\"d5316-123\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-123\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: getHtml()
    fullName: getHtml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getHtml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - 'word!Word.Range#getHtml~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="d5316-124">Exemples</span><span class="sxs-lookup"><span data-stu-id="d5316-124">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to get the HTML of the current selection.
              var html = range.getHtml();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('The HTML read from the document was: ' + html.value);
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Range#getOoxml:member(1)'
    summary: "<span data-ttu-id=\"d5316-125\">Obtient la représentation OOXML de l’objet de plage.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-125\">Gets the OOXML representation of the range object.</span></span>\n\n<span data-ttu-id=\"d5316-126\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-126\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: getOoxml()
    fullName: getOoxml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getOoxml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - 'word!Word.Range#getOoxml~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="d5316-127">Exemples</span><span class="sxs-lookup"><span data-stu-id="d5316-127">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to get the OOXML of the current selection.
              var ooxml = range.getOoxml();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('The OOXML read from the document was:  ' + ooxml.value);
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Range#inlinePictures:member'
    summary: "<span data-ttu-id=\"d5316-128\">Obtient la collection d’objets image insérée de la plage.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-128\">Gets the collection of inline picture objects in the range.</span></span> <span data-ttu-id=\"d5316-129\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-129\">Read-only.</span></span>\n\n<span data-ttu-id=\"d5316-130\">\\[[Ensemble d’API\_: WordApi 1,2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-130\">\\[ [API set: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: inlinePictures
    fullName: inlinePictures
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly inlinePictures: Word.InlinePictureCollection;'
      return:
        type:
          - 'word!Word.InlinePictureCollection:class'
  - uid: 'word!Word.Range#insertBreak:member(1)'
    summary: "<span data-ttu-id=\"d5316-131\">Insère un saut à l’emplacement spécifié du document principal.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-131\">Inserts a break at the specified location in the main document.</span></span>\n\n<span data-ttu-id=\"d5316-132\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-132\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'insertBreak(breakType, insertLocation)'
    fullName: 'insertBreak(breakType, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakType: Word.BreakType, insertLocation: Word.InsertLocation): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: breakType
          description: <span data-ttu-id="d5316-133">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="d5316-133">Required.</span></span> <span data-ttu-id="d5316-134">Type de saut à ajouter.</span><span class="sxs-lookup"><span data-stu-id="d5316-134">The break type to add.</span></span>
          type:
            - 'word!Word.BreakType:enum'
        - id: insertLocation
          description: "<span data-ttu-id=\"d5316-135\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-135\">Required.</span></span> <span data-ttu-id=\"d5316-136\">La valeur peut être «\_Before\_» (avant) » ou «\_After\_» (après).</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-136\">The value can be 'Before' or 'After'.</span></span>"
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Range#insertBreak:member(2)'
    summary: "<span data-ttu-id=\"d5316-137\">Insère un saut à l’emplacement spécifié du document principal.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-137\">Inserts a break at the specified location in the main document.</span></span>\n\n<span data-ttu-id=\"d5316-138\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-138\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'insertBreak(breakTypeString, insertLocation)'
    fullName: 'insertBreak(breakTypeString, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakTypeString: "Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line", insertLocation: "Before" | "After" | "Start" | "End" | "Replace"): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="d5316-139">Exemples</span><span class="sxs-lookup"><span data-stu-id="d5316-139">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to insert a page break after the selected text.
              range.insertBreak('page', 'After');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Inserted a page break after the selected text.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: breakTypeString
          description: <span data-ttu-id="d5316-140">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="d5316-140">Required.</span></span> <span data-ttu-id="d5316-141">Type de saut à ajouter.</span><span class="sxs-lookup"><span data-stu-id="d5316-141">The break type to add.</span></span>
          type:
            - '"Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line"'
        - id: insertLocation
          description: "<span data-ttu-id=\"d5316-142\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-142\">Required.</span></span> <span data-ttu-id=\"d5316-143\">La valeur peut être «\_Before\_» (avant) » ou «\_After\_» (après).</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-143\">The value can be 'Before' or 'After'.</span></span>"
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Range#insertContentControl:member(1)'
    summary: "<span data-ttu-id=\"d5316-144\">Encadre l’objet de plage avec un contrôle de contenu de texte enrichi.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-144\">Wraps the range object with a rich text content control.</span></span>\n\n<span data-ttu-id=\"d5316-145\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-145\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: insertContentControl()
    fullName: insertContentControl()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertContentControl(): Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="d5316-146">Exemples</span><span class="sxs-lookup"><span data-stu-id="d5316-146">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to insert a content control around the selected text,
              // and create a proxy content control object. We'll update the properties
              // on the content control.
              var myContentControl = range.insertContentControl();
              myContentControl.tag = "Customer-Address";
              myContentControl.title = "Enter Customer Address Here:";
              myContentControl.style = "Normal";
              myContentControl.insertText("One Microsoft Way, Redmond, WA 98052", 'Replace');
              myContentControl.cannotEdit = true;

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Wrapped a content control around the selected text.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```typescript
          await Word.run(async (context) => {
              let results = context.document.body.search("Contractor");
              results.load("font/bold");

              // Check to make sure these content controls haven't been added yet.
              let customerContentControls = context.document.contentControls.getByTag("customer");
              customerContentControls.load("text");
              await context.sync();

            if (customerContentControls.items.length === 0) {
              for (var i = 0; i < results.items.length; i++) { 
                  results.items[i].font.bold = true;
                  var cc = results.items[i].insertContentControl();
                  cc.tag = "customer";  // This value is used in the next step of this sample.
                  cc.title = "Customer Name " + i;
              }
            }
              await context.sync();
          });
          ```
  - uid: 'word!Word.Range#insertFileFromBase64:member(1)'
    summary: "<span data-ttu-id=\"d5316-147\">Insère un document à l’emplacement spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-147\">Inserts a document at the specified location.</span></span>\n\n<span data-ttu-id=\"d5316-148\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-148\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'insertFileFromBase64(base64File, insertLocation)'
    fullName: 'insertFileFromBase64(base64File, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="d5316-149">Exemples</span><span class="sxs-lookup"><span data-stu-id="d5316-149">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to insert base64 encoded .docx at the beginning of the range.
              // You'll need to implement getBase64() to make this work.
              range.insertFileFromBase64(getBase64(), Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Added base64 encoded text to the beginning of the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: base64File
          description: <span data-ttu-id="d5316-150">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="d5316-150">Required.</span></span> <span data-ttu-id="d5316-151">Contenu encodé en base64 d’un fichier. docx.</span><span class="sxs-lookup"><span data-stu-id="d5316-151">The base64 encoded content of a .docx file.</span></span>
          type:
            - string
        - id: insertLocation
          description: "<span data-ttu-id=\"d5316-152\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-152\">Required.</span></span> <span data-ttu-id=\"d5316-153\">La valeur peut être «\_remplacer\_», «\_démarrer\_», «\_fin\_», «\_avant\_» ou «\_après\_».</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-153\">The value can be 'Replace', 'Start', 'End', 'Before', or 'After'.</span></span>"
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Range#insertFileFromBase64:member(2)'
    summary: "<span data-ttu-id=\"d5316-154\">Insère un document à l’emplacement spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-154\">Inserts a document at the specified location.</span></span>\n\n<span data-ttu-id=\"d5316-155\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-155\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'insertFileFromBase64(base64File, insertLocationString)'
    fullName: 'insertFileFromBase64(base64File, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: base64File
          description: <span data-ttu-id="d5316-156">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="d5316-156">Required.</span></span> <span data-ttu-id="d5316-157">Contenu encodé en base64 d’un fichier. docx.</span><span class="sxs-lookup"><span data-stu-id="d5316-157">The base64 encoded content of a .docx file.</span></span>
          type:
            - string
        - id: insertLocationString
          description: "<span data-ttu-id=\"d5316-158\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-158\">Required.</span></span> <span data-ttu-id=\"d5316-159\">La valeur peut être «\_remplacer\_», «\_démarrer\_», «\_fin\_», «\_avant\_» ou «\_après\_».</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-159\">The value can be 'Replace', 'Start', 'End', 'Before', or 'After'.</span></span>"
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Range#insertHtml:member(1)'
    summary: "<span data-ttu-id=\"d5316-160\">Insère du code HTML à l’emplacement spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-160\">Inserts HTML at the specified location.</span></span>\n\n<span data-ttu-id=\"d5316-161\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-161\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'insertHtml(html, insertLocation)'
    fullName: 'insertHtml(html, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="d5316-162">Exemples</span><span class="sxs-lookup"><span data-stu-id="d5316-162">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to insert HTML in to the beginning of the range.
              range.insertHtml('<strong>This is text inserted with range.insertHtml()</strong>', Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('HTML added to the beginning of the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: html
          description: <span data-ttu-id="d5316-163">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="d5316-163">Required.</span></span> <span data-ttu-id="d5316-164">CODE HTML à insérer.</span><span class="sxs-lookup"><span data-stu-id="d5316-164">The HTML to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: "<span data-ttu-id=\"d5316-165\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-165\">Required.</span></span> <span data-ttu-id=\"d5316-166\">La valeur peut être «\_remplacer\_», «\_démarrer\_», «\_fin\_», «\_avant\_» ou «\_après\_».</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-166\">The value can be 'Replace', 'Start', 'End', 'Before', or 'After'.</span></span>"
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Range#insertHtml:member(2)'
    summary: "<span data-ttu-id=\"d5316-167\">Insère du code HTML à l’emplacement spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-167\">Inserts HTML at the specified location.</span></span>\n\n<span data-ttu-id=\"d5316-168\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-168\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'insertHtml(html, insertLocationString)'
    fullName: 'insertHtml(html, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: html
          description: <span data-ttu-id="d5316-169">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="d5316-169">Required.</span></span> <span data-ttu-id="d5316-170">CODE HTML à insérer.</span><span class="sxs-lookup"><span data-stu-id="d5316-170">The HTML to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: "<span data-ttu-id=\"d5316-171\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-171\">Required.</span></span> <span data-ttu-id=\"d5316-172\">La valeur peut être «\_remplacer\_», «\_démarrer\_», «\_fin\_», «\_avant\_» ou «\_après\_».</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-172\">The value can be 'Replace', 'Start', 'End', 'Before', or 'After'.</span></span>"
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Range#insertInlinePictureFromBase64:member(1)'
    summary: "<span data-ttu-id=\"d5316-173\">Insère une image à l’emplacement spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-173\">Inserts a picture at the specified location.</span></span>\n\n<span data-ttu-id=\"d5316-174\">\\[[Ensemble d’API\_: WordApi 1,2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-174\">\\[ [API set: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocation)'
    fullName: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocation: Word.InsertLocation): Word.InlinePicture;'
      return:
        type:
          - 'word!Word.InlinePicture:class'
        description: ''
      parameters:
        - id: base64EncodedImage
          description: <span data-ttu-id="d5316-175">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="d5316-175">Required.</span></span> <span data-ttu-id="d5316-176">Image encodée en base64 à insérer.</span><span class="sxs-lookup"><span data-stu-id="d5316-176">The base64 encoded image to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: "<span data-ttu-id=\"d5316-177\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-177\">Required.</span></span> <span data-ttu-id=\"d5316-178\">La valeur peut être «\_remplacer\_», «\_démarrer\_», «\_fin\_», «\_avant\_» ou «\_après\_».</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-178\">The value can be 'Replace', 'Start', 'End', 'Before', or 'After'.</span></span>"
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Range#insertInlinePictureFromBase64:member(2)'
    summary: "<span data-ttu-id=\"d5316-179\">Insère une image à l’emplacement spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-179\">Inserts a picture at the specified location.</span></span>\n\n<span data-ttu-id=\"d5316-180\">\\[[Ensemble d’API\_: WordApi 1,2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-180\">\\[ [API set: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)'
    fullName: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.InlinePicture;'
      return:
        type:
          - 'word!Word.InlinePicture:class'
        description: ''
      parameters:
        - id: base64EncodedImage
          description: <span data-ttu-id="d5316-181">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="d5316-181">Required.</span></span> <span data-ttu-id="d5316-182">Image encodée en base64 à insérer.</span><span class="sxs-lookup"><span data-stu-id="d5316-182">The base64 encoded image to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: "<span data-ttu-id=\"d5316-183\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-183\">Required.</span></span> <span data-ttu-id=\"d5316-184\">La valeur peut être «\_remplacer\_», «\_démarrer\_», «\_fin\_», «\_avant\_» ou «\_après\_».</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-184\">The value can be 'Replace', 'Start', 'End', 'Before', or 'After'.</span></span>"
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Range#insertOoxml:member(1)'
    summary: "<span data-ttu-id=\"d5316-185\">Insère du code OOXML à l’emplacement spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-185\">Inserts OOXML at the specified location.</span></span>\n\n<span data-ttu-id=\"d5316-186\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-186\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'insertOoxml(ooxml, insertLocation)'
    fullName: 'insertOoxml(ooxml, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="d5316-187">Exemples</span><span class="sxs-lookup"><span data-stu-id="d5316-187">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to insert OOXML in to the beginning of the range.
              range.insertOoxml("<pkg:package xmlns:pkg='http://schemas.microsoft.com/office/2006/xmlPackage'><pkg:part pkg:name='/_rels/.rels' pkg:contentType='application/vnd.openxmlformats-package.relationships+xml' pkg:padding='512'><pkg:xmlData><Relationships xmlns='http://schemas.openxmlformats.org/package/2006/relationships'><Relationship Id='rId1' Type='http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument' Target='word/document.xml'/></Relationships></pkg:xmlData></pkg:part><pkg:part pkg:name='/word/document.xml' pkg:contentType='application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml'><pkg:xmlData><w:document xmlns:w='http://schemas.openxmlformats.org/wordprocessingml/2006/main' ><w:body><w:p><w:pPr><w:spacing w:before='360' w:after='0' w:line='480' w:lineRule='auto'/><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr></w:pPr><w:r><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr><w:t>This text has formatting directly applied to achieve its font size, color, line spacing, and paragraph spacing.</w:t></w:r></w:p></w:body></w:document></pkg:xmlData></pkg:part></pkg:package>", Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('OOXML added to the beginning of the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });

          // Read "Create better add-ins for Word with Office Open XML" for guidance on working with OOXML.
          // https://docs.microsoft.com/office/dev/add-ins/word/create-better-add-ins-for-word-with-office-open-xml
          ```
      parameters:
        - id: ooxml
          description: <span data-ttu-id="d5316-188">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="d5316-188">Required.</span></span> <span data-ttu-id="d5316-189">Code OOXML à insérer.</span><span class="sxs-lookup"><span data-stu-id="d5316-189">The OOXML to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: "<span data-ttu-id=\"d5316-190\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-190\">Required.</span></span> <span data-ttu-id=\"d5316-191\">La valeur peut être «\_remplacer\_», «\_démarrer\_», «\_fin\_», «\_avant\_» ou «\_après\_».</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-191\">The value can be 'Replace', 'Start', 'End', 'Before', or 'After'.</span></span>"
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Range#insertOoxml:member(2)'
    summary: "<span data-ttu-id=\"d5316-192\">Insère du code OOXML à l’emplacement spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-192\">Inserts OOXML at the specified location.</span></span>\n\n<span data-ttu-id=\"d5316-193\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-193\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'insertOoxml(ooxml, insertLocationString)'
    fullName: 'insertOoxml(ooxml, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: ooxml
          description: <span data-ttu-id="d5316-194">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="d5316-194">Required.</span></span> <span data-ttu-id="d5316-195">Code OOXML à insérer.</span><span class="sxs-lookup"><span data-stu-id="d5316-195">The OOXML to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: "<span data-ttu-id=\"d5316-196\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-196\">Required.</span></span> <span data-ttu-id=\"d5316-197\">La valeur peut être «\_remplacer\_», «\_démarrer\_», «\_fin\_», «\_avant\_» ou «\_après\_».</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-197\">The value can be 'Replace', 'Start', 'End', 'Before', or 'After'.</span></span>"
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Range#insertParagraph:member(1)'
    summary: "<span data-ttu-id=\"d5316-198\">Insère un paragraphe à l’emplacement spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-198\">Inserts a paragraph at the specified location.</span></span>\n\n<span data-ttu-id=\"d5316-199\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-199\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'insertParagraph(paragraphText, insertLocation)'
    fullName: 'insertParagraph(paragraphText, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="d5316-200">Exemples</span><span class="sxs-lookup"><span data-stu-id="d5316-200">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to insert the paragraph after the range.
              range.insertParagraph('Content of a new paragraph', Word.InsertLocation.after);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Paragraph added to the end of the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: paragraphText
          description: <span data-ttu-id="d5316-201">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="d5316-201">Required.</span></span> <span data-ttu-id="d5316-202">Texte de paragraphe à insérer.</span><span class="sxs-lookup"><span data-stu-id="d5316-202">The paragraph text to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: "<span data-ttu-id=\"d5316-203\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-203\">Required.</span></span> <span data-ttu-id=\"d5316-204\">La valeur peut être «\_Before\_» (avant) » ou «\_After\_» (après).</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-204\">The value can be 'Before' or 'After'.</span></span>"
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Range#insertParagraph:member(2)'
    summary: "<span data-ttu-id=\"d5316-205\">Insère un paragraphe à l’emplacement spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-205\">Inserts a paragraph at the specified location.</span></span>\n\n<span data-ttu-id=\"d5316-206\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-206\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'insertParagraph(paragraphText, insertLocationString)'
    fullName: 'insertParagraph(paragraphText, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
      parameters:
        - id: paragraphText
          description: <span data-ttu-id="d5316-207">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="d5316-207">Required.</span></span> <span data-ttu-id="d5316-208">Texte de paragraphe à insérer.</span><span class="sxs-lookup"><span data-stu-id="d5316-208">The paragraph text to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: "<span data-ttu-id=\"d5316-209\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-209\">Required.</span></span> <span data-ttu-id=\"d5316-210\">La valeur peut être «\_Before\_» (avant) » ou «\_After\_» (après).</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-210\">The value can be 'Before' or 'After'.</span></span>"
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Range#insertText:member(1)'
    summary: "<span data-ttu-id=\"d5316-211\">Insère du texte à l’emplacement spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-211\">Inserts text at the specified location.</span></span>\n\n<span data-ttu-id=\"d5316-212\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-212\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'insertText(text, insertLocation)'
    fullName: 'insertText(text, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="d5316-213">Exemples</span><span class="sxs-lookup"><span data-stu-id="d5316-213">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to insert the paragraph at the end of the range.
              range.insertText('New text inserted into the range.', Word.InsertLocation.end);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Text added to the end of the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: text
          description: <span data-ttu-id="d5316-214">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="d5316-214">Required.</span></span> <span data-ttu-id="d5316-215">Texte à insérer.</span><span class="sxs-lookup"><span data-stu-id="d5316-215">Text to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: "<span data-ttu-id=\"d5316-216\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-216\">Required.</span></span> <span data-ttu-id=\"d5316-217\">La valeur peut être «\_remplacer\_», «\_démarrer\_», «\_fin\_», «\_avant\_» ou «\_après\_».</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-217\">The value can be 'Replace', 'Start', 'End', 'Before', or 'After'.</span></span>"
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Range#insertText:member(2)'
    summary: "<span data-ttu-id=\"d5316-218\">Insère du texte à l’emplacement spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-218\">Inserts text at the specified location.</span></span>\n\n<span data-ttu-id=\"d5316-219\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-219\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'insertText(text, insertLocationString)'
    fullName: 'insertText(text, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: text
          description: <span data-ttu-id="d5316-220">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="d5316-220">Required.</span></span> <span data-ttu-id="d5316-221">Texte à insérer.</span><span class="sxs-lookup"><span data-stu-id="d5316-221">Text to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: "<span data-ttu-id=\"d5316-222\">Obligatoire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-222\">Required.</span></span> <span data-ttu-id=\"d5316-223\">La valeur peut être «\_remplacer\_», «\_démarrer\_», «\_fin\_», «\_avant\_» ou «\_après\_».</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-223\">The value can be 'Replace', 'Start', 'End', 'Before', or 'After'.</span></span>"
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Range#load:member(1)'
    summary: "<span data-ttu-id=\"d5316-224\">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-224\">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id=\"d5316-225\">Vous devez appeler «\_context.sync()\_» avant de lire les propriétés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-225\">You must call \"context.sync()\" before reading the properties.</span></span>"
    remarks: "<span data-ttu-id=\"d5316-226\">En plus de cette signature, cette méthode possède les signatures suivantes\_:</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-226\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"d5316-227\">`load(option?: string | string[]): Word.Range`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-227\">`load(option?: string | string[]): Word.Range` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>\n\n<span data-ttu-id=\"d5316-228\">`load(option?: { select?: string; expand?: string; }): Word.Range`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-228\">`load(option?: { select?: string; expand?: string; }): Word.Range` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"d5316-229\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Range`-Uniquement disponible sur les types de collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-229\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Range` - Only available on collection types.</span></span> <span data-ttu-id=\"d5316-230\">Elle est similaire à la signature précédente.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-230\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"d5316-231\">Option. Top indique le nombre maximal d’éléments de collection qui peuvent être inclus dans le résultat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-231\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"d5316-232\">Option. Skip indique le nombre d’éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-232\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"d5316-233\">Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d’éléments.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-233\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>"
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Word.Interfaces.RangeLoadOptions): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'word!Word.Interfaces.RangeLoadOptions:interface'
  - uid: 'word!Word.Range#load:member(2)'
    summary: <span data-ttu-id="d5316-234">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="d5316-234">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d5316-235">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="d5316-235">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="d5316-236">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="d5316-236">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'word!Word.Range#load:member(3)'
    summary: <span data-ttu-id="d5316-237">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="d5316-237">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d5316-238">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="d5316-238">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="d5316-239">Où propertyNamesAndPaths. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et propertyNamesAndPaths. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="d5316-239">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'word!Word.Range#paragraphs:member'
    summary: "<span data-ttu-id=\"d5316-240\">Obtient la collection d’objets Paragraph dans la plage.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-240\">Gets the collection of paragraph objects in the range.</span></span> <span data-ttu-id=\"d5316-241\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-241\">Read-only.</span></span>\n\n<span data-ttu-id=\"d5316-242\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-242\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: paragraphs
    fullName: paragraphs
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly paragraphs: Word.ParagraphCollection;'
      return:
        type:
          - 'word!Word.ParagraphCollection:class'
  - uid: 'word!Word.Range#parentContentControl:member'
    summary: "<span data-ttu-id=\"d5316-243\">Obtient le contrôle de contenu qui contient la plage.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-243\">Gets the content control that contains the range.</span></span> <span data-ttu-id=\"d5316-244\">Génère une erreur s’il n’existe pas de contrôle de contenu parent.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-244\">Throws an error if there isn't a parent content control.</span></span> <span data-ttu-id=\"d5316-245\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-245\">Read-only.</span></span>\n\n<span data-ttu-id=\"d5316-246\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-246\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: parentContentControl
    fullName: parentContentControl
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentContentControl: Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
  - uid: 'word!Word.Range#search:member(1)'
    summary: "<span data-ttu-id=\"d5316-247\">Effectue une recherche avec le SearchOptions spécifié sur l’étendue de l’objet Range.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-247\">Performs a search with the specified SearchOptions on the scope of the range object.</span></span> <span data-ttu-id=\"d5316-248\">Les résultats de la recherche sont un ensemble d’objets de plage.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-248\">The search results are a collection of range objects.</span></span>\n\n<span data-ttu-id=\"d5316-249\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-249\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: 'search(searchText, searchOptions)'
    fullName: 'search(searchText, searchOptions)'
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        search(searchText: string, searchOptions?: Word.SearchOptions | {
                    ignorePunct?: boolean;
                    ignoreSpace?: boolean;
                    matchCase?: boolean;
                    matchPrefix?: boolean;
                    matchSuffix?: boolean;
                    matchWholeWord?: boolean;
                    matchWildcards?: boolean;
                }): Word.RangeCollection;
      return:
        type:
          - 'word!Word.RangeCollection:class'
        description: ''
      parameters:
        - id: searchText
          description: <span data-ttu-id="d5316-250">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="d5316-250">Required.</span></span> <span data-ttu-id="d5316-251">Texte de recherche.</span><span class="sxs-lookup"><span data-stu-id="d5316-251">The search text.</span></span>
          type:
            - string
        - id: searchOptions
          description: <span data-ttu-id="d5316-252">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="d5316-252">Optional.</span></span> <span data-ttu-id="d5316-253">Options de la recherche.</span><span class="sxs-lookup"><span data-stu-id="d5316-253">Options for the search.</span></span>
          type:
            - 'word!Word.Range#search~0:complex'
  - uid: 'word!Word.Range#select:member(1)'
    summary: "<span data-ttu-id=\"d5316-254\">Sélectionne la plage et y accède via l’interface utilisateur de Word.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-254\">Selects and navigates the Word UI to the range.</span></span>\n\n<span data-ttu-id=\"d5316-255\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-255\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: select(selectionMode)
    fullName: select(selectionMode)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionMode?: Word.SelectionMode): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="d5316-256">Exemples</span><span class="sxs-lookup"><span data-stu-id="d5316-256">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to insert HTML in to the beginning of the range.
              range.insertHtml('<strong>This is text inserted with range.insertHtml()</strong>', Word.InsertLocation.start);

              // Queue a command to select the HTML that was inserted.
              range.select();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Selected the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: selectionMode
          description: "<span data-ttu-id=\"d5316-257\">Facultatif.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-257\">Optional.</span></span> <span data-ttu-id=\"d5316-258\">Le mode de sélection peut être «\_Select\_» (sélectionner), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-258\">The selection mode can be 'Select', 'Start', or 'End'.</span></span> <span data-ttu-id=\"d5316-259\">«\_Select\_» (sélectionner) est la valeur par défaut.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-259\">'Select' is the default.</span></span>"
          type:
            - 'word!Word.SelectionMode:enum'
  - uid: 'word!Word.Range#select:member(2)'
    summary: "<span data-ttu-id=\"d5316-260\">Sélectionne la plage et y accède via l’interface utilisateur de Word.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-260\">Selects and navigates the Word UI to the range.</span></span>\n\n<span data-ttu-id=\"d5316-261\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-261\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: select(selectionModeString)
    fullName: select(selectionModeString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionModeString?: "Select" | "Start" | "End"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: selectionModeString
          description: "<span data-ttu-id=\"d5316-262\">Facultatif.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-262\">Optional.</span></span> <span data-ttu-id=\"d5316-263\">Le mode de sélection peut être «\_Select\_» (sélectionner), «\_Start\_» (début) ou «\_End\_» (fin).</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-263\">The selection mode can be 'Select', 'Start', or 'End'.</span></span> <span data-ttu-id=\"d5316-264\">«\_Select\_» (sélectionner) est la valeur par défaut.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-264\">'Select' is the default.</span></span>"
          type:
            - '"Select" | "Start" | "End"'
  - uid: 'word!Word.Range#set:member(1)'
    summary: '<span data-ttu-id="d5316-265">Définit plusieurs propriétés d’un objet en même temps.</span><span class="sxs-lookup"><span data-stu-id="d5316-265">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="d5316-266">Vous pouvez transmettre un objet plain avec les propriétés appropriées, ou un autre objet API du même type.</span><span class="sxs-lookup"><span data-stu-id="d5316-266">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: "<span data-ttu-id=\"d5316-267\">Cette méthode est dotée de la signature supplémentaire suivante\_:</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-267\">This method has the following additional signature:</span></span>\n\n`set(properties: Word.Range): void`"
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.RangeUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="d5316-268">Objet JavaScript avec des propriétés qui sont structurées isomorphically vers les propriétés de l’objet sur lequel la méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="d5316-268">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'word!Word.Interfaces.RangeUpdateData:interface'
        - id: options
          description: <span data-ttu-id="d5316-269">Fournit une option permettant de supprimer les erreurs si l’objet Properties tente de définir des propriétés en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="d5316-269">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'word!OfficeExtension.UpdateOptions:interface'
  - uid: 'word!Word.Range#set:member(2)'
    summary: '<span data-ttu-id="d5316-270">Définit plusieurs propriétés de l’objet en même temps, en fonction d’un objet chargé existant.</span><span class="sxs-lookup"><span data-stu-id="d5316-270">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Word.Range): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'word!Word.Range:class'
  - uid: 'word!Word.Range#style:member'
    summary: "<span data-ttu-id=\"d5316-271\">Obtient ou définit le nom du style de la plage.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-271\">Gets or sets the style name for the range.</span></span> <span data-ttu-id=\"d5316-272\">Utilisez cette propriété pour les noms des styles personnalisés et localisés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-272\">Use this property for custom styles and localized style names.</span></span> <span data-ttu-id=\"d5316-273\">Pour utiliser les styles prédéfinis qui sont portables entre différents paramètres régionaux, voir la propriété «\_styleBuiltIn\_».</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-273\">To use the built-in styles that are portable between locales, see the \"styleBuiltIn\" property.</span></span>\n\n<span data-ttu-id=\"d5316-274\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-274\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: string;'
      return:
        type:
          - string
  - uid: 'word!Word.Range#text:member'
    summary: "<span data-ttu-id=\"d5316-275\">Obtient le texte de la plage.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-275\">Gets the text of the range.</span></span> <span data-ttu-id=\"d5316-276\">En lecture seule.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-276\">Read-only.</span></span>\n\n<span data-ttu-id=\"d5316-277\">\\[[Ensemble d’API\_: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-277\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: text
    fullName: text
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly text: string;'
      return:
        type:
          - string
  - uid: 'word!Word.Range#toJSON:member(1)'
    summary: '<span data-ttu-id="d5316-278">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="d5316-278">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="d5316-279">.</span><span class="sxs-lookup"><span data-stu-id="d5316-279"></span></span> <span data-ttu-id="d5316-280">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="d5316-280"></span></span><!-- --><span data-ttu-id="d5316-281">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que l’objet Word. Range d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`Word.Interfaces.RangeData`</span><span class="sxs-lookup"><span data-stu-id="d5316-281">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Word.Range object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.RangeData`</span></span><!-- --><span data-ttu-id="d5316-282">) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l’objet d’origine.</span><span class="sxs-lookup"><span data-stu-id="d5316-282">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.RangeData;'
      return:
        type:
          - 'word!Word.Interfaces.RangeData:interface'
        description: ''
  - uid: 'word!Word.Range#track:member(1)'
    summary: "<span data-ttu-id=\"d5316-283\">Effectuer le suivi de l’objet pour l’ajustement automatique en fonction environnant des modifications dans le document.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-283\">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id=\"d5316-284\">Cet appel est abréviations context.trackedObjects.add(thisObject).</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-284\">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id=\"d5316-285\">Si vous utilisez cet objet au sein de «\_.sync\_» appels et en dehors de l’exécution séquentielle d’un lot de «\_.run\_» et rencontrez un message d’erreur «\_InvalidObjectPath\_» lors de la définition d’une propriété ou appeler une méthode sur l’objet, vous devez ajouter l’objet à l’objet de suivi collection de sites lors de l’objet a été créé.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-285\">If you are using this object across \".sync\" calls and outside the sequential execution of a \".run\" batch, and get an \"InvalidObjectPath\" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>"
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
  - uid: 'word!Word.Range#untrack:member(1)'
    summary: "<span data-ttu-id=\"d5316-286\">Publication mémoire associée à cet objet si elle a été précédemment suivie.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-286\">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id=\"d5316-287\">Cet appel est abréviations context.trackedObjects.add(thisObject).</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-287\">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id=\"d5316-288\">Vous rencontrez de nombreux objets suivies ralentit l’application hôte, donc n’oubliez pas de libérer les objets que l'on ajoute, une fois que vous avez terminé à les utiliser.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-288\">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them.</span></span> <span data-ttu-id=\"d5316-289\">Vous devez appeler «\_context.sync()\_» avant la publication de mémoire prend effet.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5316-289\">You will need to call \"context.sync()\" before the memory release takes effect.</span></span>"
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
references:
  - uid: 'word!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'word!Word.ContentControlCollection:class'
    name: Word.ContentControlCollection
  - uid: 'word!Word.RequestContext:class'
    name: RequestContext
  - uid: 'word!Word.Font:class'
    name: Word.Font
  - uid: 'word!Word.Range#getHtml~0:complex'
    name: OfficeExtension.ClientResult<string>
    fullName: OfficeExtension.ClientResult<string>
    spec.typeScript:
      - uid: 'word!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <string>
        fullName: <string>
  - uid: 'word!Word.Range#getOoxml~0:complex'
    name: OfficeExtension.ClientResult<string>
    fullName: OfficeExtension.ClientResult<string>
    spec.typeScript:
      - uid: 'word!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <string>
        fullName: <string>
  - uid: 'word!Word.InlinePictureCollection:class'
    name: Word.InlinePictureCollection
  - uid: 'word!Word.BreakType:enum'
    name: Word.BreakType
  - uid: 'word!Word.InsertLocation:enum'
    name: Word.InsertLocation
  - uid: 'word!Word.ContentControl:class'
    name: Word.ContentControl
  - uid: 'word!Word.Range:class'
    name: Word.Range
  - uid: 'word!Word.InlinePicture:class'
    name: Word.InlinePicture
  - uid: 'word!Word.Paragraph:class'
    name: Word.Paragraph
  - uid: 'word!Word.Interfaces.RangeLoadOptions:interface'
    name: Word.Interfaces.RangeLoadOptions
  - uid: 'word!Word.ParagraphCollection:class'
    name: Word.ParagraphCollection
  - uid: 'word!Word.RangeCollection:class'
    name: Word.RangeCollection
  - uid: 'word!Word.Range#search~0:complex'
    name: |-
      Word.SearchOptions | {
                  ignorePunct?: boolean;
                  ignoreSpace?: boolean;
                  matchCase?: boolean;
                  matchPrefix?: boolean;
                  matchSuffix?: boolean;
                  matchWholeWord?: boolean;
                  matchWildcards?: boolean;
              }
    fullName: |-
      Word.SearchOptions | {
                  ignorePunct?: boolean;
                  ignoreSpace?: boolean;
                  matchCase?: boolean;
                  matchPrefix?: boolean;
                  matchSuffix?: boolean;
                  matchWholeWord?: boolean;
                  matchWildcards?: boolean;
              }
    spec.typeScript:
      - uid: 'word!Word.SearchOptions:class'
        name: Word.SearchOptions
        fullName: Word.SearchOptions
      - name: |2-
           | {
                      ignorePunct?: boolean;
                      ignoreSpace?: boolean;
                      matchCase?: boolean;
                      matchPrefix?: boolean;
                      matchSuffix?: boolean;
                      matchWholeWord?: boolean;
                      matchWildcards?: boolean;
                  }
        fullName: |2-
           | {
                      ignorePunct?: boolean;
                      ignoreSpace?: boolean;
                      matchCase?: boolean;
                      matchPrefix?: boolean;
                      matchSuffix?: boolean;
                      matchWholeWord?: boolean;
                      matchWildcards?: boolean;
                  }
  - uid: 'word!Word.SelectionMode:enum'
    name: Word.SelectionMode
  - uid: 'word!Word.Interfaces.RangeUpdateData:interface'
    name: Interfaces.RangeUpdateData
  - uid: 'word!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'word!Word.Interfaces.RangeData:interface'
    name: Word.Interfaces.RangeData