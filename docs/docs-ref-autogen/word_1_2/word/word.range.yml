### YamlMime:TSType
name: Word.Range
uid: word!Word.Range:class
package: word!
fullName: Word.Range
summary: >-
  Représente une zone contiguë dans un document.


  \[[Ensemble d’API : WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: contentControls
  uid: word!Word.Range#contentControls:member
  package: word!
  fullName: contentControls
  summary: >-
    Obtient la collection d’objets de contrôle de contenu dans la plage. En lecture seule.


    \[[Ensemble d’API : WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly contentControls: Word.ContentControlCollection;'
    return:
      type: <xref uid="word!Word.ContentControlCollection:class" />
- name: context
  uid: word!Word.Range#context:member
  package: word!
  fullName: context
  summary: Contexte de demande associé à l’objet. Cette opération connecte le processus du complément au processus de l’application hôte Office.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="word!Word.RequestContext:class" />
- name: font
  uid: word!Word.Range#font:member
  package: word!
  fullName: font
  summary: >-
    Obtient le format de texte de la plage. Utilisez cette propriété pour obtenir et définir le nom de la police, la taille, la couleur et d’autres propriétés. En lecture seule.


    \[[Ensemble d’API : WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly font: Word.Font;'
    return:
      type: <xref uid="word!Word.Font:class" />
- name: inlinePictures
  uid: word!Word.Range#inlinePictures:member
  package: word!
  fullName: inlinePictures
  summary: >-
    Obtient la collection d’objets image insérée de la plage. En lecture seule.


    \[[Ensemble d’API : WordApi 1,2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly inlinePictures: Word.InlinePictureCollection;'
    return:
      type: <xref uid="word!Word.InlinePictureCollection:class" />
- name: paragraphs
  uid: word!Word.Range#paragraphs:member
  package: word!
  fullName: paragraphs
  summary: >-
    Obtient la collection d’objets Paragraph dans la plage. En lecture seule.


    \[[Ensemble d’API : WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly paragraphs: Word.ParagraphCollection;'
    return:
      type: <xref uid="word!Word.ParagraphCollection:class" />
- name: parentContentControl
  uid: word!Word.Range#parentContentControl:member
  package: word!
  fullName: parentContentControl
  summary: >-
    Obtient le contrôle de contenu qui contient la plage. Génère une erreur s’il n’existe pas de contrôle de contenu parent. En lecture seule.


    \[[Ensemble d’API : WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentContentControl: Word.ContentControl;'
    return:
      type: <xref uid="word!Word.ContentControl:class" />
- name: style
  uid: word!Word.Range#style:member
  package: word!
  fullName: style
  summary: >-
    Obtient ou définit le nom du style de la plage. Utilisez cette propriété pour les noms des styles personnalisés et localisés. Pour utiliser les styles prédéfinis qui sont portables entre différents paramètres régionaux, voir la propriété « styleBuiltIn ».


    \[[Ensemble d’API : WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'style: string;'
    return:
      type: string
- name: text
  uid: word!Word.Range#text:member
  package: word!
  fullName: text
  summary: >-
    Obtient le texte de la plage. En lecture seule.


    \[[Ensemble d’API : WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly text: string;'
    return:
      type: string
methods:
- name: clear()
  uid: word!Word.Range#clear:member(1)
  package: word!
  fullName: clear()
  summary: >-
    Efface le contenu de l’objet de plage. L’utilisateur peut effectuer l’opération d’annulation sur le contenu effacé.


    \[[Ensemble d’API : WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'clear(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>範例\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Queue a command to get the current selection and then\n    // create a proxy range object with the results.\n    var range = context.document.getSelection();\n\n    // Queue a command to clear the contents of the proxy range object.\n    range.clear();\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Cleared the selection (range object)');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: delete()
  uid: word!Word.Range#delete:member(1)
  package: word!
  fullName: delete()
  summary: >-
    Supprime la plage et son contenu du document.


    \[[Ensemble d’API : WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'delete(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>範例\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Queue a command to get the current selection and then\n    // create a proxy range object with the results.\n    var range = context.document.getSelection();\n\n    // Queue a command to delete the range object.\n    range.delete();\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Deleted the selection (range object)');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: getHtml()
  uid: word!Word.Range#getHtml:member(1)
  package: word!
  fullName: getHtml()
  summary: >-
    Obtient une représentation HTML de l’objet de plage. Lorsqu’elle est affichée dans une page Web ou dans la visionneuse HTML, la mise en forme est une correspondance étroite, mais pas exacte, de la mise en forme du document. Cette méthode ne renvoie pas exactement le même code HTML pour le même document sur différentes plateformes (Windows, Mac, Word sur le Web, etc.). Si vous avez besoin d’une fidélité exacte ou d’une cohérence entre les plateformes, utilisez `Range.getOoxml()` et convertissez le code XML renvoyé en html.


    \[[Ensemble d’API : WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getHtml(): OfficeExtension.ClientResult<string>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;string&gt;
      description: "\n\n#### <a name=\"examples\"></a>範例\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Queue a command to get the current selection and then\n    // create a proxy range object with the results.\n    var range = context.document.getSelection();\n\n    // Queue a command to get the HTML of the current selection.\n    var html = range.getHtml();\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('The HTML read from the document was: ' + html.value);\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: getOoxml()
  uid: word!Word.Range#getOoxml:member(1)
  package: word!
  fullName: getOoxml()
  summary: >-
    Obtient la représentation OOXML de l’objet de plage.


    \[[Ensemble d’API : WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getOoxml(): OfficeExtension.ClientResult<string>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;string&gt;
      description: "\n\n#### <a name=\"examples\"></a>範例\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Queue a command to get the current selection and then\n    // create a proxy range object with the results.\n    var range = context.document.getSelection();\n\n    // Queue a command to get the OOXML of the current selection.\n    var ooxml = range.getOoxml();\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('The OOXML read from the document was:  ' + ooxml.value);\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: insertBreak(breakType, insertLocation)
  uid: word!Word.Range#insertBreak:member(1)
  package: word!
  fullName: insertBreak(breakType, insertLocation)
  summary: >-
    Insère un saut à l’emplacement spécifié du document principal.


    \[[Ensemble d’API : WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertBreak(breakType: Word.BreakType, insertLocation: Word.InsertLocation): void;'
    parameters:
    - id: breakType
      description: Obligatoire. Type de saut à ajouter.
      type: <xref uid="word!Word.BreakType:enum" />
    - id: insertLocation
      description: Obligatoire. La valeur peut être « Before » (avant) » ou « After » (après).
      type: <xref uid="word!Word.InsertLocation:enum" />
    return:
      type: void
      description: ''
- name: insertBreak(breakTypeString, insertLocation)
  uid: word!Word.Range#insertBreak:member(2)
  package: word!
  fullName: insertBreak(breakTypeString, insertLocation)
  summary: >-
    Insère un saut à l’emplacement spécifié du document principal.


    \[[Ensemble d’API : WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertBreak(breakTypeString: "Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line", insertLocation: "Before" | "After" | "Start" | "End" | "Replace"): void;'
    parameters:
    - id: breakTypeString
      description: Obligatoire. Type de saut à ajouter.
      type: "\"Page\" | \"Next\" | \"SectionNext\" | \"SectionContinuous\" | \"SectionEven\" | \"SectionOdd\" | \"Line\""
    - id: insertLocation
      description: Obligatoire. La valeur peut être « Before » (avant) » ou « After » (après).
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>範例\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Queue a command to get the current selection and then\n    // create a proxy range object with the results.\n    var range = context.document.getSelection();\n\n    // Queue a command to insert a page break after the selected text.\n    range.insertBreak('page', 'After');\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Inserted a page break after the selected text.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: insertContentControl()
  uid: word!Word.Range#insertContentControl:member(1)
  package: word!
  fullName: insertContentControl()
  summary: >-
    Encadre l’objet de plage avec un contrôle de contenu de texte enrichi.


    \[[Ensemble d’API : WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertContentControl(): Word.ContentControl;'
    return:
      type: <xref uid="word!Word.ContentControl:class" />
      description: "\n\n#### <a name=\"examples\"></a>範例\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/word/90-scenarios/doc-assembly.yaml\nawait Word.run(async (context) => {\n    let results = context.document.body.search(\"Contractor\");\n    results.load(\"font/bold\");\n\n    // Check to make sure these content controls haven't been added yet.\n    let customerContentControls = context.document.contentControls.getByTag(\"customer\");\n    customerContentControls.load(\"text\");\n    await context.sync();\n\n  if (customerContentControls.items.length === 0) {\n    for (var i = 0; i < results.items.length; i++) { \n        results.items[i].font.bold = true;\n        var cc = results.items[i].insertContentControl();\n        cc.tag = \"customer\";  // This value is used in the next step of this sample.\n        cc.title = \"Customer Name \" + i;\n    }\n  }\n    await context.sync();\n});\n```"
- name: insertFileFromBase64(base64File, insertLocation)
  uid: word!Word.Range#insertFileFromBase64:member(1)
  package: word!
  fullName: insertFileFromBase64(base64File, insertLocation)
  summary: >-
    Insère un document à l’emplacement spécifié.


    \[[Ensemble d’API : WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertFileFromBase64(base64File: string, insertLocation: Word.InsertLocation): Word.Range;'
    parameters:
    - id: base64File
      description: Obligatoire. Contenu encodé en base64 d’un fichier. docx.
      type: string
    - id: insertLocation
      description: Obligatoire. La valeur peut être « remplacer », « démarrer », « fin », « avant » ou « après ».
      type: <xref uid="word!Word.InsertLocation:enum" />
    return:
      type: <xref uid="word!Word.Range:class" />
      description: "\n\n#### <a name=\"examples\"></a>範例\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Queue a command to get the current selection and then\n    // create a proxy range object with the results.\n    var range = context.document.getSelection();\n\n    // Queue a command to insert base64 encoded .docx at the beginning of the range.\n    // You'll need to implement getBase64() to make this work.\n    range.insertFileFromBase64(getBase64(), Word.InsertLocation.start);\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Added base64 encoded text to the beginning of the range.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: insertFileFromBase64(base64File, insertLocationString)
  uid: word!Word.Range#insertFileFromBase64:member(2)
  package: word!
  fullName: insertFileFromBase64(base64File, insertLocationString)
  summary: >-
    Insère un document à l’emplacement spécifié.


    \[[Ensemble d’API : WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertFileFromBase64(base64File: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
    parameters:
    - id: base64File
      description: Obligatoire. Contenu encodé en base64 d’un fichier. docx.
      type: string
    - id: insertLocationString
      description: Obligatoire. La valeur peut être « remplacer », « démarrer », « fin », « avant » ou « après ».
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: insertHtml(html, insertLocation)
  uid: word!Word.Range#insertHtml:member(1)
  package: word!
  fullName: insertHtml(html, insertLocation)
  summary: >-
    Insère du code HTML à l’emplacement spécifié.


    \[[Ensemble d’API : WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertHtml(html: string, insertLocation: Word.InsertLocation): Word.Range;'
    parameters:
    - id: html
      description: Obligatoire. CODE HTML à insérer.
      type: string
    - id: insertLocation
      description: Obligatoire. La valeur peut être « remplacer », « démarrer », « fin », « avant » ou « après ».
      type: <xref uid="word!Word.InsertLocation:enum" />
    return:
      type: <xref uid="word!Word.Range:class" />
      description: "\n\n#### <a name=\"examples\"></a>範例\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Queue a command to get the current selection and then\n    // create a proxy range object with the results.\n    var range = context.document.getSelection();\n\n    // Queue a command to insert HTML in to the beginning of the range.\n    range.insertHtml('<strong>This is text inserted with range.insertHtml()</strong>', Word.InsertLocation.start);\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('HTML added to the beginning of the range.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: insertHtml(html, insertLocationString)
  uid: word!Word.Range#insertHtml:member(2)
  package: word!
  fullName: insertHtml(html, insertLocationString)
  summary: >-
    Insère du code HTML à l’emplacement spécifié.


    \[[Ensemble d’API : WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertHtml(html: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
    parameters:
    - id: html
      description: Obligatoire. CODE HTML à insérer.
      type: string
    - id: insertLocationString
      description: Obligatoire. La valeur peut être « remplacer », « démarrer », « fin », « avant » ou « après ».
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: insertInlinePictureFromBase64(base64EncodedImage, insertLocation)
  uid: word!Word.Range#insertInlinePictureFromBase64:member(1)
  package: word!
  fullName: insertInlinePictureFromBase64(base64EncodedImage, insertLocation)
  summary: >-
    Insère une image à l’emplacement spécifié.


    \[[Ensemble d’API : WordApi 1,2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocation: Word.InsertLocation): Word.InlinePicture;'
    parameters:
    - id: base64EncodedImage
      description: Obligatoire. Image encodée en base64 à insérer.
      type: string
    - id: insertLocation
      description: Obligatoire. La valeur peut être « remplacer », « démarrer », « fin », « avant » ou « après ».
      type: <xref uid="word!Word.InsertLocation:enum" />
    return:
      type: <xref uid="word!Word.InlinePicture:class" />
      description: ''
- name: insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)
  uid: word!Word.Range#insertInlinePictureFromBase64:member(2)
  package: word!
  fullName: insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)
  summary: >-
    Insère une image à l’emplacement spécifié.


    \[[Ensemble d’API : WordApi 1,2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.InlinePicture;'
    parameters:
    - id: base64EncodedImage
      description: Obligatoire. Image encodée en base64 à insérer.
      type: string
    - id: insertLocationString
      description: Obligatoire. La valeur peut être « remplacer », « démarrer », « fin », « avant » ou « après ».
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    return:
      type: <xref uid="word!Word.InlinePicture:class" />
      description: ''
- name: insertOoxml(ooxml, insertLocation)
  uid: word!Word.Range#insertOoxml:member(1)
  package: word!
  fullName: insertOoxml(ooxml, insertLocation)
  summary: >-
    Insère du code OOXML à l’emplacement spécifié.


    \[[Ensemble d’API : WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertOoxml(ooxml: string, insertLocation: Word.InsertLocation): Word.Range;'
    parameters:
    - id: ooxml
      description: Obligatoire. Code OOXML à insérer.
      type: string
    - id: insertLocation
      description: Obligatoire. La valeur peut être « remplacer », « démarrer », « fin », « avant » ou « après ».
      type: <xref uid="word!Word.InsertLocation:enum" />
    return:
      type: <xref uid="word!Word.Range:class" />
      description: "\n\n#### <a name=\"examples\"></a>範例\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Queue a command to get the current selection and then\n    // create a proxy range object with the results.\n    var range = context.document.getSelection();\n\n    // Queue a command to insert OOXML in to the beginning of the range.\n    range.insertOoxml(\"<pkg:package xmlns:pkg='http://schemas.microsoft.com/office/2006/xmlPackage'><pkg:part pkg:name='/_rels/.rels' pkg:contentType='application/vnd.openxmlformats-package.relationships+xml' pkg:padding='512'><pkg:xmlData><Relationships xmlns='http://schemas.openxmlformats.org/package/2006/relationships'><Relationship Id='rId1' Type='http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument' Target='word/document.xml'/></Relationships></pkg:xmlData></pkg:part><pkg:part pkg:name='/word/document.xml' pkg:contentType='application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml'><pkg:xmlData><w:document xmlns:w='http://schemas.openxmlformats.org/wordprocessingml/2006/main' ><w:body><w:p><w:pPr><w:spacing w:before='360' w:after='0' w:line='480' w:lineRule='auto'/><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr></w:pPr><w:r><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr><w:t>This text has formatting directly applied to achieve its font size, color, line spacing, and paragraph spacing.</w:t></w:r></w:p></w:body></w:document></pkg:xmlData></pkg:part></pkg:package>\", Word.InsertLocation.start);\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('OOXML added to the beginning of the range.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n\n// Read \"Create better add-ins for Word with Office Open XML\" for guidance on working with OOXML.\n// https://docs.microsoft.com/office/dev/add-ins/word/create-better-add-ins-for-word-with-office-open-xml\n```"
- name: insertOoxml(ooxml, insertLocationString)
  uid: word!Word.Range#insertOoxml:member(2)
  package: word!
  fullName: insertOoxml(ooxml, insertLocationString)
  summary: >-
    Insère du code OOXML à l’emplacement spécifié.


    \[[Ensemble d’API : WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertOoxml(ooxml: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
    parameters:
    - id: ooxml
      description: Obligatoire. Code OOXML à insérer.
      type: string
    - id: insertLocationString
      description: Obligatoire. La valeur peut être « remplacer », « démarrer », « fin », « avant » ou « après ».
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: insertParagraph(paragraphText, insertLocation)
  uid: word!Word.Range#insertParagraph:member(1)
  package: word!
  fullName: insertParagraph(paragraphText, insertLocation)
  summary: >-
    Insère un paragraphe à l’emplacement spécifié.


    \[[Ensemble d’API : WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation): Word.Paragraph;'
    parameters:
    - id: paragraphText
      description: Obligatoire. Texte de paragraphe à insérer.
      type: string
    - id: insertLocation
      description: Obligatoire. La valeur peut être « Before » (avant) » ou « After » (après).
      type: <xref uid="word!Word.InsertLocation:enum" />
    return:
      type: <xref uid="word!Word.Paragraph:class" />
      description: "\n\n#### <a name=\"examples\"></a>範例\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Queue a command to get the current selection and then\n    // create a proxy range object with the results.\n    var range = context.document.getSelection();\n\n    // Queue a command to insert the paragraph after the range.\n    range.insertParagraph('Content of a new paragraph', Word.InsertLocation.after);\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Paragraph added to the end of the range.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: insertParagraph(paragraphText, insertLocationString)
  uid: word!Word.Range#insertParagraph:member(2)
  package: word!
  fullName: insertParagraph(paragraphText, insertLocationString)
  summary: >-
    Insère un paragraphe à l’emplacement spécifié.


    \[[Ensemble d’API : WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertParagraph(paragraphText: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Paragraph;'
    parameters:
    - id: paragraphText
      description: Obligatoire. Texte de paragraphe à insérer.
      type: string
    - id: insertLocationString
      description: Obligatoire. La valeur peut être « Before » (avant) » ou « After » (après).
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    return:
      type: <xref uid="word!Word.Paragraph:class" />
      description: ''
- name: insertText(text, insertLocation)
  uid: word!Word.Range#insertText:member(1)
  package: word!
  fullName: insertText(text, insertLocation)
  summary: >-
    Insère du texte à l’emplacement spécifié.


    \[[Ensemble d’API : WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertText(text: string, insertLocation: Word.InsertLocation): Word.Range;'
    parameters:
    - id: text
      description: Obligatoire. Texte à insérer.
      type: string
    - id: insertLocation
      description: Obligatoire. La valeur peut être « remplacer », « démarrer », « fin », « avant » ou « après ».
      type: <xref uid="word!Word.InsertLocation:enum" />
    return:
      type: <xref uid="word!Word.Range:class" />
      description: "\n\n#### <a name=\"examples\"></a>範例\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Queue a command to get the current selection and then\n    // create a proxy range object with the results.\n    var range = context.document.getSelection();\n\n    // Queue a command to insert the paragraph at the end of the range.\n    range.insertText('New text inserted into the range.', Word.InsertLocation.end);\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Text added to the end of the range.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: insertText(text, insertLocationString)
  uid: word!Word.Range#insertText:member(2)
  package: word!
  fullName: insertText(text, insertLocationString)
  summary: >-
    Insère du texte à l’emplacement spécifié.


    \[[Ensemble d’API : WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertText(text: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
    parameters:
    - id: text
      description: Obligatoire. Texte à insérer.
      type: string
    - id: insertLocationString
      description: Obligatoire. La valeur peut être « remplacer », « démarrer », « fin », « avant » ou « après ».
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: load(options)
  uid: word!Word.Range#load:member(1)
  package: word!
  fullName: load(options)
  summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(options?: Word.Interfaces.RangeLoadOptions): Word.Range;'
    parameters:
    - id: options
      description: Fournit des options pour les propriétés de l’objet à charger.
      type: <xref uid="word!Word.Interfaces.RangeLoadOptions:interface" />
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: load(propertyNames)
  uid: word!Word.Range#load:member(2)
  package: word!
  fullName: load(propertyNames)
  summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Word.Range;'
    parameters:
    - id: propertyNames
      description: Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.
      type: string | string[]
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: load(propertyNamesAndPaths)
  uid: word!Word.Range#load:member(3)
  package: word!
  fullName: load(propertyNamesAndPaths)
  summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(propertyNamesAndPaths?: {
                  select?: string;
                  expand?: string;
              }): Word.Range;
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et `propertyNamesAndPaths.expand` une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.'
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: search(searchText, searchOptions)
  uid: word!Word.Range#search:member(1)
  package: word!
  fullName: search(searchText, searchOptions)
  summary: >-
    Effectue une recherche avec le SearchOptions spécifié sur l’étendue de l’objet Range. Les résultats de la recherche sont un ensemble d’objets de plage.


    \[[Ensemble d’API : WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      search(searchText: string, searchOptions?: Word.SearchOptions | {
                  ignorePunct?: boolean;
                  ignoreSpace?: boolean;
                  matchCase?: boolean;
                  matchPrefix?: boolean;
                  matchSuffix?: boolean;
                  matchWholeWord?: boolean;
                  matchWildcards?: boolean;
              }): Word.RangeCollection;
    parameters:
    - id: searchText
      description: Obligatoire. Texte de recherche.
      type: string
    - id: searchOptions
      description: Facultatif. Options de la recherche.
      type: >-
        <xref uid="word!Word.SearchOptions:class" /> | {
                    ignorePunct?: boolean;
                    ignoreSpace?: boolean;
                    matchCase?: boolean;
                    matchPrefix?: boolean;
                    matchSuffix?: boolean;
                    matchWholeWord?: boolean;
                    matchWildcards?: boolean;
                }
    return:
      type: <xref uid="word!Word.RangeCollection:class" />
      description: ''
- name: select(selectionMode)
  uid: word!Word.Range#select:member(1)
  package: word!
  fullName: select(selectionMode)
  summary: >-
    Sélectionne la plage et y accède via l’interface utilisateur de Word.


    \[[Ensemble d’API : WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'select(selectionMode?: Word.SelectionMode): void;'
    parameters:
    - id: selectionMode
      description: Facultatif. Le mode de sélection peut être « Select » (sélectionner), « Start » (début) ou « End » (fin). « Select » (sélectionner) est la valeur par défaut.
      type: <xref uid="word!Word.SelectionMode:enum" />
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>範例\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Queue a command to get the current selection and then\n    // create a proxy range object with the results.\n    var range = context.document.getSelection();\n\n    // Queue a command to insert HTML in to the beginning of the range.\n    range.insertHtml('<strong>This is text inserted with range.insertHtml()</strong>', Word.InsertLocation.start);\n\n    // Queue a command to select the HTML that was inserted.\n    range.select();\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Selected the range.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: select(selectionModeString)
  uid: word!Word.Range#select:member(2)
  package: word!
  fullName: select(selectionModeString)
  summary: >-
    Sélectionne la plage et y accède via l’interface utilisateur de Word.


    \[[Ensemble d’API : WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'select(selectionModeString?: "Select" | "Start" | "End"): void;'
    parameters:
    - id: selectionModeString
      description: Facultatif. Le mode de sélection peut être « Select » (sélectionner), « Start » (début) ou « End » (fin). « Select » (sélectionner) est la valeur par défaut.
      type: "\"Select\" | \"Start\" | \"End\""
    return:
      type: void
      description: ''
- name: set(properties, options)
  uid: word!Word.Range#set:member(1)
  package: word!
  fullName: set(properties, options)
  summary: Définit plusieurs propriétés d’un objet en même temps. Vous pouvez transmettre un objet plain avec les propriétés appropriées, ou un autre objet API du même type.
  remarks: >-
    Cette méthode est dotée de la signature supplémentaire suivante :


    `set(properties: Word.Range): void`
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Interfaces.RangeUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    parameters:
    - id: properties
      description: Objet JavaScript avec des propriétés qui sont structurées isomorphically vers les propriétés de l’objet sur lequel la méthode est appelée.
      type: <xref uid="word!Word.Interfaces.RangeUpdateData:interface" />
    - id: options
      description: Fournit une option permettant de supprimer les erreurs si l’objet Properties tente de définir des propriétés en lecture seule.
      type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
    return:
      type: void
      description: ''
- name: set(properties)
  uid: word!Word.Range#set:member(2)
  package: word!
  fullName: set(properties)
  summary: Définit plusieurs propriétés de l’objet en même temps, en fonction d’un objet chargé existant.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Word.Range): void;'
    parameters:
    - id: properties
      description: ''
      type: <xref uid="word!Word.Range:class" />
    return:
      type: void
      description: ''
- name: toJSON()
  uid: word!Word.Range#toJSON:member(1)
  package: word!
  fullName: toJSON()
  summary: Remplace la méthode JavaScript afin `toJSON()` de fournir une sortie plus utile lorsqu’un objet d’API est transmis à `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, à son tour, appelle la `toJSON` méthode de l’objet qui lui est passé.) Tandis que l’objet Word. Range d’origine est un objet d’API, la `toJSON` méthode renvoie un objet JavaScript simple (tapé comme `Word.Interfaces.RangeData`<!-- -->) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l’objet d’origine.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Word.Interfaces.RangeData;'
    return:
      type: <xref uid="word!Word.Interfaces.RangeData:interface" />
      description: ''
- name: track()
  uid: word!Word.Range#track:member(1)
  package: word!
  fullName: track()
  summary: Effectuer le suivi de l’objet pour l’ajustement automatique en fonction environnant des modifications dans le document. Cet appel est un raccourci pour `context.trackedObjects.add(thisObject)`<!-- -->. Si vous utilisez cet objet entre `.sync` les appels et en dehors de l’exécution séquentielle d’un lot « . Run », et si vous obtenez une erreur « InvalidObjectPath » lors de la définition d’une propriété ou de l’appel d’une méthode sur l’objet, vous deviez avoir ajouté l’objet à la collection d’objets suivi lors de la création initiale de l’objet.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'track(): Word.Range;'
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: untrack()
  uid: word!Word.Range#untrack:member(1)
  package: word!
  fullName: untrack()
  summary: Publication mémoire associée à cet objet si elle a été précédemment suivie. Cet appel est un raccourci pour `context.trackedObjects.remove(thisObject)`<!-- -->. Vous rencontrez de nombreux objets suivies ralentit l’application hôte, donc n’oubliez pas de libérer les objets que l'on ajoute, une fois que vous avez terminé à les utiliser. Vous devrez appeler `context.sync()` avant que la version de mémoire ne prenne effet.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'untrack(): Word.Range;'
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: 855afb8ee26b9d4d7119cc26ddc3a2904cbb9f0d
  ms.sourcegitcommit: 551d760f6b9e7ff22afdaf6ce8e0b2863946596d
  ms.translationtype: MT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 12/04/2020
  ms.locfileid: "49570605"
