### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.RemoveDuplicatesResult:class'
    summary: "Représente les résultats de la méthode removeDuplicates sur la plage\n\n\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: Excel.RemoveDuplicatesResult
    fullName: Excel.RemoveDuplicatesResult
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.RemoveDuplicatesResult#context:member'
      - 'excel!Excel.RemoveDuplicatesResult#load:member(1)'
      - 'excel!Excel.RemoveDuplicatesResult#load:member(2)'
      - 'excel!Excel.RemoveDuplicatesResult#load:member(3)'
      - 'excel!Excel.RemoveDuplicatesResult#removed:member'
      - 'excel!Excel.RemoveDuplicatesResult#toJSON:member(1)'
      - 'excel!Excel.RemoveDuplicatesResult#uniqueRemaining:member'
  - uid: 'excel!Excel.RemoveDuplicatesResult#context:member'
    summary: Contexte de demande associé à l’objet. Cette opération connecte le processus du complément au processus de l’application hôte Office.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.RemoveDuplicatesResult#load:member(1)'
    summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.RemoveDuplicatesResultLoadOptions): Excel.RemoveDuplicatesResult;'
      return:
        type:
          - 'excel!Excel.RemoveDuplicatesResult:class'
        description: ''
      parameters:
        - id: options
          description: Fournit des options pour les propriétés de l’objet à charger.
          type:
            - 'excel!Excel.Interfaces.RemoveDuplicatesResultLoadOptions:interface'
  - uid: 'excel!Excel.RemoveDuplicatesResult#load:member(2)'
    summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.RemoveDuplicatesResult;'
      return:
        type:
          - 'excel!Excel.RemoveDuplicatesResult:class'
        description: ''
      parameters:
        - id: propertyNames
          description: Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.RemoveDuplicatesResult#load:member(3)'
    summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.RemoveDuplicatesResult;
      return:
        type:
          - 'excel!Excel.RemoveDuplicatesResult:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '`propertyNamesAndPaths.select` est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et `propertyNamesAndPaths.expand` une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.RemoveDuplicatesResult#removed:member'
    summary: "Nombre de lignes dupliquées supprimées par l’opération.\n\n\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: removed
    fullName: removed
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly removed: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.RemoveDuplicatesResult#toJSON:member(1)'
    summary: 'Remplace la méthode JavaScript afin `toJSON()` de fournir une sortie plus utile lorsqu’un objet d’API est transmis à `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, à son tour, appelle la `toJSON` méthode de l’objet qui lui est passé.) Tandis que l’objet Excel. RemoveDuplicatesResult d’origine est un objet d’API, la `toJSON` méthode renvoie un objet JavaScript simple (tapé comme `Excel.Interfaces.RemoveDuplicatesResultData`<!-- -->) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l’objet d’origine.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.RemoveDuplicatesResultData;'
      return:
        type:
          - 'excel!Excel.Interfaces.RemoveDuplicatesResultData:interface'
        description: ''
  - uid: 'excel!Excel.RemoveDuplicatesResult#uniqueRemaining:member'
    summary: "Nombre de lignes uniques restantes présents dans la plage qui en résulte.\n\n\\[[Ensemble d’API\_: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
    name: uniqueRemaining
    fullName: uniqueRemaining
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly uniqueRemaining: number;'
      return:
        type:
          - number
        description: |-


          #### <a name="examples"></a>範例

          ```typescript
          // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/42-range/range-remove-duplicates.yaml
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B2:D11");

              const deleteResult = range.removeDuplicates([0],true);    
              deleteResult.load();    
              await context.sync();

              console.log(deleteResult.removed + " entries with duplicate names removed.");
              console.log(deleteResult.uniqueRemaining + " entries with unique names remain in the range.");
          });
          ```
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.RemoveDuplicatesResult:class'
    name: Excel.RemoveDuplicatesResult
  - uid: 'excel!Excel.Interfaces.RemoveDuplicatesResultLoadOptions:interface'
    name: Excel.Interfaces.RemoveDuplicatesResultLoadOptions
  - uid: 'excel!Excel.Interfaces.RemoveDuplicatesResultData:interface'
    name: Excel.Interfaces.RemoveDuplicatesResultData