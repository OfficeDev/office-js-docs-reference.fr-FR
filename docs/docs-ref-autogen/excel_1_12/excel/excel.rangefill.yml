### YamlMime:TSType
name: Excel.RangeFill
uid: excel!Excel.RangeFill:class
package: excel!
fullName: Excel.RangeFill
summary: >-
  Représente l’arrière-plan d’un objet de plage.


  \[[Ensemble d’API : ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: color
  uid: excel!Excel.RangeFill#color:member
  package: excel!
  fullName: color
  summary: >-
    Code couleur HTML représentant la couleur de l’arrière-plan, sous la forme \# RRGGBB (par exemple, « FFA500 ») ou sous forme de couleur HTML nommée (par exemple, « orange »)


    \[[Ensemble d’API : ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'color: string;'
    return:
      type: string
- name: context
  uid: excel!Excel.RangeFill#context:member
  package: excel!
  fullName: context
  summary: Contexte de demande associé à l’objet. Cette opération connecte le processus du complément au processus de l’application hôte Office.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="excel!Excel.RequestContext:class" />
- name: pattern
  uid: excel!Excel.RangeFill#pattern:member
  package: excel!
  fullName: pattern
  summary: >-
    Motif d’une plage. Pour plus d’informations, voir Excel.FillPattern. LinearGradient et RectangularGradient ne sont pas pris en charge. Une valeur null indique que l’ensemble de la plage n’a pas de paramètre de modèle uniforme.


    \[[Ensemble d’API : ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'pattern: Excel.FillPattern | "None" | "Solid" | "Gray50" | "Gray75" | "Gray25" | "Horizontal" | "Vertical" | "Down" | "Up" | "Checker" | "SemiGray75" | "LightHorizontal" | "LightVertical" | "LightDown" | "LightUp" | "Grid" | "CrissCross" | "Gray16" | "Gray8" | "LinearGradient" | "RectangularGradient";'
    return:
      type: <xref uid="excel!Excel.FillPattern:enum" /> | "None" | "Solid" | "Gray50" | "Gray75" | "Gray25" | "Horizontal" | "Vertical" | "Down" | "Up" | "Checker" | "SemiGray75" | "LightHorizontal" | "LightVertical" | "LightDown" | "LightUp" | "Grid" | "CrissCross" | "Gray16" | "Gray8" | "LinearGradient" | "RectangularGradient"
- name: patternColor
  uid: excel!Excel.RangeFill#patternColor:member
  package: excel!
  fullName: patternColor
  summary: >-
    Code couleur HTML représentant la couleur du modèle de plage, sous la forme \# RRGGBB (par exemple, « FFA500 ») ou sous forme de couleur HTML nommée (par exemple, « orange »).


    \[[Ensemble d’API : ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'patternColor: string;'
    return:
      type: string
- name: patternTintAndShade
  uid: excel!Excel.RangeFill#patternTintAndShade:member
  package: excel!
  fullName: patternTintAndShade
  summary: >-
    Spécifie un double qui éclaircit ou assombrit une couleur de motif pour le remplissage de la plage, la valeur est comprise entre-1 (sombre) et 1 (le plus clair), 0 pour la couleur d’origine. Si le modèle tintAndShades n’est pas uniforme, la valeur null est renvoyée.


    \[[Ensemble d’API : ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'patternTintAndShade: number;'
    return:
      type: number
- name: tintAndShade
  uid: excel!Excel.RangeFill#tintAndShade:member
  package: excel!
  fullName: tintAndShade
  summary: >-
    Spécifie un double qui éclaircit ou assombrit une couleur pour le remplissage de la plage. La valeur est comprise entre-1 (le plus foncé) et 1 (le plus clair), 0 pour la couleur d’origine. Si les tintAndShades ne sont pas uniformes, la valeur null est renvoyée.


    \[[Ensemble d’API : ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'tintAndShade: number;'
    return:
      type: number
methods:
- name: clear()
  uid: excel!Excel.RangeFill#clear:member(1)
  package: excel!
  fullName: clear()
  summary: >-
    Réinitialise l’arrière-plan de la plage.


    \[[Ensemble d’API : ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'clear(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>範例\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"F:G\";\n    var worksheet = ctx.workbook.worksheets.getItem(sheetName);\n    var range = worksheet.getRange(rangeAddress);\n    var rangeFill = range.format.fill;\n    rangeFill.clear();\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: load(options)
  uid: excel!Excel.RangeFill#load:member(1)
  package: excel!
  fullName: load(options)
  summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(options?: Excel.Interfaces.RangeFillLoadOptions): Excel.RangeFill;'
    parameters:
    - id: options
      description: Fournit des options pour les propriétés de l’objet à charger.
      type: <xref uid="excel!Excel.Interfaces.RangeFillLoadOptions:interface" />
    return:
      type: <xref uid="excel!Excel.RangeFill:class" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.RangeFill#load:member(2)
  package: excel!
  fullName: load(propertyNames)
  summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.RangeFill;'
    parameters:
    - id: propertyNames
      description: Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.
      type: string | string[]
    return:
      type: <xref uid="excel!Excel.RangeFill:class" />
      description: "\n\n#### <a name=\"examples\"></a>範例\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"F:G\";\n    var worksheet = ctx.workbook.worksheets.getItem(sheetName);\n    var range = worksheet.getRange(rangeAddress);\n    var rangeFill = range.format.fill;\n    rangeFill.load('color');\n    return ctx.sync().then(function() {\n        console.log(rangeFill.color);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// The example below sets fill color. \nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"F:G\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);\n    range.format.fill.color = '0000FF';\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: load(propertyNamesAndPaths)
  uid: excel!Excel.RangeFill#load:member(3)
  package: excel!
  fullName: load(propertyNamesAndPaths)
  summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(propertyNamesAndPaths?: {
                  select?: string;
                  expand?: string;
              }): Excel.RangeFill;
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et `propertyNamesAndPaths.expand` une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.'
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="excel!Excel.RangeFill:class" />
      description: ''
- name: set(properties, options)
  uid: excel!Excel.RangeFill#set:member(1)
  package: excel!
  fullName: set(properties, options)
  summary: Définit plusieurs propriétés d’un objet en même temps. Vous pouvez transmettre un objet plain avec les propriétés appropriées, ou un autre objet API du même type.
  remarks: >-
    Cette méthode est dotée de la signature supplémentaire suivante :


    `set(properties: Excel.RangeFill): void`
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Interfaces.RangeFillUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    parameters:
    - id: properties
      description: Objet JavaScript avec des propriétés qui sont structurées isomorphically vers les propriétés de l’objet sur lequel la méthode est appelée.
      type: <xref uid="excel!Excel.Interfaces.RangeFillUpdateData:interface" />
    - id: options
      description: Fournit une option permettant de supprimer les erreurs si l’objet Properties tente de définir des propriétés en lecture seule.
      type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
    return:
      type: void
      description: ''
- name: set(properties)
  uid: excel!Excel.RangeFill#set:member(2)
  package: excel!
  fullName: set(properties)
  summary: Définit plusieurs propriétés de l’objet en même temps, en fonction d’un objet chargé existant.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Excel.RangeFill): void;'
    parameters:
    - id: properties
      description: ''
      type: <xref uid="excel!Excel.RangeFill:class" />
    return:
      type: void
      description: ''
- name: toJSON()
  uid: excel!Excel.RangeFill#toJSON:member(1)
  package: excel!
  fullName: toJSON()
  summary: Remplace la méthode JavaScript afin `toJSON()` de fournir une sortie plus utile lorsqu’un objet d’API est transmis à `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, à son tour, appelle la `toJSON` méthode de l’objet qui lui est passé.) Tandis que l’objet Excel. RangeFill d’origine est un objet d’API, la `toJSON` méthode renvoie un objet JavaScript simple (tapé comme `Excel.Interfaces.RangeFillData`<!-- -->) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l’objet d’origine.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Excel.Interfaces.RangeFillData;'
    return:
      type: <xref uid="excel!Excel.Interfaces.RangeFillData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: 2480cb271a5ef8f99d24b61a04a172eea58e09bb
  ms.sourcegitcommit: 3bab97ab3b91da7cca497f6fc895408a76bd8b46
  ms.translationtype: MT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 11/18/2020
  ms.locfileid: "49201918"
