### YamlMime:TSType
name: Visio.PageCollection
uid: visio!Visio.PageCollection:class
package: visio!
fullName: Visio.PageCollection
summary: >-
  Représente une collection d’objets Page faisant partie du document.


  \[[Ensemble d’API : 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: context
  uid: visio!Visio.PageCollection#context:member
  package: visio!
  fullName: context
  summary: Contexte de demande associé à l’objet. Cette opération connecte le processus du complément au processus de l’application hôte Office.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="visio!Visio.RequestContext:class" />
- name: items
  uid: visio!Visio.PageCollection#items:member
  package: visio!
  fullName: items
  summary: Obtient l’élément enfant chargé dans cette collection de sites.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly items: Visio.Page[];'
    return:
      type: <xref uid="visio!Visio.Page:class" />[]
methods:
- name: getCount()
  uid: visio!Visio.PageCollection#getCount:member(1)
  package: visio!
  fullName: getCount()
  summary: >-
    Obtient le nombre de pages de la collection.


    \[[Ensemble d’API : 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;number&gt;
      description: ''
- name: getItem(key)
  uid: visio!Visio.PageCollection#getItem:member(1)
  package: visio!
  fullName: getItem(key)
  summary: >-
    Obtient une page à l’aide de sa clé (nom ou ID).


    \[[Ensemble d’API : 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getItem(key: number | string): Visio.Page;'
    parameters:
    - id: key
      description: La clé est le nom ou l’ID de la page à récupérer.
      type: number | string
    return:
      type: <xref uid="visio!Visio.Page:class" />
      description: "\n\n#### <a name=\"examples\"></a>範例\n\n```javascript\nVisio.run(session, function (ctx) {\n    var pageName = 'Page-1';\n    var page = ctx.document.pages.getItem(pageName);\n    page.activate();\n    return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: load(option)
  uid: visio!Visio.PageCollection#load:member(1)
  package: visio!
  fullName: load(option)
  summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez appeler « context.sync() » avant de lire les propriétés.
  remarks: >-
    En plus de cette signature, cette méthode possède les signatures suivantes :


    `load(option?: string | string[]): Visio.PageCollection` -WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.


    `load(option?: { select?: string; expand?: string; }): Visio.PageCollection` Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.PageCollection` -Uniquement disponible sur les types de collection. Elle est similaire à la signature précédente. Option. Top indique le nombre maximal d’éléments de collection qui peuvent être inclus dans le résultat. Option. Skip indique le nombre d’éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat. Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d’éléments.
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(option?: Visio.Interfaces.PageCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions): Visio.PageCollection;'
    parameters:
    - id: option
      description: ''
      type: <xref uid="visio!Visio.Interfaces.PageCollectionLoadOptions:interface" /> & <xref uid="visio!Visio.Interfaces.CollectionLoadOptions:interface" />
    return:
      type: <xref uid="visio!Visio.PageCollection:class" />
      description: ''
- name: load(propertyNames)
  uid: visio!Visio.PageCollection#load:member(2)
  package: visio!
  fullName: load(propertyNames)
  summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Visio.PageCollection;'
    parameters:
    - id: propertyNames
      description: Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.
      type: string | string[]
    return:
      type: <xref uid="visio!Visio.PageCollection:class" />
      description: ''
- name: load(option)
  uid: visio!Visio.PageCollection#load:member(3)
  package: visio!
  fullName: load(option)
  summary: ''
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Visio.PageCollection;'
    parameters:
    - id: option
      description: ''
      type: <xref uid="office!OfficeExtension.LoadOption:interface" />
    return:
      type: <xref uid="visio!Visio.PageCollection:class" />
      description: ''
- name: toJSON()
  uid: visio!Visio.PageCollection#toJSON:member(1)
  package: visio!
  fullName: toJSON()
  summary: Remplace la méthode JavaScript afin `toJSON()` de fournir une sortie plus utile lorsqu’un objet d’API est transmis à `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, à son tour, appelle la `toJSON` méthode de l’objet qui lui est passé.) Tandis que l’objet d’origine `Visio.PageCollection` est un objet d’API, la `toJSON` méthode renvoie un objet JavaScript simple (tapé comme `Visio.Interfaces.PageCollectionData`<!-- -->) qui contient un tableau « éléments » avec des copies superficielles de toutes les propriétés chargées des éléments de la collection.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Visio.Interfaces.PageCollectionData;'
    return:
      type: <xref uid="visio!Visio.Interfaces.PageCollectionData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: 4fa8dad69723c5964c36ff02de45e00227dce14c
  ms.sourcegitcommit: 3bab97ab3b91da7cca497f6fc895408a76bd8b46
  ms.translationtype: MT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 11/18/2020
  ms.locfileid: "49150161"
