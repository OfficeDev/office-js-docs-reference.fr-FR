### YamlMime:UniversalReference
items:
  - uid: 'visio!Visio.ShapeMouseEnterEventArgs:interface'
    summary: "Fournit des informations sur la forme qui a déclenché l’événement ShapeMouseEnter.\n\n\\[[Ensemble d’API\_: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\\]"
    name: Visio.ShapeMouseEnterEventArgs
    fullName: Visio.ShapeMouseEnterEventArgs
    langs:
      - typeScript
    type: interface
    package: visio!
    remarks: |-


      #### <a name="examples"></a>Exemples

      ```javascript
      Visio.run(session, function (ctx) {
          var document1= ctx.document;
          eventResult2 = document1.onShapeMouseEnter.add(
          function (args) {            
              console.log(Date.now()+":OnShapeMouseEnter Event"+JSON.stringify(args));
          });
          return ctx.sync().then(function () {
              console.log("Success");
          });
      }).catch(function(error) {
          console.log("Error: " + error);
          if (error instanceof OfficeExtension.Error) {
              console.log("Debug info: " + JSON.stringify(error.debugInfo));
          }
      });
      ```
    children:
      - 'visio!Visio.ShapeMouseEnterEventArgs#pageName:member'
      - 'visio!Visio.ShapeMouseEnterEventArgs#shapeName:member'
  - uid: 'visio!Visio.ShapeMouseEnterEventArgs#pageName:member'
    summary: "Obtient le nom de la page contenant l’objet de forme qui a déclenché l’événement ShapeMouseEnter.\n\n\\[[Ensemble d’API\_: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\\]"
    name: pageName
    fullName: pageName
    langs:
      - typeScript
    type: property
    syntax:
      content: 'pageName: string;'
      return:
        type:
          - string
  - uid: 'visio!Visio.ShapeMouseEnterEventArgs#shapeName:member'
    summary: "Obtient le nom de l’objet de forme qui a déclenché l’événement ShapeMouseEnter.\n\n\\[[Ensemble d’API\_: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\\]"
    name: shapeName
    fullName: shapeName
    langs:
      - typeScript
    type: property
    syntax:
      content: 'shapeName: string;'
      return:
        type:
          - string