### YamlMime:TSType
name: Visio.Selection
uid: visio!Visio.Selection:class
package: visio!
fullName: Visio.Selection
summary: >-
  Représente la sélection dans la page.


  \[[Ensemble d’API : 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: context
  uid: visio!Visio.Selection#context:member
  package: visio!
  fullName: context
  summary: Contexte de demande associé à l’objet. Cela connecte le processus du add-in au processus de l’application hôte Office.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="visio!Visio.RequestContext:class" />
- name: shapes
  uid: visio!Visio.Selection#shapes:member
  package: visio!
  fullName: shapes
  summary: >-
    Obtient les formes de la sélection. En lecture seule.


    \[[Ensemble d’API : 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly shapes: Visio.ShapeCollection;'
    return:
      type: <xref uid="visio!Visio.ShapeCollection:class" />
methods:
- name: load(propertyNames)
  uid: visio!Visio.Selection#load:member(1)
  package: visio!
  fullName: load(propertyNames)
  summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Visio.Selection;'
    parameters:
    - id: propertyNames
      description: Chaîne délimitée par des virgules ou tableau de chaînes spécifiant les propriétés à charger.
      type: string | string[]
    return:
      type: <xref uid="visio!Visio.Selection:class" />
      description: ''
- name: load(option)
  uid: visio!Visio.Selection#load:member(2)
  package: visio!
  fullName: load(option)
  summary: ''
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(option?: {
                  select?: string;
                  expand?: string;
              }): Visio.Selection;
    parameters:
    - id: option
      description: ''
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="visio!Visio.Selection:class" />
      description: ''
- name: toJSON()
  uid: visio!Visio.Selection#toJSON:member(1)
  package: visio!
  fullName: toJSON()
  summary: Remplace la méthode JavaScript afin de fournir une sortie plus utile lorsqu’un objet `toJSON()` API est transmis à `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, à son tour, appelle `toJSON` la méthode de l’objet qui lui est transmis.) Alors que l’objet Visio.Selection d’origine est un objet API, la méthode renvoie un objet `toJSON` JavaScript simple (tapé sous la forme `Visio.Interfaces.SelectionData`<!-- -->) qui contient des copies superficiels de toutes les propriétés enfants chargées à partir de l’objet d’origine.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Visio.Interfaces.SelectionData;'
    return:
      type: <xref uid="visio!Visio.Interfaces.SelectionData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: fc5b90ca320a53f31f78dda310bfdd4f6327f262
  ms.sourcegitcommit: 276e655472f82435a4b1227fbbb2feb687b659c0
  ms.translationtype: MT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 03/08/2021
  ms.locfileid: "50542061"
