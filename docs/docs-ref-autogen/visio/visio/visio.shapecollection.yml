### YamlMime:TSType
name: Visio.ShapeCollection
uid: visio!Visio.ShapeCollection:class
package: visio!
fullName: Visio.ShapeCollection
summary: >-
  Représente la collection Shape.


  \[[Ensemble d’API : 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: context
  uid: visio!Visio.ShapeCollection#context:member
  package: visio!
  fullName: context
  summary: Contexte de demande associé à l’objet. Cela connecte le processus du add-in au processus de l’application hôte Office.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="visio!Visio.RequestContext:class" />
- name: items
  uid: visio!Visio.ShapeCollection#items:member
  package: visio!
  fullName: items
  summary: Obtient l’élément enfant chargé dans cette collection de sites.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly items: Visio.Shape[];'
    return:
      type: <xref uid="visio!Visio.Shape:class" />[]
methods:
- name: getCount()
  uid: visio!Visio.ShapeCollection#getCount:member(1)
  package: visio!
  fullName: getCount()
  summary: >-
    Obtient le nombre de formes de la collection.


    \[[Ensemble d’API : 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;number&gt;
      description: "\n\n#### <a name=\"examples\"></a>Exemples\n\n```javascript\nVisio.run(session, function (ctx) {\n    var activePage = ctx.document.getActivePage();\n    var numShapesActivePage = activePage.shapes.getCount();\n    return ctx.sync().then(function () {\n        console.log(\"Shapes Count: \" + numShapesActivePage.value);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: getItem(key)
  uid: visio!Visio.ShapeCollection#getItem:member(1)
  package: visio!
  fullName: getItem(key)
  summary: >-
    Obtient une forme à l’aide de sa clé (nom ou index).


    \[[Ensemble d’API : 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getItem(key: number | string): Visio.Shape;'
    parameters:
    - id: key
      description: La clé est le nom ou l’index de la forme à récupérer.
      type: number | string
    return:
      type: <xref uid="visio!Visio.Shape:class" />
      description: ''
- name: load(option)
  uid: visio!Visio.ShapeCollection#load:member(1)
  package: visio!
  fullName: load(option)
  summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez appeler « context.sync() » avant de lire les propriétés.
  remarks: >-
    Outre cette signature, cette méthode possède les signatures suivantes :


    `load(option?: string | string[]): Visio.ShapeCollection` - Où l’option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.


    `load(option?: { select?: string; expand?: string; }): Visio.ShapeCollection` - Where option.select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger, et options.expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.ShapeCollection` - Disponible uniquement sur les types de collection. Il est similaire à la signature précédente. Option.top spécifie le nombre maximal d’éléments de collection qui peuvent être inclus dans le résultat. Option.skip spécifie le nombre d’éléments à ignorer et à ne pas inclure dans le résultat. Si option.top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre d’éléments spécifié.
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(option?: Visio.Interfaces.ShapeCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions): Visio.ShapeCollection;'
    parameters:
    - id: option
      description: ''
      type: <xref uid="visio!Visio.Interfaces.ShapeCollectionLoadOptions:interface" /> & <xref uid="visio!Visio.Interfaces.CollectionLoadOptions:interface" />
    return:
      type: <xref uid="visio!Visio.ShapeCollection:class" />
      description: ''
- name: load(propertyNames)
  uid: visio!Visio.ShapeCollection#load:member(2)
  package: visio!
  fullName: load(propertyNames)
  summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Visio.ShapeCollection;'
    parameters:
    - id: propertyNames
      description: Chaîne délimitée par des virgules ou tableau de chaînes spécifiant les propriétés à charger.
      type: string | string[]
    return:
      type: <xref uid="visio!Visio.ShapeCollection:class" />
      description: ''
- name: load(option)
  uid: visio!Visio.ShapeCollection#load:member(3)
  package: visio!
  fullName: load(option)
  summary: ''
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Visio.ShapeCollection;'
    parameters:
    - id: option
      description: ''
      type: <xref uid="office!OfficeExtension.LoadOption:interface" />
    return:
      type: <xref uid="visio!Visio.ShapeCollection:class" />
      description: ''
- name: toJSON()
  uid: visio!Visio.ShapeCollection#toJSON:member(1)
  package: visio!
  fullName: toJSON()
  summary: Remplace la méthode JavaScript afin de fournir une sortie plus utile lorsqu’un objet `toJSON()` API est transmis à `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, à son tour, appelle `toJSON` la méthode de l’objet qui lui est transmis.) Alors que `Visio.ShapeCollection` l’objet d’origine est un objet API, la méthode renvoie un objet `toJSON` JavaScript simple (tapé sous la forme `Visio.Interfaces.ShapeCollectionData`<!-- -->) qui contient un tableau « éléments » avec des copies peu profondes de toutes les propriétés chargées à partir des éléments de la collection.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Visio.Interfaces.ShapeCollectionData;'
    return:
      type: <xref uid="visio!Visio.Interfaces.ShapeCollectionData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: 140b60adda31f6fc508cced8021f833a8bfab1ac
  ms.sourcegitcommit: a8a86cfcaff5ad7dacc653d63502c76b1fedbebe
  ms.translationtype: MT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 03/26/2021
  ms.locfileid: "51357968"
