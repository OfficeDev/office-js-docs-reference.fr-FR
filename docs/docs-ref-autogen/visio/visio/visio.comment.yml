### YamlMime:UniversalReference
items:
  - uid: 'visio!Visio.Comment:class'
    summary: "<span data-ttu-id=\"ab11a-101\">Représente le commentaire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ab11a-101\">Represents the Comment.</span></span>\n\n<span data-ttu-id=\"ab11a-102\">\\[[Ensemble d’API\_: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"ab11a-102\">\\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \\]</span></span>"
    name: Visio.Comment
    fullName: Visio.Comment
    langs:
      - typeScript
    type: class
    extends:
      - 'visio!OfficeExtension.ClientObject:class'
    package: visio!
    children:
      - 'visio!Visio.Comment#author:member'
      - 'visio!Visio.Comment#context:member'
      - 'visio!Visio.Comment#date:member'
      - 'visio!Visio.Comment#load:member(1)'
      - 'visio!Visio.Comment#load:member(2)'
      - 'visio!Visio.Comment#load:member(3)'
      - 'visio!Visio.Comment#set:member(1)'
      - 'visio!Visio.Comment#set:member(2)'
      - 'visio!Visio.Comment#text:member'
      - 'visio!Visio.Comment#toJSON:member(1)'
  - uid: 'visio!Visio.Comment#author:member'
    summary: "<span data-ttu-id=\"ab11a-103\">Chaîne indiquant le nom de l’auteur du commentaire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ab11a-103\">A string that specifies the name of the author of the comment.</span></span>\n\n<span data-ttu-id=\"ab11a-104\">\\[[Ensemble d’API\_: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"ab11a-104\">\\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \\]</span></span>"
    name: author
    fullName: author
    langs:
      - typeScript
    type: property
    syntax:
      content: 'author: string;'
      return:
        type:
          - string
  - uid: 'visio!Visio.Comment#context:member'
    summary: <span data-ttu-id="ab11a-105">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="ab11a-105">The request context associated with the object.</span></span> <span data-ttu-id="ab11a-106">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="ab11a-106">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'visio!Visio.RequestContext:class'
  - uid: 'visio!Visio.Comment#date:member'
    summary: "<span data-ttu-id=\"ab11a-107\">Chaîne spécifiant la date à laquelle le commentaire a été créé.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ab11a-107\">A string that specifies the date when the comment was created.</span></span>\n\n<span data-ttu-id=\"ab11a-108\">\\[[Ensemble d’API\_: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"ab11a-108\">\\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \\]</span></span>"
    name: date
    fullName: date
    langs:
      - typeScript
    type: property
    syntax:
      content: 'date: string;'
      return:
        type:
          - string
  - uid: 'visio!Visio.Comment#load:member(1)'
    summary: "<span data-ttu-id=\"ab11a-109\">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ab11a-109\">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id=\"ab11a-110\">Vous devez appeler «\_context.sync()\_» avant de lire les propriétés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ab11a-110\">You must call \"context.sync()\" before reading the properties.</span></span>"
    remarks: "<span data-ttu-id=\"ab11a-111\">En plus de cette signature, cette méthode possède les signatures suivantes\_:</span><span class=\"sxs-lookup\"><span data-stu-id=\"ab11a-111\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"ab11a-112\">`load(option?: string | string[]): Visio.Comment`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ab11a-112\">`load(option?: string | string[]): Visio.Comment` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>\n\n<span data-ttu-id=\"ab11a-113\">`load(option?: { select?: string; expand?: string; }): Visio.Comment`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ab11a-113\">`load(option?: { select?: string; expand?: string; }): Visio.Comment` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"ab11a-114\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Comment`-Uniquement disponible sur les types de collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ab11a-114\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Comment` - Only available on collection types.</span></span> <span data-ttu-id=\"ab11a-115\">Elle est similaire à la signature précédente.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ab11a-115\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"ab11a-116\">Option. Top indique le nombre maximal d’éléments de collection qui peuvent être inclus dans le résultat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ab11a-116\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"ab11a-117\">Option. Skip indique le nombre d’éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ab11a-117\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"ab11a-118\">Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d’éléments.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ab11a-118\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>\n\n#### <a name=\"examples\"></a><span data-ttu-id=\"ab11a-119\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"ab11a-119\">Examples</span></span>\n\n```javascript\nVisio.run(session, function (ctx) {\n    var activePage = ctx.document.getActivePage();\n    var shapeName = \"Position Belt.41\";\n    var shape = activePage.shapes.getItem(shapeName);\n    var shapeComments= shape.comments;\n    shapeComments.load([\"author\", \"text\"]);\n    return ctx.sync().then(function () {\n        for(var i = 0; i < shapeComments.items.length; i++)\n        {\n            var comment = shapeComments.items[i];\n            console.log(\"comment Author: \" + comment.author);\n            console.log(\"Comment Text: \" + comment.text);\n            console.log(\"Date \" + comment.date);\n        }\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Visio.Interfaces.CommentLoadOptions): Visio.Comment;'
      return:
        type:
          - 'visio!Visio.Comment:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'visio!Visio.Interfaces.CommentLoadOptions:interface'
  - uid: 'visio!Visio.Comment#load:member(2)'
    summary: <span data-ttu-id="ab11a-120">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="ab11a-120">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="ab11a-121">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="ab11a-121">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Visio.Comment;'
      return:
        type:
          - 'visio!Visio.Comment:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="ab11a-122">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="ab11a-122">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'visio!Visio.Comment#load:member(3)'
    summary: <span data-ttu-id="ab11a-123">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="ab11a-123">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="ab11a-124">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="ab11a-124">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Visio.Comment;'
      return:
        type:
          - 'visio!Visio.Comment:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="ab11a-125">Où propertyNamesAndPaths. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et propertyNamesAndPaths. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="ab11a-125">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'visio!Visio.Comment#set:member(1)'
    summary: '<span data-ttu-id="ab11a-126">Définit plusieurs propriétés d’un objet en même temps.</span><span class="sxs-lookup"><span data-stu-id="ab11a-126">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="ab11a-127">Vous pouvez transmettre un objet plain avec les propriétés appropriées, ou un autre objet API du même type.</span><span class="sxs-lookup"><span data-stu-id="ab11a-127">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: "<span data-ttu-id=\"ab11a-128\">Cette méthode est dotée de la signature supplémentaire suivante\_:</span><span class=\"sxs-lookup\"><span data-stu-id=\"ab11a-128\">This method has the following additional signature:</span></span>\n\n`set(properties: Visio.Comment): void`"
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.CommentUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="ab11a-129">Objet JavaScript avec des propriétés qui sont structurées isomorphically vers les propriétés de l’objet sur lequel la méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="ab11a-129">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'visio!Visio.Interfaces.CommentUpdateData:interface'
        - id: options
          description: <span data-ttu-id="ab11a-130">Fournit une option permettant de supprimer les erreurs si l’objet Properties tente de définir des propriétés en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="ab11a-130">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'visio!OfficeExtension.UpdateOptions:interface'
  - uid: 'visio!Visio.Comment#set:member(2)'
    summary: '<span data-ttu-id="ab11a-131">Définit plusieurs propriétés de l’objet en même temps, en fonction d’un objet chargé existant.</span><span class="sxs-lookup"><span data-stu-id="ab11a-131">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Visio.Comment): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'visio!Visio.Comment:class'
  - uid: 'visio!Visio.Comment#text:member'
    summary: "<span data-ttu-id=\"ab11a-132\">Chaîne contenant le texte du commentaire.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ab11a-132\">A string that contains the comment text.</span></span>\n\n<span data-ttu-id=\"ab11a-133\">\\[[Ensemble d’API\_: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"ab11a-133\">\\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \\]</span></span>"
    name: text
    fullName: text
    langs:
      - typeScript
    type: property
    syntax:
      content: 'text: string;'
      return:
        type:
          - string
  - uid: 'visio!Visio.Comment#toJSON:member(1)'
    summary: '<span data-ttu-id="ab11a-134">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="ab11a-134">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="ab11a-135">.</span><span class="sxs-lookup"><span data-stu-id="ab11a-135"></span></span> <span data-ttu-id="ab11a-136">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="ab11a-136"></span></span><!-- --><span data-ttu-id="ab11a-137">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que l’objet Visio. Comment est un objet d’API `toJSON` , la méthode renvoie un objet JavaScript simple (tapé comme`Visio.Interfaces.CommentData`</span><span class="sxs-lookup"><span data-stu-id="ab11a-137">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Visio.Comment object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Visio.Interfaces.CommentData`</span></span><!-- --><span data-ttu-id="ab11a-138">) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l’objet d’origine.</span><span class="sxs-lookup"><span data-stu-id="ab11a-138">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Visio.Interfaces.CommentData;'
      return:
        type:
          - 'visio!Visio.Interfaces.CommentData:interface'
        description: ''
references:
  - uid: 'visio!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'visio!Visio.RequestContext:class'
    name: RequestContext
  - uid: 'visio!Visio.Comment:class'
    name: Visio.Comment
  - uid: 'visio!Visio.Interfaces.CommentLoadOptions:interface'
    name: Visio.Interfaces.CommentLoadOptions
  - uid: 'visio!Visio.Interfaces.CommentUpdateData:interface'
    name: Interfaces.CommentUpdateData
  - uid: 'visio!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'visio!Visio.Interfaces.CommentData:interface'
    name: Visio.Interfaces.CommentData