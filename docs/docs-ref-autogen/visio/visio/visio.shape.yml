### YamlMime:TSType
name: Visio.Shape
uid: visio!Visio.Shape:class
package: visio!
fullName: Visio.Shape
summary: >-
  Représente la classe Shape.


  \[[Ensemble d’API : 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: comments
  uid: visio!Visio.Shape#comments:member
  package: visio!
  fullName: comments
  summary: >-
    Renvoie la collection de commentaires. En lecture seule.


    \[[Ensemble d’API : 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly comments: Visio.CommentCollection;'
    return:
      type: <xref uid="visio!Visio.CommentCollection:class" />
- name: context
  uid: visio!Visio.Shape#context:member
  package: visio!
  fullName: context
  summary: Contexte de demande associé à l’objet. Cela connecte le processus du add-in au processus de l’application hôte Office.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="visio!Visio.RequestContext:class" />
- name: hyperlinks
  uid: visio!Visio.Shape#hyperlinks:member
  package: visio!
  fullName: hyperlinks
  summary: >-
    Renvoie la collection Hyperlinks d’un objet Shape. En lecture seule.


    \[[Ensemble d’API : 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly hyperlinks: Visio.HyperlinkCollection;'
    return:
      type: <xref uid="visio!Visio.HyperlinkCollection:class" />
- name: id
  uid: visio!Visio.Shape#id:member
  package: visio!
  fullName: id
  summary: >-
    Identificateur de la forme. En lecture seule.


    \[[Ensemble d’API : 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly id: number;'
    return:
      type: number
- name: name
  uid: visio!Visio.Shape#name:member
  package: visio!
  fullName: name
  summary: >-
    Nom de l’objet Shape. En lecture seule.


    \[[Ensemble d’API : 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly name: string;'
    return:
      type: string
- name: select
  uid: visio!Visio.Shape#select:member
  package: visio!
  fullName: select
  summary: >-
    Renvoie True si l’objet Shape est sélectionné. L’utilisateur peut le définir sur True pour sélectionner explicitement l’objet Shape.


    \[[Ensemble d’API : 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'select: boolean;'
    return:
      type: boolean
- name: shapeDataItems
  uid: visio!Visio.Shape#shapeDataItems:member
  package: visio!
  fullName: shapeDataItems
  summary: >-
    Renvoie la section de données de l’objet Shape. En lecture seule.


    \[[Ensemble d’API : 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly shapeDataItems: Visio.ShapeDataItemCollection;'
    return:
      type: <xref uid="visio!Visio.ShapeDataItemCollection:class" />
- name: subShapes
  uid: visio!Visio.Shape#subShapes:member
  package: visio!
  fullName: subShapes
  summary: >-
    Obtient la collection SubShape. En lecture seule.


    \[[Ensemble d’API : 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly subShapes: Visio.ShapeCollection;'
    return:
      type: <xref uid="visio!Visio.ShapeCollection:class" />
- name: text
  uid: visio!Visio.Shape#text:member
  package: visio!
  fullName: text
  summary: >-
    Texte de la forme. En lecture seule.


    \[[Ensemble d’API : 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly text: string;'
    return:
      type: string
- name: view
  uid: visio!Visio.Shape#view:member
  package: visio!
  fullName: view
  summary: >-
    Renvoie l’affichage de la forme. En lecture seule.


    \[[Ensemble d’API : 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly view: Visio.ShapeView;'
    return:
      type: <xref uid="visio!Visio.ShapeView:class" />
methods:
- name: getBounds()
  uid: visio!Visio.Shape#getBounds:member(1)
  package: visio!
  fullName: getBounds()
  summary: >-
    Renvoie l’objet BoundingBox qui spécifie le cadre englobant de la forme.


    \[[Ensemble d’API : 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getBounds(): OfficeExtension.ClientResult<Visio.BoundingBox>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;<xref uid="visio!Visio.BoundingBox:interface" />&gt;
      description: ''
- name: load(option)
  uid: visio!Visio.Shape#load:member(1)
  package: visio!
  fullName: load(option)
  summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez appeler « context.sync() » avant de lire les propriétés.
  remarks: >-
    Outre cette signature, cette méthode possède les signatures suivantes :


    `load(option?: string | string[]): Visio.Shape` - Où l’option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.


    `load(option?: { select?: string; expand?: string; }): Visio.Shape` - Where option.select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger, et options.expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Shape` - Disponible uniquement sur les types de collection. Il est similaire à la signature précédente. Option.top spécifie le nombre maximal d’éléments de collection qui peuvent être inclus dans le résultat. Option.skip spécifie le nombre d’éléments à ignorer et à ne pas inclure dans le résultat. Si option.top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre d’éléments spécifié.
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(option?: Visio.Interfaces.ShapeLoadOptions): Visio.Shape;'
    parameters:
    - id: option
      description: ''
      type: <xref uid="visio!Visio.Interfaces.ShapeLoadOptions:interface" />
    return:
      type: <xref uid="visio!Visio.Shape:class" />
      description: ''
- name: load(propertyNames)
  uid: visio!Visio.Shape#load:member(2)
  package: visio!
  fullName: load(propertyNames)
  summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Visio.Shape;'
    parameters:
    - id: propertyNames
      description: Chaîne délimitée par des virgules ou tableau de chaînes spécifiant les propriétés à charger.
      type: string | string[]
    return:
      type: <xref uid="visio!Visio.Shape:class" />
      description: "\n\n#### <a name=\"examples\"></a>Exemples\n\n```javascript\nVisio.run(session, function (ctx) {\n    var activePage = ctx.document.getActivePage();\n    var shapeName = \"Sample Name\";\n    var shape = activePage.shapes.getItem(shapeName);\n    shape.load([\"name\", \"id\", \"text\", \"select\"]);\n    return ctx.sync().then(function () {\n        console.log(shape.name);\n        console.log(shape.id);\n        console.log(shape.text);\n        console.log(shape.select);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nVisio.run(session, function (ctx) {\n    var activePage = ctx.document.getActivePage();\n    var shape = activePage.shapes.getItem(0);\n    shape.view.highlight = { color: \"#E7E7E7\", width: 100 };\n    return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: load(propertyNamesAndPaths)
  uid: visio!Visio.Shape#load:member(3)
  package: visio!
  fullName: load(propertyNamesAndPaths)
  summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Visio.Shape;'
    parameters:
    - id: propertyNamesAndPaths
      description: Où propertyNamesAndPaths.select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger, et propertyNamesAndPaths.expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.
      type: '{ select?: string; expand?: string; }'
    return:
      type: <xref uid="visio!Visio.Shape:class" />
      description: ''
- name: set(properties, options)
  uid: visio!Visio.Shape#set:member(1)
  package: visio!
  fullName: set(properties, options)
  summary: Définit plusieurs propriétés d’un objet en même temps. Vous pouvez transmettre un objet simple avec les propriétés appropriées ou un autre objet API du même type.
  remarks: >-
    Cette méthode possède la signature supplémentaire suivante :


    `set(properties: Visio.Shape): void`
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Interfaces.ShapeUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    parameters:
    - id: properties
      description: Objet JavaScript avec des propriétés structurées de manière isomorphe aux propriétés de l’objet sur lequel la méthode est appelée.
      type: <xref uid="visio!Visio.Interfaces.ShapeUpdateData:interface" />
    - id: options
      description: Fournit une option pour supprimer les erreurs si l’objet propriétés tente de définir des propriétés en lecture seule.
      type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
    return:
      type: void
      description: ''
- name: set(properties)
  uid: visio!Visio.Shape#set:member(2)
  package: visio!
  fullName: set(properties)
  summary: Définit plusieurs propriétés de l’objet en même temps, en fonction d’un objet chargé existant.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Visio.Shape): void;'
    parameters:
    - id: properties
      description: ''
      type: <xref uid="visio!Visio.Shape:class" />
    return:
      type: void
      description: ''
- name: toJSON()
  uid: visio!Visio.Shape#toJSON:member(1)
  package: visio!
  fullName: toJSON()
  summary: Remplace la méthode JavaScript afin de fournir une sortie plus utile lorsqu’un objet `toJSON()` API est transmis à `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, à son tour, appelle `toJSON` la méthode de l’objet qui lui est transmis.) Alors que l’objet Visio.Shape d’origine est un objet API, la méthode renvoie un objet `toJSON` JavaScript simple (tapé sous la forme `Visio.Interfaces.ShapeData`<!-- -->) qui contient des copies superficiels de toutes les propriétés enfants chargées à partir de l’objet d’origine.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Visio.Interfaces.ShapeData;'
    return:
      type: <xref uid="visio!Visio.Interfaces.ShapeData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: 2ae337630aa8a8cbd8c71b845e4d3436538b5a1c
  ms.sourcegitcommit: a8a86cfcaff5ad7dacc653d63502c76b1fedbebe
  ms.translationtype: MT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 03/26/2021
  ms.locfileid: "51357996"
