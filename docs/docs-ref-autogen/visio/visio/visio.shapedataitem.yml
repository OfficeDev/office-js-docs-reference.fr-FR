### YamlMime:TSType
name: Visio.ShapeDataItem
uid: visio!Visio.ShapeDataItem:class
package: visio!
fullName: Visio.ShapeDataItem
summary: >-
  Représente l’objet ShapeDataItem.


  \[[Ensemble d’API : 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: context
  uid: visio!Visio.ShapeDataItem#context:member
  package: visio!
  fullName: context
  summary: Contexte de demande associé à l’objet. Cela connecte le processus du add-in au processus de l’application hôte Office.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="visio!Visio.RequestContext:class" />
- name: format
  uid: visio!Visio.ShapeDataItem#format:member
  package: visio!
  fullName: format
  summary: >-
    Chaîne spécifiant le format de l’élément de données de forme. En lecture seule.


    \[[Ensemble d’API : 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly format: string;'
    return:
      type: string
- name: formattedValue
  uid: visio!Visio.ShapeDataItem#formattedValue:member
  package: visio!
  fullName: formattedValue
  summary: >-
    Chaîne spécifiant la valeur formatée de l’élément de données de forme. En lecture seule.


    \[[Ensemble d’API : 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly formattedValue: string;'
    return:
      type: string
- name: label
  uid: visio!Visio.ShapeDataItem#label:member
  package: visio!
  fullName: label
  summary: >-
    Chaîne qui spécifie l’étiquette de l’élément de données de forme. En lecture seule.


    \[[Ensemble d’API : 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly label: string;'
    return:
      type: string
- name: value
  uid: visio!Visio.ShapeDataItem#value:member
  package: visio!
  fullName: value
  summary: >-
    Chaîne qui spécifie la valeur de l’élément de données de forme. En lecture seule.


    \[[Ensemble d’API : 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly value: string;'
    return:
      type: string
methods:
- name: load(option)
  uid: visio!Visio.ShapeDataItem#load:member(1)
  package: visio!
  fullName: load(option)
  summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez appeler « context.sync() » avant de lire les propriétés.
  remarks: >-
    Outre cette signature, cette méthode possède les signatures suivantes :


    `load(option?: string | string[]): Visio.ShapeDataItem` - Où l’option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.


    `load(option?: { select?: string; expand?: string; }): Visio.ShapeDataItem` - Where option.select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger, et options.expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.ShapeDataItem` - Disponible uniquement sur les types de collection. Il est similaire à la signature précédente. Option.top spécifie le nombre maximal d’éléments de collection qui peuvent être inclus dans le résultat. Option.skip spécifie le nombre d’éléments à ignorer et à ne pas inclure dans le résultat. Si option.top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre d’éléments spécifié.


    #### <a name="examples"></a>Exemples


    ```javascript

    Visio.run(session, function (ctx) {
        var activePage = ctx.document.getActivePage();
        var shape = activePage.shapes.getItem(0);
        var shapeDataItem = shape.shapeDataItems.getItem(0);
        shapeDataItem.load(["label", "value"]);
            return ctx.sync().then(function() {
                console.log(shapeDataItem.label);
                console.log(shapeDataItem.value);
            });
    }).catch(function(error) {
        console.log("Error: " + error);
        if (error instanceof OfficeExtension.Error) {
            console.log("Debug info: " + JSON.stringify(error.debugInfo));
        }
    });

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(option?: Visio.Interfaces.ShapeDataItemLoadOptions): Visio.ShapeDataItem;'
    parameters:
    - id: option
      description: ''
      type: <xref uid="visio!Visio.Interfaces.ShapeDataItemLoadOptions:interface" />
    return:
      type: <xref uid="visio!Visio.ShapeDataItem:class" />
      description: ''
- name: load(propertyNames)
  uid: visio!Visio.ShapeDataItem#load:member(2)
  package: visio!
  fullName: load(propertyNames)
  summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Visio.ShapeDataItem;'
    parameters:
    - id: propertyNames
      description: Chaîne délimitée par des virgules ou tableau de chaînes spécifiant les propriétés à charger.
      type: string | string[]
    return:
      type: <xref uid="visio!Visio.ShapeDataItem:class" />
      description: ''
- name: load(propertyNamesAndPaths)
  uid: visio!Visio.ShapeDataItem#load:member(3)
  package: visio!
  fullName: load(propertyNamesAndPaths)
  summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Visio.ShapeDataItem;'
    parameters:
    - id: propertyNamesAndPaths
      description: Où propertyNamesAndPaths.select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger, et propertyNamesAndPaths.expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.
      type: '{ select?: string; expand?: string; }'
    return:
      type: <xref uid="visio!Visio.ShapeDataItem:class" />
      description: ''
- name: toJSON()
  uid: visio!Visio.ShapeDataItem#toJSON:member(1)
  package: visio!
  fullName: toJSON()
  summary: Remplace la méthode JavaScript afin de fournir une sortie plus utile lorsqu’un objet `toJSON()` API est transmis à `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, à son tour, appelle `toJSON` la méthode de l’objet qui lui est transmis.) Alors que l’objet Visio.ShapeDataItem d’origine est un objet API, la méthode renvoie un objet `toJSON` JavaScript simple (tapé sous la forme `Visio.Interfaces.ShapeDataItemData`<!-- -->) qui contient des copies superficiels de toutes les propriétés enfants chargées à partir de l’objet d’origine.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Visio.Interfaces.ShapeDataItemData;'
    return:
      type: <xref uid="visio!Visio.Interfaces.ShapeDataItemData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: d43dfd54d5b22b8a5b8388d656c7a4210fbc8212
  ms.sourcegitcommit: a8a86cfcaff5ad7dacc653d63502c76b1fedbebe
  ms.translationtype: MT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 03/26/2021
  ms.locfileid: "51357961"
