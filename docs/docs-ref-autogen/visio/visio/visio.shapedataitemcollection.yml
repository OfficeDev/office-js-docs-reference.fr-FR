### YamlMime:UniversalReference
items:
  - uid: 'visio!Visio.ShapeDataItemCollection:class'
    summary: "<span data-ttu-id=\"47d0c-101\">Représente la collection d’éléments de données pour une forme donnée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"47d0c-101\">Represents the ShapeDataItemCollection for a given Shape.</span></span>\n\n<span data-ttu-id=\"47d0c-102\">\\[[Ensemble d’API\_: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"47d0c-102\">\\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \\]</span></span>"
    name: Visio.ShapeDataItemCollection
    fullName: Visio.ShapeDataItemCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'visio!OfficeExtension.ClientObject:class'
    package: visio!
    children:
      - 'visio!Visio.ShapeDataItemCollection#context:member'
      - 'visio!Visio.ShapeDataItemCollection#getCount:member(1)'
      - 'visio!Visio.ShapeDataItemCollection#getItem:member(1)'
      - 'visio!Visio.ShapeDataItemCollection#items:member'
      - 'visio!Visio.ShapeDataItemCollection#load:member(1)'
      - 'visio!Visio.ShapeDataItemCollection#load:member(2)'
      - 'visio!Visio.ShapeDataItemCollection#load:member(3)'
      - 'visio!Visio.ShapeDataItemCollection#toJSON:member(1)'
  - uid: 'visio!Visio.ShapeDataItemCollection#context:member'
    summary: <span data-ttu-id="47d0c-103">Contexte de demande associé à l’objet.</span><span class="sxs-lookup"><span data-stu-id="47d0c-103">The request context associated with the object.</span></span> <span data-ttu-id="47d0c-104">Cette opération connecte le processus du complément au processus de l’application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="47d0c-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'visio!Visio.RequestContext:class'
  - uid: 'visio!Visio.ShapeDataItemCollection#getCount:member(1)'
    summary: "<span data-ttu-id=\"47d0c-105\">Obtient le nombre d’éléments de données de forme.</span><span class=\"sxs-lookup\"><span data-stu-id=\"47d0c-105\">Gets the number of Shape Data Items.</span></span>\n\n<span data-ttu-id=\"47d0c-106\">\\[[Ensemble d’API\_: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"47d0c-106\">\\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \\]</span></span>"
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'visio!Visio.ShapeDataItemCollection#getCount~0:complex'
        description: ''
  - uid: 'visio!Visio.ShapeDataItemCollection#getItem:member(1)'
    summary: "<span data-ttu-id=\"47d0c-107\">Obtient l’élément de données de forme à l’aide de son nom.</span><span class=\"sxs-lookup\"><span data-stu-id=\"47d0c-107\">Gets the ShapeDataItem using its name.</span></span>\n\n<span data-ttu-id=\"47d0c-108\">\\[[Ensemble d’API\_: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"47d0c-108\">\\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \\]</span></span>"
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Visio.ShapeDataItem;'
      return:
        type:
          - 'visio!Visio.ShapeDataItem:class'
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="47d0c-109">La clé est le nom de l’élément de données de forme à récupérer.</span><span class="sxs-lookup"><span data-stu-id="47d0c-109">Key is the name of the ShapeDataItem to be retrieved.</span></span>
          type:
            - string
  - uid: 'visio!Visio.ShapeDataItemCollection#items:member'
    summary: <span data-ttu-id="47d0c-110">Obtient l’élément enfant chargé dans cette collection de sites.</span><span class="sxs-lookup"><span data-stu-id="47d0c-110">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Visio.ShapeDataItem[];'
      return:
        type:
          - 'visio!Visio.ShapeDataItemCollection#items~0:complex'
  - uid: 'visio!Visio.ShapeDataItemCollection#load:member(1)'
    summary: "<span data-ttu-id=\"47d0c-111\">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"47d0c-111\">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id=\"47d0c-112\">Vous devez appeler «\_context.sync()\_» avant de lire les propriétés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"47d0c-112\">You must call \"context.sync()\" before reading the properties.</span></span>"
    remarks: "<span data-ttu-id=\"47d0c-113\">En plus de cette signature, cette méthode possède les signatures suivantes\_:</span><span class=\"sxs-lookup\"><span data-stu-id=\"47d0c-113\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"47d0c-114\">`load(option?: string | string[]): Visio.ShapeDataItemCollection`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class=\"sxs-lookup\"><span data-stu-id=\"47d0c-114\">`load(option?: string | string[]): Visio.ShapeDataItemCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>\n\n<span data-ttu-id=\"47d0c-115\">`load(option?: { select?: string; expand?: string; }): Visio.ShapeDataItemCollection`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class=\"sxs-lookup\"><span data-stu-id=\"47d0c-115\">`load(option?: { select?: string; expand?: string; }): Visio.ShapeDataItemCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"47d0c-116\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.ShapeDataItemCollection`-Uniquement disponible sur les types de collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"47d0c-116\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.ShapeDataItemCollection` - Only available on collection types.</span></span> <span data-ttu-id=\"47d0c-117\">Elle est similaire à la signature précédente.</span><span class=\"sxs-lookup\"><span data-stu-id=\"47d0c-117\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"47d0c-118\">Option. Top indique le nombre maximal d’éléments de collection qui peuvent être inclus dans le résultat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"47d0c-118\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"47d0c-119\">Option. Skip indique le nombre d’éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"47d0c-119\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"47d0c-120\">Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d’éléments.</span><span class=\"sxs-lookup\"><span data-stu-id=\"47d0c-120\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>\n\n#### <a name=\"examples\"></a><span data-ttu-id=\"47d0c-121\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"47d0c-121\">Examples</span></span>\n\n```javascript\nVisio.run(session, function (ctx) {\n    var activePage = ctx.document.getActivePage();\n    var shape = activePage.shapes.getItem(0);\n    var shapeDataItems = shape.shapeDataItems;\n    shapeDataItems.load([\"label\", \"value\"]);\n    return ctx.sync().then(function() {\n        for (var i = 0; i < shapeDataItems.items.length; i++) {\n            console.log(shapeDataItems.items[i].label);\n            console.log(shapeDataItems.items[i].value);\n        }\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Visio.Interfaces.ShapeDataItemCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions): Visio.ShapeDataItemCollection;'
      return:
        type:
          - 'visio!Visio.ShapeDataItemCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'visio!Visio.ShapeDataItemCollection#load~0:complex'
  - uid: 'visio!Visio.ShapeDataItemCollection#load:member(2)'
    summary: <span data-ttu-id="47d0c-122">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="47d0c-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="47d0c-123">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="47d0c-123">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Visio.ShapeDataItemCollection;'
      return:
        type:
          - 'visio!Visio.ShapeDataItemCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="47d0c-124">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="47d0c-124">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'visio!Visio.ShapeDataItemCollection#load:member(3)'
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Visio.ShapeDataItemCollection;'
      return:
        type:
          - 'visio!Visio.ShapeDataItemCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'visio!OfficeExtension.LoadOption:interface'
  - uid: 'visio!Visio.ShapeDataItemCollection#toJSON:member(1)'
    summary: "<span data-ttu-id=\"47d0c-125\">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu’un objet d’API est transmis à`JSON.stringify()`</span><span class=\"sxs-lookup\"><span data-stu-id=\"47d0c-125\">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id=\"47d0c-126\">.</span><span class=\"sxs-lookup\"><span data-stu-id=\"47d0c-126\"></span></span> <span data-ttu-id=\"47d0c-127\">(`JSON.stringify`</span><span class=\"sxs-lookup\"><span data-stu-id=\"47d0c-127\"></span></span><!-- --><span data-ttu-id=\"47d0c-128\">, à son tour, appelle `toJSON` la méthode de l’objet qui lui est passé.) Tandis que `Visio.ShapeDataItemCollection` l’objet d’origine est un objet `toJSON` d’API, la méthode renvoie un objet JavaScript simple (tapé comme`Visio.Interfaces.ShapeDataItemCollectionData`</span><span class=\"sxs-lookup\"><span data-stu-id=\"47d0c-128\">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Visio.ShapeDataItemCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Visio.Interfaces.ShapeDataItemCollectionData`</span></span><!-- --><span data-ttu-id=\"47d0c-129\">) qui contient un tableau «\_éléments\_» avec des copies superficielles de toutes les propriétés chargées des éléments de la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"47d0c-129\">) that contains an \"items\" array with shallow copies of any loaded properties from the collection's items.</span></span>"
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Visio.Interfaces.ShapeDataItemCollectionData;'
      return:
        type:
          - 'visio!Visio.Interfaces.ShapeDataItemCollectionData:interface'
        description: ''
references:
  - uid: 'visio!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'visio!Visio.RequestContext:class'
    name: RequestContext
  - uid: 'visio!Visio.ShapeDataItemCollection#getCount~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'visio!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'visio!Visio.ShapeDataItem:class'
    name: Visio.ShapeDataItem
  - uid: 'visio!Visio.ShapeDataItemCollection#items~0:complex'
    name: 'Visio.ShapeDataItem[]'
    fullName: 'Visio.ShapeDataItem[]'
    spec.typeScript:
      - uid: 'visio!Visio.ShapeDataItem:class'
        name: Visio.ShapeDataItem
        fullName: Visio.ShapeDataItem
      - name: '[]'
        fullName: '[]'
  - uid: 'visio!Visio.ShapeDataItemCollection:class'
    name: Visio.ShapeDataItemCollection
  - uid: 'visio!Visio.ShapeDataItemCollection#load~0:complex'
    name: Visio.Interfaces.ShapeDataItemCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions
    fullName: Visio.Interfaces.ShapeDataItemCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'visio!Visio.Interfaces.ShapeDataItemCollectionLoadOptions:interface'
        name: Visio.Interfaces.ShapeDataItemCollectionLoadOptions
        fullName: Visio.Interfaces.ShapeDataItemCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'visio!Visio.Interfaces.CollectionLoadOptions:interface'
        name: Visio.Interfaces.CollectionLoadOptions
        fullName: Visio.Interfaces.CollectionLoadOptions
  - uid: 'visio!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'visio!Visio.Interfaces.ShapeDataItemCollectionData:interface'
    name: Visio.Interfaces.ShapeDataItemCollectionData