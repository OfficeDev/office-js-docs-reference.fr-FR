### YamlMime:TSType
name: Visio.HyperlinkCollection
uid: visio!Visio.HyperlinkCollection:class
package: visio!
fullName: Visio.HyperlinkCollection
summary: >-
  Représente l’objet HyperlinkCollection.


  \[[Ensemble d’API : 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: context
  uid: visio!Visio.HyperlinkCollection#context:member
  package: visio!
  fullName: context
  summary: Contexte de demande associé à l’objet. Cela connecte le processus du add-in au processus de l’application hôte Office.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="visio!Visio.RequestContext:class" />
- name: items
  uid: visio!Visio.HyperlinkCollection#items:member
  package: visio!
  fullName: items
  summary: Obtient l’élément enfant chargé dans cette collection de sites.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly items: Visio.Hyperlink[];'
    return:
      type: <xref uid="visio!Visio.Hyperlink:class" />[]
methods:
- name: getCount()
  uid: visio!Visio.HyperlinkCollection#getCount:member(1)
  package: visio!
  fullName: getCount()
  summary: >-
    Obtient le nombre de liens hypertexte.


    \[[Ensemble d’API : 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;number&gt;
      description: ''
- name: getItem(Key)
  uid: visio!Visio.HyperlinkCollection#getItem:member(1)
  package: visio!
  fullName: getItem(Key)
  summary: >-
    Obtient un objet Hyperlink à l’aide de sa clé (nom ou ID).


    \[[Ensemble d’API : 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getItem(Key: number | string): Visio.Hyperlink;'
    parameters:
    - id: Key
      description: La clé est le nom ou l’index de l’objet Hyperlink à récupérer.
      type: number | string
    return:
      type: <xref uid="visio!Visio.Hyperlink:class" />
      description: ''
- name: load(option)
  uid: visio!Visio.HyperlinkCollection#load:member(1)
  package: visio!
  fullName: load(option)
  summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez appeler « context.sync() » avant de lire les propriétés.
  remarks: "Outre cette signature, cette méthode possède les signatures suivantes :\n\n`load(option?: string | string[]): Visio.HyperlinkCollection` - Où l’option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.\n\n`load(option?: { select?: string; expand?: string; }): Visio.HyperlinkCollection` - Where option.select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger, et options.expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.\n\n`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.HyperlinkCollection` - Disponible uniquement sur les types de collection. Il est similaire à la signature précédente. Option.top spécifie le nombre maximal d’éléments de collection qui peuvent être inclus dans le résultat. Option.skip spécifie le nombre d’éléments à ignorer et à ne pas inclure dans le résultat. Si option.top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre d’éléments spécifié.\n\n#### <a name=\"examples\"></a>Exemples\n\n```javascript\nVisio.run(session, function (ctx) {\n    var activePage = ctx.document.getActivePage();\n    var shapeName = \"Manager Belt\";\n    var shape = activePage.shapes.getItem(shapeName);\n    var hyperlinks = shape.hyperlinks;\n    shapeHyperlinks.load([\"description\", \"address\", \"subAddress\"]);\n        ctx.sync().then(function () {\n            for (var i = 0; i < shapeHyperlinks.items.length; i++) {\n                var hyperlink = shapeHyperlinks.items[i];\n                console.log(\n                    \"Description:\"+hyperlink.description +\"Address:\"+hyperlink.address +\"SubAddress:  \" + \n                    hyperlink.subAddress);\n            }\n        });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(option?: Visio.Interfaces.HyperlinkCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions): Visio.HyperlinkCollection;'
    parameters:
    - id: option
      description: ''
      type: <xref uid="visio!Visio.Interfaces.HyperlinkCollectionLoadOptions:interface" /> & <xref uid="visio!Visio.Interfaces.CollectionLoadOptions:interface" />
    return:
      type: <xref uid="visio!Visio.HyperlinkCollection:class" />
      description: ''
- name: load(propertyNames)
  uid: visio!Visio.HyperlinkCollection#load:member(2)
  package: visio!
  fullName: load(propertyNames)
  summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Visio.HyperlinkCollection;'
    parameters:
    - id: propertyNames
      description: Chaîne délimitée par des virgules ou tableau de chaînes spécifiant les propriétés à charger.
      type: string | string[]
    return:
      type: <xref uid="visio!Visio.HyperlinkCollection:class" />
      description: ''
- name: load(option)
  uid: visio!Visio.HyperlinkCollection#load:member(3)
  package: visio!
  fullName: load(option)
  summary: ''
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Visio.HyperlinkCollection;'
    parameters:
    - id: option
      description: ''
      type: <xref uid="office!OfficeExtension.LoadOption:interface" />
    return:
      type: <xref uid="visio!Visio.HyperlinkCollection:class" />
      description: ''
- name: toJSON()
  uid: visio!Visio.HyperlinkCollection#toJSON:member(1)
  package: visio!
  fullName: toJSON()
  summary: Remplace la méthode JavaScript afin de fournir une sortie plus utile lorsqu’un objet `toJSON()` API est transmis à `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, à son tour, appelle `toJSON` la méthode de l’objet qui lui est transmis.) Alors que `Visio.HyperlinkCollection` l’objet d’origine est un objet API, la méthode renvoie un objet `toJSON` JavaScript simple (tapé sous la forme `Visio.Interfaces.HyperlinkCollectionData`<!-- -->) qui contient un tableau « éléments » avec des copies peu profondes de toutes les propriétés chargées à partir des éléments de la collection.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Visio.Interfaces.HyperlinkCollectionData;'
    return:
      type: <xref uid="visio!Visio.Interfaces.HyperlinkCollectionData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: 5c10e6d6a5944f1b3131a9561069cc65b1720c6b
  ms.sourcegitcommit: a8a86cfcaff5ad7dacc653d63502c76b1fedbebe
  ms.translationtype: MT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 03/26/2021
  ms.locfileid: "51277217"
