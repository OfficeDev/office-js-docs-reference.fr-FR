### YamlMime:UniversalReference
ms.openlocfilehash: c7617837624fb7fbad977c4d5ec1a417b4084867
ms.sourcegitcommit: 016e17422cf62dc9f1de1809666e9244e41cc1a9
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 11/09/2018
ms.locfileid: "26225069"
items:
- uid: visio.Visio.PageCollection
  summary: >-
    <span data-ttu-id="1a059-101">Représente une collection d’objets Page faisant partie du document.</span><span class="sxs-lookup"><span data-stu-id="1a059-101">Represents a collection of Page objects that are part of the document.</span></span>


    <span data-ttu-id="1a059-102">\[[Du jeu d’API : 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="1a059-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: Visio.PageCollection
  fullName: Visio.PageCollection
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: visio
  children:
  - visio.Visio.PageCollection.getCount
  - visio.Visio.PageCollection.getItem
  - visio.Visio.PageCollection.items
  - visio.Visio.PageCollection.load
  - visio.Visio.PageCollection.toJSON
- uid: visio.Visio.PageCollection.getCount
  summary: >-
    <span data-ttu-id="1a059-103">Obtient le nombre de pages de la collection.</span><span class="sxs-lookup"><span data-stu-id="1a059-103">Gets the number of pages in the collection.</span></span>


    <span data-ttu-id="1a059-104">\[[Du jeu d’API : 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="1a059-104">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: getCount()
  fullName: getCount
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: visio.Visio.PageCollection.getItem
  summary: >-
    <span data-ttu-id="1a059-105">Obtient une page à l’aide de sa clé (nom ou ID).</span><span class="sxs-lookup"><span data-stu-id="1a059-105">Gets a page using its key (name or Id).</span></span>


    <span data-ttu-id="1a059-106">\[[Du jeu d’API : 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="1a059-106">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: getItem(key)
  fullName: getItem
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(key: number | string): Visio.Page;'
    return:
      type:
      - Visio.Page
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1a059-107\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"1a059-107\">Examples</span></span>\n\n```javascript\nVisio.run(session, function (ctx) {\n    var pageName = 'Page-1';\n    var page = ctx.document.pages.getItem(pageName);\n    page.activate();\n    return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: key
      description: <span data-ttu-id="1a059-108">La clé est le nom ou l’ID de la page à récupérer.</span><span class="sxs-lookup"><span data-stu-id="1a059-108">Key is the name or Id of the page to be retrieved.</span></span>
      type:
      - number | string
- uid: visio.Visio.PageCollection.items
  summary: <span data-ttu-id="1a059-109">Obtient l’enfant chargé éléments dans cette collection.</span><span class="sxs-lookup"><span data-stu-id="1a059-109">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Visio.Page[];'
    return:
      type:
      - Visio.Page[]
- uid: visio.Visio.PageCollection.load
  summary: <span data-ttu-id="1a059-110">Files d’attente d’une commande pour charger les propriétés de l’objet spécifiées.</span><span class="sxs-lookup"><span data-stu-id="1a059-110">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1a059-111">Vous devez appeler « context.sync() » avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="1a059-111">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="1a059-112">Outre cette signature, cette méthode présente les signatures suivantes :</span><span class="sxs-lookup"><span data-stu-id="1a059-112">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="1a059-113">`load(option?: { select?: string; expand?: string; }): Visio.PageCollection`-Où option.select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options.expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="1a059-113">`load(option?: { select?: string; expand?: string; }): Visio.PageCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="1a059-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.PageCollection`-Uniquement disponible sur les types de la collection.</span><span class="sxs-lookup"><span data-stu-id="1a059-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.PageCollection` - Only available on collection types.</span></span> <span data-ttu-id="1a059-115">Il est similaire à la signature précédente.</span><span class="sxs-lookup"><span data-stu-id="1a059-115">It is similar to the preceding signature.</span></span> <span data-ttu-id="1a059-116">Option.Top Spécifie le nombre maximal d’éléments pouvant être inclus dans le résultat de la collection.</span><span class="sxs-lookup"><span data-stu-id="1a059-116">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="1a059-117">Option.Skip Spécifie le nombre d’éléments qui doivent être ignoré et non inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="1a059-117">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="1a059-118">Si option.top est spécifié, le jeu de résultats démarre après l’ignorer le nombre spécifié d’éléments.</span><span class="sxs-lookup"><span data-stu-id="1a059-118">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Visio.PageCollection;'
    return:
      type:
      - Visio.PageCollection
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="1a059-119">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="1a059-119">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: visio.Visio.PageCollection.toJSON
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Visio.Interfaces.PageCollectionData;'
    return:
      type:
      - Visio.Interfaces.PageCollectionData
      description: ''
