### YamlMime:UniversalReference
items:
  - uid: visio.Visio.Application
    summary: |-
      <span data-ttu-id="b2a5b-101">Représente l’objet Application.</span><span class="sxs-lookup"><span data-stu-id="b2a5b-101">Represents the Application.</span></span>

      <span data-ttu-id="b2a5b-102">\[[Ensemble d'API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="b2a5b-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: Visio.Application
    fullName: Visio.Application
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: visio
    children:
      - visio.Visio.Application.load
      - visio.Visio.Application.load_1
      - visio.Visio.Application.load_2
      - visio.Visio.Application.set
      - visio.Visio.Application.set_1
      - visio.Visio.Application.showBorders
      - visio.Visio.Application.showToolbar
      - visio.Visio.Application.showToolbar_1
      - visio.Visio.Application.showToolbars
      - visio.Visio.Application.toJSON
  - uid: visio.Visio.Application.load
    summary: "<span data-ttu-id=\"b2a5b-103\">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b2a5b-103\">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id=\"b2a5b-104\">Vous devez appeler «\_context.sync()\_» avant de lire les propriétés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b2a5b-104\">You must call \"context.sync()\" before reading the properties.</span></span>"
    remarks: |-
      <span data-ttu-id="b2a5b-105">En plus de cette signature, cette méthode possède les signatures suivantes:</span><span class="sxs-lookup"><span data-stu-id="b2a5b-105">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="b2a5b-106">`load(option?: string | string[]): Visio.Application`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="b2a5b-106">`load(option?: string | string[]): Visio.Application` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="b2a5b-107">`load(option?: { select?: string; expand?: string; }): Visio.Application`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="b2a5b-107">`load(option?: { select?: string; expand?: string; }): Visio.Application` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="b2a5b-108">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Application`-Uniquement disponible sur les types de collection.</span><span class="sxs-lookup"><span data-stu-id="b2a5b-108">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Application` - Only available on collection types.</span></span> <span data-ttu-id="b2a5b-109">Elle est similaire à la signature précédente.</span><span class="sxs-lookup"><span data-stu-id="b2a5b-109">It is similar to the preceding signature.</span></span> <span data-ttu-id="b2a5b-110">Option. Top indique le nombre maximal d'éléments de collection qui peuvent être inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="b2a5b-110">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="b2a5b-111">Option. Skip indique le nombre d'éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="b2a5b-111">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="b2a5b-112">Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d'éléments.</span><span class="sxs-lookup"><span data-stu-id="b2a5b-112">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Visio.Interfaces.ApplicationLoadOptions): Visio.Application;'
      return:
        type:
          - Visio.Application
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Visio.Interfaces.ApplicationLoadOptions
  - uid: visio.Visio.Application.load_1
    summary: <span data-ttu-id="b2a5b-113">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="b2a5b-113">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="b2a5b-114">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="b2a5b-114">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Visio.Application;'
      return:
        type:
          - Visio.Application
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="b2a5b-115">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="b2a5b-115">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: visio.Visio.Application.load_2
    summary: <span data-ttu-id="b2a5b-116">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="b2a5b-116">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="b2a5b-117">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="b2a5b-117">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Visio.Application;'
      return:
        type:
          - Visio.Application
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="b2a5b-118">Où propertyNamesAndPaths. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et propertyNamesAndPaths. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="b2a5b-118">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: visio.Visio.Application.set
    summary: '<span data-ttu-id="b2a5b-119">Définit plusieurs propriétés d''un objet en même temps.</span><span class="sxs-lookup"><span data-stu-id="b2a5b-119">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="b2a5b-120">Vous pouvez transmettre un objet plain avec les propriétés appropriées, ou un autre objet API du même type.</span><span class="sxs-lookup"><span data-stu-id="b2a5b-120">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="b2a5b-121">Cette méthode est dotée de la signature supplémentaire suivante:</span><span class="sxs-lookup"><span data-stu-id="b2a5b-121">This method has the following additional signature:</span></span>

      `set(properties: Visio.Application): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ApplicationUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="b2a5b-122">Objet JavaScript avec des propriétés qui sont structurées isomorphically vers les propriétés de l'objet sur lequel la méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="b2a5b-122">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.ApplicationUpdateData
        - id: options
          description: <span data-ttu-id="b2a5b-123">Fournit une option permettant de supprimer les erreurs si l'objet Properties tente de définir des propriétés en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="b2a5b-123">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: visio.Visio.Application.set_1
    summary: '<span data-ttu-id="b2a5b-124">Définit plusieurs propriétés de l''objet en même temps, en fonction d''un objet chargé existant.</span><span class="sxs-lookup"><span data-stu-id="b2a5b-124">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Visio.Application): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - Visio.Application
  - uid: visio.Visio.Application.showBorders
    summary: |-
      <span data-ttu-id="b2a5b-125">Afficher ou masquer les bordures de l'application iFrame.</span><span class="sxs-lookup"><span data-stu-id="b2a5b-125">Show or hide the iFrame application borders.</span></span>

      <span data-ttu-id="b2a5b-126">\[[Ensemble d'API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="b2a5b-126">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: showBorders
    fullName: showBorders
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showBorders: boolean;'
      return:
        type:
          - boolean
        description: |-


          #### <a name="examples"></a><span data-ttu-id="b2a5b-127">Exemples</span><span class="sxs-lookup"><span data-stu-id="b2a5b-127">Examples</span></span>

          ```javascript
          Visio.run(session, function (ctx) {
              var application = ctx.document.application;
              application.showToolbars = false;
              application.showBorders = false;
              return ctx.sync();
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: visio.Visio.Application.showToolbar
    summary: |-
      <span data-ttu-id="b2a5b-128">Définit la visibilité d'une barre d'outils spécifique dans l'application.</span><span class="sxs-lookup"><span data-stu-id="b2a5b-128">Sets the visibility of a specific toolbar in the application.</span></span>

      <span data-ttu-id="b2a5b-129">\[[Ensemble d'API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="b2a5b-129">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: 'showToolbar(id, show)'
    fullName: 'showToolbar(id, show)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'showToolbar(id: Visio.ToolBarType, show: boolean): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: id
          description: <span data-ttu-id="b2a5b-130">Type de la barre d'outils</span><span class="sxs-lookup"><span data-stu-id="b2a5b-130">The type of the Toolbar</span></span>
          type:
            - visio.Visio.ToolBarType
        - id: show
          description: <span data-ttu-id="b2a5b-131">Si la barre d'outils est visibile ou non.</span><span class="sxs-lookup"><span data-stu-id="b2a5b-131">Whether the toolbar is visibile or not.</span></span>
          type:
            - boolean
  - uid: visio.Visio.Application.showToolbar_1
    summary: |-
      <span data-ttu-id="b2a5b-132">Définit la visibilité d'une barre d'outils spécifique dans l'application.</span><span class="sxs-lookup"><span data-stu-id="b2a5b-132">Sets the visibility of a specific toolbar in the application.</span></span>

      <span data-ttu-id="b2a5b-133">\[[Ensemble d'API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="b2a5b-133">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: 'showToolbar(idString, show)'
    fullName: 'showToolbar(idString, show)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'showToolbar(idString: "CommandBar" | "PageNavigationBar" | "StatusBar", show: boolean): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: idString
          description: <span data-ttu-id="b2a5b-134">Type de la barre d'outils</span><span class="sxs-lookup"><span data-stu-id="b2a5b-134">The type of the Toolbar</span></span>
          type:
            - '"CommandBar" | "PageNavigationBar" | "StatusBar"'
        - id: show
          description: <span data-ttu-id="b2a5b-135">Si la barre d'outils est visibile ou non.</span><span class="sxs-lookup"><span data-stu-id="b2a5b-135">Whether the toolbar is visibile or not.</span></span>
          type:
            - boolean
  - uid: visio.Visio.Application.showToolbars
    summary: |-
      <span data-ttu-id="b2a5b-136">Afficher ou masquer les barres d'outils standard.</span><span class="sxs-lookup"><span data-stu-id="b2a5b-136">Show or hide the standard toolbars.</span></span>

      <span data-ttu-id="b2a5b-137">\[[Ensemble d'API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="b2a5b-137">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: showToolbars
    fullName: showToolbars
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showToolbars: boolean;'
      return:
        type:
          - boolean
  - uid: visio.Visio.Application.toJSON
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Visio.Interfaces.ApplicationData;'
      return:
        type:
          - Visio.Interfaces.ApplicationData
        description: ''