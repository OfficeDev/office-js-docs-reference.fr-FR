### YamlMime:UniversalReference
ms.openlocfilehash: a687c8c72f3f55328eca10581e5db1bc61c325d8
ms.sourcegitcommit: 262b7c417245b7b61a57d53eee33a477a722ca6e
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 09/28/2018
ms.locfileid: "24044370"
items:
- uid: visio.Visio.PageView
  summary: >-
    Représente la classe PageView.


    \[[Du jeu d’API : 1.1](/javascript/office/overview/visio-javascript-reference-overview)\]
  name: Visio.PageView
  fullName: visio.Visio.PageView
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: visio
  children:
  - visio.Visio.PageView.centerViewportOnShape
  - visio.Visio.PageView.fitToWindow
  - visio.Visio.PageView.getPosition
  - visio.Visio.PageView.getSelection
  - visio.Visio.PageView.isShapeInViewport
  - visio.Visio.PageView.load
  - visio.Visio.PageView.setPosition
  - visio.Visio.PageView.toJSON
  - visio.Visio.PageView.zoom
- uid: visio.Visio.PageView.centerViewportOnShape
  summary: >-
    Effectue un panoramique du dessin Visio pour placer la forme spécifiée au centre de l’affichage.


    \[[Du jeu d’API : 1.1](/javascript/office/overview/visio-javascript-reference-overview)\]
  name: centerViewportOnShape(ShapeId)
  fullName: visio.Visio.PageView.centerViewportOnShape
  langs:
  - typeScript
  type: method
  syntax:
    content: 'centerViewportOnShape(ShapeId: number): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a>Exemples\n\n```javascript\nVisio.run(session, function (ctx) {\n    var activePage = ctx.document.getActivePage();\n    var shape = activePage.shapes.getItem(0);\n    activePage.view.centerViewportOnShape(shape.Id);\n    return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: ShapeId
      description: Affiche ShapeId au centre.
      type:
      - number
- uid: visio.Visio.PageView.fitToWindow
  summary: >-
    Ajuste l’objet Page à la fenêtre active.


    \[[Du jeu d’API : 1.1](/javascript/office/overview/visio-javascript-reference-overview)\]
  name: fitToWindow()
  fullName: visio.Visio.PageView.fitToWindow
  langs:
  - typeScript
  type: method
  syntax:
    content: 'fitToWindow(): void;'
    return:
      type:
      - void
      description: ''
- uid: visio.Visio.PageView.getPosition
  summary: >-
    Spécifie la position de la page affichée.


    \[[Du jeu d’API : 1.1](/javascript/office/overview/visio-javascript-reference-overview)\]
  name: getPosition()
  fullName: visio.Visio.PageView.getPosition
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getPosition(): OfficeExtension.ClientResult<Visio.Position>;'
    return:
      type:
      - OfficeExtension.ClientResult<Visio.Position>
      description: ''
- uid: visio.Visio.PageView.getSelection
  summary: >-
    Représente la sélection dans la page.


    \[[Du jeu d’API : 1.1](/javascript/office/overview/visio-javascript-reference-overview)\]
  name: getSelection()
  fullName: visio.Visio.PageView.getSelection
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSelection(): Visio.Selection;'
    return:
      type:
      - visio.Visio.Selection
      description: ''
- uid: visio.Visio.PageView.isShapeInViewport
  summary: >-
    Vérifie si la forme se situe devant l’objet Page ou non.


    \[[Du jeu d’API : 1.1](/javascript/office/overview/visio-javascript-reference-overview)\]
  name: isShapeInViewport(Shape)
  fullName: visio.Visio.PageView.isShapeInViewport
  langs:
  - typeScript
  type: method
  syntax:
    content: 'isShapeInViewport(Shape: Visio.Shape): OfficeExtension.ClientResult<boolean>;'
    return:
      type:
      - OfficeExtension.ClientResult<boolean>
      description: ''
    parameters:
    - id: Shape
      description: Forme à vérifier.
      type:
      - visio.Visio.Shape
- uid: visio.Visio.PageView.load
  summary: Files d’attente d’une commande pour charger les propriétés de l’objet spécifiées. Vous devez appeler « context.sync() » avant de lire les propriétés.
  remarks: >-
    Outre cette signature, cette méthode présente les signatures suivantes :


    `load(option?: { select?: string; expand?: string; }): Visio.PageView`-Où option.select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options.expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.PageView`-Uniquement disponible sur les types de la collection. Il est similaire à la signature précédente. Option.Top Spécifie le nombre maximal d’éléments pouvant être inclus dans le résultat de la collection. Option.Skip Spécifie le nombre d’éléments qui doivent être ignoré et non inclus dans le résultat. Si option.top est spécifié, le jeu de résultats démarre après l’ignorer le nombre spécifié d’éléments.

    #### <a name="examples"></a>Exemples


    ```javascript

    Visio.run(session, function (ctx) {
        var activePage = ctx.document.getActivePage();
        activePage.view.zoom = 300;
        return ctx.sync();
    }).catch(function(error) {
        console.log("Error: " + error);
        if (error instanceof OfficeExtension.Error) {
            console.log("Debug info: " + JSON.stringify(error.debugInfo));
        }
    });

    ```
  name: load(option)
  fullName: visio.Visio.PageView.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Visio.PageView;'
    return:
      type:
      - visio.Visio.PageView
      description: ''
    parameters:
    - id: option
      description: Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.
      type:
      - string | string[]
- uid: visio.Visio.PageView.setPosition
  summary: >-
    Définit la position de la page dans l’affichage.


    \[[Du jeu d’API : 1.1](/javascript/office/overview/visio-javascript-reference-overview)\]
  name: setPosition(Position)
  fullName: visio.Visio.PageView.setPosition
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setPosition(Position: Visio.Position): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: Position
      description: Spécifie la nouvelle position de la page affichée.
      type:
      - visio.Visio.Position
- uid: visio.Visio.PageView.toJSON
  name: toJSON()
  fullName: visio.Visio.PageView.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Visio.Interfaces.PageViewData;'
    return:
      type:
      - visio.Visio.Interfaces.PageViewData
      description: ''
- uid: visio.Visio.PageView.zoom
  summary: >-
    Obtenir et définir le niveau de Zoom de la Page. La valeur peut être comprise entre 10 et 400 et indique le pourcentage de zoom.


    \[[Du jeu d’API : 1.1](/javascript/office/overview/visio-javascript-reference-overview)\]
  name: zoom
  fullName: visio.Visio.PageView.zoom
  langs:
  - typeScript
  type: property
  syntax:
    content: 'zoom: number;'
    return:
      type:
      - number
