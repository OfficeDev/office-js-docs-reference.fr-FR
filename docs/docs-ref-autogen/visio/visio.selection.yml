### YamlMime:UniversalReference
items:
  - uid: visio.Visio.Selection
    summary: |-
      <span data-ttu-id="4e4c2-101">Représente la sélection dans la page.</span><span class="sxs-lookup"><span data-stu-id="4e4c2-101">Represents the Selection in the page.</span></span>

      <span data-ttu-id="4e4c2-102">\[[Ensemble d'API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="4e4c2-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: Visio.Selection
    fullName: Visio.Selection
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: visio
    children:
      - visio.Visio.Selection.context
      - visio.Visio.Selection.load
      - visio.Visio.Selection.load_1
      - visio.Visio.Selection.shapes
      - visio.Visio.Selection.toJSON
  - uid: visio.Visio.Selection.context
    summary: <span data-ttu-id="4e4c2-103">Contexte de demande associé à l'objet.</span><span class="sxs-lookup"><span data-stu-id="4e4c2-103">The request context associated with the object.</span></span> <span data-ttu-id="4e4c2-104">Cette opération connecte le processus du complément au processus de l'application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="4e4c2-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: visio.Visio.Selection.load
    summary: <span data-ttu-id="4e4c2-105">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="4e4c2-105">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="4e4c2-106">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="4e4c2-106">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Visio.Selection;'
      return:
        type:
          - visio.Visio.Selection
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="4e4c2-107">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="4e4c2-107">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: visio.Visio.Selection.load_1
    summary: <span data-ttu-id="4e4c2-108">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="4e4c2-108">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="4e4c2-109">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="4e4c2-109">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Visio.Selection;'
      return:
        type:
          - visio.Visio.Selection
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="4e4c2-110">Où propertyNamesAndPaths. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et propertyNamesAndPaths. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="4e4c2-110">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: visio.Visio.Selection.shapes
    summary: |-
      <span data-ttu-id="4e4c2-111">Obtient les formes de la sélection.</span><span class="sxs-lookup"><span data-stu-id="4e4c2-111">Gets the Shapes of the Selection.</span></span> <span data-ttu-id="4e4c2-112">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="4e4c2-112">Read-only.</span></span>

      <span data-ttu-id="4e4c2-113">\[[Ensemble d'API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="4e4c2-113">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: shapes
    fullName: shapes
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly shapes: Visio.ShapeCollection;'
      return:
        type:
          - Visio.ShapeCollection
  - uid: visio.Visio.Selection.toJSON
    summary: '<span data-ttu-id="4e4c2-114">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu''un objet d''API est transmis à`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="4e4c2-114">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="4e4c2-115">.</span><span class="sxs-lookup"><span data-stu-id="4e4c2-115"></span></span> <span data-ttu-id="4e4c2-116">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="4e4c2-116"></span></span><!-- --><span data-ttu-id="4e4c2-117">, à son tour, appelle `toJSON` la méthode de l''objet qui lui est passé.) Tandis que l''objet Visio. Selection d''origine est un objet `toJSON` d''API, la méthode renvoie un objet JavaScript simple (tapé comme`Visio.Interfaces.SelectionData`</span><span class="sxs-lookup"><span data-stu-id="4e4c2-117">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Visio.Selection object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Visio.Interfaces.SelectionData`</span></span><!-- --><span data-ttu-id="4e4c2-118">) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l''objet d''origine.</span><span class="sxs-lookup"><span data-stu-id="4e4c2-118">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Visio.Interfaces.SelectionData;'
      return:
        type:
          - visio.Visio.Interfaces.SelectionData
        description: ''