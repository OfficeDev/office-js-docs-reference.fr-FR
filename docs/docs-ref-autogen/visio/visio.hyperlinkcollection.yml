### YamlMime:UniversalReference
ms.openlocfilehash: 7157fc4d234b17a7b9dbd3b8d86893356e06fe0a
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 02/13/2019
ms.locfileid: "29975668"
items:
- uid: visio.Visio.HyperlinkCollection
  summary: >-
    <span data-ttu-id="bcdca-101">Représente l’objet HyperlinkCollection.</span><span class="sxs-lookup"><span data-stu-id="bcdca-101">Represents the Hyperlink Collection.</span></span>


    <span data-ttu-id="bcdca-102">\[[Du jeu d’API : 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="bcdca-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: Visio.HyperlinkCollection
  fullName: Visio.HyperlinkCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: visio
  children:
  - visio.Visio.HyperlinkCollection.getCount
  - visio.Visio.HyperlinkCollection.getItem
  - visio.Visio.HyperlinkCollection.items
  - visio.Visio.HyperlinkCollection.load
  - visio.Visio.HyperlinkCollection.load_1
  - visio.Visio.HyperlinkCollection.load_2
  - visio.Visio.HyperlinkCollection.toJSON
- uid: visio.Visio.HyperlinkCollection.getCount
  summary: >-
    <span data-ttu-id="bcdca-103">Obtient le nombre de liens hypertexte.</span><span class="sxs-lookup"><span data-stu-id="bcdca-103">Gets the number of hyperlinks.</span></span>


    <span data-ttu-id="bcdca-104">\[[Du jeu d’API : 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="bcdca-104">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: visio.Visio.HyperlinkCollection.getItem
  summary: >-
    <span data-ttu-id="bcdca-105">Obtient un objet Hyperlink à l’aide de sa clé (nom ou ID).</span><span class="sxs-lookup"><span data-stu-id="bcdca-105">Gets a Hyperlink using its key (name or Id).</span></span>


    <span data-ttu-id="bcdca-106">\[[Du jeu d’API : 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="bcdca-106">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: getItem(Key)
  fullName: getItem(Key)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(Key: number | string): Visio.Hyperlink;'
    return:
      type:
      - visio.Visio.Hyperlink
      description: ''
    parameters:
    - id: Key
      description: <span data-ttu-id="bcdca-107">La clé est le nom ou l’index de l’objet Hyperlink à récupérer.</span><span class="sxs-lookup"><span data-stu-id="bcdca-107">Key is the name or index of the Hyperlink to be retrieved.</span></span>
      type:
      - number | string
- uid: visio.Visio.HyperlinkCollection.items
  summary: <span data-ttu-id="bcdca-108">Obtient l’enfant chargé éléments dans cette collection.</span><span class="sxs-lookup"><span data-stu-id="bcdca-108">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Visio.Hyperlink[];'
    return:
      type:
      - Visio.Hyperlink[]
- uid: visio.Visio.HyperlinkCollection.load
  summary: <span data-ttu-id="bcdca-109">Files d’attente d’une commande pour charger les propriétés de l’objet spécifiées.</span><span class="sxs-lookup"><span data-stu-id="bcdca-109">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="bcdca-110">Vous devez appeler « context.sync() » avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="bcdca-110">You must call "context.sync()" before reading the properties.</span></span>
  remarks: "<span data-ttu-id=\"bcdca-111\">Outre cette signature, cette méthode présente les signatures suivantes :</span><span class=\"sxs-lookup\"><span data-stu-id=\"bcdca-111\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"bcdca-112\">`load(option?: string | string[]): Visio.HyperlinkCollection`-Où option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class=\"sxs-lookup\"><span data-stu-id=\"bcdca-112\">`load(option?: string | string[]): Visio.HyperlinkCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>\n\n<span data-ttu-id=\"bcdca-113\">`load(option?: { select?: string; expand?: string; }): Visio.HyperlinkCollection`-Où option.select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options.expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class=\"sxs-lookup\"><span data-stu-id=\"bcdca-113\">`load(option?: { select?: string; expand?: string; }): Visio.HyperlinkCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"bcdca-114\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.HyperlinkCollection`-Uniquement disponible sur les types de la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"bcdca-114\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.HyperlinkCollection` - Only available on collection types.</span></span> <span data-ttu-id=\"bcdca-115\">Il est similaire à la signature précédente.</span><span class=\"sxs-lookup\"><span data-stu-id=\"bcdca-115\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"bcdca-116\">Option.Top Spécifie le nombre maximal d’éléments pouvant être inclus dans le résultat de la collection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"bcdca-116\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"bcdca-117\">Option.Skip Spécifie le nombre d’éléments qui doivent être ignoré et non inclus dans le résultat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"bcdca-117\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"bcdca-118\">Si option.top est spécifié, le jeu de résultats démarre après l’ignorer le nombre spécifié d’éléments.</span><span class=\"sxs-lookup\"><span data-stu-id=\"bcdca-118\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"bcdca-119\">Exemples</span><span class=\"sxs-lookup\"><span data-stu-id=\"bcdca-119\">Examples</span></span>\n\n```javascript\nVisio.run(session, function (ctx) {\n    var activePage = ctx.document.getActivePage();\n    var shapeName = \"Manager Belt\";\n    var shape = activePage.shapes.getItem(shapeName);\n    var hyperlinks = shape.hyperlinks;\n    shapeHyperlinks.load();\n        ctx.sync().then(function () {\n            for(var i=0; i<shapeHyperlinks.items.length;i++)\n            {\n                var hyperlink = shapeHyperlinks.items[i];\n                console.log(\n                    \"Description:\"+hyperlink.description +\"Address:\"+hyperlink.address +\"SubAddress:  \" + \n                    hyperlink.subAddress);\n            }\n        });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Visio.Interfaces.HyperlinkCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions): Visio.HyperlinkCollection;'
    return:
      type:
      - visio.Visio.HyperlinkCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Visio.Interfaces.HyperlinkCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions
- uid: visio.Visio.HyperlinkCollection.load_1
  summary: <span data-ttu-id="bcdca-120">Files d’attente d’une commande pour charger les propriétés de l’objet spécifiées.</span><span class="sxs-lookup"><span data-stu-id="bcdca-120">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="bcdca-121">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="bcdca-121">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Visio.HyperlinkCollection;'
    return:
      type:
      - visio.Visio.HyperlinkCollection
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="bcdca-122">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="bcdca-122">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: visio.Visio.HyperlinkCollection.load_2
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Visio.HyperlinkCollection;'
    return:
      type:
      - visio.Visio.HyperlinkCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: visio.Visio.HyperlinkCollection.toJSON
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Visio.Interfaces.HyperlinkCollectionData;'
    return:
      type:
      - visio.Visio.Interfaces.HyperlinkCollectionData
      description: ''
