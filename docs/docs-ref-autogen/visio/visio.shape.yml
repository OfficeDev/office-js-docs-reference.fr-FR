### YamlMime:UniversalReference
ms.openlocfilehash: dff57e0aea55d7648b9495605a66d091888e963e
ms.sourcegitcommit: beffe9455dace422e85b92f0105c54ff7b594cbf
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 09/20/2018
ms.locfileid: "24043123"
items:
- uid: visio.Visio.Shape
  summary: >-
    Représente la classe Shape.


    \[[Du jeu d’API : 1.1](/javascript/office/overview/visio-javascript-reference-overview)\]
  name: Visio.Shape
  fullName: visio.Visio.Shape
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: visio
  children:
  - visio.Visio.Shape.comments
  - visio.Visio.Shape.getBounds
  - visio.Visio.Shape.hyperlinks
  - visio.Visio.Shape.id
  - visio.Visio.Shape.load
  - visio.Visio.Shape.name
  - visio.Visio.Shape.select
  - visio.Visio.Shape.shapeDataItems
  - visio.Visio.Shape.subShapes
  - visio.Visio.Shape.text
  - visio.Visio.Shape.toJSON
  - visio.Visio.Shape.view
- uid: visio.Visio.Shape.comments
  summary: >-
    Renvoie la collection de commentaires. En lecture seule.


    \[[Du jeu d’API : 1.1](/javascript/office/overview/visio-javascript-reference-overview)\]
  name: comments
  fullName: visio.Visio.Shape.comments
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly comments: Visio.CommentCollection;'
    return:
      type:
      - visio.Visio.CommentCollection
- uid: visio.Visio.Shape.getBounds
  summary: >-
    Renvoie l’objet BoundingBox qui spécifie le cadre englobant de la forme.


    \[[Du jeu d’API : 1.1](/javascript/office/overview/visio-javascript-reference-overview)\]
  name: getBounds()
  fullName: visio.Visio.Shape.getBounds
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getBounds(): OfficeExtension.ClientResult<Visio.BoundingBox>;'
    return:
      type:
      - OfficeExtension.ClientResult<Visio.BoundingBox>
      description: ''
- uid: visio.Visio.Shape.hyperlinks
  summary: >-
    Renvoie la collection Hyperlinks d’un objet Shape. En lecture seule.


    \[[Du jeu d’API : 1.1](/javascript/office/overview/visio-javascript-reference-overview)\]
  name: hyperlinks
  fullName: visio.Visio.Shape.hyperlinks
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly hyperlinks: Visio.HyperlinkCollection;'
    return:
      type:
      - visio.Visio.HyperlinkCollection
- uid: visio.Visio.Shape.id
  summary: >-
    Identificateur de la forme. En lecture seule.


    \[[Du jeu d’API : 1.1](/javascript/office/overview/visio-javascript-reference-overview)\]
  name: id
  fullName: visio.Visio.Shape.id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: number;'
    return:
      type:
      - number
- uid: visio.Visio.Shape.load
  summary: Files d’attente d’une commande pour charger les propriétés de l’objet spécifiées. Vous devez appeler « context.sync() » avant de lire les propriétés.
  remarks: >-
    Outre cette signature, cette méthode présente les signatures suivantes :


    `load(option?: { select?: string; expand?: string; }): Visio.Shape`-Où option.select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options.expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Shape`-Uniquement disponible sur les types de la collection. Il est similaire à la signature précédente. Option.Top Spécifie le nombre maximal d’éléments pouvant être inclus dans le résultat de la collection. Option.Skip Spécifie le nombre d’éléments qui doivent être ignoré et non inclus dans le résultat. Si option.top est spécifié, le jeu de résultats démarre après l’ignorer le nombre spécifié d’éléments.

    #### <a name="examples"></a>Exemples


    ```javascript

    Visio.run(session, function (ctx) {
        var activePage = ctx.document.getActivePage();
        var shapeName = "Sample Name";
        var shape = activePage.shapes.getItem(shapeName);
        shape.load();
        return ctx.sync().then(function () {
            console.log(shape.name );
            console.log(shape.id );
            console.log(shape.Text );
            console.log(shape.Select );
        });
    }).catch(function(error) {
        console.log("Error: " + error);
        if (error instanceof OfficeExtension.Error) {
            console.log("Debug info: " + JSON.stringify(error.debugInfo));
        }
    });

    ```

    ```javascript

    Visio.run(session, function (ctx) {
        var activePage = ctx.document.getActivePage();
        var shape = activePage.shapes.getItem(0);
        shape.view.highlight = { color: "#E7E7E7", width: 100 };
        return ctx.sync();
    }).catch(function(error) {
        console.log("Error: " + error);
        if (error instanceof OfficeExtension.Error) {
            console.log("Debug info: " + JSON.stringify(error.debugInfo));
        }
    });

    ```
  name: load(option)
  fullName: visio.Visio.Shape.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Visio.Shape;'
    return:
      type:
      - visio.Visio.Shape
      description: ''
    parameters:
    - id: option
      description: Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.
      type:
      - string | string[]
- uid: visio.Visio.Shape.name
  summary: >-
    Nom de l’objet Shape. En lecture seule.


    \[[Du jeu d’API : 1.1](/javascript/office/overview/visio-javascript-reference-overview)\]
  name: name
  fullName: visio.Visio.Shape.name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly name: string;'
    return:
      type:
      - string
- uid: visio.Visio.Shape.select
  summary: >-
    Renvoie True si l’objet Shape est sélectionné. L’utilisateur peut le définir sur True pour sélectionner explicitement l’objet Shape.


    \[[Du jeu d’API : 1.1](/javascript/office/overview/visio-javascript-reference-overview)\]
  name: select
  fullName: visio.Visio.Shape.select
  langs:
  - typeScript
  type: property
  syntax:
    content: 'select: boolean;'
    return:
      type:
      - boolean
- uid: visio.Visio.Shape.shapeDataItems
  summary: >-
    Renvoie la section de données de l’objet Shape. En lecture seule.


    \[[Du jeu d’API : 1.1](/javascript/office/overview/visio-javascript-reference-overview)\]
  name: shapeDataItems
  fullName: visio.Visio.Shape.shapeDataItems
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly shapeDataItems: Visio.ShapeDataItemCollection;'
    return:
      type:
      - visio.Visio.ShapeDataItemCollection
- uid: visio.Visio.Shape.subShapes
  summary: >-
    Obtient la collection SubShape. En lecture seule.


    \[[Du jeu d’API : 1.1](/javascript/office/overview/visio-javascript-reference-overview)\]
  name: subShapes
  fullName: visio.Visio.Shape.subShapes
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly subShapes: Visio.ShapeCollection;'
    return:
      type:
      - visio.Visio.ShapeCollection
- uid: visio.Visio.Shape.text
  summary: >-
    Texte de la forme. En lecture seule.


    \[[Du jeu d’API : 1.1](/javascript/office/overview/visio-javascript-reference-overview)\]
  name: text
  fullName: visio.Visio.Shape.text
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly text: string;'
    return:
      type:
      - string
- uid: visio.Visio.Shape.toJSON
  name: toJSON()
  fullName: visio.Visio.Shape.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Visio.Interfaces.ShapeData;'
    return:
      type:
      - visio.Visio.Interfaces.ShapeData
      description: ''
- uid: visio.Visio.Shape.view
  summary: >-
    Renvoie l’affichage de la forme. En lecture seule.


    \[[Du jeu d’API : 1.1](/javascript/office/overview/visio-javascript-reference-overview)\]
  name: view
  fullName: visio.Visio.Shape.view
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly view: Visio.ShapeView;'
    return:
      type:
      - visio.Visio.ShapeView
