### YamlMime:UniversalReference
items:
  - uid: visio.Visio.Shape
    summary: |-
      <span data-ttu-id="5aa00-101">Représente la classe Shape.</span><span class="sxs-lookup"><span data-stu-id="5aa00-101">Represents the Shape class.</span></span>

      <span data-ttu-id="5aa00-102">\[[Ensemble d'API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="5aa00-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: Visio.Shape
    fullName: Visio.Shape
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: visio
    children:
      - visio.Visio.Shape.comments
      - visio.Visio.Shape.context
      - visio.Visio.Shape.getBounds
      - visio.Visio.Shape.hyperlinks
      - visio.Visio.Shape.id
      - visio.Visio.Shape.load
      - visio.Visio.Shape.load_1
      - visio.Visio.Shape.load_2
      - visio.Visio.Shape.name
      - visio.Visio.Shape.select
      - visio.Visio.Shape.set
      - visio.Visio.Shape.set_1
      - visio.Visio.Shape.shapeDataItems
      - visio.Visio.Shape.subShapes
      - visio.Visio.Shape.text
      - visio.Visio.Shape.toJSON
      - visio.Visio.Shape.view
  - uid: visio.Visio.Shape.comments
    summary: |-
      <span data-ttu-id="5aa00-103">Renvoie la collection de commentaires.</span><span class="sxs-lookup"><span data-stu-id="5aa00-103">Returns the Comments Collection.</span></span> <span data-ttu-id="5aa00-104">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="5aa00-104">Read-only.</span></span>

      <span data-ttu-id="5aa00-105">\[[Ensemble d'API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="5aa00-105">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: comments
    fullName: comments
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly comments: Visio.CommentCollection;'
      return:
        type:
          - Visio.CommentCollection
  - uid: visio.Visio.Shape.context
    summary: <span data-ttu-id="5aa00-106">Contexte de demande associé à l'objet.</span><span class="sxs-lookup"><span data-stu-id="5aa00-106">The request context associated with the object.</span></span> <span data-ttu-id="5aa00-107">Cette opération connecte le processus du complément au processus de l'application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="5aa00-107">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: visio.Visio.Shape.getBounds
    summary: |-
      <span data-ttu-id="5aa00-108">Renvoie l’objet BoundingBox qui spécifie le cadre englobant de la forme.</span><span class="sxs-lookup"><span data-stu-id="5aa00-108">Returns the BoundingBox object that specifies bounding box of the shape.</span></span>

      <span data-ttu-id="5aa00-109">\[[Ensemble d'API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="5aa00-109">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: getBounds()
    fullName: getBounds()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getBounds(): OfficeExtension.ClientResult<Visio.BoundingBox>;'
      return:
        type:
          - OfficeExtension.ClientResult<Visio.BoundingBox>
        description: ''
  - uid: visio.Visio.Shape.hyperlinks
    summary: |-
      <span data-ttu-id="5aa00-110">Renvoie la collection Hyperlinks d’un objet Shape.</span><span class="sxs-lookup"><span data-stu-id="5aa00-110">Returns the Hyperlinks collection for a Shape object.</span></span> <span data-ttu-id="5aa00-111">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="5aa00-111">Read-only.</span></span>

      <span data-ttu-id="5aa00-112">\[[Ensemble d'API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="5aa00-112">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: hyperlinks
    fullName: hyperlinks
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly hyperlinks: Visio.HyperlinkCollection;'
      return:
        type:
          - visio.Visio.HyperlinkCollection
  - uid: visio.Visio.Shape.id
    summary: |-
      <span data-ttu-id="5aa00-113">Identificateur de la forme.</span><span class="sxs-lookup"><span data-stu-id="5aa00-113">Shape's identifier.</span></span> <span data-ttu-id="5aa00-114">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="5aa00-114">Read-only.</span></span>

      <span data-ttu-id="5aa00-115">\[[Ensemble d'API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="5aa00-115">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: number;'
      return:
        type:
          - number
  - uid: visio.Visio.Shape.load
    summary: "<span data-ttu-id=\"5aa00-116\">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5aa00-116\">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id=\"5aa00-117\">Vous devez appeler «\_context.sync()\_» avant de lire les propriétés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5aa00-117\">You must call \"context.sync()\" before reading the properties.</span></span>"
    remarks: |-
      <span data-ttu-id="5aa00-118">En plus de cette signature, cette méthode possède les signatures suivantes:</span><span class="sxs-lookup"><span data-stu-id="5aa00-118">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="5aa00-119">`load(option?: string | string[]): Visio.Shape`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="5aa00-119">`load(option?: string | string[]): Visio.Shape` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="5aa00-120">`load(option?: { select?: string; expand?: string; }): Visio.Shape`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="5aa00-120">`load(option?: { select?: string; expand?: string; }): Visio.Shape` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="5aa00-121">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Shape`-Uniquement disponible sur les types de collection.</span><span class="sxs-lookup"><span data-stu-id="5aa00-121">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Shape` - Only available on collection types.</span></span> <span data-ttu-id="5aa00-122">Elle est similaire à la signature précédente.</span><span class="sxs-lookup"><span data-stu-id="5aa00-122">It is similar to the preceding signature.</span></span> <span data-ttu-id="5aa00-123">Option. Top indique le nombre maximal d'éléments de collection qui peuvent être inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="5aa00-123">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="5aa00-124">Option. Skip indique le nombre d'éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="5aa00-124">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="5aa00-125">Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d'éléments.</span><span class="sxs-lookup"><span data-stu-id="5aa00-125">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>

      #### <a name="examples"></a><span data-ttu-id="5aa00-126">Exemples</span><span class="sxs-lookup"><span data-stu-id="5aa00-126">Examples</span></span>

      ```javascript
      Visio.run(session, function (ctx) {
          var activePage = ctx.document.getActivePage();
          var shapeName = "Sample Name";
          var shape = activePage.shapes.getItem(shapeName);
          shape.load();
          return ctx.sync().then(function () {
              console.log(shape.name );
              console.log(shape.id );
              console.log(shape.Text );
              console.log(shape.Select );
          });
      }).catch(function(error) {
          console.log("Error: " + error);
          if (error instanceof OfficeExtension.Error) {
              console.log("Debug info: " + JSON.stringify(error.debugInfo));
          }
      });
      ```
      ```javascript
      Visio.run(session, function (ctx) {
          var activePage = ctx.document.getActivePage();
          var shape = activePage.shapes.getItem(0);
          shape.view.highlight = { color: "#E7E7E7", width: 100 };
          return ctx.sync();
      }).catch(function(error) {
          console.log("Error: " + error);
          if (error instanceof OfficeExtension.Error) {
              console.log("Debug info: " + JSON.stringify(error.debugInfo));
          }
      });
      ```
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Visio.Interfaces.ShapeLoadOptions): Visio.Shape;'
      return:
        type:
          - Visio.Shape
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Visio.Interfaces.ShapeLoadOptions
  - uid: visio.Visio.Shape.load_1
    summary: <span data-ttu-id="5aa00-127">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="5aa00-127">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="5aa00-128">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="5aa00-128">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Visio.Shape;'
      return:
        type:
          - Visio.Shape
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="5aa00-129">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="5aa00-129">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: visio.Visio.Shape.load_2
    summary: <span data-ttu-id="5aa00-130">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="5aa00-130">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="5aa00-131">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="5aa00-131">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Visio.Shape;'
      return:
        type:
          - Visio.Shape
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="5aa00-132">Où propertyNamesAndPaths. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et propertyNamesAndPaths. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="5aa00-132">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: visio.Visio.Shape.name
    summary: |-
      <span data-ttu-id="5aa00-133">Nom de l’objet Shape.</span><span class="sxs-lookup"><span data-stu-id="5aa00-133">Shape's name.</span></span> <span data-ttu-id="5aa00-134">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="5aa00-134">Read-only.</span></span>

      <span data-ttu-id="5aa00-135">\[[Ensemble d'API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="5aa00-135">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly name: string;'
      return:
        type:
          - string
  - uid: visio.Visio.Shape.select
    summary: |-
      <span data-ttu-id="5aa00-136">Renvoie True si l’objet Shape est sélectionné.</span><span class="sxs-lookup"><span data-stu-id="5aa00-136">Returns true, if shape is selected.</span></span> <span data-ttu-id="5aa00-137">L’utilisateur peut le définir sur True pour sélectionner explicitement l’objet Shape.</span><span class="sxs-lookup"><span data-stu-id="5aa00-137">User can set true to select the shape explicitly.</span></span>

      <span data-ttu-id="5aa00-138">\[[Ensemble d'API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="5aa00-138">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: select
    fullName: select
    langs:
      - typeScript
    type: property
    syntax:
      content: 'select: boolean;'
      return:
        type:
          - boolean
  - uid: visio.Visio.Shape.set
    summary: '<span data-ttu-id="5aa00-139">Définit plusieurs propriétés d''un objet en même temps.</span><span class="sxs-lookup"><span data-stu-id="5aa00-139">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="5aa00-140">Vous pouvez transmettre un objet plain avec les propriétés appropriées, ou un autre objet API du même type.</span><span class="sxs-lookup"><span data-stu-id="5aa00-140">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="5aa00-141">Cette méthode est dotée de la signature supplémentaire suivante:</span><span class="sxs-lookup"><span data-stu-id="5aa00-141">This method has the following additional signature:</span></span>

      `set(properties: Visio.Shape): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ShapeUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="5aa00-142">Objet JavaScript avec des propriétés qui sont structurées isomorphically vers les propriétés de l'objet sur lequel la méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="5aa00-142">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.ShapeUpdateData
        - id: options
          description: <span data-ttu-id="5aa00-143">Fournit une option permettant de supprimer les erreurs si l'objet Properties tente de définir des propriétés en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="5aa00-143">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: visio.Visio.Shape.set_1
    summary: '<span data-ttu-id="5aa00-144">Définit plusieurs propriétés de l''objet en même temps, en fonction d''un objet chargé existant.</span><span class="sxs-lookup"><span data-stu-id="5aa00-144">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Visio.Shape): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - Visio.Shape
  - uid: visio.Visio.Shape.shapeDataItems
    summary: |-
      <span data-ttu-id="5aa00-145">Renvoie la section de données de l’objet Shape.</span><span class="sxs-lookup"><span data-stu-id="5aa00-145">Returns the Shape's Data Section.</span></span> <span data-ttu-id="5aa00-146">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="5aa00-146">Read-only.</span></span>

      <span data-ttu-id="5aa00-147">\[[Ensemble d'API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="5aa00-147">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: shapeDataItems
    fullName: shapeDataItems
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly shapeDataItems: Visio.ShapeDataItemCollection;'
      return:
        type:
          - visio.Visio.ShapeDataItemCollection
  - uid: visio.Visio.Shape.subShapes
    summary: |-
      <span data-ttu-id="5aa00-148">Obtient la collection SubShape.</span><span class="sxs-lookup"><span data-stu-id="5aa00-148">Gets SubShape Collection.</span></span> <span data-ttu-id="5aa00-149">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="5aa00-149">Read-only.</span></span>

      <span data-ttu-id="5aa00-150">\[[Ensemble d'API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="5aa00-150">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: subShapes
    fullName: subShapes
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly subShapes: Visio.ShapeCollection;'
      return:
        type:
          - Visio.ShapeCollection
  - uid: visio.Visio.Shape.text
    summary: |-
      <span data-ttu-id="5aa00-151">Texte de la forme.</span><span class="sxs-lookup"><span data-stu-id="5aa00-151">Shape's text.</span></span> <span data-ttu-id="5aa00-152">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="5aa00-152">Read-only.</span></span>

      <span data-ttu-id="5aa00-153">\[[Ensemble d'API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="5aa00-153">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: text
    fullName: text
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly text: string;'
      return:
        type:
          - string
  - uid: visio.Visio.Shape.toJSON
    summary: '<span data-ttu-id="5aa00-154">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu''un objet d''API est transmis à`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="5aa00-154">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="5aa00-155">.</span><span class="sxs-lookup"><span data-stu-id="5aa00-155"></span></span> <span data-ttu-id="5aa00-156">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="5aa00-156"></span></span><!-- --><span data-ttu-id="5aa00-157">, à son tour, appelle `toJSON` la méthode de l''objet qui lui est passé.) Tandis que l''objet Visio. Shape d''origine est un objet `toJSON` d''API, la méthode renvoie un objet JavaScript simple (tapé comme`Visio.Interfaces.ShapeData`</span><span class="sxs-lookup"><span data-stu-id="5aa00-157">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Visio.Shape object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Visio.Interfaces.ShapeData`</span></span><!-- --><span data-ttu-id="5aa00-158">) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l''objet d''origine.</span><span class="sxs-lookup"><span data-stu-id="5aa00-158">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Visio.Interfaces.ShapeData;'
      return:
        type:
          - Visio.Interfaces.ShapeData
        description: ''
  - uid: visio.Visio.Shape.view
    summary: |-
      <span data-ttu-id="5aa00-159">Renvoie l’affichage de la forme.</span><span class="sxs-lookup"><span data-stu-id="5aa00-159">Returns the view of the shape.</span></span> <span data-ttu-id="5aa00-160">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="5aa00-160">Read-only.</span></span>

      <span data-ttu-id="5aa00-161">\[[Ensemble d'API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="5aa00-161">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: view
    fullName: view
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly view: Visio.ShapeView;'
      return:
        type:
          - visio.Visio.ShapeView