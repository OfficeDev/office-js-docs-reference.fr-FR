### YamlMime:UniversalReference
ms.openlocfilehash: 00ae7bcdacc66d5a320c026e3950d5fb570ccb46
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 02/20/2019
ms.locfileid: "30094231"
items:
- uid: visio.Visio.Comment
  summary: >-
    <span data-ttu-id="03d2b-101">Représente le commentaire.</span><span class="sxs-lookup"><span data-stu-id="03d2b-101">Represents the Comment.</span></span>


    <span data-ttu-id="03d2b-102">\[[Ensemble d'API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="03d2b-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: Visio.Comment
  fullName: Visio.Comment
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: visio
  children:
  - visio.Visio.Comment.author
  - visio.Visio.Comment.date
  - visio.Visio.Comment.load
  - visio.Visio.Comment.load_1
  - visio.Visio.Comment.load_2
  - visio.Visio.Comment.set
  - visio.Visio.Comment.set_1
  - visio.Visio.Comment.text
  - visio.Visio.Comment.toJSON
- uid: visio.Visio.Comment.author
  summary: >-
    <span data-ttu-id="03d2b-103">Chaîne indiquant le nom de l’auteur du commentaire.</span><span class="sxs-lookup"><span data-stu-id="03d2b-103">A string that specifies the name of the author of the comment.</span></span>


    <span data-ttu-id="03d2b-104">\[[Ensemble d'API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="03d2b-104">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: author
  fullName: author
  langs:
  - typeScript
  type: property
  syntax:
    content: 'author: string;'
    return:
      type:
      - string
- uid: visio.Visio.Comment.date
  summary: >-
    <span data-ttu-id="03d2b-105">Chaîne spécifiant la date à laquelle le commentaire a été créé.</span><span class="sxs-lookup"><span data-stu-id="03d2b-105">A string that specifies the date when the comment was created.</span></span>


    <span data-ttu-id="03d2b-106">\[[Ensemble d'API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="03d2b-106">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: date
  fullName: date
  langs:
  - typeScript
  type: property
  syntax:
    content: 'date: string;'
    return:
      type:
      - string
- uid: visio.Visio.Comment.load
  summary: <span data-ttu-id="03d2b-107">Met en file d'attente une commande pour charger les propriétés spécifiées de l'objet.</span><span class="sxs-lookup"><span data-stu-id="03d2b-107">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="03d2b-108">Vous devez appeler «Context. Sync ()» avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="03d2b-108">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="03d2b-109">En plus de cette signature, cette méthode possède les signatures suivantes:</span><span class="sxs-lookup"><span data-stu-id="03d2b-109">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="03d2b-110">`load(option?: string | string[]): Visio.Comment`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="03d2b-110">`load(option?: string | string[]): Visio.Comment` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="03d2b-111">`load(option?: { select?: string; expand?: string; }): Visio.Comment`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="03d2b-111">`load(option?: { select?: string; expand?: string; }): Visio.Comment` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="03d2b-112">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Comment`-Uniquement disponible sur les types de collection.</span><span class="sxs-lookup"><span data-stu-id="03d2b-112">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Comment` - Only available on collection types.</span></span> <span data-ttu-id="03d2b-113">Elle est similaire à la signature précédente.</span><span class="sxs-lookup"><span data-stu-id="03d2b-113">It is similar to the preceding signature.</span></span> <span data-ttu-id="03d2b-114">Option. Top indique le nombre maximal d'éléments de collection qui peuvent être inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="03d2b-114">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="03d2b-115">Option. Skip indique le nombre d'éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="03d2b-115">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="03d2b-116">Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d'éléments.</span><span class="sxs-lookup"><span data-stu-id="03d2b-116">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>

    #### <a name="examples"></a><span data-ttu-id="03d2b-117">範例</span><span class="sxs-lookup"><span data-stu-id="03d2b-117">Examples</span></span>


    ```javascript

    Visio.run(session, function (ctx) {
        var activePage = ctx.document.getActivePage();
        var shapeName = "Position Belt.41";
        var shape = activePage.shapes.getItem(shapeName);
        var shapecomments= shape.comments;
        shapecomments.load();
        return ctx.sync().then(function () {
            for(var i=0; i<shapecomments.items.length;i++)
            {
                var comment= shapecomments.items[i];
                console.log("comment Author: " + comment.author);
                console.log("Comment Text: " + comment.text);
                console.log("Date " + comment.date);
            }
        });
    }).catch(function(error) {
        console.log("Error: " + error);
        if (error instanceof OfficeExtension.Error) {
            console.log("Debug info: " + JSON.stringify(error.debugInfo));
        }
    });

    ```
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Visio.Interfaces.CommentLoadOptions): Visio.Comment;'
    return:
      type:
      - Visio.Comment
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Visio.Interfaces.CommentLoadOptions
- uid: visio.Visio.Comment.load_1
  summary: <span data-ttu-id="03d2b-118">Met en file d'attente une commande pour charger les propriétés spécifiées de l'objet.</span><span class="sxs-lookup"><span data-stu-id="03d2b-118">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="03d2b-119">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="03d2b-119">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Visio.Comment;'
    return:
      type:
      - Visio.Comment
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="03d2b-120">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="03d2b-120">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: visio.Visio.Comment.load_2
  summary: <span data-ttu-id="03d2b-121">Met en file d'attente une commande pour charger les propriétés spécifiées de l'objet.</span><span class="sxs-lookup"><span data-stu-id="03d2b-121">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="03d2b-122">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="03d2b-122">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Visio.Comment;'
    return:
      type:
      - Visio.Comment
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="03d2b-123">Où propertyNamesAndPaths. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et propertyNamesAndPaths. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="03d2b-123">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: visio.Visio.Comment.set
  summary: <span data-ttu-id="03d2b-124">Définit plusieurs propriétés d'un objet en même temps.</span><span class="sxs-lookup"><span data-stu-id="03d2b-124">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="03d2b-125">Vous pouvez transmettre un objet plain avec les propriétés appropriées, ou un autre objet API du même type.</span><span class="sxs-lookup"><span data-stu-id="03d2b-125">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="03d2b-126">Cette méthode est dotée de la signature supplémentaire suivante:</span><span class="sxs-lookup"><span data-stu-id="03d2b-126">This method has the following additional signature:</span></span>


    `set(properties: Visio.Comment): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.CommentUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="03d2b-127">Objet JavaScript avec des propriétés qui sont structurées isomorphically vers les propriétés de l'objet sur lequel la méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="03d2b-127">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.CommentUpdateData
    - id: options
      description: <span data-ttu-id="03d2b-128">Fournit une option permettant de supprimer les erreurs si l'objet Properties tente de définir des propriétés en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="03d2b-128">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: visio.Visio.Comment.set_1
  summary: <span data-ttu-id="03d2b-129">Définit plusieurs propriétés de l'objet en même temps, en fonction d'un objet chargé existant.</span><span class="sxs-lookup"><span data-stu-id="03d2b-129">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Visio.Comment): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - Visio.Comment
- uid: visio.Visio.Comment.text
  summary: >-
    <span data-ttu-id="03d2b-130">Chaîne contenant le texte du commentaire.</span><span class="sxs-lookup"><span data-stu-id="03d2b-130">A string that contains the comment text.</span></span>


    <span data-ttu-id="03d2b-131">\[[Ensemble d'API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="03d2b-131">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: text
  fullName: text
  langs:
  - typeScript
  type: property
  syntax:
    content: 'text: string;'
    return:
      type:
      - string
- uid: visio.Visio.Comment.toJSON
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Visio.Interfaces.CommentData;'
    return:
      type:
      - Visio.Interfaces.CommentData
      description: ''
