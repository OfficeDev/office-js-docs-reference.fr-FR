### YamlMime:UniversalReference
items:
  - uid: visio.Visio.Document
    summary: |-
      <span data-ttu-id="5344b-101">Représente la classe Document.</span><span class="sxs-lookup"><span data-stu-id="5344b-101">Represents the Document class.</span></span>

      <span data-ttu-id="5344b-102">\[[Ensemble d'API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="5344b-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: Visio.Document
    fullName: Visio.Document
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: visio
    children:
      - visio.Visio.Document.application
      - visio.Visio.Document.context
      - visio.Visio.Document.getActivePage
      - visio.Visio.Document.load
      - visio.Visio.Document.load_1
      - visio.Visio.Document.load_2
      - visio.Visio.Document.onDataRefreshComplete
      - visio.Visio.Document.onDocumentLoadComplete
      - visio.Visio.Document.onPageLoadComplete
      - visio.Visio.Document.onSelectionChanged
      - visio.Visio.Document.onShapeMouseEnter
      - visio.Visio.Document.onShapeMouseLeave
      - visio.Visio.Document.pages
      - visio.Visio.Document.set
      - visio.Visio.Document.set_1
      - visio.Visio.Document.setActivePage
      - visio.Visio.Document.startDataRefresh
      - visio.Visio.Document.toJSON
      - visio.Visio.Document.view
  - uid: visio.Visio.Document.application
    summary: |-
      <span data-ttu-id="5344b-103">Représente une instance de l’application Visio contenant ce document.</span><span class="sxs-lookup"><span data-stu-id="5344b-103">Represents a Visio application instance that contains this document.</span></span> <span data-ttu-id="5344b-104">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="5344b-104">Read-only.</span></span>

      <span data-ttu-id="5344b-105">\[[Ensemble d'API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="5344b-105">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: application
    fullName: application
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly application: Visio.Application;'
      return:
        type:
          - Visio.Application
  - uid: visio.Visio.Document.context
    summary: <span data-ttu-id="5344b-106">Contexte de demande associé à l'objet.</span><span class="sxs-lookup"><span data-stu-id="5344b-106">The request context associated with the object.</span></span> <span data-ttu-id="5344b-107">Cette opération connecte le processus du complément au processus de l'application hôte Office.</span><span class="sxs-lookup"><span data-stu-id="5344b-107">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: visio.Visio.Document.getActivePage
    summary: |-
      <span data-ttu-id="5344b-108">Renvoie la page active du document.</span><span class="sxs-lookup"><span data-stu-id="5344b-108">Returns the Active Page of the document.</span></span>

      <span data-ttu-id="5344b-109">\[[Ensemble d'API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="5344b-109">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: getActivePage()
    fullName: getActivePage()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActivePage(): Visio.Page;'
      return:
        type:
          - Visio.Page
        description: |-


          #### <a name="examples"></a><span data-ttu-id="5344b-110">Exemples</span><span class="sxs-lookup"><span data-stu-id="5344b-110">Examples</span></span>

          ```javascript
          Visio.run(session, function (ctx) {
              var document = ctx.document;
              var activePage = document.getActivePage();
              activePage.load();
              return ctx.sync().then(function () {
                  console.log("pageName: " +activePage.name);
              });   
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: visio.Visio.Document.load
    summary: "<span data-ttu-id=\"5344b-111\">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5344b-111\">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id=\"5344b-112\">Vous devez appeler «\_context.sync()\_» avant de lire les propriétés.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5344b-112\">You must call \"context.sync()\" before reading the properties.</span></span>"
    remarks: |-
      <span data-ttu-id="5344b-113">En plus de cette signature, cette méthode possède les signatures suivantes:</span><span class="sxs-lookup"><span data-stu-id="5344b-113">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="5344b-114">`load(option?: string | string[]): Visio.Document`-WHERE option est une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="5344b-114">`load(option?: string | string[]): Visio.Document` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="5344b-115">`load(option?: { select?: string; expand?: string; }): Visio.Document`Option-WHERE option. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et options. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="5344b-115">`load(option?: { select?: string; expand?: string; }): Visio.Document` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="5344b-116">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Document`-Uniquement disponible sur les types de collection.</span><span class="sxs-lookup"><span data-stu-id="5344b-116">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Document` - Only available on collection types.</span></span> <span data-ttu-id="5344b-117">Elle est similaire à la signature précédente.</span><span class="sxs-lookup"><span data-stu-id="5344b-117">It is similar to the preceding signature.</span></span> <span data-ttu-id="5344b-118">Option. Top indique le nombre maximal d'éléments de collection qui peuvent être inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="5344b-118">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="5344b-119">Option. Skip indique le nombre d'éléments qui doivent être ignorés et qui ne sont pas inclus dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="5344b-119">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="5344b-120">Si option. Top est spécifié, le jeu de résultats démarre après avoir ignoré le nombre spécifié d'éléments.</span><span class="sxs-lookup"><span data-stu-id="5344b-120">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Visio.Interfaces.DocumentLoadOptions): Visio.Document;'
      return:
        type:
          - Visio.Document
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - visio.Visio.Interfaces.DocumentLoadOptions
  - uid: visio.Visio.Document.load_1
    summary: <span data-ttu-id="5344b-121">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="5344b-121">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="5344b-122">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="5344b-122">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Visio.Document;'
      return:
        type:
          - Visio.Document
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="5344b-123">Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.</span><span class="sxs-lookup"><span data-stu-id="5344b-123">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: visio.Visio.Document.load_2
    summary: <span data-ttu-id="5344b-124">Files d’attente de la commande pour charger les propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="5344b-124">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="5344b-125">Vous devez appeler `context.sync()` avant de lire les propriétés.</span><span class="sxs-lookup"><span data-stu-id="5344b-125">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Visio.Document;'
      return:
        type:
          - Visio.Document
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="5344b-126">Où propertyNamesAndPaths. Select est une chaîne délimitée par des virgules qui spécifie les propriétés à charger et propertyNamesAndPaths. Expand est une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.</span><span class="sxs-lookup"><span data-stu-id="5344b-126">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: visio.Visio.Document.onDataRefreshComplete
    summary: |-
      <span data-ttu-id="5344b-127">Se produit lorsque les données sont actualisées dans le diagramme.</span><span class="sxs-lookup"><span data-stu-id="5344b-127">Occurs when the data is refreshed in the diagram.</span></span>

      <span data-ttu-id="5344b-128">\[[Ensemble d'API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="5344b-128">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: onDataRefreshComplete
    fullName: onDataRefreshComplete
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onDataRefreshComplete: OfficeExtension.EventHandlers<Visio.DataRefreshCompleteEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Visio.DataRefreshCompleteEventArgs>
  - uid: visio.Visio.Document.onDocumentLoadComplete
    summary: |-
      <span data-ttu-id="5344b-129">Se produit lors du chargement, de l'actualisation ou de la modification du document.</span><span class="sxs-lookup"><span data-stu-id="5344b-129">Occurs when the Document is loaded, refreshed, or changed.</span></span>

      <span data-ttu-id="5344b-130">\[[Ensemble d'API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="5344b-130">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: onDocumentLoadComplete
    fullName: onDocumentLoadComplete
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onDocumentLoadComplete: OfficeExtension.EventHandlers<Visio.DocumentLoadCompleteEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Visio.DocumentLoadCompleteEventArgs>
  - uid: visio.Visio.Document.onPageLoadComplete
    summary: |-
      <span data-ttu-id="5344b-131">Se produit lorsque le chargement de la page est terminé.</span><span class="sxs-lookup"><span data-stu-id="5344b-131">Occurs when the page is finished loading.</span></span>

      <span data-ttu-id="5344b-132">\[[Ensemble d'API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="5344b-132">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: onPageLoadComplete
    fullName: onPageLoadComplete
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onPageLoadComplete: OfficeExtension.EventHandlers<Visio.PageLoadCompleteEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Visio.PageLoadCompleteEventArgs>
  - uid: visio.Visio.Document.onSelectionChanged
    summary: |-
      <span data-ttu-id="5344b-133">Se produit lorsque la sélection actuelle de formes change.</span><span class="sxs-lookup"><span data-stu-id="5344b-133">Occurs when the current selection of shapes changes.</span></span>

      <span data-ttu-id="5344b-134">\[[Ensemble d'API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="5344b-134">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: onSelectionChanged
    fullName: onSelectionChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Visio.SelectionChangedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Visio.SelectionChangedEventArgs>
  - uid: visio.Visio.Document.onShapeMouseEnter
    summary: |-
      <span data-ttu-id="5344b-135">Se produit lorsque l'utilisateur déplace le pointeur de la souris dans le cadre englobant d'une forme.</span><span class="sxs-lookup"><span data-stu-id="5344b-135">Occurs when the user moves the mouse pointer into the bounding box of a shape.</span></span>

      <span data-ttu-id="5344b-136">\[[Ensemble d'API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="5344b-136">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: onShapeMouseEnter
    fullName: onShapeMouseEnter
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onShapeMouseEnter: OfficeExtension.EventHandlers<Visio.ShapeMouseEnterEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Visio.ShapeMouseEnterEventArgs>
  - uid: visio.Visio.Document.onShapeMouseLeave
    summary: |-
      <span data-ttu-id="5344b-137">Cet événement se produit lorsque l'utilisateur éloigne la souris du cadre de sélection d'une forme.</span><span class="sxs-lookup"><span data-stu-id="5344b-137">Occurs when the user moves the mouse out of the bounding box of a shape.</span></span>

      <span data-ttu-id="5344b-138">\[[Ensemble d'API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="5344b-138">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: onShapeMouseLeave
    fullName: onShapeMouseLeave
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onShapeMouseLeave: OfficeExtension.EventHandlers<Visio.ShapeMouseLeaveEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Visio.ShapeMouseLeaveEventArgs>
  - uid: visio.Visio.Document.pages
    summary: |-
      <span data-ttu-id="5344b-139">Représente une collection de pages associées au document.</span><span class="sxs-lookup"><span data-stu-id="5344b-139">Represents a collection of pages associated with the document.</span></span> <span data-ttu-id="5344b-140">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="5344b-140">Read-only.</span></span>

      <span data-ttu-id="5344b-141">\[[Ensemble d'API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="5344b-141">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: pages
    fullName: pages
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly pages: Visio.PageCollection;'
      return:
        type:
          - Visio.PageCollection
        description: |-


          #### <a name="examples"></a><span data-ttu-id="5344b-142">Exemples</span><span class="sxs-lookup"><span data-stu-id="5344b-142">Examples</span></span>

          ```javascript
          Visio.run(session, function (ctx) {
              var pages = ctx.document.pages;
              var pageCount = pages.getCount();
              return ctx.sync().then(function () {
                  console.log("Pages Count: " +pageCount.value);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: visio.Visio.Document.set
    summary: '<span data-ttu-id="5344b-143">Définit plusieurs propriétés d''un objet en même temps.</span><span class="sxs-lookup"><span data-stu-id="5344b-143">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="5344b-144">Vous pouvez transmettre un objet plain avec les propriétés appropriées, ou un autre objet API du même type.</span><span class="sxs-lookup"><span data-stu-id="5344b-144">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="5344b-145">Cette méthode est dotée de la signature supplémentaire suivante:</span><span class="sxs-lookup"><span data-stu-id="5344b-145">This method has the following additional signature:</span></span>

      `set(properties: Visio.Document): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.DocumentUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="5344b-146">Objet JavaScript avec des propriétés qui sont structurées isomorphically vers les propriétés de l'objet sur lequel la méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="5344b-146">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.DocumentUpdateData
        - id: options
          description: <span data-ttu-id="5344b-147">Fournit une option permettant de supprimer les erreurs si l'objet Properties tente de définir des propriétés en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="5344b-147">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: visio.Visio.Document.set_1
    summary: '<span data-ttu-id="5344b-148">Définit plusieurs propriétés de l''objet en même temps, en fonction d''un objet chargé existant.</span><span class="sxs-lookup"><span data-stu-id="5344b-148">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Visio.Document): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - Visio.Document
  - uid: visio.Visio.Document.setActivePage
    summary: |-
      <span data-ttu-id="5344b-149">Configure la page active du document.</span><span class="sxs-lookup"><span data-stu-id="5344b-149">Set the Active Page of the document.</span></span>

      <span data-ttu-id="5344b-150">\[[Ensemble d'API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="5344b-150">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: setActivePage(PageName)
    fullName: setActivePage(PageName)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setActivePage(PageName: string): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="5344b-151">Exemples</span><span class="sxs-lookup"><span data-stu-id="5344b-151">Examples</span></span>

          ```javascript
          Visio.run(session, function (ctx) {
              var document = ctx.document;
              var pageName = "Page-1";
              document.setActivePage(pageName);
              return ctx.sync();
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: PageName
          description: <span data-ttu-id="5344b-152">Nom de la page</span><span class="sxs-lookup"><span data-stu-id="5344b-152">Name of the page</span></span>
          type:
            - string
  - uid: visio.Visio.Document.startDataRefresh
    summary: |-
      <span data-ttu-id="5344b-153">Déclenche l’actualisation des données dans le diagramme pour toutes les pages.</span><span class="sxs-lookup"><span data-stu-id="5344b-153">Triggers the refresh of the data in the Diagram, for all pages.</span></span>

      <span data-ttu-id="5344b-154">\[[Ensemble d'API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="5344b-154">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: startDataRefresh()
    fullName: startDataRefresh()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'startDataRefresh(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="5344b-155">Exemples</span><span class="sxs-lookup"><span data-stu-id="5344b-155">Examples</span></span>

          ```javascript
          Visio.run(session, function (ctx) {
              var document = ctx.document;
              document.startDataRefresh();
              return ctx.sync();
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: visio.Visio.Document.toJSON
    summary: '<span data-ttu-id="5344b-156">Remplace la méthode JavaScript `toJSON()` afin de fournir une sortie plus utile lorsqu''un objet d''API est transmis à`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="5344b-156">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="5344b-157">.</span><span class="sxs-lookup"><span data-stu-id="5344b-157"></span></span> <span data-ttu-id="5344b-158">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="5344b-158"></span></span><!-- --><span data-ttu-id="5344b-159">, à son tour, appelle `toJSON` la méthode de l''objet qui lui est passé.) Tandis que l''objet Visio. document d''origine est un objet `toJSON` d''API, la méthode renvoie un objet JavaScript simple (tapé comme`Visio.Interfaces.DocumentData`</span><span class="sxs-lookup"><span data-stu-id="5344b-159">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Visio.Document object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Visio.Interfaces.DocumentData`</span></span><!-- --><span data-ttu-id="5344b-160">) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l''objet d''origine.</span><span class="sxs-lookup"><span data-stu-id="5344b-160">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Visio.Interfaces.DocumentData;'
      return:
        type:
          - visio.Visio.Interfaces.DocumentData
        description: ''
  - uid: visio.Visio.Document.view
    summary: |-
      <span data-ttu-id="5344b-161">Renvoie l’objet DocumentView.</span><span class="sxs-lookup"><span data-stu-id="5344b-161">Returns the DocumentView object.</span></span> <span data-ttu-id="5344b-162">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="5344b-162">Read-only.</span></span>

      <span data-ttu-id="5344b-163">\[[Ensemble d'API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="5344b-163">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: view
    fullName: view
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly view: Visio.DocumentView;'
      return:
        type:
          - visio.Visio.DocumentView