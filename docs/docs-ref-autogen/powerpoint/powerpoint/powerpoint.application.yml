### YamlMime:UniversalReference
items:
  - uid: 'powerpoint!PowerPoint.Application:class'
    summary: "\\[[Ensemble d’API\_: PowerPointApi 1,0](/office/dev/add-ins/reference/requirement-sets/powerpoint-api-requirement-sets)\\]"
    name: PowerPoint.Application
    fullName: PowerPoint.Application
    langs:
      - typeScript
    type: class
    extends:
      - 'powerpoint!OfficeExtension.ClientObject:class'
    package: powerpoint!
    children:
      - 'powerpoint!PowerPoint.Application#context:member'
      - 'powerpoint!PowerPoint.Application.newObject:member(1)'
      - 'powerpoint!PowerPoint.Application#toJSON:member(1)'
  - uid: 'powerpoint!PowerPoint.Application#context:member'
    summary: Contexte de demande associé à l’objet. Cette opération connecte le processus du complément au processus de l’application hôte Office.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'powerpoint!PowerPoint.RequestContext:class'
  - uid: 'powerpoint!PowerPoint.Application.newObject:member(1)'
    summary: Créer une nouvelle instance de l’objet PowerPoint. application
    name: newObject(context)
    fullName: newObject(context)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'static newObject(context: OfficeExtension.ClientRequestContext): PowerPoint.Application;'
      return:
        type:
          - 'powerpoint!PowerPoint.Application:class'
        description: ''
      parameters:
        - id: context
          description: ''
          type:
            - 'powerpoint!OfficeExtension.ClientRequestContext:class'
  - uid: 'powerpoint!PowerPoint.Application#toJSON:member(1)'
    summary: 'Remplace la méthode JavaScript afin `toJSON()` de fournir une sortie plus utile lorsqu’un objet d’API est transmis à `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, à son tour, appelle la `toJSON` méthode de l’objet qui lui est passé.) Tandis que l’objet PowerPoint. application d’origine est un objet API, la `toJSON` méthode renvoie un objet JavaScript simple (tapé comme `PowerPoint.Interfaces.ApplicationData`<!-- -->) qui contient des copies superficielles de toutes les propriétés enfants chargées à partir de l’objet d’origine.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        toJSON(): {
                    [key: string]: string;
                };
      return:
        type:
          - |-
            {
                        [key: string]: string;
                    }
        description: ''
references:
  - uid: 'powerpoint!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'powerpoint!PowerPoint.RequestContext:class'
    name: RequestContext
  - uid: 'powerpoint!PowerPoint.Application:class'
    name: PowerPoint.Application
  - uid: 'powerpoint!OfficeExtension.ClientRequestContext:class'
    name: OfficeExtension.ClientRequestContext