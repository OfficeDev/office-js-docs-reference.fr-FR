### YamlMime:TSType
name: PowerPoint.TagCollection
uid: powerpoint!PowerPoint.TagCollection:class
package: powerpoint!
fullName: PowerPoint.TagCollection
summary: >-
  Représente la collection de balises.


  \[[Ensemble d'API : PowerPointApi BETA (PRÉVISUALISATION UNIQUEMENT)](/office/dev/add-ins/reference/requirement-sets/powerpoint-api-requirement-sets)\]
remarks: ''
isPreview: true
isDeprecated: false
type: class
properties:
- name: context
  uid: powerpoint!PowerPoint.TagCollection#context:member
  package: powerpoint!
  fullName: context
  summary: Contexte de demande associé à l'objet. Cela connecte le processus du add-in au processus de l'application hôte Office.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="powerpoint!PowerPoint.RequestContext:class" />
- name: items
  uid: powerpoint!PowerPoint.TagCollection#items:member
  package: powerpoint!
  fullName: items
  summary: Obtient l’élément enfant chargé dans cette collection de sites.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'readonly items: PowerPoint.Tag[];'
    return:
      type: <xref uid="powerpoint!PowerPoint.Tag:class" />[]
methods:
- name: add(key, value)
  uid: powerpoint!PowerPoint.TagCollection#add:member(1)
  package: powerpoint!
  fullName: add(key, value)
  summary: >-
    Ajoute une nouvelle balise à la fin de la collection. Si la balise existante existe déjà dans la collection, la valeur de la balise existante est remplacée `key` par la valeur donnée `value`<!-- -->.


    \[[Ensemble d'API : PowerPointApi BETA (PRÉVISUALISATION UNIQUEMENT)](/office/dev/add-ins/reference/requirement-sets/powerpoint-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'add(key: string, value: string): void;'
    parameters:
    - id: key
      description: ID unique d'une balise, qui est unique dans ce `TagCollection`<!-- -->. Le paramètre « key » ne fait pas de cas, mais il est toujours en majuscules lorsqu'il est enregistré dans le document.
      type: string
    - id: value
      description: Valeur de la balise.
      type: string
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Exemples\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/powerpoint/preview-apis/tags.yaml\nawait PowerPoint.run(async function(context) {\n  const slide = context.presentation.slides.getItemAt(0);\n  slide.tags.add(\"OCEAN\", \"Indian\");\n  slide.tags.add(\"PLANET\", \"Jupiter\");\n  slide.tags.add(\"CONTINENT\", \"Antarctica\");\n\n  await context.sync();\n\n  slide.tags.load(\"key, value\");\n\n  await context.sync();\n\n  for (let i = 0; i < slide.tags.items.length; i++) {\n    console.log(\"Added key \" + JSON.stringify(slide.tags.items[i].key) + \" with value \" +        JSON.stringify(slide.tags.items[i].value));\n  }\n});\n```"
- name: delete(key)
  uid: powerpoint!PowerPoint.TagCollection#delete:member(1)
  package: powerpoint!
  fullName: delete(key)
  summary: >-
    Supprime la balise avec la balise donnée `key` dans cette collection. Ne fait rien `key` s'il n'existe pas.


    \[[Ensemble d'API : PowerPointApi BETA (PRÉVISUALISATION UNIQUEMENT)](/office/dev/add-ins/reference/requirement-sets/powerpoint-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'delete(key: string): void;'
    parameters:
    - id: key
      description: ID unique d'une balise, qui est unique dans ce `TagCollection`<!-- -->. `key` n'est pas sensible à la cas.
      type: string
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Exemples\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/powerpoint/preview-apis/tags.yaml\nawait PowerPoint.run(async function (context) {\n  let presentationTags = context.presentation.tags;\n\n  presentationTags.delete(\"COLOR\");\n\n  await context.sync();\n\n  console.log(JSON.stringify(presentationTags));\n});\n```"
- name: getCount()
  uid: powerpoint!PowerPoint.TagCollection#getCount:member(1)
  package: powerpoint!
  fullName: getCount()
  summary: >-
    Obtient le nombre de balises dans la collection.


    \[[Ensemble d'API : PowerPointApi BETA (PRÉVISUALISATION UNIQUEMENT)](/office/dev/add-ins/reference/requirement-sets/powerpoint-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;number&gt;
      description: Nombre de balises dans la collection.
- name: getItem(key)
  uid: powerpoint!PowerPoint.TagCollection#getItem:member(1)
  package: powerpoint!
  fullName: getItem(key)
  summary: >-
    Obtient une balise à l'aide de son ID unique. Une erreur est lancée si la balise n'existe pas.


    \[[Ensemble d'API : PowerPointApi BETA (PRÉVISUALISATION UNIQUEMENT)](/office/dev/add-ins/reference/requirement-sets/powerpoint-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'getItem(key: string): PowerPoint.Tag;'
    parameters:
    - id: key
      description: ID de la balise.
      type: string
    return:
      type: <xref uid="powerpoint!PowerPoint.Tag:class" />
      description: >-
        Balise avec l'ID unique. Si une balise de ce type n'existe pas, une erreur est lancée.


        #### <a name="examples"></a>Exemples


        ```typescript

        // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/powerpoint/preview-apis/tags.yaml

        await PowerPoint.run(async function(context) {
          let selectedSlideIndex = await getSelectedSlideIndex();

          // Decrement because the getSelectedSlideByIndex method is 1-based,
          // but the getItemAt method is 0-based.
          selectedSlideIndex = selectedSlideIndex - 1;
          const slide = context.presentation.slides.getItemAt(selectedSlideIndex);
          slide.tags.add("CUSTOMER_TYPE", "Premium");

          await context.sync();

          const audienceTag = slide.tags.getItem("CUSTOMER_TYPE");
          audienceTag.load("key, value");

          await context.sync();

          console.log("Added key " + JSON.stringify(audienceTag.key) + " with value " + JSON.stringify(audienceTag.value));
        });

        ```
- name: getItemAt(index)
  uid: powerpoint!PowerPoint.TagCollection#getItemAt:member(1)
  package: powerpoint!
  fullName: getItemAt(index)
  summary: >-
    Obtient une balise à l'aide de son index de base zéro dans la collection. Une erreur est lancée si l'index est hors de portée.


    \[[Ensemble d'API : PowerPointApi BETA (PRÉVISUALISATION UNIQUEMENT)](/office/dev/add-ins/reference/requirement-sets/powerpoint-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'getItemAt(index: number): PowerPoint.Tag;'
    parameters:
    - id: index
      description: Index de la balise dans la collection.
      type: number
    return:
      type: <xref uid="powerpoint!PowerPoint.Tag:class" />
      description: Balise à l'index donné. Une erreur est lancée si l'index est hors de portée.
- name: getItemOrNullObject(key)
  uid: powerpoint!PowerPoint.TagCollection#getItemOrNullObject:member(1)
  package: powerpoint!
  fullName: getItemOrNullObject(key)
  summary: >-
    Obtient une balise à l'aide de son ID unique. Si une balise de ce type n'existe pas, un objet dont la propriété est définie `isNullObject` sur true est renvoyé.


    \[[Ensemble d'API : PowerPointApi BETA (PRÉVISUALISATION UNIQUEMENT)](/office/dev/add-ins/reference/requirement-sets/powerpoint-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'getItemOrNullObject(key: string): PowerPoint.Tag;'
    parameters:
    - id: key
      description: ID de la balise.
      type: string
    return:
      type: <xref uid="powerpoint!PowerPoint.Tag:class" />
      description: Balise avec l'ID unique. Si une balise de ce type n'existe pas, un objet dont la propriété est définie `isNullObject` sur true est renvoyé.
- name: load(options)
  uid: powerpoint!PowerPoint.TagCollection#load:member(1)
  package: powerpoint!
  fullName: load(options)
  summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'load(options?: PowerPoint.Interfaces.TagCollectionLoadOptions & PowerPoint.Interfaces.CollectionLoadOptions): PowerPoint.TagCollection;'
    parameters:
    - id: options
      description: Fournit des options pour lesquelles les propriétés de l'objet à charger.
      type: <xref uid="powerpoint!PowerPoint.Interfaces.TagCollectionLoadOptions:interface" /> & <xref uid="powerpoint!PowerPoint.Interfaces.CollectionLoadOptions:interface" />
    return:
      type: <xref uid="powerpoint!PowerPoint.TagCollection:class" />
      description: ''
- name: load(propertyNames)
  uid: powerpoint!PowerPoint.TagCollection#load:member(2)
  package: powerpoint!
  fullName: load(propertyNames)
  summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): PowerPoint.TagCollection;'
    parameters:
    - id: propertyNames
      description: Chaîne délimitée par des virgules ou tableau de chaînes spécifiant les propriétés à charger.
      type: string | string[]
    return:
      type: <xref uid="powerpoint!PowerPoint.TagCollection:class" />
      description: ''
- name: load(propertyNamesAndPaths)
  uid: powerpoint!PowerPoint.TagCollection#load:member(3)
  package: powerpoint!
  fullName: load(propertyNamesAndPaths)
  summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): PowerPoint.TagCollection;'
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` est une chaîne délimitée par des virgules qui spécifie les propriétés à charger, et est une chaîne délimitée par des virgules qui spécifie les propriétés de `propertyNamesAndPaths.expand` navigation à charger.'
      type: <xref uid="office!OfficeExtension.LoadOption:interface" />
    return:
      type: <xref uid="powerpoint!PowerPoint.TagCollection:class" />
      description: ''
- name: toJSON()
  uid: powerpoint!PowerPoint.TagCollection#toJSON:member(1)
  package: powerpoint!
  fullName: toJSON()
  summary: Remplace la méthode JavaScript afin de fournir une sortie plus utile lorsqu'un objet `toJSON()` API est transmis à `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, à son tour, appelle `toJSON` la méthode de l'objet qui lui est transmis.) Alors que `PowerPoint.TagCollection` l'objet d'origine est un objet API, la méthode renvoie un objet `toJSON` JavaScript simple (tapé sous la forme `PowerPoint.Interfaces.TagCollectionData`<!-- -->) qui contient un tableau « éléments » avec des copies peu profondes de toutes les propriétés chargées à partir des éléments de la collection.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'toJSON(): PowerPoint.Interfaces.TagCollectionData;'
    return:
      type: <xref uid="powerpoint!PowerPoint.Interfaces.TagCollectionData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: 991cef83d406930e4a29713e9324aa3450489323
  ms.sourcegitcommit: 66ce950cede0c44d43deef165ca96e9f5875d63f
  ms.translationtype: MT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 04/21/2021
  ms.locfileid: "51911163"
