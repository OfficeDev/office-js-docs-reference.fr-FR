### YamlMime:TSType
name: PowerPoint.ShapeCollection
uid: powerpoint!PowerPoint.ShapeCollection:class
package: powerpoint!
fullName: PowerPoint.ShapeCollection
summary: >-
  Représente la collection de formes.


  \[[Ensemble d'API : PowerPointApi BETA (PRÉVISUALISATION UNIQUEMENT)](/office/dev/add-ins/reference/requirement-sets/powerpoint-api-requirement-sets)\]
remarks: ''
isPreview: true
isDeprecated: false
type: class
properties:
- name: context
  uid: powerpoint!PowerPoint.ShapeCollection#context:member
  package: powerpoint!
  fullName: context
  summary: Contexte de demande associé à l'objet. Cela connecte le processus du add-in au processus de l'application hôte Office.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="powerpoint!PowerPoint.RequestContext:class" />
- name: items
  uid: powerpoint!PowerPoint.ShapeCollection#items:member
  package: powerpoint!
  fullName: items
  summary: Obtient l’élément enfant chargé dans cette collection de sites.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'readonly items: PowerPoint.Shape[];'
    return:
      type: <xref uid="powerpoint!PowerPoint.Shape:class" />[]
methods:
- name: getCount()
  uid: powerpoint!PowerPoint.ShapeCollection#getCount:member(1)
  package: powerpoint!
  fullName: getCount()
  summary: >-
    Obtient le nombre de formes dans la collection.


    \[[Ensemble d'API : PowerPointApi BETA (PRÉVISUALISATION UNIQUEMENT)](/office/dev/add-ins/reference/requirement-sets/powerpoint-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;number&gt;
      description: Nombre de formes dans la collection.
- name: getItem(key)
  uid: powerpoint!PowerPoint.ShapeCollection#getItem:member(1)
  package: powerpoint!
  fullName: getItem(key)
  summary: >-
    Obtient une forme à l'aide de son ID unique. Une erreur est lancée si la forme n'existe pas.


    \[[Ensemble d'API : PowerPointApi BETA (PRÉVISUALISATION UNIQUEMENT)](/office/dev/add-ins/reference/requirement-sets/powerpoint-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'getItem(key: string): PowerPoint.Shape;'
    parameters:
    - id: key
      description: ID de la forme.
      type: string
    return:
      type: <xref uid="powerpoint!PowerPoint.Shape:class" />
      description: Forme avec l'ID unique. Si une telle forme n'existe pas, une erreur est lancée.
- name: getItemAt(index)
  uid: powerpoint!PowerPoint.ShapeCollection#getItemAt:member(1)
  package: powerpoint!
  fullName: getItemAt(index)
  summary: >-
    Obtient une forme à l'aide de son index de base zéro dans la collection. Une erreur est lancée si l'index est hors de portée.


    \[[Ensemble d'API : PowerPointApi BETA (PRÉVISUALISATION UNIQUEMENT)](/office/dev/add-ins/reference/requirement-sets/powerpoint-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'getItemAt(index: number): PowerPoint.Shape;'
    parameters:
    - id: index
      description: Index de la forme dans la collection.
      type: number
    return:
      type: <xref uid="powerpoint!PowerPoint.Shape:class" />
      description: >-
        Forme à l'index donné. Une erreur est lancée si l'index est hors de portée.


        #### <a name="examples"></a>Exemples


        ```typescript

        // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/powerpoint/preview-apis/tags.yaml

        await PowerPoint.run(async function(context) {
          const slide = context.presentation.slides.getItemAt(0);
          const shape = slide.shapes.getItemAt(0);
          shape.tags.add("MOUNTAIN", "Denali");

          await context.sync();

          const myShapeTag = shape.tags.getItem("MOUNTAIN");
          myShapeTag.load("key, value");

          await context.sync();

          console.log("Added key " + JSON.stringify(myShapeTag.key) + " with value " + JSON.stringify(myShapeTag.value));
        });

        ```
- name: getItemOrNullObject(id)
  uid: powerpoint!PowerPoint.ShapeCollection#getItemOrNullObject:member(1)
  package: powerpoint!
  fullName: getItemOrNullObject(id)
  summary: >-
    Obtient une forme à l'aide de son ID unique. Si une telle forme n'existe pas, un objet dont la propriété est définie `isNullObject` sur true est renvoyé.


    \[[Ensemble d'API : PowerPointApi BETA (PRÉVISUALISATION UNIQUEMENT)](/office/dev/add-ins/reference/requirement-sets/powerpoint-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'getItemOrNullObject(id: string): PowerPoint.Shape;'
    parameters:
    - id: id
      description: ID de la forme.
      type: string
    return:
      type: <xref uid="powerpoint!PowerPoint.Shape:class" />
      description: Forme avec l'ID unique. Si une telle forme n'existe pas, un objet dont la propriété est définie `isNullObject` sur true est renvoyé.
- name: load(options)
  uid: powerpoint!PowerPoint.ShapeCollection#load:member(1)
  package: powerpoint!
  fullName: load(options)
  summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'load(options?: PowerPoint.Interfaces.ShapeCollectionLoadOptions & PowerPoint.Interfaces.CollectionLoadOptions): PowerPoint.ShapeCollection;'
    parameters:
    - id: options
      description: Fournit des options pour lesquelles les propriétés de l'objet à charger.
      type: <xref uid="powerpoint!PowerPoint.Interfaces.ShapeCollectionLoadOptions:interface" /> & <xref uid="powerpoint!PowerPoint.Interfaces.CollectionLoadOptions:interface" />
    return:
      type: <xref uid="powerpoint!PowerPoint.ShapeCollection:class" />
      description: ''
- name: load(propertyNames)
  uid: powerpoint!PowerPoint.ShapeCollection#load:member(2)
  package: powerpoint!
  fullName: load(propertyNames)
  summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): PowerPoint.ShapeCollection;'
    parameters:
    - id: propertyNames
      description: Chaîne délimitée par des virgules ou tableau de chaînes spécifiant les propriétés à charger.
      type: string | string[]
    return:
      type: <xref uid="powerpoint!PowerPoint.ShapeCollection:class" />
      description: ''
- name: load(propertyNamesAndPaths)
  uid: powerpoint!PowerPoint.ShapeCollection#load:member(3)
  package: powerpoint!
  fullName: load(propertyNamesAndPaths)
  summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): PowerPoint.ShapeCollection;'
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` est une chaîne délimitée par des virgules qui spécifie les propriétés à charger, et est une chaîne délimitée par des virgules qui spécifie les propriétés de `propertyNamesAndPaths.expand` navigation à charger.'
      type: <xref uid="office!OfficeExtension.LoadOption:interface" />
    return:
      type: <xref uid="powerpoint!PowerPoint.ShapeCollection:class" />
      description: ''
- name: toJSON()
  uid: powerpoint!PowerPoint.ShapeCollection#toJSON:member(1)
  package: powerpoint!
  fullName: toJSON()
  summary: Remplace la méthode JavaScript afin de fournir une sortie plus utile lorsqu'un objet `toJSON()` API est transmis à `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, à son tour, appelle `toJSON` la méthode de l'objet qui lui est transmis.) Alors que `PowerPoint.ShapeCollection` l'objet d'origine est un objet API, la méthode renvoie un objet `toJSON` JavaScript simple (tapé sous la forme `PowerPoint.Interfaces.ShapeCollectionData`<!-- -->) qui contient un tableau « éléments » avec des copies peu profondes de toutes les propriétés chargées à partir des éléments de la collection.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'toJSON(): PowerPoint.Interfaces.ShapeCollectionData;'
    return:
      type: <xref uid="powerpoint!PowerPoint.Interfaces.ShapeCollectionData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: f8bd55d72882491e0a9dfd641e04f4c85db2c521
  ms.sourcegitcommit: 66ce950cede0c44d43deef165ca96e9f5875d63f
  ms.translationtype: MT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 04/21/2021
  ms.locfileid: "51911373"
